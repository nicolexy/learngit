//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
// 
#pragma warning disable 1591

namespace TENCENT.OSS.CFT.KF.KF_Web.Check_WebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Check_ServiceSoap", Namespace="http://Tencent.com/OSS/C2C/Finance/Check_Service")]
    public partial class Check_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SetSendLogOperationCompleted;
        
        private Finance_Header finance_HeaderValueField;
        
        private System.Threading.SendOrPostCallback StartCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCheckLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStartCheckCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFinishCheckCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStartCheckDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFinishCheckDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetToDoNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCheckTypeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Check_Service() {
            this.Url = global::TENCENT.OSS.CFT.KF.KF_Web.Properties.Settings.Default.finance_web_Check_WebService_Check_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Finance_Header Finance_HeaderValue {
            get {
                return this.finance_HeaderValueField;
            }
            set {
                this.finance_HeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetSendLogCompletedEventHandler SetSendLogCompleted;
        
        /// <remarks/>
        public event StartCheckCompletedEventHandler StartCheckCompleted;
        
        /// <remarks/>
        public event ExecuteCheckCompletedEventHandler ExecuteCheckCompleted;
        
        /// <remarks/>
        public event GetCheckLogCompletedEventHandler GetCheckLogCompleted;
        
        /// <remarks/>
        public event GetStartCheckCountCompletedEventHandler GetStartCheckCountCompleted;
        
        /// <remarks/>
        public event GetFinishCheckCountCompletedEventHandler GetFinishCheckCountCompleted;
        
        /// <remarks/>
        public event GetStartCheckDataCompletedEventHandler GetStartCheckDataCompleted;
        
        /// <remarks/>
        public event GetFinishCheckDataCompletedEventHandler GetFinishCheckDataCompleted;
        
        /// <remarks/>
        public event GetToDoNumCompletedEventHandler GetToDoNumCompleted;
        
        /// <remarks/>
        public event getCheckTypeCompletedEventHandler getCheckTypeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Check_Service/SetSendLog", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetSendLog(string operID) {
            object[] results = this.Invoke("SetSendLog", new object[] {
                        operID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetSendLog(string operID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetSendLog", new object[] {
                        operID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSetSendLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetSendLogAsync(string operID) {
            this.SetSendLogAsync(operID, null);
        }
        
        /// <remarks/>
        public void SetSendLogAsync(string operID, object userState) {
            if ((this.SetSendLogOperationCompleted == null)) {
                this.SetSendLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSendLogOperationCompleted);
            }
            this.InvokeAsync("SetSendLog", new object[] {
                        operID}, this.SetSendLogOperationCompleted, userState);
        }
        
        private void OnSetSendLogOperationCompleted(object arg) {
            if ((this.SetSendLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSendLogCompleted(this, new SetSendLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Check_Service/StartCheck", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StartCheck(string strMainID, string strCheckType, string strMemo, string strLevelValue, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Param[] myParams) {
            this.Invoke("StartCheck", new object[] {
                        strMainID,
                        strCheckType,
                        strMemo,
                        strLevelValue,
                        myParams});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStartCheck(string strMainID, string strCheckType, string strMemo, string strLevelValue, Param[] myParams, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StartCheck", new object[] {
                        strMainID,
                        strCheckType,
                        strMemo,
                        strLevelValue,
                        myParams}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndStartCheck(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void StartCheckAsync(string strMainID, string strCheckType, string strMemo, string strLevelValue, Param[] myParams) {
            this.StartCheckAsync(strMainID, strCheckType, strMemo, strLevelValue, myParams, null);
        }
        
        /// <remarks/>
        public void StartCheckAsync(string strMainID, string strCheckType, string strMemo, string strLevelValue, Param[] myParams, object userState) {
            if ((this.StartCheckOperationCompleted == null)) {
                this.StartCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartCheckOperationCompleted);
            }
            this.InvokeAsync("StartCheck", new object[] {
                        strMainID,
                        strCheckType,
                        strMemo,
                        strLevelValue,
                        myParams}, this.StartCheckOperationCompleted, userState);
        }
        
        private void OnStartCheckOperationCompleted(object arg) {
            if ((this.StartCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartCheckCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Check_Service/ExecuteCheck", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExecuteCheck(string strCheckID) {
            object[] results = this.Invoke("ExecuteCheck", new object[] {
                        strCheckID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecuteCheck(string strCheckID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExecuteCheck", new object[] {
                        strCheckID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndExecuteCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteCheckAsync(string strCheckID) {
            this.ExecuteCheckAsync(strCheckID, null);
        }
        
        /// <remarks/>
        public void ExecuteCheckAsync(string strCheckID, object userState) {
            if ((this.ExecuteCheckOperationCompleted == null)) {
                this.ExecuteCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteCheckOperationCompleted);
            }
            this.InvokeAsync("ExecuteCheck", new object[] {
                        strCheckID}, this.ExecuteCheckOperationCompleted, userState);
        }
        
        private void OnExecuteCheckOperationCompleted(object arg) {
            if ((this.ExecuteCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteCheckCompleted(this, new ExecuteCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Check_Service/GetCheckLog", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCheckLog(string checkid, int iStartIndex, int iRecordCount) {
            object[] results = this.Invoke("GetCheckLog", new object[] {
                        checkid,
                        iStartIndex,
                        iRecordCount});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCheckLog(string checkid, int iStartIndex, int iRecordCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCheckLog", new object[] {
                        checkid,
                        iStartIndex,
                        iRecordCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetCheckLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCheckLogAsync(string checkid, int iStartIndex, int iRecordCount) {
            this.GetCheckLogAsync(checkid, iStartIndex, iRecordCount, null);
        }
        
        /// <remarks/>
        public void GetCheckLogAsync(string checkid, int iStartIndex, int iRecordCount, object userState) {
            if ((this.GetCheckLogOperationCompleted == null)) {
                this.GetCheckLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCheckLogOperationCompleted);
            }
            this.InvokeAsync("GetCheckLog", new object[] {
                        checkid,
                        iStartIndex,
                        iRecordCount}, this.GetCheckLogOperationCompleted, userState);
        }
        
        private void OnGetCheckLogOperationCompleted(object arg) {
            if ((this.GetCheckLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCheckLogCompleted(this, new GetCheckLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Check_Service/GetStartCheckCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetStartCheckCount(string strCheckType, string strUserID) {
            object[] results = this.Invoke("GetStartCheckCount", new object[] {
                        strCheckType,
                        strUserID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStartCheckCount(string strCheckType, string strUserID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStartCheckCount", new object[] {
                        strCheckType,
                        strUserID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetStartCheckCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetStartCheckCountAsync(string strCheckType, string strUserID) {
            this.GetStartCheckCountAsync(strCheckType, strUserID, null);
        }
        
        /// <remarks/>
        public void GetStartCheckCountAsync(string strCheckType, string strUserID, object userState) {
            if ((this.GetStartCheckCountOperationCompleted == null)) {
                this.GetStartCheckCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStartCheckCountOperationCompleted);
            }
            this.InvokeAsync("GetStartCheckCount", new object[] {
                        strCheckType,
                        strUserID}, this.GetStartCheckCountOperationCompleted, userState);
        }
        
        private void OnGetStartCheckCountOperationCompleted(object arg) {
            if ((this.GetStartCheckCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStartCheckCountCompleted(this, new GetStartCheckCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Check_Service/GetFinishCheckCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFinishCheckCount(string strCheckType, string strUserID) {
            object[] results = this.Invoke("GetFinishCheckCount", new object[] {
                        strCheckType,
                        strUserID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFinishCheckCount(string strCheckType, string strUserID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFinishCheckCount", new object[] {
                        strCheckType,
                        strUserID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetFinishCheckCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFinishCheckCountAsync(string strCheckType, string strUserID) {
            this.GetFinishCheckCountAsync(strCheckType, strUserID, null);
        }
        
        /// <remarks/>
        public void GetFinishCheckCountAsync(string strCheckType, string strUserID, object userState) {
            if ((this.GetFinishCheckCountOperationCompleted == null)) {
                this.GetFinishCheckCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFinishCheckCountOperationCompleted);
            }
            this.InvokeAsync("GetFinishCheckCount", new object[] {
                        strCheckType,
                        strUserID}, this.GetFinishCheckCountOperationCompleted, userState);
        }
        
        private void OnGetFinishCheckCountOperationCompleted(object arg) {
            if ((this.GetFinishCheckCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFinishCheckCountCompleted(this, new GetFinishCheckCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Check_Service/GetStartCheckData", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStartCheckData(string strCheckType, string strUserID, int iStartIndex, int iRecordCount, string strFid) {
            object[] results = this.Invoke("GetStartCheckData", new object[] {
                        strCheckType,
                        strUserID,
                        iStartIndex,
                        iRecordCount,
                        strFid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStartCheckData(string strCheckType, string strUserID, int iStartIndex, int iRecordCount, string strFid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStartCheckData", new object[] {
                        strCheckType,
                        strUserID,
                        iStartIndex,
                        iRecordCount,
                        strFid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetStartCheckData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStartCheckDataAsync(string strCheckType, string strUserID, int iStartIndex, int iRecordCount, string strFid) {
            this.GetStartCheckDataAsync(strCheckType, strUserID, iStartIndex, iRecordCount, strFid, null);
        }
        
        /// <remarks/>
        public void GetStartCheckDataAsync(string strCheckType, string strUserID, int iStartIndex, int iRecordCount, string strFid, object userState) {
            if ((this.GetStartCheckDataOperationCompleted == null)) {
                this.GetStartCheckDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStartCheckDataOperationCompleted);
            }
            this.InvokeAsync("GetStartCheckData", new object[] {
                        strCheckType,
                        strUserID,
                        iStartIndex,
                        iRecordCount,
                        strFid}, this.GetStartCheckDataOperationCompleted, userState);
        }
        
        private void OnGetStartCheckDataOperationCompleted(object arg) {
            if ((this.GetStartCheckDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStartCheckDataCompleted(this, new GetStartCheckDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Check_Service/GetFinishCheckData", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFinishCheckData(string strCheckType, string strUserID, int iStartIndex, int iRecordCount, string strFid) {
            object[] results = this.Invoke("GetFinishCheckData", new object[] {
                        strCheckType,
                        strUserID,
                        iStartIndex,
                        iRecordCount,
                        strFid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFinishCheckData(string strCheckType, string strUserID, int iStartIndex, int iRecordCount, string strFid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFinishCheckData", new object[] {
                        strCheckType,
                        strUserID,
                        iStartIndex,
                        iRecordCount,
                        strFid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetFinishCheckData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFinishCheckDataAsync(string strCheckType, string strUserID, int iStartIndex, int iRecordCount, string strFid) {
            this.GetFinishCheckDataAsync(strCheckType, strUserID, iStartIndex, iRecordCount, strFid, null);
        }
        
        /// <remarks/>
        public void GetFinishCheckDataAsync(string strCheckType, string strUserID, int iStartIndex, int iRecordCount, string strFid, object userState) {
            if ((this.GetFinishCheckDataOperationCompleted == null)) {
                this.GetFinishCheckDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFinishCheckDataOperationCompleted);
            }
            this.InvokeAsync("GetFinishCheckData", new object[] {
                        strCheckType,
                        strUserID,
                        iStartIndex,
                        iRecordCount,
                        strFid}, this.GetFinishCheckDataOperationCompleted, userState);
        }
        
        private void OnGetFinishCheckDataOperationCompleted(object arg) {
            if ((this.GetFinishCheckDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFinishCheckDataCompleted(this, new GetFinishCheckDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Check_Service/GetToDoNum", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetToDoNum(string strCheckType, string strUserID) {
            object[] results = this.Invoke("GetToDoNum", new object[] {
                        strCheckType,
                        strUserID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetToDoNum(string strCheckType, string strUserID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetToDoNum", new object[] {
                        strCheckType,
                        strUserID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetToDoNum(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetToDoNumAsync(string strCheckType, string strUserID) {
            this.GetToDoNumAsync(strCheckType, strUserID, null);
        }
        
        /// <remarks/>
        public void GetToDoNumAsync(string strCheckType, string strUserID, object userState) {
            if ((this.GetToDoNumOperationCompleted == null)) {
                this.GetToDoNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetToDoNumOperationCompleted);
            }
            this.InvokeAsync("GetToDoNum", new object[] {
                        strCheckType,
                        strUserID}, this.GetToDoNumOperationCompleted, userState);
        }
        
        private void OnGetToDoNumOperationCompleted(object arg) {
            if ((this.GetToDoNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetToDoNumCompleted(this, new GetToDoNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Check_Service/getCheckType", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getCheckType() {
            object[] results = this.Invoke("getCheckType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCheckType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCheckType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndgetCheckType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getCheckTypeAsync() {
            this.getCheckTypeAsync(null);
        }
        
        /// <remarks/>
        public void getCheckTypeAsync(object userState) {
            if ((this.getCheckTypeOperationCompleted == null)) {
                this.getCheckTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCheckTypeOperationCompleted);
            }
            this.InvokeAsync("getCheckType", new object[0], this.getCheckTypeOperationCompleted, userState);
        }
        
        private void OngetCheckTypeOperationCompleted(object arg) {
            if ((this.getCheckTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCheckTypeCompleted(this, new getCheckTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Check_Service")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Check_Service", IsNullable=false)]
    public partial class Finance_Header : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string userIPField;
        
        private string szKeyField;
        
        private int operIDField;
        
        private string rightStringField;
        
        private string userPasswordField;
        
        private string sessionIDField;
        
        private string srcUrlField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserIP {
            get {
                return this.userIPField;
            }
            set {
                this.userIPField = value;
            }
        }
        
        /// <remarks/>
        public string SzKey {
            get {
                return this.szKeyField;
            }
            set {
                this.szKeyField = value;
            }
        }
        
        /// <remarks/>
        public int OperID {
            get {
                return this.operIDField;
            }
            set {
                this.operIDField = value;
            }
        }
        
        /// <remarks/>
        public string RightString {
            get {
                return this.rightStringField;
            }
            set {
                this.rightStringField = value;
            }
        }
        
        /// <remarks/>
        public string UserPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string SessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
            }
        }
        
        /// <remarks/>
        public string SrcUrl {
            get {
                return this.srcUrlField;
            }
            set {
                this.srcUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Check_Service")]
    public partial class Param {
        
        private string paramNameField;
        
        private string paramValueField;
        
        private string paramFlagField;
        
        /// <remarks/>
        public string ParamName {
            get {
                return this.paramNameField;
            }
            set {
                this.paramNameField = value;
            }
        }
        
        /// <remarks/>
        public string ParamValue {
            get {
                return this.paramValueField;
            }
            set {
                this.paramValueField = value;
            }
        }
        
        /// <remarks/>
        public string ParamFlag {
            get {
                return this.paramFlagField;
            }
            set {
                this.paramFlagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetSendLogCompletedEventHandler(object sender, SetSendLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetSendLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetSendLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StartCheckCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExecuteCheckCompletedEventHandler(object sender, ExecuteCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCheckLogCompletedEventHandler(object sender, GetCheckLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCheckLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCheckLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetStartCheckCountCompletedEventHandler(object sender, GetStartCheckCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStartCheckCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStartCheckCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFinishCheckCountCompletedEventHandler(object sender, GetFinishCheckCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFinishCheckCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFinishCheckCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetStartCheckDataCompletedEventHandler(object sender, GetStartCheckDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStartCheckDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStartCheckDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFinishCheckDataCompletedEventHandler(object sender, GetFinishCheckDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFinishCheckDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFinishCheckDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetToDoNumCompletedEventHandler(object sender, GetToDoNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetToDoNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetToDoNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getCheckTypeCompletedEventHandler(object sender, getCheckTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCheckTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCheckTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591