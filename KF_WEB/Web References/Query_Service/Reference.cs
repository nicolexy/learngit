//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
// 
#pragma warning disable 1591

namespace TENCENT.OSS.CFT.KF.KF_Web.Query_Service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Query_ServiceSoap", Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Query_BaseForNET))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_CLASS_BASIC))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Query_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Finance_Header finance_HeaderValueField;
        
        private System.Threading.SendOrPostCallback DeleteCrtServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMobileTokenListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPhoneBillRecordByTransIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPhoneBillRecordByPhoneNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDKBankListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountDKBankListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDKBankListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDKContractListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDKContractDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDKContractBatchListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDKContractBatchDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDKLimit_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDKLimit_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDKService_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDKService_Detail9999OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDKService_SPServiceDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCFTMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCFTMemberAdvancedOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTurnoverOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankCardBindOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankCardTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankCardInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryForeignCardInfoByOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryForeignCardInfoByMerchantOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryForeignCardInfoByBankOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBalanceByUIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryMobilRechargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryMobilRechargeOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySupplierValidDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySupplierNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSupplierVaildDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryMobilProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryOneMobilProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMobileProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMobileProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback DK_BatchSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback DK_FileSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback DK_QueryCheckBatchAllDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback DK_QueryCheckBatchSumAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DK_QueryCheckInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DK_QueryCheckDetailInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DK_StartCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback InternetBankTurnoverBillQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback InternetBankBillHistoryQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBatchInfo_DFOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountBatchInfo_DFOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDFInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCFTTransferInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTransferDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountDFInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDFDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryIconInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshIconOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExtinguishIconOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAutomaticRechargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAutomaticRechargeBillListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankTypeKKOperationCompleted;
        
        private System.Threading.SendOrPostCallback Uid2QQOperationCompleted;
        
        private System.Threading.SendOrPostCallback SingedByServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAATradeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAATradeDetailsSingleYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAATotalTradeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceiveRedPacketListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRedPacketDetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSendRedPacketListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmallCreditCardInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback OverseasReturnQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirTicketsOrderQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback HotelOrderQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RareNameQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOneRareNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AtuoRenewQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AtuoRenewUnbindOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_AppealSQueryCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditQueryListForFaidCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditQueryListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditQueryListForFaidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditQueryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_InitGridOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_GetBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CanVisibleOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_SixCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CheckSnapFinishOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CheckFinish11OperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_GetErrorMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatpayDetail_GetCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatpayDetail_BindDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRealTimeOrderListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRealTimeOrderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInversatorSignDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChargeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUid_ByCerNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserFundAccountInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserFundAccountInfo1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserFundCardBindOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayCardInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayCardInfoExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBindBankCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundSupportBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyFundPayCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundTradeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserCrtCFDInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCFDInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediCertManageCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediCertManageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediOperatorManageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediOperatorRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediOperatorRoleNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetSynRecordStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SynPayStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSynRecordQueryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSynRecordQueryDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchSynPayStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetB2cReturnDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_InitGrid_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CanVisible_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRefundBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpDateBindInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMsgNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMsgNotifyByPhoneNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnbindMsgNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback BindMsgNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOldBindMobileOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_InitGrid_BOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CanVisible_BOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowDetail_BindDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback Gett_appealListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Gett_messageOperationCompleted;
        
        private System.Threading.SendOrPostCallback Savetp_add_msgOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitApproveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApprovePassOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback BusinessIdentityCardNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllChannelListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayLimitListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrustLimitListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserClassLockListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserClassQueryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserClassQueryListForThisOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserClassQueryCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserClassDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAuthenStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAuthenState_ByCre2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAuthenState_ByCreOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelAuthenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserCrtInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserCrtListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeleteQueryInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserCrtOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShouFuYiListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgencyBusinessInfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBusinessInfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBusiness2InfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBusinessBankListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBusinessEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHisBusinessListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitBusinessInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitBusinessCreInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSelfTypeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSelfKFListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSelfQueryListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSelfQueryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSelfQueryInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpidDomainQueryListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpidDomainQueryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveSpidDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveSpidEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveSpidCompanyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplyValueAddedTaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValueAddedTaxDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValueAddedTaxApproveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValueAddedTaxCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllValueAddedTaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOneValueAddedTaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValueAddedTaxModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AgentCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback BusinessLogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback BusinessFreezeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBussFreezeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBDNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWWWAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTradeTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback BusinessFreezeSPOAOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShutRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback BusinessResumeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuspendRefundmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUIDFromCerNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetB2cReturnCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetB2cReturnListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SettQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SettQueryWechatOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryForSelect1OperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryForSelect2_NOUSEOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryForSelect3OperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryForSelect4OperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryForSelect5OperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryForSelect6OperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryForSelect7OperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryForSelect8OperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryContractWechatOperationCompleted;
        
        private System.Threading.SendOrPostCallback TranLogIncomeSumQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuerySettlementListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySettlementListWechatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuerySettlementTodayListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryBalanceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBalanceListWechatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryBalanceDetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBalanceDetailListWechatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReclaimRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQQReclaimRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankCardBindListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankCardBindOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankCardBindList_UINOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankCardBindList_UIN_2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankCardBindList_2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UnbindBankCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnbindBankCardSpecialOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankCardBindList_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyBankCardBindOperationCompleted;
        
        private System.Threading.SendOrPostCallback SynchronBankCardBindOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_AppealDQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_AppealDQueryCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_AppealSQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQueryDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCFTUserAppealListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCFTUserAppealListNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCFTUserAppealListFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CFTUserAppealPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCFTUserAppealCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCFTUserAppealCountNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCFTUserAppealDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCFTUserAppealDetail_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCFTUserAppealDetailByDBTBOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAppealLockListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAppealLockListDBTBOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAppealLockListDBTBInnrFunOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAppealLockListDBTB2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CFTCancelAppealOperationCompleted;
        
        private System.Threading.SendOrPostCallback CFTCancelAppealDBTBOperationCompleted;
        
        private System.Threading.SendOrPostCallback CFTConfirmAppealOperationCompleted;
        
        private System.Threading.SendOrPostCallback CFTConfirmAppealDBTBOperationCompleted;
        
        private System.Threading.SendOrPostCallback CFTDelAppealOperationCompleted;
        
        private System.Threading.SendOrPostCallback CFTDelAppealDBTBOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKFTotalQueryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppealUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangeQQListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangeQQListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQQByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QQ2UidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QQ2UidXOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppealListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserpayListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransportListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppealQueryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppealListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppealListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserClassInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserClassInfoFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserClassConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInfoFromPoliceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserClassCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserClassDeleteListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundErrorCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundErrorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundErrorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundCardListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettleRuleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettleReqListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettleReqInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAdjustListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySettleRuleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySpControlOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRelationOrderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySubOrderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTrueLimtListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettleListAppendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettleInfoListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettleRefundListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpAgentRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAirAdjustListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAirFreezeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettleRefundListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeparateOperationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeparateOperationDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeparateListForFlistidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeparateListForFspidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryFeeDataListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayBusinessListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMerchantMidUidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInsureAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySpidOrSpaliasOperationCompleted;
        
        private System.Threading.SendOrPostCallback PaiPaiBMDListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayBusinessInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayBusinessInfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayBusinessElseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyPayBusinessInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgencyBusinessListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgencyBusinessInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAgencyBySpidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAgencyInfoByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPickListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPickListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComplainBussListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComplainBussCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddComplainBussOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeComplainBussOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComplainBussDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelComplainBussOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserComplainListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserComplainCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserComplainOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserComplainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserComplainDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemindUserComplainOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRefundInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRefundCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRefundInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeRefundInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelRefundInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSubmitRefundStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYTInfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCertNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYTFreezeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYTTradeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExchangeRateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreeFlowInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTypeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchWithholdReqOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryProtocolBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryProtocolDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryKpsMD5OperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDiscountCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearCreidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGwqCount_newOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGwq_newOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGwqInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGwqRollOperationCompleted;
        
        private System.Threading.SendOrPostCallback FreezeNonPrimaryCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCreditRefundListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCreditDebtOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCreditUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCreditBillListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCreditBillDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCapitalRollOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSPOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryActivityListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUserJoinActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryActivityLogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryWebchatPayActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediListXOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuickTradeListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreezeList_2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreezeList_3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreezeList_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreezeListDetail_2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreezeDiaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFreezeDiaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFreezeDiary_2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFreezeDiary_NEWOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoProcessFreezeStateDailyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFreezeDiaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreezeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExistFreezeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewFreezeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFreezeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreezeListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreezeListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFreezeListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUserFreezeRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUserControledRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDkInfo_GetBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDkInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountDKInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDkDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBatchInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountBatchInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCepspServiceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGwqOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGwqCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildrenInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogOnUsercheckOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogOnUserDeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogOnUserCheckYDTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildrenBankRollListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildrenBankRollList1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildrenBankRollListExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildrenFlistListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChildrenFreezeOrUnfreezeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSysBulletinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSysBankBulletinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSysBankInterfaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankInterfaceByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankInterfaceByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsRepeatedTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankBulletinByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankBulletinInfoByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUtility_chargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUCBulletinByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUCBulletinInfoByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SysBulletinIssueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SysBulletinGoPriorOperationCompleted;
        
        private System.Threading.SendOrPostCallback SysBulletinGoNextOperationCompleted;
        
        private System.Threading.SendOrPostCallback SysBulletinDelOperationCompleted;
        
        private System.Threading.SendOrPostCallback SysBulletinGoHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOneSysBulletinOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOneSysBulletinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeOneSysBulletinOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankBulletinNotUseOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankBulletinOperationCompleted;
        
        private System.Threading.SendOrPostCallback TurnBankBulletinClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankBulletinByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback Getfbank_orderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Getfbank_twoBank_orderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Synchro_StateOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsSecondPassewordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuspendSecondPassewordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPNRSpidOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsFastPayUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAccountFromWechatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAccountCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAccountMainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserButtonInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserMedInfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserMedInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetMediPasswdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBankAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchUserBankAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetManJianUsingListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManJianUserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManJianAddOneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayListForChildrenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayList_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayList_PickOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankRollListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankRollList_withIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPayListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPayList_withIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTCBankAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTCBankRollListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankRollListByListIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundListDetail_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsNewOrderCZDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTCBankPAYListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayListByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback returnListIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundHistoryDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPickListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundListDetail_SubaccOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Query_Service() {
            this.Url = global::TENCENT.OSS.CFT.KF.KF_Web.Properties.Settings.Default.finance_web_Query_Service_Query_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Finance_Header Finance_HeaderValue {
            get {
                return this.finance_HeaderValueField;
            }
            set {
                this.finance_HeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DeleteCrtServiceCompletedEventHandler DeleteCrtServiceCompleted;
        
        /// <remarks/>
        public event GetMobileTokenListCompletedEventHandler GetMobileTokenListCompleted;
        
        /// <remarks/>
        public event GetPhoneBillRecordByTransIDCompletedEventHandler GetPhoneBillRecordByTransIDCompleted;
        
        /// <remarks/>
        public event GetPhoneBillRecordByPhoneNumberCompletedEventHandler GetPhoneBillRecordByPhoneNumberCompleted;
        
        /// <remarks/>
        public event QueryDKBankListCompletedEventHandler QueryDKBankListCompleted;
        
        /// <remarks/>
        public event CountDKBankListCompletedEventHandler CountDKBankListCompleted;
        
        /// <remarks/>
        public event QueryDKBankListDetailCompletedEventHandler QueryDKBankListDetailCompleted;
        
        /// <remarks/>
        public event QueryDKContractListCompletedEventHandler QueryDKContractListCompleted;
        
        /// <remarks/>
        public event QueryDKContractDetailCompletedEventHandler QueryDKContractDetailCompleted;
        
        /// <remarks/>
        public event QueryDKContractBatchListCompletedEventHandler QueryDKContractBatchListCompleted;
        
        /// <remarks/>
        public event QueryDKContractBatchDetailCompletedEventHandler QueryDKContractBatchDetailCompleted;
        
        /// <remarks/>
        public event GetDKLimit_ListCompletedEventHandler GetDKLimit_ListCompleted;
        
        /// <remarks/>
        public event GetDKLimit_DetailCompletedEventHandler GetDKLimit_DetailCompleted;
        
        /// <remarks/>
        public event GetDKService_ListCompletedEventHandler GetDKService_ListCompleted;
        
        /// <remarks/>
        public event GetDKService_Detail9999CompletedEventHandler GetDKService_Detail9999Completed;
        
        /// <remarks/>
        public event GetDKService_SPServiceDetailCompletedEventHandler GetDKService_SPServiceDetailCompleted;
        
        /// <remarks/>
        public event QueryCFTMemberCompletedEventHandler QueryCFTMemberCompleted;
        
        /// <remarks/>
        public event QueryCFTMemberAdvancedCompletedEventHandler QueryCFTMemberAdvancedCompleted;
        
        /// <remarks/>
        public event QueryTurnoverCompletedEventHandler QueryTurnoverCompleted;
        
        /// <remarks/>
        public event QueryBankCardBindCompletedEventHandler QueryBankCardBindCompleted;
        
        /// <remarks/>
        public event QueryBankCardTransactionCompletedEventHandler QueryBankCardTransactionCompleted;
        
        /// <remarks/>
        public event QueryBankCardInfoCompletedEventHandler QueryBankCardInfoCompleted;
        
        /// <remarks/>
        public event QueryForeignCardInfoByOrderCompletedEventHandler QueryForeignCardInfoByOrderCompleted;
        
        /// <remarks/>
        public event QueryForeignCardInfoByMerchantCompletedEventHandler QueryForeignCardInfoByMerchantCompleted;
        
        /// <remarks/>
        public event QueryForeignCardInfoByBankOrderCompletedEventHandler QueryForeignCardInfoByBankOrderCompleted;
        
        /// <remarks/>
        public event GetUserBalanceCompletedEventHandler GetUserBalanceCompleted;
        
        /// <remarks/>
        public event GetUserBalanceByUIdCompletedEventHandler GetUserBalanceByUIdCompleted;
        
        /// <remarks/>
        public event QueryMobilRechargeCompletedEventHandler QueryMobilRechargeCompleted;
        
        /// <remarks/>
        public event QueryMobilRechargeOrderCompletedEventHandler QueryMobilRechargeOrderCompleted;
        
        /// <remarks/>
        public event QuerySupplierValidDateCompletedEventHandler QuerySupplierValidDateCompleted;
        
        /// <remarks/>
        public event QuerySupplierNameCompletedEventHandler QuerySupplierNameCompleted;
        
        /// <remarks/>
        public event UpdateSupplierVaildDateCompletedEventHandler UpdateSupplierVaildDateCompleted;
        
        /// <remarks/>
        public event QueryMobilProductCompletedEventHandler QueryMobilProductCompleted;
        
        /// <remarks/>
        public event QueryOneMobilProductCompletedEventHandler QueryOneMobilProductCompleted;
        
        /// <remarks/>
        public event UpdateMobileProductCompletedEventHandler UpdateMobileProductCompleted;
        
        /// <remarks/>
        public event DeleteMobileProductCompletedEventHandler DeleteMobileProductCompleted;
        
        /// <remarks/>
        public event DK_BatchSelectCompletedEventHandler DK_BatchSelectCompleted;
        
        /// <remarks/>
        public event DK_FileSelectCompletedEventHandler DK_FileSelectCompleted;
        
        /// <remarks/>
        public event DK_QueryCheckBatchAllDetailCompletedEventHandler DK_QueryCheckBatchAllDetailCompleted;
        
        /// <remarks/>
        public event DK_QueryCheckBatchSumAmountCompletedEventHandler DK_QueryCheckBatchSumAmountCompleted;
        
        /// <remarks/>
        public event DK_QueryCheckInfoCompletedEventHandler DK_QueryCheckInfoCompleted;
        
        /// <remarks/>
        public event DK_QueryCheckDetailInfoCompletedEventHandler DK_QueryCheckDetailInfoCompleted;
        
        /// <remarks/>
        public event DK_StartCheckCompletedEventHandler DK_StartCheckCompleted;
        
        /// <remarks/>
        public event InternetBankTurnoverBillQueryCompletedEventHandler InternetBankTurnoverBillQueryCompleted;
        
        /// <remarks/>
        public event InternetBankBillHistoryQueryCompletedEventHandler InternetBankBillHistoryQueryCompleted;
        
        /// <remarks/>
        public event QueryBatchInfo_DFCompletedEventHandler QueryBatchInfo_DFCompleted;
        
        /// <remarks/>
        public event CountBatchInfo_DFCompletedEventHandler CountBatchInfo_DFCompleted;
        
        /// <remarks/>
        public event QueryDFInfoCompletedEventHandler QueryDFInfoCompleted;
        
        /// <remarks/>
        public event QueryCFTTransferInfoCompletedEventHandler QueryCFTTransferInfoCompleted;
        
        /// <remarks/>
        public event QueryTransferDetailCompletedEventHandler QueryTransferDetailCompleted;
        
        /// <remarks/>
        public event CountDFInfoCompletedEventHandler CountDFInfoCompleted;
        
        /// <remarks/>
        public event QueryDFDetailCompletedEventHandler QueryDFDetailCompleted;
        
        /// <remarks/>
        public event QueryIconInfoCompletedEventHandler QueryIconInfoCompleted;
        
        /// <remarks/>
        public event RefreshIconCompletedEventHandler RefreshIconCompleted;
        
        /// <remarks/>
        public event ExtinguishIconCompletedEventHandler ExtinguishIconCompleted;
        
        /// <remarks/>
        public event QueryAutomaticRechargeCompletedEventHandler QueryAutomaticRechargeCompleted;
        
        /// <remarks/>
        public event QueryAutomaticRechargeBillListCompletedEventHandler QueryAutomaticRechargeBillListCompleted;
        
        /// <remarks/>
        public event GetBankTypeKKCompletedEventHandler GetBankTypeKKCompleted;
        
        /// <remarks/>
        public event Uid2QQCompletedEventHandler Uid2QQCompleted;
        
        /// <remarks/>
        public event SingedByServiceCompletedEventHandler SingedByServiceCompleted;
        
        /// <remarks/>
        public event GetAATradeListCompletedEventHandler GetAATradeListCompleted;
        
        /// <remarks/>
        public event GetAATradeDetailsSingleYearCompletedEventHandler GetAATradeDetailsSingleYearCompleted;
        
        /// <remarks/>
        public event QueryAATotalTradeInfoCompletedEventHandler QueryAATotalTradeInfoCompleted;
        
        /// <remarks/>
        public event GetReceiveRedPacketListCompletedEventHandler GetReceiveRedPacketListCompleted;
        
        /// <remarks/>
        public event GetRedPacketDetailListCompletedEventHandler GetRedPacketDetailListCompleted;
        
        /// <remarks/>
        public event GetSendRedPacketListCompletedEventHandler GetSendRedPacketListCompleted;
        
        /// <remarks/>
        public event GetSmallCreditCardInfoCompletedEventHandler GetSmallCreditCardInfoCompleted;
        
        /// <remarks/>
        public event OverseasReturnQueryCompletedEventHandler OverseasReturnQueryCompleted;
        
        /// <remarks/>
        public event AirTicketsOrderQueryCompletedEventHandler AirTicketsOrderQueryCompleted;
        
        /// <remarks/>
        public event HotelOrderQueryCompletedEventHandler HotelOrderQueryCompleted;
        
        /// <remarks/>
        public event RareNameQueryCompletedEventHandler RareNameQueryCompleted;
        
        /// <remarks/>
        public event AddOneRareNameCompletedEventHandler AddOneRareNameCompleted;
        
        /// <remarks/>
        public event AtuoRenewQueryCompletedEventHandler AtuoRenewQueryCompleted;
        
        /// <remarks/>
        public event AtuoRenewUnbindCompletedEventHandler AtuoRenewUnbindCompleted;
        
        /// <remarks/>
        public event WS_AppealSQueryCountCompletedEventHandler WS_AppealSQueryCountCompleted;
        
        /// <remarks/>
        public event GetCreditQueryListForFaidCountCompletedEventHandler GetCreditQueryListForFaidCountCompleted;
        
        /// <remarks/>
        public event GetCreditQueryListCountCompletedEventHandler GetCreditQueryListCountCompleted;
        
        /// <remarks/>
        public event GetCreditQueryListForFaidCompletedEventHandler GetCreditQueryListForFaidCompleted;
        
        /// <remarks/>
        public event GetCreditQueryListCompletedEventHandler GetCreditQueryListCompleted;
        
        /// <remarks/>
        public event BatPay_InitGridCompletedEventHandler BatPay_InitGridCompleted;
        
        /// <remarks/>
        public event BatPay_GetBankCompletedEventHandler BatPay_GetBankCompleted;
        
        /// <remarks/>
        public event BatPay_CanVisibleCompletedEventHandler BatPay_CanVisibleCompleted;
        
        /// <remarks/>
        public event BatPay_SixCheckCompletedEventHandler BatPay_SixCheckCompleted;
        
        /// <remarks/>
        public event BatPay_CheckSnapFinishCompletedEventHandler BatPay_CheckSnapFinishCompleted;
        
        /// <remarks/>
        public event BatPay_CheckFinish11CompletedEventHandler BatPay_CheckFinish11Completed;
        
        /// <remarks/>
        public event BatPay_GetErrorMsgCompletedEventHandler BatPay_GetErrorMsgCompleted;
        
        /// <remarks/>
        public event BatpayDetail_GetCountCompletedEventHandler BatpayDetail_GetCountCompleted;
        
        /// <remarks/>
        public event BatpayDetail_BindDataCompletedEventHandler BatpayDetail_BindDataCompleted;
        
        /// <remarks/>
        public event GetRealTimeOrderListCountCompletedEventHandler GetRealTimeOrderListCountCompleted;
        
        /// <remarks/>
        public event GetRealTimeOrderListCompletedEventHandler GetRealTimeOrderListCompleted;
        
        /// <remarks/>
        public event GetInversatorSignDetailCompletedEventHandler GetInversatorSignDetailCompleted;
        
        /// <remarks/>
        public event GetFundInfoCompletedEventHandler GetFundInfoCompleted;
        
        /// <remarks/>
        public event GetChargeInfoCompletedEventHandler GetChargeInfoCompleted;
        
        /// <remarks/>
        public event QueryUid_ByCerNumCompletedEventHandler QueryUid_ByCerNumCompleted;
        
        /// <remarks/>
        public event GetUserFundAccountInfoCompletedEventHandler GetUserFundAccountInfoCompleted;
        
        /// <remarks/>
        public event GetUserFundAccountInfo1CompletedEventHandler GetUserFundAccountInfo1Completed;
        
        /// <remarks/>
        public event GetUserFundCardBindCompletedEventHandler GetUserFundCardBindCompleted;
        
        /// <remarks/>
        public event GetPayCardInfoCompletedEventHandler GetPayCardInfoCompleted;
        
        /// <remarks/>
        public event GetPayCardInfoExCompletedEventHandler GetPayCardInfoExCompleted;
        
        /// <remarks/>
        public event GetBindBankCardCompletedEventHandler GetBindBankCardCompleted;
        
        /// <remarks/>
        public event GetFundSupportBankCompletedEventHandler GetFundSupportBankCompleted;
        
        /// <remarks/>
        public event ModifyFundPayCardCompletedEventHandler ModifyFundPayCardCompleted;
        
        /// <remarks/>
        public event GetFundTradeListCompletedEventHandler GetFundTradeListCompleted;
        
        /// <remarks/>
        public event GetUserCrtCFDInfoCompletedEventHandler GetUserCrtCFDInfoCompleted;
        
        /// <remarks/>
        public event QueryCFDInfoCompletedEventHandler QueryCFDInfoCompleted;
        
        /// <remarks/>
        public event GetMediCertManageCountCompletedEventHandler GetMediCertManageCountCompleted;
        
        /// <remarks/>
        public event GetMediCertManageListCompletedEventHandler GetMediCertManageListCompleted;
        
        /// <remarks/>
        public event GetMediOperatorManageListCompletedEventHandler GetMediOperatorManageListCompleted;
        
        /// <remarks/>
        public event GetMediOperatorRoleCompletedEventHandler GetMediOperatorRoleCompleted;
        
        /// <remarks/>
        public event GetMediOperatorRoleNewCompletedEventHandler GetMediOperatorRoleNewCompleted;
        
        /// <remarks/>
        public event ResetSynRecordStateCompletedEventHandler ResetSynRecordStateCompleted;
        
        /// <remarks/>
        public event SynPayStateCompletedEventHandler SynPayStateCompleted;
        
        /// <remarks/>
        public event GetSynRecordQueryListCompletedEventHandler GetSynRecordQueryListCompleted;
        
        /// <remarks/>
        public event GetSynRecordQueryDetailCompletedEventHandler GetSynRecordQueryDetailCompleted;
        
        /// <remarks/>
        public event BatchSynPayStateCompletedEventHandler BatchSynPayStateCompleted;
        
        /// <remarks/>
        public event GetB2cReturnDetailCompletedEventHandler GetB2cReturnDetailCompleted;
        
        /// <remarks/>
        public event BatPay_InitGrid_RCompletedEventHandler BatPay_InitGrid_RCompleted;
        
        /// <remarks/>
        public event BatPay_CanVisible_RCompletedEventHandler BatPay_CanVisible_RCompleted;
        
        /// <remarks/>
        public event GetAllRefundBankCompletedEventHandler GetAllRefundBankCompleted;
        
        /// <remarks/>
        public event GetRefundListCompletedEventHandler GetRefundListCompleted;
        
        /// <remarks/>
        public event GetRefundListCountCompletedEventHandler GetRefundListCountCompleted;
        
        /// <remarks/>
        public event UpDateBindInfoCompletedEventHandler UpDateBindInfoCompleted;
        
        /// <remarks/>
        public event GetMsgNotifyCompletedEventHandler GetMsgNotifyCompleted;
        
        /// <remarks/>
        public event GetMsgNotifyByPhoneNumberCompletedEventHandler GetMsgNotifyByPhoneNumberCompleted;
        
        /// <remarks/>
        public event UnbindMsgNotifyCompletedEventHandler UnbindMsgNotifyCompleted;
        
        /// <remarks/>
        public event BindMsgNotifyCompletedEventHandler BindMsgNotifyCompleted;
        
        /// <remarks/>
        public event GetOldBindMobileCompletedEventHandler GetOldBindMobileCompleted;
        
        /// <remarks/>
        public event BatPay_InitGrid_BCompletedEventHandler BatPay_InitGrid_BCompleted;
        
        /// <remarks/>
        public event BatPay_CanVisible_BCompletedEventHandler BatPay_CanVisible_BCompleted;
        
        /// <remarks/>
        public event ShowDetail_BindDataCompletedEventHandler ShowDetail_BindDataCompleted;
        
        /// <remarks/>
        public event Gett_appealListCompletedEventHandler Gett_appealListCompleted;
        
        /// <remarks/>
        public event Gett_messageCompletedEventHandler Gett_messageCompleted;
        
        /// <remarks/>
        public event Savetp_add_msgCompletedEventHandler Savetp_add_msgCompleted;
        
        /// <remarks/>
        public event SubmitApproveCompletedEventHandler SubmitApproveCompleted;
        
        /// <remarks/>
        public event ApprovePassCompletedEventHandler ApprovePassCompleted;
        
        /// <remarks/>
        public event ApproveCancelCompletedEventHandler ApproveCancelCompleted;
        
        /// <remarks/>
        public event BusinessIdentityCardNumCompletedEventHandler BusinessIdentityCardNumCompleted;
        
        /// <remarks/>
        public event GetAllChannelListCompletedEventHandler GetAllChannelListCompleted;
        
        /// <remarks/>
        public event GetPayLimitListCompletedEventHandler GetPayLimitListCompleted;
        
        /// <remarks/>
        public event GetTrustLimitListCompletedEventHandler GetTrustLimitListCompleted;
        
        /// <remarks/>
        public event GetUserClassLockListCompletedEventHandler GetUserClassLockListCompleted;
        
        /// <remarks/>
        public event GetUserClassQueryListCompletedEventHandler GetUserClassQueryListCompleted;
        
        /// <remarks/>
        public event GetUserClassQueryListForThisCompletedEventHandler GetUserClassQueryListForThisCompleted;
        
        /// <remarks/>
        public event GetUserClassQueryCountCompletedEventHandler GetUserClassQueryCountCompleted;
        
        /// <remarks/>
        public event GetUserClassDetailCompletedEventHandler GetUserClassDetailCompleted;
        
        /// <remarks/>
        public event GetUserAuthenStateCompletedEventHandler GetUserAuthenStateCompleted;
        
        /// <remarks/>
        public event GetUserAuthenState_ByCre2CompletedEventHandler GetUserAuthenState_ByCre2Completed;
        
        /// <remarks/>
        public event GetUserAuthenState_ByCreCompletedEventHandler GetUserAuthenState_ByCreCompleted;
        
        /// <remarks/>
        public event DelAuthenCompletedEventHandler DelAuthenCompleted;
        
        /// <remarks/>
        public event GetUserCrtInfoCompletedEventHandler GetUserCrtInfoCompleted;
        
        /// <remarks/>
        public event GetBankByTypeCompletedEventHandler GetBankByTypeCompleted;
        
        /// <remarks/>
        public event GetUserCrtListCompletedEventHandler GetUserCrtListCompleted;
        
        /// <remarks/>
        public event GetDeleteQueryInfoCompletedEventHandler GetDeleteQueryInfoCompleted;
        
        /// <remarks/>
        public event DeleteUserCrtCompletedEventHandler DeleteUserCrtCompleted;
        
        /// <remarks/>
        public event GetShouFuYiListCompletedEventHandler GetShouFuYiListCompleted;
        
        /// <remarks/>
        public event GetAgencyBusinessInfoListCompletedEventHandler GetAgencyBusinessInfoListCompleted;
        
        /// <remarks/>
        public event GetBusinessInfoListCompletedEventHandler GetBusinessInfoListCompleted;
        
        /// <remarks/>
        public event GetBusiness2InfoListCompletedEventHandler GetBusiness2InfoListCompleted;
        
        /// <remarks/>
        public event GetBusinessBankListCompletedEventHandler GetBusinessBankListCompleted;
        
        /// <remarks/>
        public event GetBusinessEmailCompletedEventHandler GetBusinessEmailCompleted;
        
        /// <remarks/>
        public event GetHisBusinessListCompletedEventHandler GetHisBusinessListCompleted;
        
        /// <remarks/>
        public event SubmitBusinessInfoCompletedEventHandler SubmitBusinessInfoCompleted;
        
        /// <remarks/>
        public event SubmitBusinessCreInfoCompletedEventHandler SubmitBusinessCreInfoCompleted;
        
        /// <remarks/>
        public event GetSelfTypeListCompletedEventHandler GetSelfTypeListCompleted;
        
        /// <remarks/>
        public event GetSelfKFListCompletedEventHandler GetSelfKFListCompleted;
        
        /// <remarks/>
        public event GetSelfQueryListCountCompletedEventHandler GetSelfQueryListCountCompleted;
        
        /// <remarks/>
        public event GetSelfQueryListCompletedEventHandler GetSelfQueryListCompleted;
        
        /// <remarks/>
        public event GetSelfQueryInfoCompletedEventHandler GetSelfQueryInfoCompleted;
        
        /// <remarks/>
        public event CheckTicketCompletedEventHandler CheckTicketCompleted;
        
        /// <remarks/>
        public event ApproveTicketCompletedEventHandler ApproveTicketCompleted;
        
        /// <remarks/>
        public event GetSpidDomainQueryListCountCompletedEventHandler GetSpidDomainQueryListCountCompleted;
        
        /// <remarks/>
        public event GetSpidDomainQueryListCompletedEventHandler GetSpidDomainQueryListCompleted;
        
        /// <remarks/>
        public event ApproveSpidDomainCompletedEventHandler ApproveSpidDomainCompleted;
        
        /// <remarks/>
        public event ApproveSpidEmailCompletedEventHandler ApproveSpidEmailCompleted;
        
        /// <remarks/>
        public event ApproveSpidCompanyNameCompletedEventHandler ApproveSpidCompanyNameCompleted;
        
        /// <remarks/>
        public event GetApplyValueAddedTaxCompletedEventHandler GetApplyValueAddedTaxCompleted;
        
        /// <remarks/>
        public event GetValueAddedTaxDetailCompletedEventHandler GetValueAddedTaxDetailCompleted;
        
        /// <remarks/>
        public event ValueAddedTaxApproveCompletedEventHandler ValueAddedTaxApproveCompleted;
        
        /// <remarks/>
        public event ValueAddedTaxCancelCompletedEventHandler ValueAddedTaxCancelCompleted;
        
        /// <remarks/>
        public event GetAllValueAddedTaxCompletedEventHandler GetAllValueAddedTaxCompleted;
        
        /// <remarks/>
        public event GetOneValueAddedTaxCompletedEventHandler GetOneValueAddedTaxCompleted;
        
        /// <remarks/>
        public event ValueAddedTaxModifyCompletedEventHandler ValueAddedTaxModifyCompleted;
        
        /// <remarks/>
        public event AgentCancelCompletedEventHandler AgentCancelCompleted;
        
        /// <remarks/>
        public event SetRoleCompletedEventHandler SetRoleCompleted;
        
        /// <remarks/>
        public event BusinessLogoutCompletedEventHandler BusinessLogoutCompleted;
        
        /// <remarks/>
        public event BusinessFreezeCompletedEventHandler BusinessFreezeCompleted;
        
        /// <remarks/>
        public event QueryBussFreezeListCompletedEventHandler QueryBussFreezeListCompleted;
        
        /// <remarks/>
        public event GetBDNameCompletedEventHandler GetBDNameCompleted;
        
        /// <remarks/>
        public event GetWWWAddressCompletedEventHandler GetWWWAddressCompleted;
        
        /// <remarks/>
        public event GetTradeTypeCompletedEventHandler GetTradeTypeCompleted;
        
        /// <remarks/>
        public event BusinessFreezeSPOACompletedEventHandler BusinessFreezeSPOACompleted;
        
        /// <remarks/>
        public event GetRoleCompletedEventHandler GetRoleCompleted;
        
        /// <remarks/>
        public event ShutRefundCompletedEventHandler ShutRefundCompleted;
        
        /// <remarks/>
        public event ApplyRefundCompletedEventHandler ApplyRefundCompleted;
        
        /// <remarks/>
        public event BusinessResumeCompletedEventHandler BusinessResumeCompleted;
        
        /// <remarks/>
        public event SuspendRefundmentCompletedEventHandler SuspendRefundmentCompleted;
        
        /// <remarks/>
        public event GetUIDFromCerNumCompletedEventHandler GetUIDFromCerNumCompleted;
        
        /// <remarks/>
        public event GetB2cReturnCountCompletedEventHandler GetB2cReturnCountCompleted;
        
        /// <remarks/>
        public event GetB2cReturnListCompletedEventHandler GetB2cReturnListCompleted;
        
        /// <remarks/>
        public event SettQueryCompletedEventHandler SettQueryCompleted;
        
        /// <remarks/>
        public event SettQueryWechatCompletedEventHandler SettQueryWechatCompleted;
        
        /// <remarks/>
        public event QueryForSelect1CompletedEventHandler QueryForSelect1Completed;
        
        /// <remarks/>
        public event QueryForSelect2_NOUSECompletedEventHandler QueryForSelect2_NOUSECompleted;
        
        /// <remarks/>
        public event QueryForSelect3CompletedEventHandler QueryForSelect3Completed;
        
        /// <remarks/>
        public event QueryForSelect4CompletedEventHandler QueryForSelect4Completed;
        
        /// <remarks/>
        public event QueryForSelect5CompletedEventHandler QueryForSelect5Completed;
        
        /// <remarks/>
        public event QueryForSelect6CompletedEventHandler QueryForSelect6Completed;
        
        /// <remarks/>
        public event QueryForSelect7CompletedEventHandler QueryForSelect7Completed;
        
        /// <remarks/>
        public event QueryForSelect8CompletedEventHandler QueryForSelect8Completed;
        
        /// <remarks/>
        public event QueryContractWechatCompletedEventHandler QueryContractWechatCompleted;
        
        /// <remarks/>
        public event TranLogIncomeSumQueryCompletedEventHandler TranLogIncomeSumQueryCompleted;
        
        /// <remarks/>
        public event GetQuerySettlementListCompletedEventHandler GetQuerySettlementListCompleted;
        
        /// <remarks/>
        public event QuerySettlementListWechatCompletedEventHandler QuerySettlementListWechatCompleted;
        
        /// <remarks/>
        public event GetQuerySettlementTodayListCompletedEventHandler GetQuerySettlementTodayListCompleted;
        
        /// <remarks/>
        public event GetQueryBalanceListCompletedEventHandler GetQueryBalanceListCompleted;
        
        /// <remarks/>
        public event QueryBalanceListWechatCompletedEventHandler QueryBalanceListWechatCompleted;
        
        /// <remarks/>
        public event GetQueryBalanceDetailListCompletedEventHandler GetQueryBalanceDetailListCompleted;
        
        /// <remarks/>
        public event QueryBalanceDetailListWechatCompletedEventHandler QueryBalanceDetailListWechatCompleted;
        
        /// <remarks/>
        public event GetReclaimRecordCompletedEventHandler GetReclaimRecordCompleted;
        
        /// <remarks/>
        public event GetQQReclaimRecordCompletedEventHandler GetQQReclaimRecordCompleted;
        
        /// <remarks/>
        public event GetBankCardBindListCompletedEventHandler GetBankCardBindListCompleted;
        
        /// <remarks/>
        public event GetBankCardBindCompletedEventHandler GetBankCardBindCompleted;
        
        /// <remarks/>
        public event GetBankCardBindList_UINCompletedEventHandler GetBankCardBindList_UINCompleted;
        
        /// <remarks/>
        public event GetBankCardBindList_UIN_2CompletedEventHandler GetBankCardBindList_UIN_2Completed;
        
        /// <remarks/>
        public event GetBankCardBindList_2CompletedEventHandler GetBankCardBindList_2Completed;
        
        /// <remarks/>
        public event UnbindBankCardCompletedEventHandler UnbindBankCardCompleted;
        
        /// <remarks/>
        public event UnbindBankCardSpecialCompletedEventHandler UnbindBankCardSpecialCompleted;
        
        /// <remarks/>
        public event GetBankCardBindList_NewCompletedEventHandler GetBankCardBindList_NewCompleted;
        
        /// <remarks/>
        public event ModifyBankCardBindCompletedEventHandler ModifyBankCardBindCompleted;
        
        /// <remarks/>
        public event SynchronBankCardBindCompletedEventHandler SynchronBankCardBindCompleted;
        
        /// <remarks/>
        public event WS_AppealDQueryCompletedEventHandler WS_AppealDQueryCompleted;
        
        /// <remarks/>
        public event WS_AppealDQueryCountCompletedEventHandler WS_AppealDQueryCountCompleted;
        
        /// <remarks/>
        public event WS_AppealSQueryCompletedEventHandler WS_AppealSQueryCompleted;
        
        /// <remarks/>
        public event getQueryDataCompletedEventHandler getQueryDataCompleted;
        
        /// <remarks/>
        public event GetCFTUserAppealListCompletedEventHandler GetCFTUserAppealListCompleted;
        
        /// <remarks/>
        public event GetCFTUserAppealListNewCompletedEventHandler GetCFTUserAppealListNewCompleted;
        
        /// <remarks/>
        public event GetCFTUserAppealListFunctionCompletedEventHandler GetCFTUserAppealListFunctionCompleted;
        
        /// <remarks/>
        public event CFTUserAppealPassCompletedEventHandler CFTUserAppealPassCompleted;
        
        /// <remarks/>
        public event GetCFTUserAppealCountCompletedEventHandler GetCFTUserAppealCountCompleted;
        
        /// <remarks/>
        public event GetCFTUserAppealCountNewCompletedEventHandler GetCFTUserAppealCountNewCompleted;
        
        /// <remarks/>
        public event GetCFTUserAppealDetailCompletedEventHandler GetCFTUserAppealDetailCompleted;
        
        /// <remarks/>
        public event GetCFTUserAppealDetail_NewCompletedEventHandler GetCFTUserAppealDetail_NewCompleted;
        
        /// <remarks/>
        public event GetCFTUserAppealDetailByDBTBCompletedEventHandler GetCFTUserAppealDetailByDBTBCompleted;
        
        /// <remarks/>
        public event GetUserAppealLockListCompletedEventHandler GetUserAppealLockListCompleted;
        
        /// <remarks/>
        public event GetUserAppealLockListDBTBCompletedEventHandler GetUserAppealLockListDBTBCompleted;
        
        /// <remarks/>
        public event GetUserAppealLockListDBTBInnrFunCompletedEventHandler GetUserAppealLockListDBTBInnrFunCompleted;
        
        /// <remarks/>
        public event GetUserAppealLockListDBTB2CompletedEventHandler GetUserAppealLockListDBTB2Completed;
        
        /// <remarks/>
        public event CFTCancelAppealCompletedEventHandler CFTCancelAppealCompleted;
        
        /// <remarks/>
        public event CFTCancelAppealDBTBCompletedEventHandler CFTCancelAppealDBTBCompleted;
        
        /// <remarks/>
        public event CFTConfirmAppealCompletedEventHandler CFTConfirmAppealCompleted;
        
        /// <remarks/>
        public event CFTConfirmAppealDBTBCompletedEventHandler CFTConfirmAppealDBTBCompleted;
        
        /// <remarks/>
        public event CFTDelAppealCompletedEventHandler CFTDelAppealCompleted;
        
        /// <remarks/>
        public event CFTDelAppealDBTBCompletedEventHandler CFTDelAppealDBTBCompleted;
        
        /// <remarks/>
        public event GetKFTotalQueryListCompletedEventHandler GetKFTotalQueryListCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event GetAppealUserInfoCompletedEventHandler GetAppealUserInfoCompleted;
        
        /// <remarks/>
        public event GetChangeQQListCompletedEventHandler GetChangeQQListCompleted;
        
        /// <remarks/>
        public event GetChangeQQListCountCompletedEventHandler GetChangeQQListCountCompleted;
        
        /// <remarks/>
        public event GetQQByTypeCompletedEventHandler GetQQByTypeCompleted;
        
        /// <remarks/>
        public event QQ2UidCompletedEventHandler QQ2UidCompleted;
        
        /// <remarks/>
        public event QQ2UidXCompletedEventHandler QQ2UidXCompleted;
        
        /// <remarks/>
        public event GetQueryListCompletedEventHandler GetQueryListCompleted;
        
        /// <remarks/>
        public event GetQueryListCountCompletedEventHandler GetQueryListCountCompleted;
        
        /// <remarks/>
        public event GetQueryListDetailCompletedEventHandler GetQueryListDetailCompleted;
        
        /// <remarks/>
        public event GetAppealListCompletedEventHandler GetAppealListCompleted;
        
        /// <remarks/>
        public event GetUserpayListCompletedEventHandler GetUserpayListCompleted;
        
        /// <remarks/>
        public event GetTransportListCompletedEventHandler GetTransportListCompleted;
        
        /// <remarks/>
        public event GetAppealQueryListCompletedEventHandler GetAppealQueryListCompleted;
        
        /// <remarks/>
        public event GetAppealListCountCompletedEventHandler GetAppealListCountCompleted;
        
        /// <remarks/>
        public event GetAppealListDetailCompletedEventHandler GetAppealListDetailCompleted;
        
        /// <remarks/>
        public event GetUserClassInfoCompletedEventHandler GetUserClassInfoCompleted;
        
        /// <remarks/>
        public event GetUserClassInfoFlagCompletedEventHandler GetUserClassInfoFlagCompleted;
        
        /// <remarks/>
        public event UserClassConfirmCompletedEventHandler UserClassConfirmCompleted;
        
        /// <remarks/>
        public event UpdateInfoFromPoliceCompletedEventHandler UpdateInfoFromPoliceCompleted;
        
        /// <remarks/>
        public event UserClassCancelCompletedEventHandler UserClassCancelCompleted;
        
        /// <remarks/>
        public event GetUserClassDeleteListCompletedEventHandler GetUserClassDeleteListCompleted;
        
        /// <remarks/>
        public event GetRefundErrorCountCompletedEventHandler GetRefundErrorCountCompleted;
        
        /// <remarks/>
        public event GetRefundErrorListCompletedEventHandler GetRefundErrorListCompleted;
        
        /// <remarks/>
        public event GetRefundErrorDetailCompletedEventHandler GetRefundErrorDetailCompleted;
        
        /// <remarks/>
        public event GetFundCardListDetailCompletedEventHandler GetFundCardListDetailCompleted;
        
        /// <remarks/>
        public event GetSettleRuleListCompletedEventHandler GetSettleRuleListCompleted;
        
        /// <remarks/>
        public event GetSettleReqListCompletedEventHandler GetSettleReqListCompleted;
        
        /// <remarks/>
        public event GetSettleReqInfoCompletedEventHandler GetSettleReqInfoCompleted;
        
        /// <remarks/>
        public event QueryAdjustListCompletedEventHandler QueryAdjustListCompleted;
        
        /// <remarks/>
        public event QuerySettleRuleListCompletedEventHandler QuerySettleRuleListCompleted;
        
        /// <remarks/>
        public event QuerySpControlCompletedEventHandler QuerySpControlCompleted;
        
        /// <remarks/>
        public event QueryRelationOrderListCompletedEventHandler QueryRelationOrderListCompleted;
        
        /// <remarks/>
        public event QuerySubOrderListCompletedEventHandler QuerySubOrderListCompleted;
        
        /// <remarks/>
        public event QueryTrueLimtListCompletedEventHandler QueryTrueLimtListCompleted;
        
        /// <remarks/>
        public event GetSettleListAppendCompletedEventHandler GetSettleListAppendCompleted;
        
        /// <remarks/>
        public event GetSettleInfoListDetailCompletedEventHandler GetSettleInfoListDetailCompleted;
        
        /// <remarks/>
        public event GetSettleRefundListDetailCompletedEventHandler GetSettleRefundListDetailCompleted;
        
        /// <remarks/>
        public event GetSpAgentRelationCompletedEventHandler GetSpAgentRelationCompleted;
        
        /// <remarks/>
        public event GetAirAdjustListCompletedEventHandler GetAirAdjustListCompleted;
        
        /// <remarks/>
        public event GetAirFreezeCompletedEventHandler GetAirFreezeCompleted;
        
        /// <remarks/>
        public event GetSettleRefundListCompletedEventHandler GetSettleRefundListCompleted;
        
        /// <remarks/>
        public event GetSeparateOperationListCompletedEventHandler GetSeparateOperationListCompleted;
        
        /// <remarks/>
        public event GetSeparateOperationDetailCompletedEventHandler GetSeparateOperationDetailCompleted;
        
        /// <remarks/>
        public event GetSeparateListForFlistidCompletedEventHandler GetSeparateListForFlistidCompleted;
        
        /// <remarks/>
        public event GetSeparateListForFspidCompletedEventHandler GetSeparateListForFspidCompleted;
        
        /// <remarks/>
        public event QueryFeeDataListCompletedEventHandler QueryFeeDataListCompleted;
        
        /// <remarks/>
        public event GetPayBusinessListCompletedEventHandler GetPayBusinessListCompleted;
        
        /// <remarks/>
        public event GetMerchantMidUidCompletedEventHandler GetMerchantMidUidCompleted;
        
        /// <remarks/>
        public event GetInsureAccountCompletedEventHandler GetInsureAccountCompleted;
        
        /// <remarks/>
        public event QuerySpidOrSpaliasCompletedEventHandler QuerySpidOrSpaliasCompleted;
        
        /// <remarks/>
        public event PaiPaiBMDListCompletedEventHandler PaiPaiBMDListCompleted;
        
        /// <remarks/>
        public event GetPayBusinessInfoCompletedEventHandler GetPayBusinessInfoCompleted;
        
        /// <remarks/>
        public event GetPayBusinessInfoListCompletedEventHandler GetPayBusinessInfoListCompleted;
        
        /// <remarks/>
        public event GetPayBusinessElseInfoCompletedEventHandler GetPayBusinessElseInfoCompleted;
        
        /// <remarks/>
        public event ModifyPayBusinessInfoCompletedEventHandler ModifyPayBusinessInfoCompleted;
        
        /// <remarks/>
        public event GetAgencyBusinessListCompletedEventHandler GetAgencyBusinessListCompleted;
        
        /// <remarks/>
        public event GetAgencyBusinessInfoCompletedEventHandler GetAgencyBusinessInfoCompleted;
        
        /// <remarks/>
        public event QueryAgencyBySpidCompletedEventHandler QueryAgencyBySpidCompleted;
        
        /// <remarks/>
        public event QueryAgencyInfoByIdCompletedEventHandler QueryAgencyInfoByIdCompleted;
        
        /// <remarks/>
        public event GetPickListCompletedEventHandler GetPickListCompleted;
        
        /// <remarks/>
        public event GetPickListDetailCompletedEventHandler GetPickListDetailCompleted;
        
        /// <remarks/>
        public event GetComplainBussListCompletedEventHandler GetComplainBussListCompleted;
        
        /// <remarks/>
        public event GetComplainBussCountCompletedEventHandler GetComplainBussCountCompleted;
        
        /// <remarks/>
        public event AddComplainBussCompletedEventHandler AddComplainBussCompleted;
        
        /// <remarks/>
        public event ChangeComplainBussCompletedEventHandler ChangeComplainBussCompleted;
        
        /// <remarks/>
        public event GetComplainBussDetailCompletedEventHandler GetComplainBussDetailCompleted;
        
        /// <remarks/>
        public event DelComplainBussCompletedEventHandler DelComplainBussCompleted;
        
        /// <remarks/>
        public event GetUserComplainListCompletedEventHandler GetUserComplainListCompleted;
        
        /// <remarks/>
        public event GetUserComplainCountCompletedEventHandler GetUserComplainCountCompleted;
        
        /// <remarks/>
        public event AddUserComplainCompletedEventHandler AddUserComplainCompleted;
        
        /// <remarks/>
        public event ChangeUserComplainCompletedEventHandler ChangeUserComplainCompleted;
        
        /// <remarks/>
        public event GetUserComplainDetailCompletedEventHandler GetUserComplainDetailCompleted;
        
        /// <remarks/>
        public event RemindUserComplainCompletedEventHandler RemindUserComplainCompleted;
        
        /// <remarks/>
        public event QueryRefundInfoCompletedEventHandler QueryRefundInfoCompleted;
        
        /// <remarks/>
        public event QueryRefundCountCompletedEventHandler QueryRefundCountCompleted;
        
        /// <remarks/>
        public event AddRefundInfoCompletedEventHandler AddRefundInfoCompleted;
        
        /// <remarks/>
        public event ChangeRefundInfoCompletedEventHandler ChangeRefundInfoCompleted;
        
        /// <remarks/>
        public event DelRefundInfoCompletedEventHandler DelRefundInfoCompleted;
        
        /// <remarks/>
        public event GetRefundDetailCompletedEventHandler GetRefundDetailCompleted;
        
        /// <remarks/>
        public event UpdateSubmitRefundStateCompletedEventHandler UpdateSubmitRefundStateCompleted;
        
        /// <remarks/>
        public event GetYTInfoListCompletedEventHandler GetYTInfoListCompleted;
        
        /// <remarks/>
        public event GetCertNumCompletedEventHandler GetCertNumCompleted;
        
        /// <remarks/>
        public event GetYTFreezeListCompletedEventHandler GetYTFreezeListCompleted;
        
        /// <remarks/>
        public event GetYTTradeListCompletedEventHandler GetYTTradeListCompleted;
        
        /// <remarks/>
        public event GetExchangeRateListCompletedEventHandler GetExchangeRateListCompleted;
        
        /// <remarks/>
        public event GetFreeFlowInfoCompletedEventHandler GetFreeFlowInfoCompleted;
        
        /// <remarks/>
        public event GetUserTypeInfoCompletedEventHandler GetUserTypeInfoCompleted;
        
        /// <remarks/>
        public event BatchWithholdReqCompletedEventHandler BatchWithholdReqCompleted;
        
        /// <remarks/>
        public event QueryProtocolBatchCompletedEventHandler QueryProtocolBatchCompleted;
        
        /// <remarks/>
        public event QueryProtocolDetailCompletedEventHandler QueryProtocolDetailCompleted;
        
        /// <remarks/>
        public event QueryKpsMD5CompletedEventHandler QueryKpsMD5Completed;
        
        /// <remarks/>
        public event QueryDiscountCodeCompletedEventHandler QueryDiscountCodeCompleted;
        
        /// <remarks/>
        public event ClearCreidCompletedEventHandler ClearCreidCompleted;
        
        /// <remarks/>
        public event GetGwqCount_newCompletedEventHandler GetGwqCount_newCompleted;
        
        /// <remarks/>
        public event GetGwq_newCompletedEventHandler GetGwq_newCompleted;
        
        /// <remarks/>
        public event GetGwqInfoCompletedEventHandler GetGwqInfoCompleted;
        
        /// <remarks/>
        public event GetGwqRollCompletedEventHandler GetGwqRollCompleted;
        
        /// <remarks/>
        public event FreezeNonPrimaryCardCompletedEventHandler FreezeNonPrimaryCardCompleted;
        
        /// <remarks/>
        public event QueryCreditRefundListCompletedEventHandler QueryCreditRefundListCompleted;
        
        /// <remarks/>
        public event QueryCreditDebtCompletedEventHandler QueryCreditDebtCompleted;
        
        /// <remarks/>
        public event QueryCreditUserInfoCompletedEventHandler QueryCreditUserInfoCompleted;
        
        /// <remarks/>
        public event QueryCreditBillListCompletedEventHandler QueryCreditBillListCompleted;
        
        /// <remarks/>
        public event QueryCreditBillDetailCompletedEventHandler QueryCreditBillDetailCompleted;
        
        /// <remarks/>
        public event QueryCapitalRollCompletedEventHandler QueryCapitalRollCompleted;
        
        /// <remarks/>
        public event GetSPOrderCompletedEventHandler GetSPOrderCompleted;
        
        /// <remarks/>
        public event QueryActivityListCompletedEventHandler QueryActivityListCompleted;
        
        /// <remarks/>
        public event QueryUserJoinActivityCompletedEventHandler QueryUserJoinActivityCompleted;
        
        /// <remarks/>
        public event QueryActivityLogsCompletedEventHandler QueryActivityLogsCompleted;
        
        /// <remarks/>
        public event QueryWebchatPayActivityCompletedEventHandler QueryWebchatPayActivityCompleted;
        
        /// <remarks/>
        public event GetMediListXCompletedEventHandler GetMediListXCompleted;
        
        /// <remarks/>
        public event GetMediListCompletedEventHandler GetMediListCompleted;
        
        /// <remarks/>
        public event GetMediListCountCompletedEventHandler GetMediListCountCompleted;
        
        /// <remarks/>
        public event GetQuickTradeListDetailCompletedEventHandler GetQuickTradeListDetailCompleted;
        
        /// <remarks/>
        public event GetFreezeList_2CompletedEventHandler GetFreezeList_2Completed;
        
        /// <remarks/>
        public event GetFreezeList_3CompletedEventHandler GetFreezeList_3Completed;
        
        /// <remarks/>
        public event GetFreezeList_NewCompletedEventHandler GetFreezeList_NewCompleted;
        
        /// <remarks/>
        public event GetFreezeListDetail_2CompletedEventHandler GetFreezeListDetail_2Completed;
        
        /// <remarks/>
        public event GetFreezeDiaryCompletedEventHandler GetFreezeDiaryCompleted;
        
        /// <remarks/>
        public event CreateFreezeDiaryCompletedEventHandler CreateFreezeDiaryCompleted;
        
        /// <remarks/>
        public event CreateFreezeDiary_2CompletedEventHandler CreateFreezeDiary_2Completed;
        
        /// <remarks/>
        public event CreateFreezeDiary_NEWCompletedEventHandler CreateFreezeDiary_NEWCompleted;
        
        /// <remarks/>
        public event AutoProcessFreezeStateDailyCompletedEventHandler AutoProcessFreezeStateDailyCompleted;
        
        /// <remarks/>
        public event UpdateFreezeDiaryCompletedEventHandler UpdateFreezeDiaryCompleted;
        
        /// <remarks/>
        public event GetFreezeListCompletedEventHandler GetFreezeListCompleted;
        
        /// <remarks/>
        public event GetExistFreezeCompletedEventHandler GetExistFreezeCompleted;
        
        /// <remarks/>
        public event CreateNewFreezeCompletedEventHandler CreateNewFreezeCompleted;
        
        /// <remarks/>
        public event UpdateFreezeInfoCompletedEventHandler UpdateFreezeInfoCompleted;
        
        /// <remarks/>
        public event GetFreezeListCountCompletedEventHandler GetFreezeListCountCompleted;
        
        /// <remarks/>
        public event GetFreezeListDetailCompletedEventHandler GetFreezeListDetailCompleted;
        
        /// <remarks/>
        public event UpdateFreezeListDetailCompletedEventHandler UpdateFreezeListDetailCompleted;
        
        /// <remarks/>
        public event QueryUserFreezeRecordCompletedEventHandler QueryUserFreezeRecordCompleted;
        
        /// <remarks/>
        public event QueryUserControledRecordCompletedEventHandler QueryUserControledRecordCompleted;
        
        /// <remarks/>
        public event QueryDkInfo_GetBankCompletedEventHandler QueryDkInfo_GetBankCompleted;
        
        /// <remarks/>
        public event QueryDkInfoCompletedEventHandler QueryDkInfoCompleted;
        
        /// <remarks/>
        public event CountDKInfoCompletedEventHandler CountDKInfoCompleted;
        
        /// <remarks/>
        public event QueryDkDetailCompletedEventHandler QueryDkDetailCompleted;
        
        /// <remarks/>
        public event QueryBatchInfoCompletedEventHandler QueryBatchInfoCompleted;
        
        /// <remarks/>
        public event CountBatchInfoCompletedEventHandler CountBatchInfoCompleted;
        
        /// <remarks/>
        public event GetCepspServiceInfoCompletedEventHandler GetCepspServiceInfoCompleted;
        
        /// <remarks/>
        public event GetGwqCompletedEventHandler GetGwqCompleted;
        
        /// <remarks/>
        public event GetGwqCountCompletedEventHandler GetGwqCountCompleted;
        
        /// <remarks/>
        public event getUserReportsCompletedEventHandler getUserReportsCompleted;
        
        /// <remarks/>
        public event getUserModifyCompletedEventHandler getUserModifyCompleted;
        
        /// <remarks/>
        public event GetChildrenInfoCompletedEventHandler GetChildrenInfoCompleted;
        
        /// <remarks/>
        public event LogOnUsercheckOrderCompletedEventHandler LogOnUsercheckOrderCompleted;
        
        /// <remarks/>
        public event LogOnUserDeleteUserCompletedEventHandler LogOnUserDeleteUserCompleted;
        
        /// <remarks/>
        public event LogOnUserCheckYDTCompletedEventHandler LogOnUserCheckYDTCompleted;
        
        /// <remarks/>
        public event GetChildrenBankRollListCompletedEventHandler GetChildrenBankRollListCompleted;
        
        /// <remarks/>
        public event GetChildrenBankRollList1CompletedEventHandler GetChildrenBankRollList1Completed;
        
        /// <remarks/>
        public event GetChildrenBankRollListExCompletedEventHandler GetChildrenBankRollListExCompleted;
        
        /// <remarks/>
        public event GetChildrenFlistListCompletedEventHandler GetChildrenFlistListCompleted;
        
        /// <remarks/>
        public event ChildrenFreezeOrUnfreezeCompletedEventHandler ChildrenFreezeOrUnfreezeCompleted;
        
        /// <remarks/>
        public event GetSysBulletinCompletedEventHandler GetSysBulletinCompleted;
        
        /// <remarks/>
        public event GetSysBankBulletinCompletedEventHandler GetSysBankBulletinCompleted;
        
        /// <remarks/>
        public event GetSysBankInterfaceCompletedEventHandler GetSysBankInterfaceCompleted;
        
        /// <remarks/>
        public event QueryBankInterfaceByIdCompletedEventHandler QueryBankInterfaceByIdCompleted;
        
        /// <remarks/>
        public event QueryBankInterfaceByObjidCompletedEventHandler QueryBankInterfaceByObjidCompleted;
        
        /// <remarks/>
        public event IsRepeatedTimeCompletedEventHandler IsRepeatedTimeCompleted;
        
        /// <remarks/>
        public event QueryBankBulletinByIdCompletedEventHandler QueryBankBulletinByIdCompleted;
        
        /// <remarks/>
        public event QueryBankBulletinInfoByObjidCompletedEventHandler QueryBankBulletinInfoByObjidCompleted;
        
        /// <remarks/>
        public event GetUtility_chargeCompletedEventHandler GetUtility_chargeCompleted;
        
        /// <remarks/>
        public event QueryUCBulletinByIdCompletedEventHandler QueryUCBulletinByIdCompleted;
        
        /// <remarks/>
        public event QueryUCBulletinInfoByObjidCompletedEventHandler QueryUCBulletinInfoByObjidCompleted;
        
        /// <remarks/>
        public event SysBulletinIssueCompletedEventHandler SysBulletinIssueCompleted;
        
        /// <remarks/>
        public event SysBulletinGoPriorCompletedEventHandler SysBulletinGoPriorCompleted;
        
        /// <remarks/>
        public event SysBulletinGoNextCompletedEventHandler SysBulletinGoNextCompleted;
        
        /// <remarks/>
        public event SysBulletinDelCompletedEventHandler SysBulletinDelCompleted;
        
        /// <remarks/>
        public event SysBulletinGoHistoryCompletedEventHandler SysBulletinGoHistoryCompleted;
        
        /// <remarks/>
        public event GetOneSysBulletinCompletedEventHandler GetOneSysBulletinCompleted;
        
        /// <remarks/>
        public event AddOneSysBulletinCompletedEventHandler AddOneSysBulletinCompleted;
        
        /// <remarks/>
        public event GetBCompletedEventHandler GetBCompleted;
        
        /// <remarks/>
        public event ChangeOneSysBulletinCompletedEventHandler ChangeOneSysBulletinCompleted;
        
        /// <remarks/>
        public event QueryBankBulletinNotUseCompletedEventHandler QueryBankBulletinNotUseCompleted;
        
        /// <remarks/>
        public event QueryBankBulletinCompletedEventHandler QueryBankBulletinCompleted;
        
        /// <remarks/>
        public event TurnBankBulletinClassCompletedEventHandler TurnBankBulletinClassCompleted;
        
        /// <remarks/>
        public event QueryBankBulletinByObjidCompletedEventHandler QueryBankBulletinByObjidCompleted;
        
        /// <remarks/>
        public event Getfbank_orderListCompletedEventHandler Getfbank_orderListCompleted;
        
        /// <remarks/>
        public event Getfbank_twoBank_orderListCompletedEventHandler Getfbank_twoBank_orderListCompleted;
        
        /// <remarks/>
        public event Synchro_StateCompletedEventHandler Synchro_StateCompleted;
        
        /// <remarks/>
        public event IsSecondPassewordCompletedEventHandler IsSecondPassewordCompleted;
        
        /// <remarks/>
        public event SuspendSecondPassewordCompletedEventHandler SuspendSecondPassewordCompleted;
        
        /// <remarks/>
        public event GetPNRSpidCompletedEventHandler GetPNRSpidCompleted;
        
        /// <remarks/>
        public event IsFastPayUserCompletedEventHandler IsFastPayUserCompleted;
        
        /// <remarks/>
        public event GetUserAccountCompletedEventHandler GetUserAccountCompleted;
        
        /// <remarks/>
        public event GetUserAccountFromWechatCompletedEventHandler GetUserAccountFromWechatCompleted;
        
        /// <remarks/>
        public event GetUserAccountCancelCompletedEventHandler GetUserAccountCancelCompleted;
        
        /// <remarks/>
        public event GetUserAccountMainCompletedEventHandler GetUserAccountMainCompleted;
        
        /// <remarks/>
        public event GetUserButtonInfoCompletedEventHandler GetUserButtonInfoCompleted;
        
        /// <remarks/>
        public event GetUserMedInfoListCompletedEventHandler GetUserMedInfoListCompleted;
        
        /// <remarks/>
        public event GetUserMedInfoCompletedEventHandler GetUserMedInfoCompleted;
        
        /// <remarks/>
        public event ResetMediPasswdCompletedEventHandler ResetMediPasswdCompleted;
        
        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
        
        /// <remarks/>
        public event GetUserBankAccountCompletedEventHandler GetUserBankAccountCompleted;
        
        /// <remarks/>
        public event GetBatchUserBankAccountCompletedEventHandler GetBatchUserBankAccountCompleted;
        
        /// <remarks/>
        public event GetPayListCompletedEventHandler GetPayListCompleted;
        
        /// <remarks/>
        public event GetManJianUsingListCompletedEventHandler GetManJianUsingListCompleted;
        
        /// <remarks/>
        public event ManJianUserListCompletedEventHandler ManJianUserListCompleted;
        
        /// <remarks/>
        public event ManJianAddOneCompletedEventHandler ManJianAddOneCompleted;
        
        /// <remarks/>
        public event GetPayListForChildrenCompletedEventHandler GetPayListForChildrenCompleted;
        
        /// <remarks/>
        public event GetPayList_ListCompletedEventHandler GetPayList_ListCompleted;
        
        /// <remarks/>
        public event GetPayList_PickCompletedEventHandler GetPayList_PickCompleted;
        
        /// <remarks/>
        public event GetBankRollListCompletedEventHandler GetBankRollListCompleted;
        
        /// <remarks/>
        public event GetBankRollList_withIDCompletedEventHandler GetBankRollList_withIDCompleted;
        
        /// <remarks/>
        public event GetUserPayListCompletedEventHandler GetUserPayListCompleted;
        
        /// <remarks/>
        public event GetUserPayList_withIDCompletedEventHandler GetUserPayList_withIDCompleted;
        
        /// <remarks/>
        public event GetTCBankAccountCompletedEventHandler GetTCBankAccountCompleted;
        
        /// <remarks/>
        public event GetTCBankRollListCompletedEventHandler GetTCBankRollListCompleted;
        
        /// <remarks/>
        public event GetBankRollListByListIdCompletedEventHandler GetBankRollListByListIdCompleted;
        
        /// <remarks/>
        public event GetFundListDetail_NewCompletedEventHandler GetFundListDetail_NewCompleted;
        
        /// <remarks/>
        public event IsNewOrderCZDataCompletedEventHandler IsNewOrderCZDataCompleted;
        
        /// <remarks/>
        public event GetTCBankPAYListCompletedEventHandler GetTCBankPAYListCompleted;
        
        /// <remarks/>
        public event GetRefundCompletedEventHandler GetRefundCompleted;
        
        /// <remarks/>
        public event GetPayListByTypeCompletedEventHandler GetPayListByTypeCompleted;
        
        /// <remarks/>
        public event returnListIDCompletedEventHandler returnListIDCompleted;
        
        /// <remarks/>
        public event ValidUserCompletedEventHandler ValidUserCompleted;
        
        /// <remarks/>
        public event GetFundListCompletedEventHandler GetFundListCompleted;
        
        /// <remarks/>
        public event GetFundListCountCompletedEventHandler GetFundListCountCompleted;
        
        /// <remarks/>
        public event GetFundListDetailCompletedEventHandler GetFundListDetailCompleted;
        
        /// <remarks/>
        public event GetFundHistoryDetailCompletedEventHandler GetFundHistoryDetailCompleted;
        
        /// <remarks/>
        public event GetPickListCountCompletedEventHandler GetPickListCountCompleted;
        
        /// <remarks/>
        public event GetFundListDetail_SubaccCompletedEventHandler GetFundListDetail_SubaccCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DeleteCrtService", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCrtService(string qqid) {
            this.Invoke("DeleteCrtService", new object[] {
                        qqid});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteCrtService(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteCrtService", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteCrtService(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteCrtServiceAsync(string qqid) {
            this.DeleteCrtServiceAsync(qqid, null);
        }
        
        /// <remarks/>
        public void DeleteCrtServiceAsync(string qqid, object userState) {
            if ((this.DeleteCrtServiceOperationCompleted == null)) {
                this.DeleteCrtServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCrtServiceOperationCompleted);
            }
            this.InvokeAsync("DeleteCrtService", new object[] {
                        qqid}, this.DeleteCrtServiceOperationCompleted, userState);
        }
        
        private void OnDeleteCrtServiceOperationCompleted(object arg) {
            if ((this.DeleteCrtServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCrtServiceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMobileTokenList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMobileTokenList(string qqid) {
            object[] results = this.Invoke("GetMobileTokenList", new object[] {
                        qqid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMobileTokenList(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMobileTokenList", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMobileTokenList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMobileTokenListAsync(string qqid) {
            this.GetMobileTokenListAsync(qqid, null);
        }
        
        /// <remarks/>
        public void GetMobileTokenListAsync(string qqid, object userState) {
            if ((this.GetMobileTokenListOperationCompleted == null)) {
                this.GetMobileTokenListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMobileTokenListOperationCompleted);
            }
            this.InvokeAsync("GetMobileTokenList", new object[] {
                        qqid}, this.GetMobileTokenListOperationCompleted, userState);
        }
        
        private void OnGetMobileTokenListOperationCompleted(object arg) {
            if ((this.GetMobileTokenListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMobileTokenListCompleted(this, new GetMobileTokenListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPhoneBillRecordByTransID", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPhoneBillRecordByTransID(string strListID, out string strOutMsg) {
            object[] results = this.Invoke("GetPhoneBillRecordByTransID", new object[] {
                        strListID});
            strOutMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPhoneBillRecordByTransID(string strListID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPhoneBillRecordByTransID", new object[] {
                        strListID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPhoneBillRecordByTransID(System.IAsyncResult asyncResult, out string strOutMsg) {
            object[] results = this.EndInvoke(asyncResult);
            strOutMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPhoneBillRecordByTransIDAsync(string strListID) {
            this.GetPhoneBillRecordByTransIDAsync(strListID, null);
        }
        
        /// <remarks/>
        public void GetPhoneBillRecordByTransIDAsync(string strListID, object userState) {
            if ((this.GetPhoneBillRecordByTransIDOperationCompleted == null)) {
                this.GetPhoneBillRecordByTransIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPhoneBillRecordByTransIDOperationCompleted);
            }
            this.InvokeAsync("GetPhoneBillRecordByTransID", new object[] {
                        strListID}, this.GetPhoneBillRecordByTransIDOperationCompleted, userState);
        }
        
        private void OnGetPhoneBillRecordByTransIDOperationCompleted(object arg) {
            if ((this.GetPhoneBillRecordByTransIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPhoneBillRecordByTransIDCompleted(this, new GetPhoneBillRecordByTransIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPhoneBillRecordByPhoneNumb" +
            "er", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPhoneBillRecordByPhoneNumber(string strPhoneNumber, out string strOutMsg) {
            object[] results = this.Invoke("GetPhoneBillRecordByPhoneNumber", new object[] {
                        strPhoneNumber});
            strOutMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPhoneBillRecordByPhoneNumber(string strPhoneNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPhoneBillRecordByPhoneNumber", new object[] {
                        strPhoneNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPhoneBillRecordByPhoneNumber(System.IAsyncResult asyncResult, out string strOutMsg) {
            object[] results = this.EndInvoke(asyncResult);
            strOutMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPhoneBillRecordByPhoneNumberAsync(string strPhoneNumber) {
            this.GetPhoneBillRecordByPhoneNumberAsync(strPhoneNumber, null);
        }
        
        /// <remarks/>
        public void GetPhoneBillRecordByPhoneNumberAsync(string strPhoneNumber, object userState) {
            if ((this.GetPhoneBillRecordByPhoneNumberOperationCompleted == null)) {
                this.GetPhoneBillRecordByPhoneNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPhoneBillRecordByPhoneNumberOperationCompleted);
            }
            this.InvokeAsync("GetPhoneBillRecordByPhoneNumber", new object[] {
                        strPhoneNumber}, this.GetPhoneBillRecordByPhoneNumberOperationCompleted, userState);
        }
        
        private void OnGetPhoneBillRecordByPhoneNumberOperationCompleted(object arg) {
            if ((this.GetPhoneBillRecordByPhoneNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPhoneBillRecordByPhoneNumberCompleted(this, new GetPhoneBillRecordByPhoneNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDKBankList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryDKBankList(string batchid, string batchid_forbank, string bank_type, string status, string starttime, string endtime, int limStart, int limMax) {
            object[] results = this.Invoke("QueryDKBankList", new object[] {
                        batchid,
                        batchid_forbank,
                        bank_type,
                        status,
                        starttime,
                        endtime,
                        limStart,
                        limMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDKBankList(string batchid, string batchid_forbank, string bank_type, string status, string starttime, string endtime, int limStart, int limMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDKBankList", new object[] {
                        batchid,
                        batchid_forbank,
                        bank_type,
                        status,
                        starttime,
                        endtime,
                        limStart,
                        limMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryDKBankList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDKBankListAsync(string batchid, string batchid_forbank, string bank_type, string status, string starttime, string endtime, int limStart, int limMax) {
            this.QueryDKBankListAsync(batchid, batchid_forbank, bank_type, status, starttime, endtime, limStart, limMax, null);
        }
        
        /// <remarks/>
        public void QueryDKBankListAsync(string batchid, string batchid_forbank, string bank_type, string status, string starttime, string endtime, int limStart, int limMax, object userState) {
            if ((this.QueryDKBankListOperationCompleted == null)) {
                this.QueryDKBankListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDKBankListOperationCompleted);
            }
            this.InvokeAsync("QueryDKBankList", new object[] {
                        batchid,
                        batchid_forbank,
                        bank_type,
                        status,
                        starttime,
                        endtime,
                        limStart,
                        limMax}, this.QueryDKBankListOperationCompleted, userState);
        }
        
        private void OnQueryDKBankListOperationCompleted(object arg) {
            if ((this.QueryDKBankListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDKBankListCompleted(this, new QueryDKBankListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CountDKBankList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CountDKBankList(string batchid, string batchid_forbank, string bank_type, string status, string starttime, string endtime) {
            object[] results = this.Invoke("CountDKBankList", new object[] {
                        batchid,
                        batchid_forbank,
                        bank_type,
                        status,
                        starttime,
                        endtime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCountDKBankList(string batchid, string batchid_forbank, string bank_type, string status, string starttime, string endtime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CountDKBankList", new object[] {
                        batchid,
                        batchid_forbank,
                        bank_type,
                        status,
                        starttime,
                        endtime}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndCountDKBankList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CountDKBankListAsync(string batchid, string batchid_forbank, string bank_type, string status, string starttime, string endtime) {
            this.CountDKBankListAsync(batchid, batchid_forbank, bank_type, status, starttime, endtime, null);
        }
        
        /// <remarks/>
        public void CountDKBankListAsync(string batchid, string batchid_forbank, string bank_type, string status, string starttime, string endtime, object userState) {
            if ((this.CountDKBankListOperationCompleted == null)) {
                this.CountDKBankListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountDKBankListOperationCompleted);
            }
            this.InvokeAsync("CountDKBankList", new object[] {
                        batchid,
                        batchid_forbank,
                        bank_type,
                        status,
                        starttime,
                        endtime}, this.CountDKBankListOperationCompleted, userState);
        }
        
        private void OnCountDKBankListOperationCompleted(object arg) {
            if ((this.CountDKBankListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountDKBankListCompleted(this, new CountDKBankListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDKBankListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryDKBankListDetail(string bank_batch_id) {
            object[] results = this.Invoke("QueryDKBankListDetail", new object[] {
                        bank_batch_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDKBankListDetail(string bank_batch_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDKBankListDetail", new object[] {
                        bank_batch_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryDKBankListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDKBankListDetailAsync(string bank_batch_id) {
            this.QueryDKBankListDetailAsync(bank_batch_id, null);
        }
        
        /// <remarks/>
        public void QueryDKBankListDetailAsync(string bank_batch_id, object userState) {
            if ((this.QueryDKBankListDetailOperationCompleted == null)) {
                this.QueryDKBankListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDKBankListDetailOperationCompleted);
            }
            this.InvokeAsync("QueryDKBankListDetail", new object[] {
                        bank_batch_id}, this.QueryDKBankListDetailOperationCompleted, userState);
        }
        
        private void OnQueryDKBankListDetailOperationCompleted(object arg) {
            if ((this.QueryDKBankListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDKBankListDetailCompleted(this, new QueryDKBankListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDKContractList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryDKContractList(string spid, string mer_cnr, string sp_batchid, string mobile, string bankacc_no, string uname, string credit_id, string mer_aid, string status, string strSTime, string strETime, int limStart, int limMax) {
            object[] results = this.Invoke("QueryDKContractList", new object[] {
                        spid,
                        mer_cnr,
                        sp_batchid,
                        mobile,
                        bankacc_no,
                        uname,
                        credit_id,
                        mer_aid,
                        status,
                        strSTime,
                        strETime,
                        limStart,
                        limMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDKContractList(string spid, string mer_cnr, string sp_batchid, string mobile, string bankacc_no, string uname, string credit_id, string mer_aid, string status, string strSTime, string strETime, int limStart, int limMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDKContractList", new object[] {
                        spid,
                        mer_cnr,
                        sp_batchid,
                        mobile,
                        bankacc_no,
                        uname,
                        credit_id,
                        mer_aid,
                        status,
                        strSTime,
                        strETime,
                        limStart,
                        limMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryDKContractList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDKContractListAsync(string spid, string mer_cnr, string sp_batchid, string mobile, string bankacc_no, string uname, string credit_id, string mer_aid, string status, string strSTime, string strETime, int limStart, int limMax) {
            this.QueryDKContractListAsync(spid, mer_cnr, sp_batchid, mobile, bankacc_no, uname, credit_id, mer_aid, status, strSTime, strETime, limStart, limMax, null);
        }
        
        /// <remarks/>
        public void QueryDKContractListAsync(string spid, string mer_cnr, string sp_batchid, string mobile, string bankacc_no, string uname, string credit_id, string mer_aid, string status, string strSTime, string strETime, int limStart, int limMax, object userState) {
            if ((this.QueryDKContractListOperationCompleted == null)) {
                this.QueryDKContractListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDKContractListOperationCompleted);
            }
            this.InvokeAsync("QueryDKContractList", new object[] {
                        spid,
                        mer_cnr,
                        sp_batchid,
                        mobile,
                        bankacc_no,
                        uname,
                        credit_id,
                        mer_aid,
                        status,
                        strSTime,
                        strETime,
                        limStart,
                        limMax}, this.QueryDKContractListOperationCompleted, userState);
        }
        
        private void OnQueryDKContractListOperationCompleted(object arg) {
            if ((this.QueryDKContractListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDKContractListCompleted(this, new QueryDKContractListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDKContractDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryDKContractDetail(string cep_cnr) {
            object[] results = this.Invoke("QueryDKContractDetail", new object[] {
                        cep_cnr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDKContractDetail(string cep_cnr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDKContractDetail", new object[] {
                        cep_cnr}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryDKContractDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDKContractDetailAsync(string cep_cnr) {
            this.QueryDKContractDetailAsync(cep_cnr, null);
        }
        
        /// <remarks/>
        public void QueryDKContractDetailAsync(string cep_cnr, object userState) {
            if ((this.QueryDKContractDetailOperationCompleted == null)) {
                this.QueryDKContractDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDKContractDetailOperationCompleted);
            }
            this.InvokeAsync("QueryDKContractDetail", new object[] {
                        cep_cnr}, this.QueryDKContractDetailOperationCompleted, userState);
        }
        
        private void OnQueryDKContractDetailOperationCompleted(object arg) {
            if ((this.QueryDKContractDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDKContractDetailCompleted(this, new QueryDKContractDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDKContractBatchList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryDKContractBatchList(string spid, string sp_batchid, string strSTime, string strETime, int limStart, int limMax) {
            object[] results = this.Invoke("QueryDKContractBatchList", new object[] {
                        spid,
                        sp_batchid,
                        strSTime,
                        strETime,
                        limStart,
                        limMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDKContractBatchList(string spid, string sp_batchid, string strSTime, string strETime, int limStart, int limMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDKContractBatchList", new object[] {
                        spid,
                        sp_batchid,
                        strSTime,
                        strETime,
                        limStart,
                        limMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryDKContractBatchList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDKContractBatchListAsync(string spid, string sp_batchid, string strSTime, string strETime, int limStart, int limMax) {
            this.QueryDKContractBatchListAsync(spid, sp_batchid, strSTime, strETime, limStart, limMax, null);
        }
        
        /// <remarks/>
        public void QueryDKContractBatchListAsync(string spid, string sp_batchid, string strSTime, string strETime, int limStart, int limMax, object userState) {
            if ((this.QueryDKContractBatchListOperationCompleted == null)) {
                this.QueryDKContractBatchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDKContractBatchListOperationCompleted);
            }
            this.InvokeAsync("QueryDKContractBatchList", new object[] {
                        spid,
                        sp_batchid,
                        strSTime,
                        strETime,
                        limStart,
                        limMax}, this.QueryDKContractBatchListOperationCompleted, userState);
        }
        
        private void OnQueryDKContractBatchListOperationCompleted(object arg) {
            if ((this.QueryDKContractBatchListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDKContractBatchListCompleted(this, new QueryDKContractBatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDKContractBatchDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryDKContractBatchDetail(string batchid) {
            object[] results = this.Invoke("QueryDKContractBatchDetail", new object[] {
                        batchid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDKContractBatchDetail(string batchid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDKContractBatchDetail", new object[] {
                        batchid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryDKContractBatchDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDKContractBatchDetailAsync(string batchid) {
            this.QueryDKContractBatchDetailAsync(batchid, null);
        }
        
        /// <remarks/>
        public void QueryDKContractBatchDetailAsync(string batchid, object userState) {
            if ((this.QueryDKContractBatchDetailOperationCompleted == null)) {
                this.QueryDKContractBatchDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDKContractBatchDetailOperationCompleted);
            }
            this.InvokeAsync("QueryDKContractBatchDetail", new object[] {
                        batchid}, this.QueryDKContractBatchDetailOperationCompleted, userState);
        }
        
        private void OnQueryDKContractBatchDetailOperationCompleted(object arg) {
            if ((this.QueryDKContractBatchDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDKContractBatchDetailCompleted(this, new QueryDKContractBatchDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDKLimit_List", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDKLimit_List(string banktype, string bankaccno, int limStart, int limMax) {
            object[] results = this.Invoke("GetDKLimit_List", new object[] {
                        banktype,
                        bankaccno,
                        limStart,
                        limMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDKLimit_List(string banktype, string bankaccno, int limStart, int limMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDKLimit_List", new object[] {
                        banktype,
                        bankaccno,
                        limStart,
                        limMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDKLimit_List(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDKLimit_ListAsync(string banktype, string bankaccno, int limStart, int limMax) {
            this.GetDKLimit_ListAsync(banktype, bankaccno, limStart, limMax, null);
        }
        
        /// <remarks/>
        public void GetDKLimit_ListAsync(string banktype, string bankaccno, int limStart, int limMax, object userState) {
            if ((this.GetDKLimit_ListOperationCompleted == null)) {
                this.GetDKLimit_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDKLimit_ListOperationCompleted);
            }
            this.InvokeAsync("GetDKLimit_List", new object[] {
                        banktype,
                        bankaccno,
                        limStart,
                        limMax}, this.GetDKLimit_ListOperationCompleted, userState);
        }
        
        private void OnGetDKLimit_ListOperationCompleted(object arg) {
            if ((this.GetDKLimit_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDKLimit_ListCompleted(this, new GetDKLimit_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDKLimit_Detail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDKLimit_Detail(string banktype, string bankaccno, string servicecode) {
            object[] results = this.Invoke("GetDKLimit_Detail", new object[] {
                        banktype,
                        bankaccno,
                        servicecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDKLimit_Detail(string banktype, string bankaccno, string servicecode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDKLimit_Detail", new object[] {
                        banktype,
                        bankaccno,
                        servicecode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDKLimit_Detail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDKLimit_DetailAsync(string banktype, string bankaccno, string servicecode) {
            this.GetDKLimit_DetailAsync(banktype, bankaccno, servicecode, null);
        }
        
        /// <remarks/>
        public void GetDKLimit_DetailAsync(string banktype, string bankaccno, string servicecode, object userState) {
            if ((this.GetDKLimit_DetailOperationCompleted == null)) {
                this.GetDKLimit_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDKLimit_DetailOperationCompleted);
            }
            this.InvokeAsync("GetDKLimit_Detail", new object[] {
                        banktype,
                        bankaccno,
                        servicecode}, this.GetDKLimit_DetailOperationCompleted, userState);
        }
        
        private void OnGetDKLimit_DetailOperationCompleted(object arg) {
            if ((this.GetDKLimit_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDKLimit_DetailCompleted(this, new GetDKLimit_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDKService_List", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDKService_List(string bankacc_limit, string spid, string code, int limStart, int limMax) {
            object[] results = this.Invoke("GetDKService_List", new object[] {
                        bankacc_limit,
                        spid,
                        code,
                        limStart,
                        limMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDKService_List(string bankacc_limit, string spid, string code, int limStart, int limMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDKService_List", new object[] {
                        bankacc_limit,
                        spid,
                        code,
                        limStart,
                        limMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDKService_List(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDKService_ListAsync(string bankacc_limit, string spid, string code, int limStart, int limMax) {
            this.GetDKService_ListAsync(bankacc_limit, spid, code, limStart, limMax, null);
        }
        
        /// <remarks/>
        public void GetDKService_ListAsync(string bankacc_limit, string spid, string code, int limStart, int limMax, object userState) {
            if ((this.GetDKService_ListOperationCompleted == null)) {
                this.GetDKService_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDKService_ListOperationCompleted);
            }
            this.InvokeAsync("GetDKService_List", new object[] {
                        bankacc_limit,
                        spid,
                        code,
                        limStart,
                        limMax}, this.GetDKService_ListOperationCompleted, userState);
        }
        
        private void OnGetDKService_ListOperationCompleted(object arg) {
            if ((this.GetDKService_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDKService_ListCompleted(this, new GetDKService_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDKService_Detail9999", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDKService_Detail9999(string spid) {
            object[] results = this.Invoke("GetDKService_Detail9999", new object[] {
                        spid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDKService_Detail9999(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDKService_Detail9999", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDKService_Detail9999(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDKService_Detail9999Async(string spid) {
            this.GetDKService_Detail9999Async(spid, null);
        }
        
        /// <remarks/>
        public void GetDKService_Detail9999Async(string spid, object userState) {
            if ((this.GetDKService_Detail9999OperationCompleted == null)) {
                this.GetDKService_Detail9999OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDKService_Detail9999OperationCompleted);
            }
            this.InvokeAsync("GetDKService_Detail9999", new object[] {
                        spid}, this.GetDKService_Detail9999OperationCompleted, userState);
        }
        
        private void OnGetDKService_Detail9999OperationCompleted(object arg) {
            if ((this.GetDKService_Detail9999Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDKService_Detail9999Completed(this, new GetDKService_Detail9999CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDKService_SPServiceDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDKService_SPServiceDetail(string servicecode) {
            object[] results = this.Invoke("GetDKService_SPServiceDetail", new object[] {
                        servicecode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDKService_SPServiceDetail(string servicecode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDKService_SPServiceDetail", new object[] {
                        servicecode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDKService_SPServiceDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDKService_SPServiceDetailAsync(string servicecode) {
            this.GetDKService_SPServiceDetailAsync(servicecode, null);
        }
        
        /// <remarks/>
        public void GetDKService_SPServiceDetailAsync(string servicecode, object userState) {
            if ((this.GetDKService_SPServiceDetailOperationCompleted == null)) {
                this.GetDKService_SPServiceDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDKService_SPServiceDetailOperationCompleted);
            }
            this.InvokeAsync("GetDKService_SPServiceDetail", new object[] {
                        servicecode}, this.GetDKService_SPServiceDetailOperationCompleted, userState);
        }
        
        private void OnGetDKService_SPServiceDetailOperationCompleted(object arg) {
            if ((this.GetDKService_SPServiceDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDKService_SPServiceDetailCompleted(this, new GetDKService_SPServiceDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCFTMember", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCFTMember(string account) {
            object[] results = this.Invoke("QueryCFTMember", new object[] {
                        account});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCFTMember(string account, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCFTMember", new object[] {
                        account}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryCFTMember(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCFTMemberAsync(string account) {
            this.QueryCFTMemberAsync(account, null);
        }
        
        /// <remarks/>
        public void QueryCFTMemberAsync(string account, object userState) {
            if ((this.QueryCFTMemberOperationCompleted == null)) {
                this.QueryCFTMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCFTMemberOperationCompleted);
            }
            this.InvokeAsync("QueryCFTMember", new object[] {
                        account}, this.QueryCFTMemberOperationCompleted, userState);
        }
        
        private void OnQueryCFTMemberOperationCompleted(object arg) {
            if ((this.QueryCFTMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCFTMemberCompleted(this, new QueryCFTMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCFTMemberAdvanced", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCFTMemberAdvanced(string account) {
            object[] results = this.Invoke("QueryCFTMemberAdvanced", new object[] {
                        account});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCFTMemberAdvanced(string account, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCFTMemberAdvanced", new object[] {
                        account}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryCFTMemberAdvanced(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCFTMemberAdvancedAsync(string account) {
            this.QueryCFTMemberAdvancedAsync(account, null);
        }
        
        /// <remarks/>
        public void QueryCFTMemberAdvancedAsync(string account, object userState) {
            if ((this.QueryCFTMemberAdvancedOperationCompleted == null)) {
                this.QueryCFTMemberAdvancedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCFTMemberAdvancedOperationCompleted);
            }
            this.InvokeAsync("QueryCFTMemberAdvanced", new object[] {
                        account}, this.QueryCFTMemberAdvancedOperationCompleted, userState);
        }
        
        private void OnQueryCFTMemberAdvancedOperationCompleted(object arg) {
            if ((this.QueryCFTMemberAdvancedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCFTMemberAdvancedCompleted(this, new QueryCFTMemberAdvancedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTurnover", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryTurnover(string account, string order, string begin, string end) {
            object[] results = this.Invoke("QueryTurnover", new object[] {
                        account,
                        order,
                        begin,
                        end});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTurnover(string account, string order, string begin, string end, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTurnover", new object[] {
                        account,
                        order,
                        begin,
                        end}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryTurnover(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTurnoverAsync(string account, string order, string begin, string end) {
            this.QueryTurnoverAsync(account, order, begin, end, null);
        }
        
        /// <remarks/>
        public void QueryTurnoverAsync(string account, string order, string begin, string end, object userState) {
            if ((this.QueryTurnoverOperationCompleted == null)) {
                this.QueryTurnoverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTurnoverOperationCompleted);
            }
            this.InvokeAsync("QueryTurnover", new object[] {
                        account,
                        order,
                        begin,
                        end}, this.QueryTurnoverOperationCompleted, userState);
        }
        
        private void OnQueryTurnoverOperationCompleted(object arg) {
            if ((this.QueryTurnoverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTurnoverCompleted(this, new QueryTurnoverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankCardBind", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBankCardBind(string account) {
            object[] results = this.Invoke("QueryBankCardBind", new object[] {
                        account});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankCardBind(string account, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankCardBind", new object[] {
                        account}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryBankCardBind(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankCardBindAsync(string account) {
            this.QueryBankCardBindAsync(account, null);
        }
        
        /// <remarks/>
        public void QueryBankCardBindAsync(string account, object userState) {
            if ((this.QueryBankCardBindOperationCompleted == null)) {
                this.QueryBankCardBindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankCardBindOperationCompleted);
            }
            this.InvokeAsync("QueryBankCardBind", new object[] {
                        account}, this.QueryBankCardBindOperationCompleted, userState);
        }
        
        private void OnQueryBankCardBindOperationCompleted(object arg) {
            if ((this.QueryBankCardBindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankCardBindCompleted(this, new QueryBankCardBindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankCardTransaction", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBankCardTransaction(string account) {
            object[] results = this.Invoke("QueryBankCardTransaction", new object[] {
                        account});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankCardTransaction(string account, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankCardTransaction", new object[] {
                        account}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryBankCardTransaction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankCardTransactionAsync(string account) {
            this.QueryBankCardTransactionAsync(account, null);
        }
        
        /// <remarks/>
        public void QueryBankCardTransactionAsync(string account, object userState) {
            if ((this.QueryBankCardTransactionOperationCompleted == null)) {
                this.QueryBankCardTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankCardTransactionOperationCompleted);
            }
            this.InvokeAsync("QueryBankCardTransaction", new object[] {
                        account}, this.QueryBankCardTransactionOperationCompleted, userState);
        }
        
        private void OnQueryBankCardTransactionOperationCompleted(object arg) {
            if ((this.QueryBankCardTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankCardTransactionCompleted(this, new QueryBankCardTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankCardInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBankCardInfo(string cardNumber) {
            object[] results = this.Invoke("QueryBankCardInfo", new object[] {
                        cardNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankCardInfo(string cardNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankCardInfo", new object[] {
                        cardNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryBankCardInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankCardInfoAsync(string cardNumber) {
            this.QueryBankCardInfoAsync(cardNumber, null);
        }
        
        /// <remarks/>
        public void QueryBankCardInfoAsync(string cardNumber, object userState) {
            if ((this.QueryBankCardInfoOperationCompleted == null)) {
                this.QueryBankCardInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankCardInfoOperationCompleted);
            }
            this.InvokeAsync("QueryBankCardInfo", new object[] {
                        cardNumber}, this.QueryBankCardInfoOperationCompleted, userState);
        }
        
        private void OnQueryBankCardInfoOperationCompleted(object arg) {
            if ((this.QueryBankCardInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankCardInfoCompleted(this, new QueryBankCardInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryForeignCardInfoByOrder", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryForeignCardInfoByOrder(string order, string condition) {
            object[] results = this.Invoke("QueryForeignCardInfoByOrder", new object[] {
                        order,
                        condition});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryForeignCardInfoByOrder(string order, string condition, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryForeignCardInfoByOrder", new object[] {
                        order,
                        condition}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryForeignCardInfoByOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryForeignCardInfoByOrderAsync(string order, string condition) {
            this.QueryForeignCardInfoByOrderAsync(order, condition, null);
        }
        
        /// <remarks/>
        public void QueryForeignCardInfoByOrderAsync(string order, string condition, object userState) {
            if ((this.QueryForeignCardInfoByOrderOperationCompleted == null)) {
                this.QueryForeignCardInfoByOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryForeignCardInfoByOrderOperationCompleted);
            }
            this.InvokeAsync("QueryForeignCardInfoByOrder", new object[] {
                        order,
                        condition}, this.QueryForeignCardInfoByOrderOperationCompleted, userState);
        }
        
        private void OnQueryForeignCardInfoByOrderOperationCompleted(object arg) {
            if ((this.QueryForeignCardInfoByOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryForeignCardInfoByOrderCompleted(this, new QueryForeignCardInfoByOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryForeignCardInfoByMerchan" +
            "t", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryForeignCardInfoByMerchant(string merchant, string condition) {
            object[] results = this.Invoke("QueryForeignCardInfoByMerchant", new object[] {
                        merchant,
                        condition});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryForeignCardInfoByMerchant(string merchant, string condition, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryForeignCardInfoByMerchant", new object[] {
                        merchant,
                        condition}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryForeignCardInfoByMerchant(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryForeignCardInfoByMerchantAsync(string merchant, string condition) {
            this.QueryForeignCardInfoByMerchantAsync(merchant, condition, null);
        }
        
        /// <remarks/>
        public void QueryForeignCardInfoByMerchantAsync(string merchant, string condition, object userState) {
            if ((this.QueryForeignCardInfoByMerchantOperationCompleted == null)) {
                this.QueryForeignCardInfoByMerchantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryForeignCardInfoByMerchantOperationCompleted);
            }
            this.InvokeAsync("QueryForeignCardInfoByMerchant", new object[] {
                        merchant,
                        condition}, this.QueryForeignCardInfoByMerchantOperationCompleted, userState);
        }
        
        private void OnQueryForeignCardInfoByMerchantOperationCompleted(object arg) {
            if ((this.QueryForeignCardInfoByMerchantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryForeignCardInfoByMerchantCompleted(this, new QueryForeignCardInfoByMerchantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryForeignCardInfoByBankOrd" +
            "er", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryForeignCardInfoByBankOrder(string year, string condition) {
            object[] results = this.Invoke("QueryForeignCardInfoByBankOrder", new object[] {
                        year,
                        condition});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryForeignCardInfoByBankOrder(string year, string condition, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryForeignCardInfoByBankOrder", new object[] {
                        year,
                        condition}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryForeignCardInfoByBankOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryForeignCardInfoByBankOrderAsync(string year, string condition) {
            this.QueryForeignCardInfoByBankOrderAsync(year, condition, null);
        }
        
        /// <remarks/>
        public void QueryForeignCardInfoByBankOrderAsync(string year, string condition, object userState) {
            if ((this.QueryForeignCardInfoByBankOrderOperationCompleted == null)) {
                this.QueryForeignCardInfoByBankOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryForeignCardInfoByBankOrderOperationCompleted);
            }
            this.InvokeAsync("QueryForeignCardInfoByBankOrder", new object[] {
                        year,
                        condition}, this.QueryForeignCardInfoByBankOrderOperationCompleted, userState);
        }
        
        private void OnQueryForeignCardInfoByBankOrderOperationCompleted(object arg) {
            if ((this.QueryForeignCardInfoByBankOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryForeignCardInfoByBankOrderCompleted(this, new QueryForeignCardInfoByBankOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBalance", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetUserBalance(string qqid, int curtype, out string Msg) {
            object[] results = this.Invoke("GetUserBalance", new object[] {
                        qqid,
                        curtype});
            Msg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBalance(string qqid, int curtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBalance", new object[] {
                        qqid,
                        curtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public long EndGetUserBalance(System.IAsyncResult asyncResult, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            Msg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBalanceAsync(string qqid, int curtype) {
            this.GetUserBalanceAsync(qqid, curtype, null);
        }
        
        /// <remarks/>
        public void GetUserBalanceAsync(string qqid, int curtype, object userState) {
            if ((this.GetUserBalanceOperationCompleted == null)) {
                this.GetUserBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBalanceOperationCompleted);
            }
            this.InvokeAsync("GetUserBalance", new object[] {
                        qqid,
                        curtype}, this.GetUserBalanceOperationCompleted, userState);
        }
        
        private void OnGetUserBalanceOperationCompleted(object arg) {
            if ((this.GetUserBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBalanceCompleted(this, new GetUserBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBalanceByUId", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetUserBalanceByUId(string fuid, int curtype, out string Msg) {
            object[] results = this.Invoke("GetUserBalanceByUId", new object[] {
                        fuid,
                        curtype});
            Msg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBalanceByUId(string fuid, int curtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBalanceByUId", new object[] {
                        fuid,
                        curtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public long EndGetUserBalanceByUId(System.IAsyncResult asyncResult, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            Msg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBalanceByUIdAsync(string fuid, int curtype) {
            this.GetUserBalanceByUIdAsync(fuid, curtype, null);
        }
        
        /// <remarks/>
        public void GetUserBalanceByUIdAsync(string fuid, int curtype, object userState) {
            if ((this.GetUserBalanceByUIdOperationCompleted == null)) {
                this.GetUserBalanceByUIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBalanceByUIdOperationCompleted);
            }
            this.InvokeAsync("GetUserBalanceByUId", new object[] {
                        fuid,
                        curtype}, this.GetUserBalanceByUIdOperationCompleted, userState);
        }
        
        private void OnGetUserBalanceByUIdOperationCompleted(object arg) {
            if ((this.GetUserBalanceByUIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBalanceByUIdCompleted(this, new GetUserBalanceByUIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryMobilRecharge", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryMobilRecharge(string account, string begin, string end, int index) {
            object[] results = this.Invoke("QueryMobilRecharge", new object[] {
                        account,
                        begin,
                        end,
                        index});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryMobilRecharge(string account, string begin, string end, int index, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryMobilRecharge", new object[] {
                        account,
                        begin,
                        end,
                        index}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryMobilRecharge(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryMobilRechargeAsync(string account, string begin, string end, int index) {
            this.QueryMobilRechargeAsync(account, begin, end, index, null);
        }
        
        /// <remarks/>
        public void QueryMobilRechargeAsync(string account, string begin, string end, int index, object userState) {
            if ((this.QueryMobilRechargeOperationCompleted == null)) {
                this.QueryMobilRechargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMobilRechargeOperationCompleted);
            }
            this.InvokeAsync("QueryMobilRecharge", new object[] {
                        account,
                        begin,
                        end,
                        index}, this.QueryMobilRechargeOperationCompleted, userState);
        }
        
        private void OnQueryMobilRechargeOperationCompleted(object arg) {
            if ((this.QueryMobilRechargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMobilRechargeCompleted(this, new QueryMobilRechargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryMobilRechargeOrder", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryMobilRechargeOrder(string order) {
            object[] results = this.Invoke("QueryMobilRechargeOrder", new object[] {
                        order});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryMobilRechargeOrder(string order, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryMobilRechargeOrder", new object[] {
                        order}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryMobilRechargeOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryMobilRechargeOrderAsync(string order) {
            this.QueryMobilRechargeOrderAsync(order, null);
        }
        
        /// <remarks/>
        public void QueryMobilRechargeOrderAsync(string order, object userState) {
            if ((this.QueryMobilRechargeOrderOperationCompleted == null)) {
                this.QueryMobilRechargeOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMobilRechargeOrderOperationCompleted);
            }
            this.InvokeAsync("QueryMobilRechargeOrder", new object[] {
                        order}, this.QueryMobilRechargeOrderOperationCompleted, userState);
        }
        
        private void OnQueryMobilRechargeOrderOperationCompleted(object arg) {
            if ((this.QueryMobilRechargeOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMobilRechargeOrderCompleted(this, new QueryMobilRechargeOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QuerySupplierValidDate", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QuerySupplierValidDate() {
            object[] results = this.Invoke("QuerySupplierValidDate", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQuerySupplierValidDate(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QuerySupplierValidDate", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQuerySupplierValidDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySupplierValidDateAsync() {
            this.QuerySupplierValidDateAsync(null);
        }
        
        /// <remarks/>
        public void QuerySupplierValidDateAsync(object userState) {
            if ((this.QuerySupplierValidDateOperationCompleted == null)) {
                this.QuerySupplierValidDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySupplierValidDateOperationCompleted);
            }
            this.InvokeAsync("QuerySupplierValidDate", new object[0], this.QuerySupplierValidDateOperationCompleted, userState);
        }
        
        private void OnQuerySupplierValidDateOperationCompleted(object arg) {
            if ((this.QuerySupplierValidDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySupplierValidDateCompleted(this, new QuerySupplierValidDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QuerySupplierName", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QuerySupplierName() {
            object[] results = this.Invoke("QuerySupplierName", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQuerySupplierName(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QuerySupplierName", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQuerySupplierName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySupplierNameAsync() {
            this.QuerySupplierNameAsync(null);
        }
        
        /// <remarks/>
        public void QuerySupplierNameAsync(object userState) {
            if ((this.QuerySupplierNameOperationCompleted == null)) {
                this.QuerySupplierNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySupplierNameOperationCompleted);
            }
            this.InvokeAsync("QuerySupplierName", new object[0], this.QuerySupplierNameOperationCompleted, userState);
        }
        
        private void OnQuerySupplierNameOperationCompleted(object arg) {
            if ((this.QuerySupplierNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySupplierNameCompleted(this, new QuerySupplierNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UpdateSupplierVaildDate", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateSupplierVaildDate(string supplierID, System.DateTime start, System.DateTime end) {
            object[] results = this.Invoke("UpdateSupplierVaildDate", new object[] {
                        supplierID,
                        start,
                        end});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSupplierVaildDate(string supplierID, System.DateTime start, System.DateTime end, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSupplierVaildDate", new object[] {
                        supplierID,
                        start,
                        end}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateSupplierVaildDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSupplierVaildDateAsync(string supplierID, System.DateTime start, System.DateTime end) {
            this.UpdateSupplierVaildDateAsync(supplierID, start, end, null);
        }
        
        /// <remarks/>
        public void UpdateSupplierVaildDateAsync(string supplierID, System.DateTime start, System.DateTime end, object userState) {
            if ((this.UpdateSupplierVaildDateOperationCompleted == null)) {
                this.UpdateSupplierVaildDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSupplierVaildDateOperationCompleted);
            }
            this.InvokeAsync("UpdateSupplierVaildDate", new object[] {
                        supplierID,
                        start,
                        end}, this.UpdateSupplierVaildDateOperationCompleted, userState);
        }
        
        private void OnUpdateSupplierVaildDateOperationCompleted(object arg) {
            if ((this.UpdateSupplierVaildDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSupplierVaildDateCompleted(this, new UpdateSupplierVaildDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryMobilProduct", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryMobilProduct() {
            object[] results = this.Invoke("QueryMobilProduct", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryMobilProduct(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryMobilProduct", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryMobilProduct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryMobilProductAsync() {
            this.QueryMobilProductAsync(null);
        }
        
        /// <remarks/>
        public void QueryMobilProductAsync(object userState) {
            if ((this.QueryMobilProductOperationCompleted == null)) {
                this.QueryMobilProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMobilProductOperationCompleted);
            }
            this.InvokeAsync("QueryMobilProduct", new object[0], this.QueryMobilProductOperationCompleted, userState);
        }
        
        private void OnQueryMobilProductOperationCompleted(object arg) {
            if ((this.QueryMobilProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMobilProductCompleted(this, new QueryMobilProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryOneMobilProduct", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryOneMobilProduct(string cardType, string cardValue) {
            object[] results = this.Invoke("QueryOneMobilProduct", new object[] {
                        cardType,
                        cardValue});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryOneMobilProduct(string cardType, string cardValue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryOneMobilProduct", new object[] {
                        cardType,
                        cardValue}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryOneMobilProduct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryOneMobilProductAsync(string cardType, string cardValue) {
            this.QueryOneMobilProductAsync(cardType, cardValue, null);
        }
        
        /// <remarks/>
        public void QueryOneMobilProductAsync(string cardType, string cardValue, object userState) {
            if ((this.QueryOneMobilProductOperationCompleted == null)) {
                this.QueryOneMobilProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryOneMobilProductOperationCompleted);
            }
            this.InvokeAsync("QueryOneMobilProduct", new object[] {
                        cardType,
                        cardValue}, this.QueryOneMobilProductOperationCompleted, userState);
        }
        
        private void OnQueryOneMobilProductOperationCompleted(object arg) {
            if ((this.QueryOneMobilProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryOneMobilProductCompleted(this, new QueryOneMobilProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UpdateMobileProduct", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateMobileProduct(string cardType, string cardValue, string min, string max, string supplierID) {
            object[] results = this.Invoke("UpdateMobileProduct", new object[] {
                        cardType,
                        cardValue,
                        min,
                        max,
                        supplierID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateMobileProduct(string cardType, string cardValue, string min, string max, string supplierID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateMobileProduct", new object[] {
                        cardType,
                        cardValue,
                        min,
                        max,
                        supplierID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateMobileProduct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMobileProductAsync(string cardType, string cardValue, string min, string max, string supplierID) {
            this.UpdateMobileProductAsync(cardType, cardValue, min, max, supplierID, null);
        }
        
        /// <remarks/>
        public void UpdateMobileProductAsync(string cardType, string cardValue, string min, string max, string supplierID, object userState) {
            if ((this.UpdateMobileProductOperationCompleted == null)) {
                this.UpdateMobileProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMobileProductOperationCompleted);
            }
            this.InvokeAsync("UpdateMobileProduct", new object[] {
                        cardType,
                        cardValue,
                        min,
                        max,
                        supplierID}, this.UpdateMobileProductOperationCompleted, userState);
        }
        
        private void OnUpdateMobileProductOperationCompleted(object arg) {
            if ((this.UpdateMobileProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMobileProductCompleted(this, new UpdateMobileProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DeleteMobileProduct", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMobileProduct(string cardType, string cardValue) {
            object[] results = this.Invoke("DeleteMobileProduct", new object[] {
                        cardType,
                        cardValue});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteMobileProduct(string cardType, string cardValue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteMobileProduct", new object[] {
                        cardType,
                        cardValue}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDeleteMobileProduct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMobileProductAsync(string cardType, string cardValue) {
            this.DeleteMobileProductAsync(cardType, cardValue, null);
        }
        
        /// <remarks/>
        public void DeleteMobileProductAsync(string cardType, string cardValue, object userState) {
            if ((this.DeleteMobileProductOperationCompleted == null)) {
                this.DeleteMobileProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMobileProductOperationCompleted);
            }
            this.InvokeAsync("DeleteMobileProduct", new object[] {
                        cardType,
                        cardValue}, this.DeleteMobileProductOperationCompleted, userState);
        }
        
        private void OnDeleteMobileProductOperationCompleted(object arg) {
            if ((this.DeleteMobileProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMobileProductCompleted(this, new DeleteMobileProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DK_BatchSelect", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DK_BatchSelect(object[] al, string UserName, out string batchid, out string msg) {
            object[] results = this.Invoke("DK_BatchSelect", new object[] {
                        al,
                        UserName});
            batchid = ((string)(results[1]));
            msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDK_BatchSelect(object[] al, string UserName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DK_BatchSelect", new object[] {
                        al,
                        UserName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDK_BatchSelect(System.IAsyncResult asyncResult, out string batchid, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            batchid = ((string)(results[1]));
            msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DK_BatchSelectAsync(object[] al, string UserName) {
            this.DK_BatchSelectAsync(al, UserName, null);
        }
        
        /// <remarks/>
        public void DK_BatchSelectAsync(object[] al, string UserName, object userState) {
            if ((this.DK_BatchSelectOperationCompleted == null)) {
                this.DK_BatchSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDK_BatchSelectOperationCompleted);
            }
            this.InvokeAsync("DK_BatchSelect", new object[] {
                        al,
                        UserName}, this.DK_BatchSelectOperationCompleted, userState);
        }
        
        private void OnDK_BatchSelectOperationCompleted(object arg) {
            if ((this.DK_BatchSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DK_BatchSelectCompleted(this, new DK_BatchSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DK_FileSelect", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DK_FileSelect(object[] al, string UserName, out string batchid, out string msg) {
            object[] results = this.Invoke("DK_FileSelect", new object[] {
                        al,
                        UserName});
            batchid = ((string)(results[1]));
            msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDK_FileSelect(object[] al, string UserName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DK_FileSelect", new object[] {
                        al,
                        UserName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDK_FileSelect(System.IAsyncResult asyncResult, out string batchid, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            batchid = ((string)(results[1]));
            msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DK_FileSelectAsync(object[] al, string UserName) {
            this.DK_FileSelectAsync(al, UserName, null);
        }
        
        /// <remarks/>
        public void DK_FileSelectAsync(object[] al, string UserName, object userState) {
            if ((this.DK_FileSelectOperationCompleted == null)) {
                this.DK_FileSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDK_FileSelectOperationCompleted);
            }
            this.InvokeAsync("DK_FileSelect", new object[] {
                        al,
                        UserName}, this.DK_FileSelectOperationCompleted, userState);
        }
        
        private void OnDK_FileSelectOperationCompleted(object arg) {
            if ((this.DK_FileSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DK_FileSelectCompleted(this, new DK_FileSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DK_QueryCheckBatchAllDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DK_QueryCheckBatchAllDetail(string batchid) {
            object[] results = this.Invoke("DK_QueryCheckBatchAllDetail", new object[] {
                        batchid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDK_QueryCheckBatchAllDetail(string batchid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DK_QueryCheckBatchAllDetail", new object[] {
                        batchid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndDK_QueryCheckBatchAllDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DK_QueryCheckBatchAllDetailAsync(string batchid) {
            this.DK_QueryCheckBatchAllDetailAsync(batchid, null);
        }
        
        /// <remarks/>
        public void DK_QueryCheckBatchAllDetailAsync(string batchid, object userState) {
            if ((this.DK_QueryCheckBatchAllDetailOperationCompleted == null)) {
                this.DK_QueryCheckBatchAllDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDK_QueryCheckBatchAllDetailOperationCompleted);
            }
            this.InvokeAsync("DK_QueryCheckBatchAllDetail", new object[] {
                        batchid}, this.DK_QueryCheckBatchAllDetailOperationCompleted, userState);
        }
        
        private void OnDK_QueryCheckBatchAllDetailOperationCompleted(object arg) {
            if ((this.DK_QueryCheckBatchAllDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DK_QueryCheckBatchAllDetailCompleted(this, new DK_QueryCheckBatchAllDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DK_QueryCheckBatchSumAmount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long DK_QueryCheckBatchSumAmount(string batchid) {
            object[] results = this.Invoke("DK_QueryCheckBatchSumAmount", new object[] {
                        batchid});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDK_QueryCheckBatchSumAmount(string batchid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DK_QueryCheckBatchSumAmount", new object[] {
                        batchid}, callback, asyncState);
        }
        
        /// <remarks/>
        public long EndDK_QueryCheckBatchSumAmount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void DK_QueryCheckBatchSumAmountAsync(string batchid) {
            this.DK_QueryCheckBatchSumAmountAsync(batchid, null);
        }
        
        /// <remarks/>
        public void DK_QueryCheckBatchSumAmountAsync(string batchid, object userState) {
            if ((this.DK_QueryCheckBatchSumAmountOperationCompleted == null)) {
                this.DK_QueryCheckBatchSumAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDK_QueryCheckBatchSumAmountOperationCompleted);
            }
            this.InvokeAsync("DK_QueryCheckBatchSumAmount", new object[] {
                        batchid}, this.DK_QueryCheckBatchSumAmountOperationCompleted, userState);
        }
        
        private void OnDK_QueryCheckBatchSumAmountOperationCompleted(object arg) {
            if ((this.DK_QueryCheckBatchSumAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DK_QueryCheckBatchSumAmountCompleted(this, new DK_QueryCheckBatchSumAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DK_QueryCheckInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DK_QueryCheckInfo(string batchid) {
            object[] results = this.Invoke("DK_QueryCheckInfo", new object[] {
                        batchid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDK_QueryCheckInfo(string batchid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DK_QueryCheckInfo", new object[] {
                        batchid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndDK_QueryCheckInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DK_QueryCheckInfoAsync(string batchid) {
            this.DK_QueryCheckInfoAsync(batchid, null);
        }
        
        /// <remarks/>
        public void DK_QueryCheckInfoAsync(string batchid, object userState) {
            if ((this.DK_QueryCheckInfoOperationCompleted == null)) {
                this.DK_QueryCheckInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDK_QueryCheckInfoOperationCompleted);
            }
            this.InvokeAsync("DK_QueryCheckInfo", new object[] {
                        batchid}, this.DK_QueryCheckInfoOperationCompleted, userState);
        }
        
        private void OnDK_QueryCheckInfoOperationCompleted(object arg) {
            if ((this.DK_QueryCheckInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DK_QueryCheckInfoCompleted(this, new DK_QueryCheckInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DK_QueryCheckDetailInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DK_QueryCheckDetailInfo(string starttime, string endtime, string banktype, string spid, string coding, string bank_list, string bankaccno, string uname) {
            object[] results = this.Invoke("DK_QueryCheckDetailInfo", new object[] {
                        starttime,
                        endtime,
                        banktype,
                        spid,
                        coding,
                        bank_list,
                        bankaccno,
                        uname});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDK_QueryCheckDetailInfo(string starttime, string endtime, string banktype, string spid, string coding, string bank_list, string bankaccno, string uname, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DK_QueryCheckDetailInfo", new object[] {
                        starttime,
                        endtime,
                        banktype,
                        spid,
                        coding,
                        bank_list,
                        bankaccno,
                        uname}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndDK_QueryCheckDetailInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DK_QueryCheckDetailInfoAsync(string starttime, string endtime, string banktype, string spid, string coding, string bank_list, string bankaccno, string uname) {
            this.DK_QueryCheckDetailInfoAsync(starttime, endtime, banktype, spid, coding, bank_list, bankaccno, uname, null);
        }
        
        /// <remarks/>
        public void DK_QueryCheckDetailInfoAsync(string starttime, string endtime, string banktype, string spid, string coding, string bank_list, string bankaccno, string uname, object userState) {
            if ((this.DK_QueryCheckDetailInfoOperationCompleted == null)) {
                this.DK_QueryCheckDetailInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDK_QueryCheckDetailInfoOperationCompleted);
            }
            this.InvokeAsync("DK_QueryCheckDetailInfo", new object[] {
                        starttime,
                        endtime,
                        banktype,
                        spid,
                        coding,
                        bank_list,
                        bankaccno,
                        uname}, this.DK_QueryCheckDetailInfoOperationCompleted, userState);
        }
        
        private void OnDK_QueryCheckDetailInfoOperationCompleted(object arg) {
            if ((this.DK_QueryCheckDetailInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DK_QueryCheckDetailInfoCompleted(this, new DK_QueryCheckDetailInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DK_StartCheck", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DK_StartCheck(string batchid, string imgurl, string checkurl, string checkmemo, out string msg) {
            object[] results = this.Invoke("DK_StartCheck", new object[] {
                        batchid,
                        imgurl,
                        checkurl,
                        checkmemo});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDK_StartCheck(string batchid, string imgurl, string checkurl, string checkmemo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DK_StartCheck", new object[] {
                        batchid,
                        imgurl,
                        checkurl,
                        checkmemo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDK_StartCheck(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DK_StartCheckAsync(string batchid, string imgurl, string checkurl, string checkmemo) {
            this.DK_StartCheckAsync(batchid, imgurl, checkurl, checkmemo, null);
        }
        
        /// <remarks/>
        public void DK_StartCheckAsync(string batchid, string imgurl, string checkurl, string checkmemo, object userState) {
            if ((this.DK_StartCheckOperationCompleted == null)) {
                this.DK_StartCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDK_StartCheckOperationCompleted);
            }
            this.InvokeAsync("DK_StartCheck", new object[] {
                        batchid,
                        imgurl,
                        checkurl,
                        checkmemo}, this.DK_StartCheckOperationCompleted, userState);
        }
        
        private void OnDK_StartCheckOperationCompleted(object arg) {
            if ((this.DK_StartCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DK_StartCheckCompleted(this, new DK_StartCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/InternetBankTurnoverBillQuery" +
            "", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InternetBankTurnoverBillQuery(string qq, string order, string trunoverID, string payAccount, System.DateTime beginDate, System.DateTime endDate, bool isBill) {
            object[] results = this.Invoke("InternetBankTurnoverBillQuery", new object[] {
                        qq,
                        order,
                        trunoverID,
                        payAccount,
                        beginDate,
                        endDate,
                        isBill});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInternetBankTurnoverBillQuery(string qq, string order, string trunoverID, string payAccount, System.DateTime beginDate, System.DateTime endDate, bool isBill, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InternetBankTurnoverBillQuery", new object[] {
                        qq,
                        order,
                        trunoverID,
                        payAccount,
                        beginDate,
                        endDate,
                        isBill}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndInternetBankTurnoverBillQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InternetBankTurnoverBillQueryAsync(string qq, string order, string trunoverID, string payAccount, System.DateTime beginDate, System.DateTime endDate, bool isBill) {
            this.InternetBankTurnoverBillQueryAsync(qq, order, trunoverID, payAccount, beginDate, endDate, isBill, null);
        }
        
        /// <remarks/>
        public void InternetBankTurnoverBillQueryAsync(string qq, string order, string trunoverID, string payAccount, System.DateTime beginDate, System.DateTime endDate, bool isBill, object userState) {
            if ((this.InternetBankTurnoverBillQueryOperationCompleted == null)) {
                this.InternetBankTurnoverBillQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInternetBankTurnoverBillQueryOperationCompleted);
            }
            this.InvokeAsync("InternetBankTurnoverBillQuery", new object[] {
                        qq,
                        order,
                        trunoverID,
                        payAccount,
                        beginDate,
                        endDate,
                        isBill}, this.InternetBankTurnoverBillQueryOperationCompleted, userState);
        }
        
        private void OnInternetBankTurnoverBillQueryOperationCompleted(object arg) {
            if ((this.InternetBankTurnoverBillQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InternetBankTurnoverBillQueryCompleted(this, new InternetBankTurnoverBillQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/InternetBankBillHistoryQuery", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InternetBankBillHistoryQuery(string qq, string order, string yearMonth) {
            object[] results = this.Invoke("InternetBankBillHistoryQuery", new object[] {
                        qq,
                        order,
                        yearMonth});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInternetBankBillHistoryQuery(string qq, string order, string yearMonth, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InternetBankBillHistoryQuery", new object[] {
                        qq,
                        order,
                        yearMonth}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndInternetBankBillHistoryQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InternetBankBillHistoryQueryAsync(string qq, string order, string yearMonth) {
            this.InternetBankBillHistoryQueryAsync(qq, order, yearMonth, null);
        }
        
        /// <remarks/>
        public void InternetBankBillHistoryQueryAsync(string qq, string order, string yearMonth, object userState) {
            if ((this.InternetBankBillHistoryQueryOperationCompleted == null)) {
                this.InternetBankBillHistoryQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInternetBankBillHistoryQueryOperationCompleted);
            }
            this.InvokeAsync("InternetBankBillHistoryQuery", new object[] {
                        qq,
                        order,
                        yearMonth}, this.InternetBankBillHistoryQueryOperationCompleted, userState);
        }
        
        private void OnInternetBankBillHistoryQueryOperationCompleted(object arg) {
            if ((this.InternetBankBillHistoryQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InternetBankBillHistoryQueryCompleted(this, new InternetBankBillHistoryQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBatchInfo_DF", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBatchInfo_DF(string strBeginDate, string strEndDate, string spid, string spBatchID, string state, int limStart, int limMax) {
            object[] results = this.Invoke("QueryBatchInfo_DF", new object[] {
                        strBeginDate,
                        strEndDate,
                        spid,
                        spBatchID,
                        state,
                        limStart,
                        limMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBatchInfo_DF(string strBeginDate, string strEndDate, string spid, string spBatchID, string state, int limStart, int limMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBatchInfo_DF", new object[] {
                        strBeginDate,
                        strEndDate,
                        spid,
                        spBatchID,
                        state,
                        limStart,
                        limMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryBatchInfo_DF(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBatchInfo_DFAsync(string strBeginDate, string strEndDate, string spid, string spBatchID, string state, int limStart, int limMax) {
            this.QueryBatchInfo_DFAsync(strBeginDate, strEndDate, spid, spBatchID, state, limStart, limMax, null);
        }
        
        /// <remarks/>
        public void QueryBatchInfo_DFAsync(string strBeginDate, string strEndDate, string spid, string spBatchID, string state, int limStart, int limMax, object userState) {
            if ((this.QueryBatchInfo_DFOperationCompleted == null)) {
                this.QueryBatchInfo_DFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBatchInfo_DFOperationCompleted);
            }
            this.InvokeAsync("QueryBatchInfo_DF", new object[] {
                        strBeginDate,
                        strEndDate,
                        spid,
                        spBatchID,
                        state,
                        limStart,
                        limMax}, this.QueryBatchInfo_DFOperationCompleted, userState);
        }
        
        private void OnQueryBatchInfo_DFOperationCompleted(object arg) {
            if ((this.QueryBatchInfo_DFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBatchInfo_DFCompleted(this, new QueryBatchInfo_DFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CountBatchInfo_DF", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CountBatchInfo_DF(string strBeginDate, string strEndDate, string spid, string spBatchID, string state) {
            object[] results = this.Invoke("CountBatchInfo_DF", new object[] {
                        strBeginDate,
                        strEndDate,
                        spid,
                        spBatchID,
                        state});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCountBatchInfo_DF(string strBeginDate, string strEndDate, string spid, string spBatchID, string state, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CountBatchInfo_DF", new object[] {
                        strBeginDate,
                        strEndDate,
                        spid,
                        spBatchID,
                        state}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndCountBatchInfo_DF(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CountBatchInfo_DFAsync(string strBeginDate, string strEndDate, string spid, string spBatchID, string state) {
            this.CountBatchInfo_DFAsync(strBeginDate, strEndDate, spid, spBatchID, state, null);
        }
        
        /// <remarks/>
        public void CountBatchInfo_DFAsync(string strBeginDate, string strEndDate, string spid, string spBatchID, string state, object userState) {
            if ((this.CountBatchInfo_DFOperationCompleted == null)) {
                this.CountBatchInfo_DFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountBatchInfo_DFOperationCompleted);
            }
            this.InvokeAsync("CountBatchInfo_DF", new object[] {
                        strBeginDate,
                        strEndDate,
                        spid,
                        spBatchID,
                        state}, this.CountBatchInfo_DFOperationCompleted, userState);
        }
        
        private void OnCountBatchInfo_DFOperationCompleted(object arg) {
            if ((this.CountBatchInfo_DFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountBatchInfo_DFCompleted(this, new CountBatchInfo_DFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDFInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryDFInfo(string bankID, string userID, string strBeginDate, string strEndDate, string spid, string spListID, string spBatchID, string state, string transaction_id, string bank_type, string service_code, int limStart, int limMax) {
            object[] results = this.Invoke("QueryDFInfo", new object[] {
                        bankID,
                        userID,
                        strBeginDate,
                        strEndDate,
                        spid,
                        spListID,
                        spBatchID,
                        state,
                        transaction_id,
                        bank_type,
                        service_code,
                        limStart,
                        limMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDFInfo(string bankID, string userID, string strBeginDate, string strEndDate, string spid, string spListID, string spBatchID, string state, string transaction_id, string bank_type, string service_code, int limStart, int limMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDFInfo", new object[] {
                        bankID,
                        userID,
                        strBeginDate,
                        strEndDate,
                        spid,
                        spListID,
                        spBatchID,
                        state,
                        transaction_id,
                        bank_type,
                        service_code,
                        limStart,
                        limMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryDFInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDFInfoAsync(string bankID, string userID, string strBeginDate, string strEndDate, string spid, string spListID, string spBatchID, string state, string transaction_id, string bank_type, string service_code, int limStart, int limMax) {
            this.QueryDFInfoAsync(bankID, userID, strBeginDate, strEndDate, spid, spListID, spBatchID, state, transaction_id, bank_type, service_code, limStart, limMax, null);
        }
        
        /// <remarks/>
        public void QueryDFInfoAsync(string bankID, string userID, string strBeginDate, string strEndDate, string spid, string spListID, string spBatchID, string state, string transaction_id, string bank_type, string service_code, int limStart, int limMax, object userState) {
            if ((this.QueryDFInfoOperationCompleted == null)) {
                this.QueryDFInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDFInfoOperationCompleted);
            }
            this.InvokeAsync("QueryDFInfo", new object[] {
                        bankID,
                        userID,
                        strBeginDate,
                        strEndDate,
                        spid,
                        spListID,
                        spBatchID,
                        state,
                        transaction_id,
                        bank_type,
                        service_code,
                        limStart,
                        limMax}, this.QueryDFInfoOperationCompleted, userState);
        }
        
        private void OnQueryDFInfoOperationCompleted(object arg) {
            if ((this.QueryDFInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDFInfoCompleted(this, new QueryDFInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCFTTransferInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCFTTransferInfo(string spid, string strBeginDate, string strEndDate, string trUBatchID, string state, int limStart, int limMax) {
            object[] results = this.Invoke("QueryCFTTransferInfo", new object[] {
                        spid,
                        strBeginDate,
                        strEndDate,
                        trUBatchID,
                        state,
                        limStart,
                        limMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCFTTransferInfo(string spid, string strBeginDate, string strEndDate, string trUBatchID, string state, int limStart, int limMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCFTTransferInfo", new object[] {
                        spid,
                        strBeginDate,
                        strEndDate,
                        trUBatchID,
                        state,
                        limStart,
                        limMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryCFTTransferInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCFTTransferInfoAsync(string spid, string strBeginDate, string strEndDate, string trUBatchID, string state, int limStart, int limMax) {
            this.QueryCFTTransferInfoAsync(spid, strBeginDate, strEndDate, trUBatchID, state, limStart, limMax, null);
        }
        
        /// <remarks/>
        public void QueryCFTTransferInfoAsync(string spid, string strBeginDate, string strEndDate, string trUBatchID, string state, int limStart, int limMax, object userState) {
            if ((this.QueryCFTTransferInfoOperationCompleted == null)) {
                this.QueryCFTTransferInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCFTTransferInfoOperationCompleted);
            }
            this.InvokeAsync("QueryCFTTransferInfo", new object[] {
                        spid,
                        strBeginDate,
                        strEndDate,
                        trUBatchID,
                        state,
                        limStart,
                        limMax}, this.QueryCFTTransferInfoOperationCompleted, userState);
        }
        
        private void OnQueryCFTTransferInfoOperationCompleted(object arg) {
            if ((this.QueryCFTTransferInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCFTTransferInfoCompleted(this, new QueryCFTTransferInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTransferDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryTransferDetail(string spid, string trUBatchID, string trBillID, string strBeginDate, string strEndDate) {
            object[] results = this.Invoke("QueryTransferDetail", new object[] {
                        spid,
                        trUBatchID,
                        trBillID,
                        strBeginDate,
                        strEndDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTransferDetail(string spid, string trUBatchID, string trBillID, string strBeginDate, string strEndDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTransferDetail", new object[] {
                        spid,
                        trUBatchID,
                        trBillID,
                        strBeginDate,
                        strEndDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryTransferDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTransferDetailAsync(string spid, string trUBatchID, string trBillID, string strBeginDate, string strEndDate) {
            this.QueryTransferDetailAsync(spid, trUBatchID, trBillID, strBeginDate, strEndDate, null);
        }
        
        /// <remarks/>
        public void QueryTransferDetailAsync(string spid, string trUBatchID, string trBillID, string strBeginDate, string strEndDate, object userState) {
            if ((this.QueryTransferDetailOperationCompleted == null)) {
                this.QueryTransferDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTransferDetailOperationCompleted);
            }
            this.InvokeAsync("QueryTransferDetail", new object[] {
                        spid,
                        trUBatchID,
                        trBillID,
                        strBeginDate,
                        strEndDate}, this.QueryTransferDetailOperationCompleted, userState);
        }
        
        private void OnQueryTransferDetailOperationCompleted(object arg) {
            if ((this.QueryTransferDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTransferDetailCompleted(this, new QueryTransferDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CountDFInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CountDFInfo(string bankID, string userID, string strBeginDate, string strEndDate, string spid, string spListID, string spBatchID, string state) {
            object[] results = this.Invoke("CountDFInfo", new object[] {
                        bankID,
                        userID,
                        strBeginDate,
                        strEndDate,
                        spid,
                        spListID,
                        spBatchID,
                        state});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCountDFInfo(string bankID, string userID, string strBeginDate, string strEndDate, string spid, string spListID, string spBatchID, string state, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CountDFInfo", new object[] {
                        bankID,
                        userID,
                        strBeginDate,
                        strEndDate,
                        spid,
                        spListID,
                        spBatchID,
                        state}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndCountDFInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CountDFInfoAsync(string bankID, string userID, string strBeginDate, string strEndDate, string spid, string spListID, string spBatchID, string state) {
            this.CountDFInfoAsync(bankID, userID, strBeginDate, strEndDate, spid, spListID, spBatchID, state, null);
        }
        
        /// <remarks/>
        public void CountDFInfoAsync(string bankID, string userID, string strBeginDate, string strEndDate, string spid, string spListID, string spBatchID, string state, object userState) {
            if ((this.CountDFInfoOperationCompleted == null)) {
                this.CountDFInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountDFInfoOperationCompleted);
            }
            this.InvokeAsync("CountDFInfo", new object[] {
                        bankID,
                        userID,
                        strBeginDate,
                        strEndDate,
                        spid,
                        spListID,
                        spBatchID,
                        state}, this.CountDFInfoOperationCompleted, userState);
        }
        
        private void OnCountDFInfoOperationCompleted(object arg) {
            if ((this.CountDFInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountDFInfoCompleted(this, new CountDFInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDFDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryDFDetail(string cep_id, string strBeginDate, string strEndDate) {
            object[] results = this.Invoke("QueryDFDetail", new object[] {
                        cep_id,
                        strBeginDate,
                        strEndDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDFDetail(string cep_id, string strBeginDate, string strEndDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDFDetail", new object[] {
                        cep_id,
                        strBeginDate,
                        strEndDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryDFDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDFDetailAsync(string cep_id, string strBeginDate, string strEndDate) {
            this.QueryDFDetailAsync(cep_id, strBeginDate, strEndDate, null);
        }
        
        /// <remarks/>
        public void QueryDFDetailAsync(string cep_id, string strBeginDate, string strEndDate, object userState) {
            if ((this.QueryDFDetailOperationCompleted == null)) {
                this.QueryDFDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDFDetailOperationCompleted);
            }
            this.InvokeAsync("QueryDFDetail", new object[] {
                        cep_id,
                        strBeginDate,
                        strEndDate}, this.QueryDFDetailOperationCompleted, userState);
        }
        
        private void OnQueryDFDetailOperationCompleted(object arg) {
            if ((this.QueryDFDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDFDetailCompleted(this, new QueryDFDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryIconInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryIconInfo(string account) {
            object[] results = this.Invoke("QueryIconInfo", new object[] {
                        account});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryIconInfo(string account, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryIconInfo", new object[] {
                        account}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryIconInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryIconInfoAsync(string account) {
            this.QueryIconInfoAsync(account, null);
        }
        
        /// <remarks/>
        public void QueryIconInfoAsync(string account, object userState) {
            if ((this.QueryIconInfoOperationCompleted == null)) {
                this.QueryIconInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryIconInfoOperationCompleted);
            }
            this.InvokeAsync("QueryIconInfo", new object[] {
                        account}, this.QueryIconInfoOperationCompleted, userState);
        }
        
        private void OnQueryIconInfoOperationCompleted(object arg) {
            if ((this.QueryIconInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryIconInfoCompleted(this, new QueryIconInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/RefreshIcon", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RefreshIcon(string account) {
            this.Invoke("RefreshIcon", new object[] {
                        account});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRefreshIcon(string account, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RefreshIcon", new object[] {
                        account}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndRefreshIcon(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void RefreshIconAsync(string account) {
            this.RefreshIconAsync(account, null);
        }
        
        /// <remarks/>
        public void RefreshIconAsync(string account, object userState) {
            if ((this.RefreshIconOperationCompleted == null)) {
                this.RefreshIconOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshIconOperationCompleted);
            }
            this.InvokeAsync("RefreshIcon", new object[] {
                        account}, this.RefreshIconOperationCompleted, userState);
        }
        
        private void OnRefreshIconOperationCompleted(object arg) {
            if ((this.RefreshIconCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshIconCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ExtinguishIcon", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExtinguishIcon(string account) {
            this.Invoke("ExtinguishIcon", new object[] {
                        account});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExtinguishIcon(string account, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExtinguishIcon", new object[] {
                        account}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndExtinguishIcon(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ExtinguishIconAsync(string account) {
            this.ExtinguishIconAsync(account, null);
        }
        
        /// <remarks/>
        public void ExtinguishIconAsync(string account, object userState) {
            if ((this.ExtinguishIconOperationCompleted == null)) {
                this.ExtinguishIconOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExtinguishIconOperationCompleted);
            }
            this.InvokeAsync("ExtinguishIcon", new object[] {
                        account}, this.ExtinguishIconOperationCompleted, userState);
        }
        
        private void OnExtinguishIconOperationCompleted(object arg) {
            if ((this.ExtinguishIconCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExtinguishIconCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryAutomaticRecharge", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryAutomaticRecharge(string uin, int limStart, int limMax) {
            object[] results = this.Invoke("QueryAutomaticRecharge", new object[] {
                        uin,
                        limStart,
                        limMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryAutomaticRecharge(string uin, int limStart, int limMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryAutomaticRecharge", new object[] {
                        uin,
                        limStart,
                        limMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryAutomaticRecharge(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAutomaticRechargeAsync(string uin, int limStart, int limMax) {
            this.QueryAutomaticRechargeAsync(uin, limStart, limMax, null);
        }
        
        /// <remarks/>
        public void QueryAutomaticRechargeAsync(string uin, int limStart, int limMax, object userState) {
            if ((this.QueryAutomaticRechargeOperationCompleted == null)) {
                this.QueryAutomaticRechargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAutomaticRechargeOperationCompleted);
            }
            this.InvokeAsync("QueryAutomaticRecharge", new object[] {
                        uin,
                        limStart,
                        limMax}, this.QueryAutomaticRechargeOperationCompleted, userState);
        }
        
        private void OnQueryAutomaticRechargeOperationCompleted(object arg) {
            if ((this.QueryAutomaticRechargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAutomaticRechargeCompleted(this, new QueryAutomaticRechargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryAutomaticRechargeBillLis" +
            "t", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryAutomaticRechargeBillList(string uin, string plan_id, int limStart, int limMax) {
            object[] results = this.Invoke("QueryAutomaticRechargeBillList", new object[] {
                        uin,
                        plan_id,
                        limStart,
                        limMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryAutomaticRechargeBillList(string uin, string plan_id, int limStart, int limMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryAutomaticRechargeBillList", new object[] {
                        uin,
                        plan_id,
                        limStart,
                        limMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryAutomaticRechargeBillList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAutomaticRechargeBillListAsync(string uin, string plan_id, int limStart, int limMax) {
            this.QueryAutomaticRechargeBillListAsync(uin, plan_id, limStart, limMax, null);
        }
        
        /// <remarks/>
        public void QueryAutomaticRechargeBillListAsync(string uin, string plan_id, int limStart, int limMax, object userState) {
            if ((this.QueryAutomaticRechargeBillListOperationCompleted == null)) {
                this.QueryAutomaticRechargeBillListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAutomaticRechargeBillListOperationCompleted);
            }
            this.InvokeAsync("QueryAutomaticRechargeBillList", new object[] {
                        uin,
                        plan_id,
                        limStart,
                        limMax}, this.QueryAutomaticRechargeBillListOperationCompleted, userState);
        }
        
        private void OnQueryAutomaticRechargeBillListOperationCompleted(object arg) {
            if ((this.QueryAutomaticRechargeBillListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAutomaticRechargeBillListCompleted(this, new QueryAutomaticRechargeBillListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankTypeKK", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankTypeKK(string uin, string uid) {
            object[] results = this.Invoke("GetBankTypeKK", new object[] {
                        uin,
                        uid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankTypeKK(string uin, string uid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankTypeKK", new object[] {
                        uin,
                        uid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankTypeKK(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankTypeKKAsync(string uin, string uid) {
            this.GetBankTypeKKAsync(uin, uid, null);
        }
        
        /// <remarks/>
        public void GetBankTypeKKAsync(string uin, string uid, object userState) {
            if ((this.GetBankTypeKKOperationCompleted == null)) {
                this.GetBankTypeKKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankTypeKKOperationCompleted);
            }
            this.InvokeAsync("GetBankTypeKK", new object[] {
                        uin,
                        uid}, this.GetBankTypeKKOperationCompleted, userState);
        }
        
        private void OnGetBankTypeKKOperationCompleted(object arg) {
            if ((this.GetBankTypeKKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankTypeKKCompleted(this, new GetBankTypeKKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/Uid2QQ", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Uid2QQ(string fuid) {
            object[] results = this.Invoke("Uid2QQ", new object[] {
                        fuid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUid2QQ(string fuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Uid2QQ", new object[] {
                        fuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUid2QQ(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Uid2QQAsync(string fuid) {
            this.Uid2QQAsync(fuid, null);
        }
        
        /// <remarks/>
        public void Uid2QQAsync(string fuid, object userState) {
            if ((this.Uid2QQOperationCompleted == null)) {
                this.Uid2QQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUid2QQOperationCompleted);
            }
            this.InvokeAsync("Uid2QQ", new object[] {
                        fuid}, this.Uid2QQOperationCompleted, userState);
        }
        
        private void OnUid2QQOperationCompleted(object arg) {
            if ((this.Uid2QQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Uid2QQCompleted(this, new Uid2QQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SingedByService", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SingedByService(string SingedString) {
            object[] results = this.Invoke("SingedByService", new object[] {
                        SingedString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSingedByService(string SingedString, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SingedByService", new object[] {
                        SingedString}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSingedByService(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SingedByServiceAsync(string SingedString) {
            this.SingedByServiceAsync(SingedString, null);
        }
        
        /// <remarks/>
        public void SingedByServiceAsync(string SingedString, object userState) {
            if ((this.SingedByServiceOperationCompleted == null)) {
                this.SingedByServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSingedByServiceOperationCompleted);
            }
            this.InvokeAsync("SingedByService", new object[] {
                        SingedString}, this.SingedByServiceOperationCompleted, userState);
        }
        
        private void OnSingedByServiceOperationCompleted(object arg) {
            if ((this.SingedByServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SingedByServiceCompleted(this, new SingedByServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAATradeList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAATradeList(string aaUIN, int startIndex, int count) {
            object[] results = this.Invoke("GetAATradeList", new object[] {
                        aaUIN,
                        startIndex,
                        count});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAATradeList(string aaUIN, int startIndex, int count, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAATradeList", new object[] {
                        aaUIN,
                        startIndex,
                        count}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAATradeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAATradeListAsync(string aaUIN, int startIndex, int count) {
            this.GetAATradeListAsync(aaUIN, startIndex, count, null);
        }
        
        /// <remarks/>
        public void GetAATradeListAsync(string aaUIN, int startIndex, int count, object userState) {
            if ((this.GetAATradeListOperationCompleted == null)) {
                this.GetAATradeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAATradeListOperationCompleted);
            }
            this.InvokeAsync("GetAATradeList", new object[] {
                        aaUIN,
                        startIndex,
                        count}, this.GetAATradeListOperationCompleted, userState);
        }
        
        private void OnGetAATradeListOperationCompleted(object arg) {
            if ((this.GetAATradeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAATradeListCompleted(this, new GetAATradeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAATradeDetailsSingleYear", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAATradeDetailsSingleYear(string aaCollectionNo, System.DateTime createTime, int startIndex, int count) {
            object[] results = this.Invoke("GetAATradeDetailsSingleYear", new object[] {
                        aaCollectionNo,
                        createTime,
                        startIndex,
                        count});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAATradeDetailsSingleYear(string aaCollectionNo, System.DateTime createTime, int startIndex, int count, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAATradeDetailsSingleYear", new object[] {
                        aaCollectionNo,
                        createTime,
                        startIndex,
                        count}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAATradeDetailsSingleYear(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAATradeDetailsSingleYearAsync(string aaCollectionNo, System.DateTime createTime, int startIndex, int count) {
            this.GetAATradeDetailsSingleYearAsync(aaCollectionNo, createTime, startIndex, count, null);
        }
        
        /// <remarks/>
        public void GetAATradeDetailsSingleYearAsync(string aaCollectionNo, System.DateTime createTime, int startIndex, int count, object userState) {
            if ((this.GetAATradeDetailsSingleYearOperationCompleted == null)) {
                this.GetAATradeDetailsSingleYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAATradeDetailsSingleYearOperationCompleted);
            }
            this.InvokeAsync("GetAATradeDetailsSingleYear", new object[] {
                        aaCollectionNo,
                        createTime,
                        startIndex,
                        count}, this.GetAATradeDetailsSingleYearOperationCompleted, userState);
        }
        
        private void OnGetAATradeDetailsSingleYearOperationCompleted(object arg) {
            if ((this.GetAATradeDetailsSingleYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAATradeDetailsSingleYearCompleted(this, new GetAATradeDetailsSingleYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryAATotalTradeInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryAATotalTradeInfo(string aaCollectionNo) {
            object[] results = this.Invoke("QueryAATotalTradeInfo", new object[] {
                        aaCollectionNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryAATotalTradeInfo(string aaCollectionNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryAATotalTradeInfo", new object[] {
                        aaCollectionNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryAATotalTradeInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAATotalTradeInfoAsync(string aaCollectionNo) {
            this.QueryAATotalTradeInfoAsync(aaCollectionNo, null);
        }
        
        /// <remarks/>
        public void QueryAATotalTradeInfoAsync(string aaCollectionNo, object userState) {
            if ((this.QueryAATotalTradeInfoOperationCompleted == null)) {
                this.QueryAATotalTradeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAATotalTradeInfoOperationCompleted);
            }
            this.InvokeAsync("QueryAATotalTradeInfo", new object[] {
                        aaCollectionNo}, this.QueryAATotalTradeInfoOperationCompleted, userState);
        }
        
        private void OnQueryAATotalTradeInfoOperationCompleted(object arg) {
            if ((this.QueryAATotalTradeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAATotalTradeInfoCompleted(this, new QueryAATotalTradeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetReceiveRedPacketList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReceiveRedPacketList(string hbUIN, System.DateTime beginTime, System.DateTime endTime, int startIndex, int count) {
            object[] results = this.Invoke("GetReceiveRedPacketList", new object[] {
                        hbUIN,
                        beginTime,
                        endTime,
                        startIndex,
                        count});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReceiveRedPacketList(string hbUIN, System.DateTime beginTime, System.DateTime endTime, int startIndex, int count, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReceiveRedPacketList", new object[] {
                        hbUIN,
                        beginTime,
                        endTime,
                        startIndex,
                        count}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetReceiveRedPacketList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceiveRedPacketListAsync(string hbUIN, System.DateTime beginTime, System.DateTime endTime, int startIndex, int count) {
            this.GetReceiveRedPacketListAsync(hbUIN, beginTime, endTime, startIndex, count, null);
        }
        
        /// <remarks/>
        public void GetReceiveRedPacketListAsync(string hbUIN, System.DateTime beginTime, System.DateTime endTime, int startIndex, int count, object userState) {
            if ((this.GetReceiveRedPacketListOperationCompleted == null)) {
                this.GetReceiveRedPacketListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceiveRedPacketListOperationCompleted);
            }
            this.InvokeAsync("GetReceiveRedPacketList", new object[] {
                        hbUIN,
                        beginTime,
                        endTime,
                        startIndex,
                        count}, this.GetReceiveRedPacketListOperationCompleted, userState);
        }
        
        private void OnGetReceiveRedPacketListOperationCompleted(object arg) {
            if ((this.GetReceiveRedPacketListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceiveRedPacketListCompleted(this, new GetReceiveRedPacketListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRedPacketDetailList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRedPacketDetailList(string sendListId, System.DateTime createTime, int startIndex, int count) {
            object[] results = this.Invoke("GetRedPacketDetailList", new object[] {
                        sendListId,
                        createTime,
                        startIndex,
                        count});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRedPacketDetailList(string sendListId, System.DateTime createTime, int startIndex, int count, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRedPacketDetailList", new object[] {
                        sendListId,
                        createTime,
                        startIndex,
                        count}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRedPacketDetailList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRedPacketDetailListAsync(string sendListId, System.DateTime createTime, int startIndex, int count) {
            this.GetRedPacketDetailListAsync(sendListId, createTime, startIndex, count, null);
        }
        
        /// <remarks/>
        public void GetRedPacketDetailListAsync(string sendListId, System.DateTime createTime, int startIndex, int count, object userState) {
            if ((this.GetRedPacketDetailListOperationCompleted == null)) {
                this.GetRedPacketDetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRedPacketDetailListOperationCompleted);
            }
            this.InvokeAsync("GetRedPacketDetailList", new object[] {
                        sendListId,
                        createTime,
                        startIndex,
                        count}, this.GetRedPacketDetailListOperationCompleted, userState);
        }
        
        private void OnGetRedPacketDetailListOperationCompleted(object arg) {
            if ((this.GetRedPacketDetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRedPacketDetailListCompleted(this, new GetRedPacketDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSendRedPacketList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSendRedPacketList(string hbUIN, System.DateTime beginTime, System.DateTime endTime, int startIndex, int count, string payListId) {
            object[] results = this.Invoke("GetSendRedPacketList", new object[] {
                        hbUIN,
                        beginTime,
                        endTime,
                        startIndex,
                        count,
                        payListId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSendRedPacketList(string hbUIN, System.DateTime beginTime, System.DateTime endTime, int startIndex, int count, string payListId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSendRedPacketList", new object[] {
                        hbUIN,
                        beginTime,
                        endTime,
                        startIndex,
                        count,
                        payListId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSendRedPacketList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSendRedPacketListAsync(string hbUIN, System.DateTime beginTime, System.DateTime endTime, int startIndex, int count, string payListId) {
            this.GetSendRedPacketListAsync(hbUIN, beginTime, endTime, startIndex, count, payListId, null);
        }
        
        /// <remarks/>
        public void GetSendRedPacketListAsync(string hbUIN, System.DateTime beginTime, System.DateTime endTime, int startIndex, int count, string payListId, object userState) {
            if ((this.GetSendRedPacketListOperationCompleted == null)) {
                this.GetSendRedPacketListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSendRedPacketListOperationCompleted);
            }
            this.InvokeAsync("GetSendRedPacketList", new object[] {
                        hbUIN,
                        beginTime,
                        endTime,
                        startIndex,
                        count,
                        payListId}, this.GetSendRedPacketListOperationCompleted, userState);
        }
        
        private void OnGetSendRedPacketListOperationCompleted(object arg) {
            if ((this.GetSendRedPacketListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSendRedPacketListCompleted(this, new GetSendRedPacketListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSmallCreditCardInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSmallCreditCardInfo(string uin) {
            object[] results = this.Invoke("GetSmallCreditCardInfo", new object[] {
                        uin});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSmallCreditCardInfo(string uin, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSmallCreditCardInfo", new object[] {
                        uin}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSmallCreditCardInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmallCreditCardInfoAsync(string uin) {
            this.GetSmallCreditCardInfoAsync(uin, null);
        }
        
        /// <remarks/>
        public void GetSmallCreditCardInfoAsync(string uin, object userState) {
            if ((this.GetSmallCreditCardInfoOperationCompleted == null)) {
                this.GetSmallCreditCardInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmallCreditCardInfoOperationCompleted);
            }
            this.InvokeAsync("GetSmallCreditCardInfo", new object[] {
                        uin}, this.GetSmallCreditCardInfoOperationCompleted, userState);
        }
        
        private void OnGetSmallCreditCardInfoOperationCompleted(object arg) {
            if ((this.GetSmallCreditCardInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmallCreditCardInfoCompleted(this, new GetSmallCreditCardInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/OverseasReturnQuery", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet OverseasReturnQuery(string transid, string drawid) {
            object[] results = this.Invoke("OverseasReturnQuery", new object[] {
                        transid,
                        drawid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOverseasReturnQuery(string transid, string drawid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OverseasReturnQuery", new object[] {
                        transid,
                        drawid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndOverseasReturnQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void OverseasReturnQueryAsync(string transid, string drawid) {
            this.OverseasReturnQueryAsync(transid, drawid, null);
        }
        
        /// <remarks/>
        public void OverseasReturnQueryAsync(string transid, string drawid, object userState) {
            if ((this.OverseasReturnQueryOperationCompleted == null)) {
                this.OverseasReturnQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOverseasReturnQueryOperationCompleted);
            }
            this.InvokeAsync("OverseasReturnQuery", new object[] {
                        transid,
                        drawid}, this.OverseasReturnQueryOperationCompleted, userState);
        }
        
        private void OnOverseasReturnQueryOperationCompleted(object arg) {
            if ((this.OverseasReturnQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OverseasReturnQueryCompleted(this, new OverseasReturnQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/AirTicketsOrderQuery", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AirTicketsOrderQuery(string sppreno, string ticketno, string transaction_id, string passenger_name, string cert_id, string name, string mobile, string uin, string insur_no, string start_time, string end_time, string trade_type, int limit, int page_id) {
            object[] results = this.Invoke("AirTicketsOrderQuery", new object[] {
                        sppreno,
                        ticketno,
                        transaction_id,
                        passenger_name,
                        cert_id,
                        name,
                        mobile,
                        uin,
                        insur_no,
                        start_time,
                        end_time,
                        trade_type,
                        limit,
                        page_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAirTicketsOrderQuery(
                    string sppreno, 
                    string ticketno, 
                    string transaction_id, 
                    string passenger_name, 
                    string cert_id, 
                    string name, 
                    string mobile, 
                    string uin, 
                    string insur_no, 
                    string start_time, 
                    string end_time, 
                    string trade_type, 
                    int limit, 
                    int page_id, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("AirTicketsOrderQuery", new object[] {
                        sppreno,
                        ticketno,
                        transaction_id,
                        passenger_name,
                        cert_id,
                        name,
                        mobile,
                        uin,
                        insur_no,
                        start_time,
                        end_time,
                        trade_type,
                        limit,
                        page_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndAirTicketsOrderQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AirTicketsOrderQueryAsync(string sppreno, string ticketno, string transaction_id, string passenger_name, string cert_id, string name, string mobile, string uin, string insur_no, string start_time, string end_time, string trade_type, int limit, int page_id) {
            this.AirTicketsOrderQueryAsync(sppreno, ticketno, transaction_id, passenger_name, cert_id, name, mobile, uin, insur_no, start_time, end_time, trade_type, limit, page_id, null);
        }
        
        /// <remarks/>
        public void AirTicketsOrderQueryAsync(string sppreno, string ticketno, string transaction_id, string passenger_name, string cert_id, string name, string mobile, string uin, string insur_no, string start_time, string end_time, string trade_type, int limit, int page_id, object userState) {
            if ((this.AirTicketsOrderQueryOperationCompleted == null)) {
                this.AirTicketsOrderQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirTicketsOrderQueryOperationCompleted);
            }
            this.InvokeAsync("AirTicketsOrderQuery", new object[] {
                        sppreno,
                        ticketno,
                        transaction_id,
                        passenger_name,
                        cert_id,
                        name,
                        mobile,
                        uin,
                        insur_no,
                        start_time,
                        end_time,
                        trade_type,
                        limit,
                        page_id}, this.AirTicketsOrderQueryOperationCompleted, userState);
        }
        
        private void OnAirTicketsOrderQueryOperationCompleted(object arg) {
            if ((this.AirTicketsOrderQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirTicketsOrderQueryCompleted(this, new AirTicketsOrderQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/HotelOrderQuery", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet HotelOrderQuery(string hotelUin, string hotelName, string start_time, string end_time, int MaxRows, int PageIndex) {
            object[] results = this.Invoke("HotelOrderQuery", new object[] {
                        hotelUin,
                        hotelName,
                        start_time,
                        end_time,
                        MaxRows,
                        PageIndex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHotelOrderQuery(string hotelUin, string hotelName, string start_time, string end_time, int MaxRows, int PageIndex, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HotelOrderQuery", new object[] {
                        hotelUin,
                        hotelName,
                        start_time,
                        end_time,
                        MaxRows,
                        PageIndex}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndHotelOrderQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void HotelOrderQueryAsync(string hotelUin, string hotelName, string start_time, string end_time, int MaxRows, int PageIndex) {
            this.HotelOrderQueryAsync(hotelUin, hotelName, start_time, end_time, MaxRows, PageIndex, null);
        }
        
        /// <remarks/>
        public void HotelOrderQueryAsync(string hotelUin, string hotelName, string start_time, string end_time, int MaxRows, int PageIndex, object userState) {
            if ((this.HotelOrderQueryOperationCompleted == null)) {
                this.HotelOrderQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHotelOrderQueryOperationCompleted);
            }
            this.InvokeAsync("HotelOrderQuery", new object[] {
                        hotelUin,
                        hotelName,
                        start_time,
                        end_time,
                        MaxRows,
                        PageIndex}, this.HotelOrderQueryOperationCompleted, userState);
        }
        
        private void OnHotelOrderQueryOperationCompleted(object arg) {
            if ((this.HotelOrderQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HotelOrderQueryCompleted(this, new HotelOrderQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/RareNameQuery", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RareNameQuery(string CardNo) {
            object[] results = this.Invoke("RareNameQuery", new object[] {
                        CardNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRareNameQuery(string CardNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RareNameQuery", new object[] {
                        CardNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRareNameQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RareNameQueryAsync(string CardNo) {
            this.RareNameQueryAsync(CardNo, null);
        }
        
        /// <remarks/>
        public void RareNameQueryAsync(string CardNo, object userState) {
            if ((this.RareNameQueryOperationCompleted == null)) {
                this.RareNameQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRareNameQueryOperationCompleted);
            }
            this.InvokeAsync("RareNameQuery", new object[] {
                        CardNo}, this.RareNameQueryOperationCompleted, userState);
        }
        
        private void OnRareNameQueryOperationCompleted(object arg) {
            if ((this.RareNameQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RareNameQueryCompleted(this, new RareNameQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/AddOneRareName", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOneRareName(T_RareName_INFO rareName) {
            this.Invoke("AddOneRareName", new object[] {
                        rareName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddOneRareName(T_RareName_INFO rareName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddOneRareName", new object[] {
                        rareName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndAddOneRareName(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void AddOneRareNameAsync(T_RareName_INFO rareName) {
            this.AddOneRareNameAsync(rareName, null);
        }
        
        /// <remarks/>
        public void AddOneRareNameAsync(T_RareName_INFO rareName, object userState) {
            if ((this.AddOneRareNameOperationCompleted == null)) {
                this.AddOneRareNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOneRareNameOperationCompleted);
            }
            this.InvokeAsync("AddOneRareName", new object[] {
                        rareName}, this.AddOneRareNameOperationCompleted, userState);
        }
        
        private void OnAddOneRareNameOperationCompleted(object arg) {
            if ((this.AddOneRareNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOneRareNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/AtuoRenewQuery", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AtuoRenewQuery(string qqid) {
            object[] results = this.Invoke("AtuoRenewQuery", new object[] {
                        qqid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAtuoRenewQuery(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AtuoRenewQuery", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndAtuoRenewQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AtuoRenewQueryAsync(string qqid) {
            this.AtuoRenewQueryAsync(qqid, null);
        }
        
        /// <remarks/>
        public void AtuoRenewQueryAsync(string qqid, object userState) {
            if ((this.AtuoRenewQueryOperationCompleted == null)) {
                this.AtuoRenewQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAtuoRenewQueryOperationCompleted);
            }
            this.InvokeAsync("AtuoRenewQuery", new object[] {
                        qqid}, this.AtuoRenewQueryOperationCompleted, userState);
        }
        
        private void OnAtuoRenewQueryOperationCompleted(object arg) {
            if ((this.AtuoRenewQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AtuoRenewQueryCompleted(this, new AtuoRenewQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/AtuoRenewUnbind", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AtuoRenewUnbind(string qqid, string channel_id) {
            object[] results = this.Invoke("AtuoRenewUnbind", new object[] {
                        qqid,
                        channel_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAtuoRenewUnbind(string qqid, string channel_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AtuoRenewUnbind", new object[] {
                        qqid,
                        channel_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAtuoRenewUnbind(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AtuoRenewUnbindAsync(string qqid, string channel_id) {
            this.AtuoRenewUnbindAsync(qqid, channel_id, null);
        }
        
        /// <remarks/>
        public void AtuoRenewUnbindAsync(string qqid, string channel_id, object userState) {
            if ((this.AtuoRenewUnbindOperationCompleted == null)) {
                this.AtuoRenewUnbindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAtuoRenewUnbindOperationCompleted);
            }
            this.InvokeAsync("AtuoRenewUnbind", new object[] {
                        qqid,
                        channel_id}, this.AtuoRenewUnbindOperationCompleted, userState);
        }
        
        private void OnAtuoRenewUnbindOperationCompleted(object arg) {
            if ((this.AtuoRenewUnbindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AtuoRenewUnbindCompleted(this, new AtuoRenewUnbindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/WS_AppealSQueryCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int WS_AppealSQueryCount(string Fno, string FUserType, string FUser, string FState) {
            object[] results = this.Invoke("WS_AppealSQueryCount", new object[] {
                        Fno,
                        FUserType,
                        FUser,
                        FState});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWS_AppealSQueryCount(string Fno, string FUserType, string FUser, string FState, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WS_AppealSQueryCount", new object[] {
                        Fno,
                        FUserType,
                        FUser,
                        FState}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndWS_AppealSQueryCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void WS_AppealSQueryCountAsync(string Fno, string FUserType, string FUser, string FState) {
            this.WS_AppealSQueryCountAsync(Fno, FUserType, FUser, FState, null);
        }
        
        /// <remarks/>
        public void WS_AppealSQueryCountAsync(string Fno, string FUserType, string FUser, string FState, object userState) {
            if ((this.WS_AppealSQueryCountOperationCompleted == null)) {
                this.WS_AppealSQueryCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_AppealSQueryCountOperationCompleted);
            }
            this.InvokeAsync("WS_AppealSQueryCount", new object[] {
                        Fno,
                        FUserType,
                        FUser,
                        FState}, this.WS_AppealSQueryCountOperationCompleted, userState);
        }
        
        private void OnWS_AppealSQueryCountOperationCompleted(object arg) {
            if ((this.WS_AppealSQueryCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_AppealSQueryCountCompleted(this, new WS_AppealSQueryCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCreditQueryListForFaidCoun" +
            "t", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCreditQueryListForFaidCount(string QQOrEmail, System.DateTime begindate, System.DateTime enddate) {
            object[] results = this.Invoke("GetCreditQueryListForFaidCount", new object[] {
                        QQOrEmail,
                        begindate,
                        enddate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCreditQueryListForFaidCount(string QQOrEmail, System.DateTime begindate, System.DateTime enddate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCreditQueryListForFaidCount", new object[] {
                        QQOrEmail,
                        begindate,
                        enddate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCreditQueryListForFaidCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditQueryListForFaidCountAsync(string QQOrEmail, System.DateTime begindate, System.DateTime enddate) {
            this.GetCreditQueryListForFaidCountAsync(QQOrEmail, begindate, enddate, null);
        }
        
        /// <remarks/>
        public void GetCreditQueryListForFaidCountAsync(string QQOrEmail, System.DateTime begindate, System.DateTime enddate, object userState) {
            if ((this.GetCreditQueryListForFaidCountOperationCompleted == null)) {
                this.GetCreditQueryListForFaidCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditQueryListForFaidCountOperationCompleted);
            }
            this.InvokeAsync("GetCreditQueryListForFaidCount", new object[] {
                        QQOrEmail,
                        begindate,
                        enddate}, this.GetCreditQueryListForFaidCountOperationCompleted, userState);
        }
        
        private void OnGetCreditQueryListForFaidCountOperationCompleted(object arg) {
            if ((this.GetCreditQueryListForFaidCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditQueryListForFaidCountCompleted(this, new GetCreditQueryListForFaidCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCreditQueryListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCreditQueryListCount(string Flistid) {
            object[] results = this.Invoke("GetCreditQueryListCount", new object[] {
                        Flistid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCreditQueryListCount(string Flistid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCreditQueryListCount", new object[] {
                        Flistid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCreditQueryListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditQueryListCountAsync(string Flistid) {
            this.GetCreditQueryListCountAsync(Flistid, null);
        }
        
        /// <remarks/>
        public void GetCreditQueryListCountAsync(string Flistid, object userState) {
            if ((this.GetCreditQueryListCountOperationCompleted == null)) {
                this.GetCreditQueryListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditQueryListCountOperationCompleted);
            }
            this.InvokeAsync("GetCreditQueryListCount", new object[] {
                        Flistid}, this.GetCreditQueryListCountOperationCompleted, userState);
        }
        
        private void OnGetCreditQueryListCountOperationCompleted(object arg) {
            if ((this.GetCreditQueryListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditQueryListCountCompleted(this, new GetCreditQueryListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCreditQueryListForFaid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCreditQueryListForFaid(string QQOrEmail, System.DateTime begindate, System.DateTime enddate, int istart, int imax) {
            object[] results = this.Invoke("GetCreditQueryListForFaid", new object[] {
                        QQOrEmail,
                        begindate,
                        enddate,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCreditQueryListForFaid(string QQOrEmail, System.DateTime begindate, System.DateTime enddate, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCreditQueryListForFaid", new object[] {
                        QQOrEmail,
                        begindate,
                        enddate,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCreditQueryListForFaid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditQueryListForFaidAsync(string QQOrEmail, System.DateTime begindate, System.DateTime enddate, int istart, int imax) {
            this.GetCreditQueryListForFaidAsync(QQOrEmail, begindate, enddate, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetCreditQueryListForFaidAsync(string QQOrEmail, System.DateTime begindate, System.DateTime enddate, int istart, int imax, object userState) {
            if ((this.GetCreditQueryListForFaidOperationCompleted == null)) {
                this.GetCreditQueryListForFaidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditQueryListForFaidOperationCompleted);
            }
            this.InvokeAsync("GetCreditQueryListForFaid", new object[] {
                        QQOrEmail,
                        begindate,
                        enddate,
                        istart,
                        imax}, this.GetCreditQueryListForFaidOperationCompleted, userState);
        }
        
        private void OnGetCreditQueryListForFaidOperationCompleted(object arg) {
            if ((this.GetCreditQueryListForFaidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditQueryListForFaidCompleted(this, new GetCreditQueryListForFaidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCreditQueryList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCreditQueryList(string Flistid, int istart, int imax) {
            object[] results = this.Invoke("GetCreditQueryList", new object[] {
                        Flistid,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCreditQueryList(string Flistid, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCreditQueryList", new object[] {
                        Flistid,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCreditQueryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditQueryListAsync(string Flistid, int istart, int imax) {
            this.GetCreditQueryListAsync(Flistid, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetCreditQueryListAsync(string Flistid, int istart, int imax, object userState) {
            if ((this.GetCreditQueryListOperationCompleted == null)) {
                this.GetCreditQueryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditQueryListOperationCompleted);
            }
            this.InvokeAsync("GetCreditQueryList", new object[] {
                        Flistid,
                        istart,
                        imax}, this.GetCreditQueryListOperationCompleted, userState);
        }
        
        private void OnGetCreditQueryListOperationCompleted(object arg) {
            if ((this.GetCreditQueryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditQueryListCompleted(this, new GetCreditQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatPay_InitGrid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatPay_InitGrid(string WeekIndex) {
            object[] results = this.Invoke("BatPay_InitGrid", new object[] {
                        WeekIndex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatPay_InitGrid(string WeekIndex, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatPay_InitGrid", new object[] {
                        WeekIndex}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndBatPay_InitGrid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_InitGridAsync(string WeekIndex) {
            this.BatPay_InitGridAsync(WeekIndex, null);
        }
        
        /// <remarks/>
        public void BatPay_InitGridAsync(string WeekIndex, object userState) {
            if ((this.BatPay_InitGridOperationCompleted == null)) {
                this.BatPay_InitGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_InitGridOperationCompleted);
            }
            this.InvokeAsync("BatPay_InitGrid", new object[] {
                        WeekIndex}, this.BatPay_InitGridOperationCompleted, userState);
        }
        
        private void OnBatPay_InitGridOperationCompleted(object arg) {
            if ((this.BatPay_InitGridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_InitGridCompleted(this, new BatPay_InitGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatPay_GetBank", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatPay_GetBank() {
            object[] results = this.Invoke("BatPay_GetBank", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatPay_GetBank(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatPay_GetBank", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndBatPay_GetBank(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_GetBankAsync() {
            this.BatPay_GetBankAsync(null);
        }
        
        /// <remarks/>
        public void BatPay_GetBankAsync(object userState) {
            if ((this.BatPay_GetBankOperationCompleted == null)) {
                this.BatPay_GetBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_GetBankOperationCompleted);
            }
            this.InvokeAsync("BatPay_GetBank", new object[0], this.BatPay_GetBankOperationCompleted, userState);
        }
        
        private void OnBatPay_GetBankOperationCompleted(object arg) {
            if ((this.BatPay_GetBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_GetBankCompleted(this, new BatPay_GetBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatPay_CanVisible", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CanVisible(string strDate) {
            object[] results = this.Invoke("BatPay_CanVisible", new object[] {
                        strDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatPay_CanVisible(string strDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatPay_CanVisible", new object[] {
                        strDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndBatPay_CanVisible(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CanVisibleAsync(string strDate) {
            this.BatPay_CanVisibleAsync(strDate, null);
        }
        
        /// <remarks/>
        public void BatPay_CanVisibleAsync(string strDate, object userState) {
            if ((this.BatPay_CanVisibleOperationCompleted == null)) {
                this.BatPay_CanVisibleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CanVisibleOperationCompleted);
            }
            this.InvokeAsync("BatPay_CanVisible", new object[] {
                        strDate}, this.BatPay_CanVisibleOperationCompleted, userState);
        }
        
        private void OnBatPay_CanVisibleOperationCompleted(object arg) {
            if ((this.BatPay_CanVisibleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CanVisibleCompleted(this, new BatPay_CanVisibleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatPay_SixCheck", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_SixCheck(string strBatchID) {
            object[] results = this.Invoke("BatPay_SixCheck", new object[] {
                        strBatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatPay_SixCheck(string strBatchID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatPay_SixCheck", new object[] {
                        strBatchID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndBatPay_SixCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_SixCheckAsync(string strBatchID) {
            this.BatPay_SixCheckAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BatPay_SixCheckAsync(string strBatchID, object userState) {
            if ((this.BatPay_SixCheckOperationCompleted == null)) {
                this.BatPay_SixCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_SixCheckOperationCompleted);
            }
            this.InvokeAsync("BatPay_SixCheck", new object[] {
                        strBatchID}, this.BatPay_SixCheckOperationCompleted, userState);
        }
        
        private void OnBatPay_SixCheckOperationCompleted(object arg) {
            if ((this.BatPay_SixCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_SixCheckCompleted(this, new BatPay_SixCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatPay_CheckSnapFinish", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CheckSnapFinish(string strBatchID) {
            object[] results = this.Invoke("BatPay_CheckSnapFinish", new object[] {
                        strBatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatPay_CheckSnapFinish(string strBatchID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatPay_CheckSnapFinish", new object[] {
                        strBatchID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndBatPay_CheckSnapFinish(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CheckSnapFinishAsync(string strBatchID) {
            this.BatPay_CheckSnapFinishAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BatPay_CheckSnapFinishAsync(string strBatchID, object userState) {
            if ((this.BatPay_CheckSnapFinishOperationCompleted == null)) {
                this.BatPay_CheckSnapFinishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CheckSnapFinishOperationCompleted);
            }
            this.InvokeAsync("BatPay_CheckSnapFinish", new object[] {
                        strBatchID}, this.BatPay_CheckSnapFinishOperationCompleted, userState);
        }
        
        private void OnBatPay_CheckSnapFinishOperationCompleted(object arg) {
            if ((this.BatPay_CheckSnapFinishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CheckSnapFinishCompleted(this, new BatPay_CheckSnapFinishCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatPay_CheckFinish11", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CheckFinish11(string strBatchID) {
            object[] results = this.Invoke("BatPay_CheckFinish11", new object[] {
                        strBatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatPay_CheckFinish11(string strBatchID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatPay_CheckFinish11", new object[] {
                        strBatchID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndBatPay_CheckFinish11(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CheckFinish11Async(string strBatchID) {
            this.BatPay_CheckFinish11Async(strBatchID, null);
        }
        
        /// <remarks/>
        public void BatPay_CheckFinish11Async(string strBatchID, object userState) {
            if ((this.BatPay_CheckFinish11OperationCompleted == null)) {
                this.BatPay_CheckFinish11OperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CheckFinish11OperationCompleted);
            }
            this.InvokeAsync("BatPay_CheckFinish11", new object[] {
                        strBatchID}, this.BatPay_CheckFinish11OperationCompleted, userState);
        }
        
        private void OnBatPay_CheckFinish11OperationCompleted(object arg) {
            if ((this.BatPay_CheckFinish11Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CheckFinish11Completed(this, new BatPay_CheckFinish11CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatPay_GetErrorMsg", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BatPay_GetErrorMsg(string strBatchID, int iStatus) {
            object[] results = this.Invoke("BatPay_GetErrorMsg", new object[] {
                        strBatchID,
                        iStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatPay_GetErrorMsg(string strBatchID, int iStatus, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatPay_GetErrorMsg", new object[] {
                        strBatchID,
                        iStatus}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndBatPay_GetErrorMsg(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_GetErrorMsgAsync(string strBatchID, int iStatus) {
            this.BatPay_GetErrorMsgAsync(strBatchID, iStatus, null);
        }
        
        /// <remarks/>
        public void BatPay_GetErrorMsgAsync(string strBatchID, int iStatus, object userState) {
            if ((this.BatPay_GetErrorMsgOperationCompleted == null)) {
                this.BatPay_GetErrorMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_GetErrorMsgOperationCompleted);
            }
            this.InvokeAsync("BatPay_GetErrorMsg", new object[] {
                        strBatchID,
                        iStatus}, this.BatPay_GetErrorMsgOperationCompleted, userState);
        }
        
        private void OnBatPay_GetErrorMsgOperationCompleted(object arg) {
            if ((this.BatPay_GetErrorMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_GetErrorMsgCompleted(this, new BatPay_GetErrorMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatpayDetail_GetCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BatpayDetail_GetCount(string batchID, int state, string username, string bankacc, string paybank) {
            object[] results = this.Invoke("BatpayDetail_GetCount", new object[] {
                        batchID,
                        state,
                        username,
                        bankacc,
                        paybank});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatpayDetail_GetCount(string batchID, int state, string username, string bankacc, string paybank, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatpayDetail_GetCount", new object[] {
                        batchID,
                        state,
                        username,
                        bankacc,
                        paybank}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndBatpayDetail_GetCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BatpayDetail_GetCountAsync(string batchID, int state, string username, string bankacc, string paybank) {
            this.BatpayDetail_GetCountAsync(batchID, state, username, bankacc, paybank, null);
        }
        
        /// <remarks/>
        public void BatpayDetail_GetCountAsync(string batchID, int state, string username, string bankacc, string paybank, object userState) {
            if ((this.BatpayDetail_GetCountOperationCompleted == null)) {
                this.BatpayDetail_GetCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatpayDetail_GetCountOperationCompleted);
            }
            this.InvokeAsync("BatpayDetail_GetCount", new object[] {
                        batchID,
                        state,
                        username,
                        bankacc,
                        paybank}, this.BatpayDetail_GetCountOperationCompleted, userState);
        }
        
        private void OnBatpayDetail_GetCountOperationCompleted(object arg) {
            if ((this.BatpayDetail_GetCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatpayDetail_GetCountCompleted(this, new BatpayDetail_GetCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatpayDetail_BindData", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatpayDetail_BindData(int max, int start, string BatchID, int state, string username, string bankacc, string paybank) {
            object[] results = this.Invoke("BatpayDetail_BindData", new object[] {
                        max,
                        start,
                        BatchID,
                        state,
                        username,
                        bankacc,
                        paybank});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatpayDetail_BindData(int max, int start, string BatchID, int state, string username, string bankacc, string paybank, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatpayDetail_BindData", new object[] {
                        max,
                        start,
                        BatchID,
                        state,
                        username,
                        bankacc,
                        paybank}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndBatpayDetail_BindData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatpayDetail_BindDataAsync(int max, int start, string BatchID, int state, string username, string bankacc, string paybank) {
            this.BatpayDetail_BindDataAsync(max, start, BatchID, state, username, bankacc, paybank, null);
        }
        
        /// <remarks/>
        public void BatpayDetail_BindDataAsync(int max, int start, string BatchID, int state, string username, string bankacc, string paybank, object userState) {
            if ((this.BatpayDetail_BindDataOperationCompleted == null)) {
                this.BatpayDetail_BindDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatpayDetail_BindDataOperationCompleted);
            }
            this.InvokeAsync("BatpayDetail_BindData", new object[] {
                        max,
                        start,
                        BatchID,
                        state,
                        username,
                        bankacc,
                        paybank}, this.BatpayDetail_BindDataOperationCompleted, userState);
        }
        
        private void OnBatpayDetail_BindDataOperationCompleted(object arg) {
            if ((this.BatpayDetail_BindDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatpayDetail_BindDataCompleted(this, new BatpayDetail_BindDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRealTimeOrderListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRealTimeOrderListCount(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype) {
            object[] results = this.Invoke("GetRealTimeOrderListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRealTimeOrderListCount(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRealTimeOrderListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetRealTimeOrderListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRealTimeOrderListCountAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype) {
            this.GetRealTimeOrderListCountAsync(u_ID, u_BeginTime, u_EndTime, fstate, fnum, banktype, null);
        }
        
        /// <remarks/>
        public void GetRealTimeOrderListCountAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, object userState) {
            if ((this.GetRealTimeOrderListCountOperationCompleted == null)) {
                this.GetRealTimeOrderListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRealTimeOrderListCountOperationCompleted);
            }
            this.InvokeAsync("GetRealTimeOrderListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype}, this.GetRealTimeOrderListCountOperationCompleted, userState);
        }
        
        private void OnGetRealTimeOrderListCountOperationCompleted(object arg) {
            if ((this.GetRealTimeOrderListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRealTimeOrderListCountCompleted(this, new GetRealTimeOrderListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRealTimeOrderList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRealTimeOrderList(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, string sorttype, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetRealTimeOrderList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRealTimeOrderList(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, string sorttype, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRealTimeOrderList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRealTimeOrderList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRealTimeOrderListAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, string sorttype, int iPageStart, int iPageMax) {
            this.GetRealTimeOrderListAsync(u_ID, u_BeginTime, u_EndTime, fstate, fnum, banktype, sorttype, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetRealTimeOrderListAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, string sorttype, int iPageStart, int iPageMax, object userState) {
            if ((this.GetRealTimeOrderListOperationCompleted == null)) {
                this.GetRealTimeOrderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRealTimeOrderListOperationCompleted);
            }
            this.InvokeAsync("GetRealTimeOrderList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax}, this.GetRealTimeOrderListOperationCompleted, userState);
        }
        
        private void OnGetRealTimeOrderListOperationCompleted(object arg) {
            if ((this.GetRealTimeOrderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRealTimeOrderListCompleted(this, new GetRealTimeOrderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetInversatorSignDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInversatorSignDetail(int signType, string strID, string serialno, string cerNum, string spid, string spName, string beginDateStr, string endDateStr, int lim_start, int lim_count) {
            object[] results = this.Invoke("GetInversatorSignDetail", new object[] {
                        signType,
                        strID,
                        serialno,
                        cerNum,
                        spid,
                        spName,
                        beginDateStr,
                        endDateStr,
                        lim_start,
                        lim_count});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInversatorSignDetail(int signType, string strID, string serialno, string cerNum, string spid, string spName, string beginDateStr, string endDateStr, int lim_start, int lim_count, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInversatorSignDetail", new object[] {
                        signType,
                        strID,
                        serialno,
                        cerNum,
                        spid,
                        spName,
                        beginDateStr,
                        endDateStr,
                        lim_start,
                        lim_count}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetInversatorSignDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInversatorSignDetailAsync(int signType, string strID, string serialno, string cerNum, string spid, string spName, string beginDateStr, string endDateStr, int lim_start, int lim_count) {
            this.GetInversatorSignDetailAsync(signType, strID, serialno, cerNum, spid, spName, beginDateStr, endDateStr, lim_start, lim_count, null);
        }
        
        /// <remarks/>
        public void GetInversatorSignDetailAsync(int signType, string strID, string serialno, string cerNum, string spid, string spName, string beginDateStr, string endDateStr, int lim_start, int lim_count, object userState) {
            if ((this.GetInversatorSignDetailOperationCompleted == null)) {
                this.GetInversatorSignDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInversatorSignDetailOperationCompleted);
            }
            this.InvokeAsync("GetInversatorSignDetail", new object[] {
                        signType,
                        strID,
                        serialno,
                        cerNum,
                        spid,
                        spName,
                        beginDateStr,
                        endDateStr,
                        lim_start,
                        lim_count}, this.GetInversatorSignDetailOperationCompleted, userState);
        }
        
        private void OnGetInversatorSignDetailOperationCompleted(object arg) {
            if ((this.GetInversatorSignDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInversatorSignDetailCompleted(this, new GetInversatorSignDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundInfo(string listID, string uid, string beginDateStr, string endDateStr, string purType, int limStart, int limCount) {
            object[] results = this.Invoke("GetFundInfo", new object[] {
                        listID,
                        uid,
                        beginDateStr,
                        endDateStr,
                        purType,
                        limStart,
                        limCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundInfo(string listID, string uid, string beginDateStr, string endDateStr, string purType, int limStart, int limCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundInfo", new object[] {
                        listID,
                        uid,
                        beginDateStr,
                        endDateStr,
                        purType,
                        limStart,
                        limCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundInfoAsync(string listID, string uid, string beginDateStr, string endDateStr, string purType, int limStart, int limCount) {
            this.GetFundInfoAsync(listID, uid, beginDateStr, endDateStr, purType, limStart, limCount, null);
        }
        
        /// <remarks/>
        public void GetFundInfoAsync(string listID, string uid, string beginDateStr, string endDateStr, string purType, int limStart, int limCount, object userState) {
            if ((this.GetFundInfoOperationCompleted == null)) {
                this.GetFundInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundInfoOperationCompleted);
            }
            this.InvokeAsync("GetFundInfo", new object[] {
                        listID,
                        uid,
                        beginDateStr,
                        endDateStr,
                        purType,
                        limStart,
                        limCount}, this.GetFundInfoOperationCompleted, userState);
        }
        
        private void OnGetFundInfoOperationCompleted(object arg) {
            if ((this.GetFundInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundInfoCompleted(this, new GetFundInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetChargeInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetChargeInfo(string qType, string strID, string beginDateStr, string endDateStr, string listid, int lim_start, int lim_count) {
            object[] results = this.Invoke("GetChargeInfo", new object[] {
                        qType,
                        strID,
                        beginDateStr,
                        endDateStr,
                        listid,
                        lim_start,
                        lim_count});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChargeInfo(string qType, string strID, string beginDateStr, string endDateStr, string listid, int lim_start, int lim_count, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChargeInfo", new object[] {
                        qType,
                        strID,
                        beginDateStr,
                        endDateStr,
                        listid,
                        lim_start,
                        lim_count}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetChargeInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChargeInfoAsync(string qType, string strID, string beginDateStr, string endDateStr, string listid, int lim_start, int lim_count) {
            this.GetChargeInfoAsync(qType, strID, beginDateStr, endDateStr, listid, lim_start, lim_count, null);
        }
        
        /// <remarks/>
        public void GetChargeInfoAsync(string qType, string strID, string beginDateStr, string endDateStr, string listid, int lim_start, int lim_count, object userState) {
            if ((this.GetChargeInfoOperationCompleted == null)) {
                this.GetChargeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChargeInfoOperationCompleted);
            }
            this.InvokeAsync("GetChargeInfo", new object[] {
                        qType,
                        strID,
                        beginDateStr,
                        endDateStr,
                        listid,
                        lim_start,
                        lim_count}, this.GetChargeInfoOperationCompleted, userState);
        }
        
        private void OnGetChargeInfoOperationCompleted(object arg) {
            if ((this.GetChargeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChargeInfoCompleted(this, new GetChargeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryUid_ByCerNum", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryUid_ByCerNum(string cerNum) {
            object[] results = this.Invoke("QueryUid_ByCerNum", new object[] {
                        cerNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryUid_ByCerNum(string cerNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryUid_ByCerNum", new object[] {
                        cerNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndQueryUid_ByCerNum(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUid_ByCerNumAsync(string cerNum) {
            this.QueryUid_ByCerNumAsync(cerNum, null);
        }
        
        /// <remarks/>
        public void QueryUid_ByCerNumAsync(string cerNum, object userState) {
            if ((this.QueryUid_ByCerNumOperationCompleted == null)) {
                this.QueryUid_ByCerNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUid_ByCerNumOperationCompleted);
            }
            this.InvokeAsync("QueryUid_ByCerNum", new object[] {
                        cerNum}, this.QueryUid_ByCerNumOperationCompleted, userState);
        }
        
        private void OnQueryUid_ByCerNumOperationCompleted(object arg) {
            if ((this.QueryUid_ByCerNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUid_ByCerNumCompleted(this, new QueryUid_ByCerNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserFundAccountInfo2", RequestElementName="GetUserFundAccountInfo2", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseElementName="GetUserFundAccountInfo2Response", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetUserFundAccountInfo2Result")]
        public System.Data.DataSet GetUserFundAccountInfo(string uin) {
            object[] results = this.Invoke("GetUserFundAccountInfo", new object[] {
                        uin});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserFundAccountInfo(string uin, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserFundAccountInfo", new object[] {
                        uin}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserFundAccountInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserFundAccountInfoAsync(string uin) {
            this.GetUserFundAccountInfoAsync(uin, null);
        }
        
        /// <remarks/>
        public void GetUserFundAccountInfoAsync(string uin, object userState) {
            if ((this.GetUserFundAccountInfoOperationCompleted == null)) {
                this.GetUserFundAccountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserFundAccountInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserFundAccountInfo", new object[] {
                        uin}, this.GetUserFundAccountInfoOperationCompleted, userState);
        }
        
        private void OnGetUserFundAccountInfoOperationCompleted(object arg) {
            if ((this.GetUserFundAccountInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserFundAccountInfoCompleted(this, new GetUserFundAccountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="GetUserFundAccountInfo1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserFundAccountInfo", RequestElementName="GetUserFundAccountInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseElementName="GetUserFundAccountInfoResponse", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetUserFundAccountInfoResult")]
        public System.Data.DataSet GetUserFundAccountInfo(int type, string param1, string param2) {
            object[] results = this.Invoke("GetUserFundAccountInfo1", new object[] {
                        type,
                        param1,
                        param2});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserFundAccountInfo1(int type, string param1, string param2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserFundAccountInfo1", new object[] {
                        type,
                        param1,
                        param2}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserFundAccountInfo1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserFundAccountInfo1Async(int type, string param1, string param2) {
            this.GetUserFundAccountInfo1Async(type, param1, param2, null);
        }
        
        /// <remarks/>
        public void GetUserFundAccountInfo1Async(int type, string param1, string param2, object userState) {
            if ((this.GetUserFundAccountInfo1OperationCompleted == null)) {
                this.GetUserFundAccountInfo1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserFundAccountInfo1OperationCompleted);
            }
            this.InvokeAsync("GetUserFundAccountInfo1", new object[] {
                        type,
                        param1,
                        param2}, this.GetUserFundAccountInfo1OperationCompleted, userState);
        }
        
        private void OnGetUserFundAccountInfo1OperationCompleted(object arg) {
            if ((this.GetUserFundAccountInfo1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserFundAccountInfo1Completed(this, new GetUserFundAccountInfo1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserFundCardBind", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserFundCardBind(string fuid, string bankType, string bankID) {
            object[] results = this.Invoke("GetUserFundCardBind", new object[] {
                        fuid,
                        bankType,
                        bankID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserFundCardBind(string fuid, string bankType, string bankID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserFundCardBind", new object[] {
                        fuid,
                        bankType,
                        bankID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserFundCardBind(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserFundCardBindAsync(string fuid, string bankType, string bankID) {
            this.GetUserFundCardBindAsync(fuid, bankType, bankID, null);
        }
        
        /// <remarks/>
        public void GetUserFundCardBindAsync(string fuid, string bankType, string bankID, object userState) {
            if ((this.GetUserFundCardBindOperationCompleted == null)) {
                this.GetUserFundCardBindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserFundCardBindOperationCompleted);
            }
            this.InvokeAsync("GetUserFundCardBind", new object[] {
                        fuid,
                        bankType,
                        bankID}, this.GetUserFundCardBindOperationCompleted, userState);
        }
        
        private void OnGetUserFundCardBindOperationCompleted(object arg) {
            if ((this.GetUserFundCardBindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserFundCardBindCompleted(this, new GetUserFundCardBindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayCardInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPayCardInfo(string qqid) {
            object[] results = this.Invoke("GetPayCardInfo", new object[] {
                        qqid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayCardInfo(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayCardInfo", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetPayCardInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayCardInfoAsync(string qqid) {
            this.GetPayCardInfoAsync(qqid, null);
        }
        
        /// <remarks/>
        public void GetPayCardInfoAsync(string qqid, object userState) {
            if ((this.GetPayCardInfoOperationCompleted == null)) {
                this.GetPayCardInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayCardInfoOperationCompleted);
            }
            this.InvokeAsync("GetPayCardInfo", new object[] {
                        qqid}, this.GetPayCardInfoOperationCompleted, userState);
        }
        
        private void OnGetPayCardInfoOperationCompleted(object arg) {
            if ((this.GetPayCardInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayCardInfoCompleted(this, new GetPayCardInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayCardInfoEx", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPayCardInfoEx(string qqid) {
            object[] results = this.Invoke("GetPayCardInfoEx", new object[] {
                        qqid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayCardInfoEx(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayCardInfoEx", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetPayCardInfoEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayCardInfoExAsync(string qqid) {
            this.GetPayCardInfoExAsync(qqid, null);
        }
        
        /// <remarks/>
        public void GetPayCardInfoExAsync(string qqid, object userState) {
            if ((this.GetPayCardInfoExOperationCompleted == null)) {
                this.GetPayCardInfoExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayCardInfoExOperationCompleted);
            }
            this.InvokeAsync("GetPayCardInfoEx", new object[] {
                        qqid}, this.GetPayCardInfoExOperationCompleted, userState);
        }
        
        private void OnGetPayCardInfoExOperationCompleted(object arg) {
            if ((this.GetPayCardInfoExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayCardInfoExCompleted(this, new GetPayCardInfoExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBindBankCard", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBindBankCard(string qqId) {
            object[] results = this.Invoke("GetBindBankCard", new object[] {
                        qqId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBindBankCard(string qqId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBindBankCard", new object[] {
                        qqId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBindBankCard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBindBankCardAsync(string qqId) {
            this.GetBindBankCardAsync(qqId, null);
        }
        
        /// <remarks/>
        public void GetBindBankCardAsync(string qqId, object userState) {
            if ((this.GetBindBankCardOperationCompleted == null)) {
                this.GetBindBankCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBindBankCardOperationCompleted);
            }
            this.InvokeAsync("GetBindBankCard", new object[] {
                        qqId}, this.GetBindBankCardOperationCompleted, userState);
        }
        
        private void OnGetBindBankCardOperationCompleted(object arg) {
            if ((this.GetBindBankCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBindBankCardCompleted(this, new GetBindBankCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundSupportBank", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFundSupportBank() {
            object[] results = this.Invoke("GetFundSupportBank", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundSupportBank(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundSupportBank", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetFundSupportBank(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundSupportBankAsync() {
            this.GetFundSupportBankAsync(null);
        }
        
        /// <remarks/>
        public void GetFundSupportBankAsync(object userState) {
            if ((this.GetFundSupportBankOperationCompleted == null)) {
                this.GetFundSupportBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundSupportBankOperationCompleted);
            }
            this.InvokeAsync("GetFundSupportBank", new object[0], this.GetFundSupportBankOperationCompleted, userState);
        }
        
        private void OnGetFundSupportBankOperationCompleted(object arg) {
            if ((this.GetFundSupportBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundSupportBankCompleted(this, new GetFundSupportBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ModifyFundPayCard", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyFundPayCard(string qqId, string tradeId, string uid, string bindSerialNo, string bankType, string cardTail, string bankId, string mobile) {
            object[] results = this.Invoke("ModifyFundPayCard", new object[] {
                        qqId,
                        tradeId,
                        uid,
                        bindSerialNo,
                        bankType,
                        cardTail,
                        bankId,
                        mobile});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginModifyFundPayCard(string qqId, string tradeId, string uid, string bindSerialNo, string bankType, string cardTail, string bankId, string mobile, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ModifyFundPayCard", new object[] {
                        qqId,
                        tradeId,
                        uid,
                        bindSerialNo,
                        bankType,
                        cardTail,
                        bankId,
                        mobile}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndModifyFundPayCard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyFundPayCardAsync(string qqId, string tradeId, string uid, string bindSerialNo, string bankType, string cardTail, string bankId, string mobile) {
            this.ModifyFundPayCardAsync(qqId, tradeId, uid, bindSerialNo, bankType, cardTail, bankId, mobile, null);
        }
        
        /// <remarks/>
        public void ModifyFundPayCardAsync(string qqId, string tradeId, string uid, string bindSerialNo, string bankType, string cardTail, string bankId, string mobile, object userState) {
            if ((this.ModifyFundPayCardOperationCompleted == null)) {
                this.ModifyFundPayCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyFundPayCardOperationCompleted);
            }
            this.InvokeAsync("ModifyFundPayCard", new object[] {
                        qqId,
                        tradeId,
                        uid,
                        bindSerialNo,
                        bankType,
                        cardTail,
                        bankId,
                        mobile}, this.ModifyFundPayCardOperationCompleted, userState);
        }
        
        private void OnModifyFundPayCardOperationCompleted(object arg) {
            if ((this.ModifyFundPayCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyFundPayCardCompleted(this, new ModifyFundPayCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundTradeList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundTradeList(string qqId, int pageIndex, int pageSize) {
            object[] results = this.Invoke("GetFundTradeList", new object[] {
                        qqId,
                        pageIndex,
                        pageSize});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundTradeList(string qqId, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundTradeList", new object[] {
                        qqId,
                        pageIndex,
                        pageSize}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundTradeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundTradeListAsync(string qqId, int pageIndex, int pageSize) {
            this.GetFundTradeListAsync(qqId, pageIndex, pageSize, null);
        }
        
        /// <remarks/>
        public void GetFundTradeListAsync(string qqId, int pageIndex, int pageSize, object userState) {
            if ((this.GetFundTradeListOperationCompleted == null)) {
                this.GetFundTradeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundTradeListOperationCompleted);
            }
            this.InvokeAsync("GetFundTradeList", new object[] {
                        qqId,
                        pageIndex,
                        pageSize}, this.GetFundTradeListOperationCompleted, userState);
        }
        
        private void OnGetFundTradeListOperationCompleted(object arg) {
            if ((this.GetFundTradeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundTradeListCompleted(this, new GetFundTradeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserCrtCFDInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserCrtCFDInfo(string qqid, int creType) {
            object[] results = this.Invoke("GetUserCrtCFDInfo", new object[] {
                        qqid,
                        creType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserCrtCFDInfo(string qqid, int creType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserCrtCFDInfo", new object[] {
                        qqid,
                        creType}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetUserCrtCFDInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserCrtCFDInfoAsync(string qqid, int creType) {
            this.GetUserCrtCFDInfoAsync(qqid, creType, null);
        }
        
        /// <remarks/>
        public void GetUserCrtCFDInfoAsync(string qqid, int creType, object userState) {
            if ((this.GetUserCrtCFDInfoOperationCompleted == null)) {
                this.GetUserCrtCFDInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserCrtCFDInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserCrtCFDInfo", new object[] {
                        qqid,
                        creType}, this.GetUserCrtCFDInfoOperationCompleted, userState);
        }
        
        private void OnGetUserCrtCFDInfoOperationCompleted(object arg) {
            if ((this.GetUserCrtCFDInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCrtCFDInfoCompleted(this, new GetUserCrtCFDInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCFDInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCFDInfo(string qqid) {
            object[] results = this.Invoke("QueryCFDInfo", new object[] {
                        qqid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCFDInfo(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCFDInfo", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryCFDInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCFDInfoAsync(string qqid) {
            this.QueryCFDInfoAsync(qqid, null);
        }
        
        /// <remarks/>
        public void QueryCFDInfoAsync(string qqid, object userState) {
            if ((this.QueryCFDInfoOperationCompleted == null)) {
                this.QueryCFDInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCFDInfoOperationCompleted);
            }
            this.InvokeAsync("QueryCFDInfo", new object[] {
                        qqid}, this.QueryCFDInfoOperationCompleted, userState);
        }
        
        private void OnQueryCFDInfoOperationCompleted(object arg) {
            if ((this.QueryCFDInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCFDInfoCompleted(this, new QueryCFDInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediCertManageCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMediCertManageCount(string spid, int status, int liststatus) {
            object[] results = this.Invoke("GetMediCertManageCount", new object[] {
                        spid,
                        status,
                        liststatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediCertManageCount(string spid, int status, int liststatus, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediCertManageCount", new object[] {
                        spid,
                        status,
                        liststatus}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetMediCertManageCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediCertManageCountAsync(string spid, int status, int liststatus) {
            this.GetMediCertManageCountAsync(spid, status, liststatus, null);
        }
        
        /// <remarks/>
        public void GetMediCertManageCountAsync(string spid, int status, int liststatus, object userState) {
            if ((this.GetMediCertManageCountOperationCompleted == null)) {
                this.GetMediCertManageCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediCertManageCountOperationCompleted);
            }
            this.InvokeAsync("GetMediCertManageCount", new object[] {
                        spid,
                        status,
                        liststatus}, this.GetMediCertManageCountOperationCompleted, userState);
        }
        
        private void OnGetMediCertManageCountOperationCompleted(object arg) {
            if ((this.GetMediCertManageCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediCertManageCountCompleted(this, new GetMediCertManageCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediCertManageList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediCertManageList(string spid, int status, int liststatus, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetMediCertManageList", new object[] {
                        spid,
                        status,
                        liststatus,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediCertManageList(string spid, int status, int liststatus, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediCertManageList", new object[] {
                        spid,
                        status,
                        liststatus,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediCertManageList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediCertManageListAsync(string spid, int status, int liststatus, int iPageStart, int iPageMax) {
            this.GetMediCertManageListAsync(spid, status, liststatus, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetMediCertManageListAsync(string spid, int status, int liststatus, int iPageStart, int iPageMax, object userState) {
            if ((this.GetMediCertManageListOperationCompleted == null)) {
                this.GetMediCertManageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediCertManageListOperationCompleted);
            }
            this.InvokeAsync("GetMediCertManageList", new object[] {
                        spid,
                        status,
                        liststatus,
                        iPageStart,
                        iPageMax}, this.GetMediCertManageListOperationCompleted, userState);
        }
        
        private void OnGetMediCertManageListOperationCompleted(object arg) {
            if ((this.GetMediCertManageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediCertManageListCompleted(this, new GetMediCertManageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediOperatorManageList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediOperatorManageList(string spid, string account) {
            object[] results = this.Invoke("GetMediOperatorManageList", new object[] {
                        spid,
                        account});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediOperatorManageList(string spid, string account, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediOperatorManageList", new object[] {
                        spid,
                        account}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediOperatorManageList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediOperatorManageListAsync(string spid, string account) {
            this.GetMediOperatorManageListAsync(spid, account, null);
        }
        
        /// <remarks/>
        public void GetMediOperatorManageListAsync(string spid, string account, object userState) {
            if ((this.GetMediOperatorManageListOperationCompleted == null)) {
                this.GetMediOperatorManageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediOperatorManageListOperationCompleted);
            }
            this.InvokeAsync("GetMediOperatorManageList", new object[] {
                        spid,
                        account}, this.GetMediOperatorManageListOperationCompleted, userState);
        }
        
        private void OnGetMediOperatorManageListOperationCompleted(object arg) {
            if ((this.GetMediOperatorManageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediOperatorManageListCompleted(this, new GetMediOperatorManageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediOperatorRole", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMediOperatorRole(string spid, string qqid) {
            object[] results = this.Invoke("GetMediOperatorRole", new object[] {
                        spid,
                        qqid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediOperatorRole(string spid, string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediOperatorRole", new object[] {
                        spid,
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetMediOperatorRole(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediOperatorRoleAsync(string spid, string qqid) {
            this.GetMediOperatorRoleAsync(spid, qqid, null);
        }
        
        /// <remarks/>
        public void GetMediOperatorRoleAsync(string spid, string qqid, object userState) {
            if ((this.GetMediOperatorRoleOperationCompleted == null)) {
                this.GetMediOperatorRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediOperatorRoleOperationCompleted);
            }
            this.InvokeAsync("GetMediOperatorRole", new object[] {
                        spid,
                        qqid}, this.GetMediOperatorRoleOperationCompleted, userState);
        }
        
        private void OnGetMediOperatorRoleOperationCompleted(object arg) {
            if ((this.GetMediOperatorRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediOperatorRoleCompleted(this, new GetMediOperatorRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediOperatorRoleNew", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMediOperatorRoleNew(string spid, string qqid, int signorder) {
            object[] results = this.Invoke("GetMediOperatorRoleNew", new object[] {
                        spid,
                        qqid,
                        signorder});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediOperatorRoleNew(string spid, string qqid, int signorder, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediOperatorRoleNew", new object[] {
                        spid,
                        qqid,
                        signorder}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetMediOperatorRoleNew(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediOperatorRoleNewAsync(string spid, string qqid, int signorder) {
            this.GetMediOperatorRoleNewAsync(spid, qqid, signorder, null);
        }
        
        /// <remarks/>
        public void GetMediOperatorRoleNewAsync(string spid, string qqid, int signorder, object userState) {
            if ((this.GetMediOperatorRoleNewOperationCompleted == null)) {
                this.GetMediOperatorRoleNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediOperatorRoleNewOperationCompleted);
            }
            this.InvokeAsync("GetMediOperatorRoleNew", new object[] {
                        spid,
                        qqid,
                        signorder}, this.GetMediOperatorRoleNewOperationCompleted, userState);
        }
        
        private void OnGetMediOperatorRoleNewOperationCompleted(object arg) {
            if ((this.GetMediOperatorRoleNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediOperatorRoleNewCompleted(this, new GetMediOperatorRoleNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ResetSynRecordState", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetSynRecordState(string transid, string createtime, int inum) {
            this.Invoke("ResetSynRecordState", new object[] {
                        transid,
                        createtime,
                        inum});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginResetSynRecordState(string transid, string createtime, int inum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ResetSynRecordState", new object[] {
                        transid,
                        createtime,
                        inum}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndResetSynRecordState(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ResetSynRecordStateAsync(string transid, string createtime, int inum) {
            this.ResetSynRecordStateAsync(transid, createtime, inum, null);
        }
        
        /// <remarks/>
        public void ResetSynRecordStateAsync(string transid, string createtime, int inum, object userState) {
            if ((this.ResetSynRecordStateOperationCompleted == null)) {
                this.ResetSynRecordStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetSynRecordStateOperationCompleted);
            }
            this.InvokeAsync("ResetSynRecordState", new object[] {
                        transid,
                        createtime,
                        inum}, this.ResetSynRecordStateOperationCompleted, userState);
        }
        
        private void OnResetSynRecordStateOperationCompleted(object arg) {
            if ((this.ResetSynRecordStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetSynRecordStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SynPayState", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SynPayState(string transid, string createtime) {
            object[] results = this.Invoke("SynPayState", new object[] {
                        transid,
                        createtime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSynPayState(string transid, string createtime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SynPayState", new object[] {
                        transid,
                        createtime}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSynPayState(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SynPayStateAsync(string transid, string createtime) {
            this.SynPayStateAsync(transid, createtime, null);
        }
        
        /// <remarks/>
        public void SynPayStateAsync(string transid, string createtime, object userState) {
            if ((this.SynPayStateOperationCompleted == null)) {
                this.SynPayStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSynPayStateOperationCompleted);
            }
            this.InvokeAsync("SynPayState", new object[] {
                        transid,
                        createtime}, this.SynPayStateOperationCompleted, userState);
        }
        
        private void OnSynPayStateOperationCompleted(object arg) {
            if ((this.SynPayStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SynPayStateCompleted(this, new SynPayStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSynRecordQueryList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSynRecordQueryList(string transid, string begintime, string endtime, int paystatus, int synstatus, int syntype, int paytype, string spid, string spbillno, string purchaser, string bargainor, int flag, int synresult, int istart, int imax) {
            object[] results = this.Invoke("GetSynRecordQueryList", new object[] {
                        transid,
                        begintime,
                        endtime,
                        paystatus,
                        synstatus,
                        syntype,
                        paytype,
                        spid,
                        spbillno,
                        purchaser,
                        bargainor,
                        flag,
                        synresult,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSynRecordQueryList(
                    string transid, 
                    string begintime, 
                    string endtime, 
                    int paystatus, 
                    int synstatus, 
                    int syntype, 
                    int paytype, 
                    string spid, 
                    string spbillno, 
                    string purchaser, 
                    string bargainor, 
                    int flag, 
                    int synresult, 
                    int istart, 
                    int imax, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("GetSynRecordQueryList", new object[] {
                        transid,
                        begintime,
                        endtime,
                        paystatus,
                        synstatus,
                        syntype,
                        paytype,
                        spid,
                        spbillno,
                        purchaser,
                        bargainor,
                        flag,
                        synresult,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSynRecordQueryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSynRecordQueryListAsync(string transid, string begintime, string endtime, int paystatus, int synstatus, int syntype, int paytype, string spid, string spbillno, string purchaser, string bargainor, int flag, int synresult, int istart, int imax) {
            this.GetSynRecordQueryListAsync(transid, begintime, endtime, paystatus, synstatus, syntype, paytype, spid, spbillno, purchaser, bargainor, flag, synresult, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetSynRecordQueryListAsync(
                    string transid, 
                    string begintime, 
                    string endtime, 
                    int paystatus, 
                    int synstatus, 
                    int syntype, 
                    int paytype, 
                    string spid, 
                    string spbillno, 
                    string purchaser, 
                    string bargainor, 
                    int flag, 
                    int synresult, 
                    int istart, 
                    int imax, 
                    object userState) {
            if ((this.GetSynRecordQueryListOperationCompleted == null)) {
                this.GetSynRecordQueryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSynRecordQueryListOperationCompleted);
            }
            this.InvokeAsync("GetSynRecordQueryList", new object[] {
                        transid,
                        begintime,
                        endtime,
                        paystatus,
                        synstatus,
                        syntype,
                        paytype,
                        spid,
                        spbillno,
                        purchaser,
                        bargainor,
                        flag,
                        synresult,
                        istart,
                        imax}, this.GetSynRecordQueryListOperationCompleted, userState);
        }
        
        private void OnGetSynRecordQueryListOperationCompleted(object arg) {
            if ((this.GetSynRecordQueryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSynRecordQueryListCompleted(this, new GetSynRecordQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSynRecordQueryDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSynRecordQueryDetail(string transid, string createdate, int flag) {
            object[] results = this.Invoke("GetSynRecordQueryDetail", new object[] {
                        transid,
                        createdate,
                        flag});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSynRecordQueryDetail(string transid, string createdate, int flag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSynRecordQueryDetail", new object[] {
                        transid,
                        createdate,
                        flag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSynRecordQueryDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSynRecordQueryDetailAsync(string transid, string createdate, int flag) {
            this.GetSynRecordQueryDetailAsync(transid, createdate, flag, null);
        }
        
        /// <remarks/>
        public void GetSynRecordQueryDetailAsync(string transid, string createdate, int flag, object userState) {
            if ((this.GetSynRecordQueryDetailOperationCompleted == null)) {
                this.GetSynRecordQueryDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSynRecordQueryDetailOperationCompleted);
            }
            this.InvokeAsync("GetSynRecordQueryDetail", new object[] {
                        transid,
                        createdate,
                        flag}, this.GetSynRecordQueryDetailOperationCompleted, userState);
        }
        
        private void OnGetSynRecordQueryDetailOperationCompleted(object arg) {
            if ((this.GetSynRecordQueryDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSynRecordQueryDetailCompleted(this, new GetSynRecordQueryDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatchSynPayState", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatchSynPayState(string transIds, int counts, out string msg) {
            object[] results = this.Invoke("BatchSynPayState", new object[] {
                        transIds,
                        counts});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatchSynPayState(string transIds, int counts, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatchSynPayState", new object[] {
                        transIds,
                        counts}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndBatchSynPayState(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatchSynPayStateAsync(string transIds, int counts) {
            this.BatchSynPayStateAsync(transIds, counts, null);
        }
        
        /// <remarks/>
        public void BatchSynPayStateAsync(string transIds, int counts, object userState) {
            if ((this.BatchSynPayStateOperationCompleted == null)) {
                this.BatchSynPayStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchSynPayStateOperationCompleted);
            }
            this.InvokeAsync("BatchSynPayState", new object[] {
                        transIds,
                        counts}, this.BatchSynPayStateOperationCompleted, userState);
        }
        
        private void OnBatchSynPayStateOperationCompleted(object arg) {
            if ((this.BatchSynPayStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchSynPayStateCompleted(this, new BatchSynPayStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetB2cReturnDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetB2cReturnDetail(string transid, string drawid) {
            object[] results = this.Invoke("GetB2cReturnDetail", new object[] {
                        transid,
                        drawid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetB2cReturnDetail(string transid, string drawid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetB2cReturnDetail", new object[] {
                        transid,
                        drawid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetB2cReturnDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetB2cReturnDetailAsync(string transid, string drawid) {
            this.GetB2cReturnDetailAsync(transid, drawid, null);
        }
        
        /// <remarks/>
        public void GetB2cReturnDetailAsync(string transid, string drawid, object userState) {
            if ((this.GetB2cReturnDetailOperationCompleted == null)) {
                this.GetB2cReturnDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetB2cReturnDetailOperationCompleted);
            }
            this.InvokeAsync("GetB2cReturnDetail", new object[] {
                        transid,
                        drawid}, this.GetB2cReturnDetailOperationCompleted, userState);
        }
        
        private void OnGetB2cReturnDetailOperationCompleted(object arg) {
            if ((this.GetB2cReturnDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetB2cReturnDetailCompleted(this, new GetB2cReturnDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatPay_InitGrid_R", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatPay_InitGrid_R(string WeekIndex) {
            object[] results = this.Invoke("BatPay_InitGrid_R", new object[] {
                        WeekIndex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatPay_InitGrid_R(string WeekIndex, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatPay_InitGrid_R", new object[] {
                        WeekIndex}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndBatPay_InitGrid_R(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_RAsync(string WeekIndex) {
            this.BatPay_InitGrid_RAsync(WeekIndex, null);
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_RAsync(string WeekIndex, object userState) {
            if ((this.BatPay_InitGrid_ROperationCompleted == null)) {
                this.BatPay_InitGrid_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_InitGrid_ROperationCompleted);
            }
            this.InvokeAsync("BatPay_InitGrid_R", new object[] {
                        WeekIndex}, this.BatPay_InitGrid_ROperationCompleted, userState);
        }
        
        private void OnBatPay_InitGrid_ROperationCompleted(object arg) {
            if ((this.BatPay_InitGrid_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_InitGrid_RCompleted(this, new BatPay_InitGrid_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatPay_CanVisible_R", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CanVisible_R(string strDate) {
            object[] results = this.Invoke("BatPay_CanVisible_R", new object[] {
                        strDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatPay_CanVisible_R(string strDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatPay_CanVisible_R", new object[] {
                        strDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndBatPay_CanVisible_R(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CanVisible_RAsync(string strDate) {
            this.BatPay_CanVisible_RAsync(strDate, null);
        }
        
        /// <remarks/>
        public void BatPay_CanVisible_RAsync(string strDate, object userState) {
            if ((this.BatPay_CanVisible_ROperationCompleted == null)) {
                this.BatPay_CanVisible_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CanVisible_ROperationCompleted);
            }
            this.InvokeAsync("BatPay_CanVisible_R", new object[] {
                        strDate}, this.BatPay_CanVisible_ROperationCompleted, userState);
        }
        
        private void OnBatPay_CanVisible_ROperationCompleted(object arg) {
            if ((this.BatPay_CanVisible_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CanVisible_RCompleted(this, new BatPay_CanVisible_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAllRefundBank", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetAllRefundBank() {
            object[] results = this.Invoke("GetAllRefundBank", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllRefundBank(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllRefundBank", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetAllRefundBank(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRefundBankAsync() {
            this.GetAllRefundBankAsync(null);
        }
        
        /// <remarks/>
        public void GetAllRefundBankAsync(object userState) {
            if ((this.GetAllRefundBankOperationCompleted == null)) {
                this.GetAllRefundBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRefundBankOperationCompleted);
            }
            this.InvokeAsync("GetAllRefundBank", new object[0], this.GetAllRefundBankOperationCompleted, userState);
        }
        
        private void OnGetAllRefundBankOperationCompleted(object arg) {
            if ((this.GetAllRefundBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRefundBankCompleted(this, new GetAllRefundBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRefundList(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetRefundList", new object[] {
                        batchid,
                        ifromtype,
                        irefundtype,
                        irefundstate,
                        ireturnstate,
                        listid,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundList(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefundList", new object[] {
                        batchid,
                        ifromtype,
                        irefundtype,
                        irefundstate,
                        ireturnstate,
                        listid,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRefundList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundListAsync(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid, int iPageStart, int iPageMax) {
            this.GetRefundListAsync(batchid, ifromtype, irefundtype, irefundstate, ireturnstate, listid, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetRefundListAsync(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid, int iPageStart, int iPageMax, object userState) {
            if ((this.GetRefundListOperationCompleted == null)) {
                this.GetRefundListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundListOperationCompleted);
            }
            this.InvokeAsync("GetRefundList", new object[] {
                        batchid,
                        ifromtype,
                        irefundtype,
                        irefundstate,
                        ireturnstate,
                        listid,
                        iPageStart,
                        iPageMax}, this.GetRefundListOperationCompleted, userState);
        }
        
        private void OnGetRefundListOperationCompleted(object arg) {
            if ((this.GetRefundListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundListCompleted(this, new GetRefundListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRefundListCount(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid) {
            object[] results = this.Invoke("GetRefundListCount", new object[] {
                        batchid,
                        ifromtype,
                        irefundtype,
                        irefundstate,
                        ireturnstate,
                        listid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundListCount(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefundListCount", new object[] {
                        batchid,
                        ifromtype,
                        irefundtype,
                        irefundstate,
                        ireturnstate,
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetRefundListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundListCountAsync(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid) {
            this.GetRefundListCountAsync(batchid, ifromtype, irefundtype, irefundstate, ireturnstate, listid, null);
        }
        
        /// <remarks/>
        public void GetRefundListCountAsync(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid, object userState) {
            if ((this.GetRefundListCountOperationCompleted == null)) {
                this.GetRefundListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundListCountOperationCompleted);
            }
            this.InvokeAsync("GetRefundListCount", new object[] {
                        batchid,
                        ifromtype,
                        irefundtype,
                        irefundstate,
                        ireturnstate,
                        listid}, this.GetRefundListCountOperationCompleted, userState);
        }
        
        private void OnGetRefundListCountOperationCompleted(object arg) {
            if ((this.GetRefundListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundListCountCompleted(this, new GetRefundListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UpDateBindInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpDateBindInfo(string QQ) {
            object[] results = this.Invoke("UpDateBindInfo", new object[] {
                        QQ});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpDateBindInfo(string QQ, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpDateBindInfo", new object[] {
                        QQ}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpDateBindInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpDateBindInfoAsync(string QQ) {
            this.UpDateBindInfoAsync(QQ, null);
        }
        
        /// <remarks/>
        public void UpDateBindInfoAsync(string QQ, object userState) {
            if ((this.UpDateBindInfoOperationCompleted == null)) {
                this.UpDateBindInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpDateBindInfoOperationCompleted);
            }
            this.InvokeAsync("UpDateBindInfo", new object[] {
                        QQ}, this.UpDateBindInfoOperationCompleted, userState);
        }
        
        private void OnUpDateBindInfoOperationCompleted(object arg) {
            if ((this.UpDateBindInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpDateBindInfoCompleted(this, new UpDateBindInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMsgNotify", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMsgNotify(string QQ) {
            object[] results = this.Invoke("GetMsgNotify", new object[] {
                        QQ});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMsgNotify(string QQ, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMsgNotify", new object[] {
                        QQ}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMsgNotify(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMsgNotifyAsync(string QQ) {
            this.GetMsgNotifyAsync(QQ, null);
        }
        
        /// <remarks/>
        public void GetMsgNotifyAsync(string QQ, object userState) {
            if ((this.GetMsgNotifyOperationCompleted == null)) {
                this.GetMsgNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMsgNotifyOperationCompleted);
            }
            this.InvokeAsync("GetMsgNotify", new object[] {
                        QQ}, this.GetMsgNotifyOperationCompleted, userState);
        }
        
        private void OnGetMsgNotifyOperationCompleted(object arg) {
            if ((this.GetMsgNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMsgNotifyCompleted(this, new GetMsgNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMsgNotifyByPhoneNumber", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMsgNotifyByPhoneNumber(string phoneNumber) {
            object[] results = this.Invoke("GetMsgNotifyByPhoneNumber", new object[] {
                        phoneNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMsgNotifyByPhoneNumber(string phoneNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMsgNotifyByPhoneNumber", new object[] {
                        phoneNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetMsgNotifyByPhoneNumber(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMsgNotifyByPhoneNumberAsync(string phoneNumber) {
            this.GetMsgNotifyByPhoneNumberAsync(phoneNumber, null);
        }
        
        /// <remarks/>
        public void GetMsgNotifyByPhoneNumberAsync(string phoneNumber, object userState) {
            if ((this.GetMsgNotifyByPhoneNumberOperationCompleted == null)) {
                this.GetMsgNotifyByPhoneNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMsgNotifyByPhoneNumberOperationCompleted);
            }
            this.InvokeAsync("GetMsgNotifyByPhoneNumber", new object[] {
                        phoneNumber}, this.GetMsgNotifyByPhoneNumberOperationCompleted, userState);
        }
        
        private void OnGetMsgNotifyByPhoneNumberOperationCompleted(object arg) {
            if ((this.GetMsgNotifyByPhoneNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMsgNotifyByPhoneNumberCompleted(this, new GetMsgNotifyByPhoneNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UnbindMsgNotify", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnbindMsgNotify(string Fuid) {
            this.Invoke("UnbindMsgNotify", new object[] {
                        Fuid});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnbindMsgNotify(string Fuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnbindMsgNotify", new object[] {
                        Fuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUnbindMsgNotify(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UnbindMsgNotifyAsync(string Fuid) {
            this.UnbindMsgNotifyAsync(Fuid, null);
        }
        
        /// <remarks/>
        public void UnbindMsgNotifyAsync(string Fuid, object userState) {
            if ((this.UnbindMsgNotifyOperationCompleted == null)) {
                this.UnbindMsgNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnbindMsgNotifyOperationCompleted);
            }
            this.InvokeAsync("UnbindMsgNotify", new object[] {
                        Fuid}, this.UnbindMsgNotifyOperationCompleted, userState);
        }
        
        private void OnUnbindMsgNotifyOperationCompleted(object arg) {
            if ((this.UnbindMsgNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnbindMsgNotifyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BindMsgNotify", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BindMsgNotify(string Fqqid, bool IsMobile, string Mobile, bool IsMail, string Mail, string client_ip, string certno, out string BindMail, out string Msg) {
            object[] results = this.Invoke("BindMsgNotify", new object[] {
                        Fqqid,
                        IsMobile,
                        Mobile,
                        IsMail,
                        Mail,
                        client_ip,
                        certno});
            BindMail = ((string)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBindMsgNotify(string Fqqid, bool IsMobile, string Mobile, bool IsMail, string Mail, string client_ip, string certno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BindMsgNotify", new object[] {
                        Fqqid,
                        IsMobile,
                        Mobile,
                        IsMail,
                        Mail,
                        client_ip,
                        certno}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndBindMsgNotify(System.IAsyncResult asyncResult, out string BindMail, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            BindMail = ((string)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BindMsgNotifyAsync(string Fqqid, bool IsMobile, string Mobile, bool IsMail, string Mail, string client_ip, string certno) {
            this.BindMsgNotifyAsync(Fqqid, IsMobile, Mobile, IsMail, Mail, client_ip, certno, null);
        }
        
        /// <remarks/>
        public void BindMsgNotifyAsync(string Fqqid, bool IsMobile, string Mobile, bool IsMail, string Mail, string client_ip, string certno, object userState) {
            if ((this.BindMsgNotifyOperationCompleted == null)) {
                this.BindMsgNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBindMsgNotifyOperationCompleted);
            }
            this.InvokeAsync("BindMsgNotify", new object[] {
                        Fqqid,
                        IsMobile,
                        Mobile,
                        IsMail,
                        Mail,
                        client_ip,
                        certno}, this.BindMsgNotifyOperationCompleted, userState);
        }
        
        private void OnBindMsgNotifyOperationCompleted(object arg) {
            if ((this.BindMsgNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BindMsgNotifyCompleted(this, new BindMsgNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetOldBindMobile", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOldBindMobile(string Fuid, out string Msg) {
            object[] results = this.Invoke("GetOldBindMobile", new object[] {
                        Fuid});
            Msg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOldBindMobile(string Fuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOldBindMobile", new object[] {
                        Fuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetOldBindMobile(System.IAsyncResult asyncResult, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            Msg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOldBindMobileAsync(string Fuid) {
            this.GetOldBindMobileAsync(Fuid, null);
        }
        
        /// <remarks/>
        public void GetOldBindMobileAsync(string Fuid, object userState) {
            if ((this.GetOldBindMobileOperationCompleted == null)) {
                this.GetOldBindMobileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOldBindMobileOperationCompleted);
            }
            this.InvokeAsync("GetOldBindMobile", new object[] {
                        Fuid}, this.GetOldBindMobileOperationCompleted, userState);
        }
        
        private void OnGetOldBindMobileOperationCompleted(object arg) {
            if ((this.GetOldBindMobileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOldBindMobileCompleted(this, new GetOldBindMobileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatPay_InitGrid_B", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatPay_InitGrid_B(string WeekIndex, string BatchOrder) {
            object[] results = this.Invoke("BatPay_InitGrid_B", new object[] {
                        WeekIndex,
                        BatchOrder});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatPay_InitGrid_B(string WeekIndex, string BatchOrder, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatPay_InitGrid_B", new object[] {
                        WeekIndex,
                        BatchOrder}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndBatPay_InitGrid_B(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_BAsync(string WeekIndex, string BatchOrder) {
            this.BatPay_InitGrid_BAsync(WeekIndex, BatchOrder, null);
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_BAsync(string WeekIndex, string BatchOrder, object userState) {
            if ((this.BatPay_InitGrid_BOperationCompleted == null)) {
                this.BatPay_InitGrid_BOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_InitGrid_BOperationCompleted);
            }
            this.InvokeAsync("BatPay_InitGrid_B", new object[] {
                        WeekIndex,
                        BatchOrder}, this.BatPay_InitGrid_BOperationCompleted, userState);
        }
        
        private void OnBatPay_InitGrid_BOperationCompleted(object arg) {
            if ((this.BatPay_InitGrid_BCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_InitGrid_BCompleted(this, new BatPay_InitGrid_BCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatPay_CanVisible_B", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CanVisible_B(string strDate, string batchorder) {
            object[] results = this.Invoke("BatPay_CanVisible_B", new object[] {
                        strDate,
                        batchorder});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatPay_CanVisible_B(string strDate, string batchorder, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatPay_CanVisible_B", new object[] {
                        strDate,
                        batchorder}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndBatPay_CanVisible_B(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CanVisible_BAsync(string strDate, string batchorder) {
            this.BatPay_CanVisible_BAsync(strDate, batchorder, null);
        }
        
        /// <remarks/>
        public void BatPay_CanVisible_BAsync(string strDate, string batchorder, object userState) {
            if ((this.BatPay_CanVisible_BOperationCompleted == null)) {
                this.BatPay_CanVisible_BOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CanVisible_BOperationCompleted);
            }
            this.InvokeAsync("BatPay_CanVisible_B", new object[] {
                        strDate,
                        batchorder}, this.BatPay_CanVisible_BOperationCompleted, userState);
        }
        
        private void OnBatPay_CanVisible_BOperationCompleted(object arg) {
            if ((this.BatPay_CanVisible_BCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CanVisible_BCompleted(this, new BatPay_CanVisible_BCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ShowDetail_BindData", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ShowDetail_BindData(int max, int start, string BatchID, int state, string username, string bankacc, string count, string paybank) {
            object[] results = this.Invoke("ShowDetail_BindData", new object[] {
                        max,
                        start,
                        BatchID,
                        state,
                        username,
                        bankacc,
                        count,
                        paybank});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginShowDetail_BindData(int max, int start, string BatchID, int state, string username, string bankacc, string count, string paybank, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ShowDetail_BindData", new object[] {
                        max,
                        start,
                        BatchID,
                        state,
                        username,
                        bankacc,
                        count,
                        paybank}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndShowDetail_BindData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ShowDetail_BindDataAsync(int max, int start, string BatchID, int state, string username, string bankacc, string count, string paybank) {
            this.ShowDetail_BindDataAsync(max, start, BatchID, state, username, bankacc, count, paybank, null);
        }
        
        /// <remarks/>
        public void ShowDetail_BindDataAsync(int max, int start, string BatchID, int state, string username, string bankacc, string count, string paybank, object userState) {
            if ((this.ShowDetail_BindDataOperationCompleted == null)) {
                this.ShowDetail_BindDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowDetail_BindDataOperationCompleted);
            }
            this.InvokeAsync("ShowDetail_BindData", new object[] {
                        max,
                        start,
                        BatchID,
                        state,
                        username,
                        bankacc,
                        count,
                        paybank}, this.ShowDetail_BindDataOperationCompleted, userState);
        }
        
        private void OnShowDetail_BindDataOperationCompleted(object arg) {
            if ((this.ShowDetail_BindDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowDetail_BindDataCompleted(this, new ShowDetail_BindDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/Gett_appealList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Gett_appealList(
                    string begin_appeal_time, 
                    string end_appeal_time, 
                    string begin_modify_time, 
                    string end_modify_time, 
                    string appealid, 
                    string listid, 
                    string qqid, 
                    string vs_qqid, 
                    string appeal_type, 
                    string check_state, 
                    string Fstate, 
                    string fund_flag, 
                    string response_flag, 
                    int start, 
                    int count, 
                    out string errMsg) {
            object[] results = this.Invoke("Gett_appealList", new object[] {
                        begin_appeal_time,
                        end_appeal_time,
                        begin_modify_time,
                        end_modify_time,
                        appealid,
                        listid,
                        qqid,
                        vs_qqid,
                        appeal_type,
                        check_state,
                        Fstate,
                        fund_flag,
                        response_flag,
                        start,
                        count});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGett_appealList(
                    string begin_appeal_time, 
                    string end_appeal_time, 
                    string begin_modify_time, 
                    string end_modify_time, 
                    string appealid, 
                    string listid, 
                    string qqid, 
                    string vs_qqid, 
                    string appeal_type, 
                    string check_state, 
                    string Fstate, 
                    string fund_flag, 
                    string response_flag, 
                    int start, 
                    int count, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("Gett_appealList", new object[] {
                        begin_appeal_time,
                        end_appeal_time,
                        begin_modify_time,
                        end_modify_time,
                        appealid,
                        listid,
                        qqid,
                        vs_qqid,
                        appeal_type,
                        check_state,
                        Fstate,
                        fund_flag,
                        response_flag,
                        start,
                        count}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGett_appealList(System.IAsyncResult asyncResult, out string errMsg) {
            object[] results = this.EndInvoke(asyncResult);
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Gett_appealListAsync(string begin_appeal_time, string end_appeal_time, string begin_modify_time, string end_modify_time, string appealid, string listid, string qqid, string vs_qqid, string appeal_type, string check_state, string Fstate, string fund_flag, string response_flag, int start, int count) {
            this.Gett_appealListAsync(begin_appeal_time, end_appeal_time, begin_modify_time, end_modify_time, appealid, listid, qqid, vs_qqid, appeal_type, check_state, Fstate, fund_flag, response_flag, start, count, null);
        }
        
        /// <remarks/>
        public void Gett_appealListAsync(
                    string begin_appeal_time, 
                    string end_appeal_time, 
                    string begin_modify_time, 
                    string end_modify_time, 
                    string appealid, 
                    string listid, 
                    string qqid, 
                    string vs_qqid, 
                    string appeal_type, 
                    string check_state, 
                    string Fstate, 
                    string fund_flag, 
                    string response_flag, 
                    int start, 
                    int count, 
                    object userState) {
            if ((this.Gett_appealListOperationCompleted == null)) {
                this.Gett_appealListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGett_appealListOperationCompleted);
            }
            this.InvokeAsync("Gett_appealList", new object[] {
                        begin_appeal_time,
                        end_appeal_time,
                        begin_modify_time,
                        end_modify_time,
                        appealid,
                        listid,
                        qqid,
                        vs_qqid,
                        appeal_type,
                        check_state,
                        Fstate,
                        fund_flag,
                        response_flag,
                        start,
                        count}, this.Gett_appealListOperationCompleted, userState);
        }
        
        private void OnGett_appealListOperationCompleted(object arg) {
            if ((this.Gett_appealListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Gett_appealListCompleted(this, new Gett_appealListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/Gett_message", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Gett_message(string listid, int start, int count, out string errMsg) {
            object[] results = this.Invoke("Gett_message", new object[] {
                        listid,
                        start,
                        count});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGett_message(string listid, int start, int count, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Gett_message", new object[] {
                        listid,
                        start,
                        count}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGett_message(System.IAsyncResult asyncResult, out string errMsg) {
            object[] results = this.EndInvoke(asyncResult);
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Gett_messageAsync(string listid, int start, int count) {
            this.Gett_messageAsync(listid, start, count, null);
        }
        
        /// <remarks/>
        public void Gett_messageAsync(string listid, int start, int count, object userState) {
            if ((this.Gett_messageOperationCompleted == null)) {
                this.Gett_messageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGett_messageOperationCompleted);
            }
            this.InvokeAsync("Gett_message", new object[] {
                        listid,
                        start,
                        count}, this.Gett_messageOperationCompleted, userState);
        }
        
        private void OnGett_messageOperationCompleted(object arg) {
            if ((this.Gett_messageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Gett_messageCompleted(this, new Gett_messageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/Savetp_add_msg", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Savetp_add_msg(string list_id, string type, string UserName, string UserID, string message, string memo, out string msg) {
            object[] results = this.Invoke("Savetp_add_msg", new object[] {
                        list_id,
                        type,
                        UserName,
                        UserID,
                        message,
                        memo});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSavetp_add_msg(string list_id, string type, string UserName, string UserID, string message, string memo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Savetp_add_msg", new object[] {
                        list_id,
                        type,
                        UserName,
                        UserID,
                        message,
                        memo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSavetp_add_msg(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Savetp_add_msgAsync(string list_id, string type, string UserName, string UserID, string message, string memo) {
            this.Savetp_add_msgAsync(list_id, type, UserName, UserID, message, memo, null);
        }
        
        /// <remarks/>
        public void Savetp_add_msgAsync(string list_id, string type, string UserName, string UserID, string message, string memo, object userState) {
            if ((this.Savetp_add_msgOperationCompleted == null)) {
                this.Savetp_add_msgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavetp_add_msgOperationCompleted);
            }
            this.InvokeAsync("Savetp_add_msg", new object[] {
                        list_id,
                        type,
                        UserName,
                        UserID,
                        message,
                        memo}, this.Savetp_add_msgOperationCompleted, userState);
        }
        
        private void OnSavetp_add_msgOperationCompleted(object arg) {
            if ((this.Savetp_add_msgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Savetp_add_msgCompleted(this, new Savetp_add_msgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SubmitApprove", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitApprove(string list_id, string transaction_id, int Ffund_flag, string iAppealRole, long AppealFee, long AppealedFee, string UserName, out string msg) {
            object[] results = this.Invoke("SubmitApprove", new object[] {
                        list_id,
                        transaction_id,
                        Ffund_flag,
                        iAppealRole,
                        AppealFee,
                        AppealedFee,
                        UserName});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSubmitApprove(string list_id, string transaction_id, int Ffund_flag, string iAppealRole, long AppealFee, long AppealedFee, string UserName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SubmitApprove", new object[] {
                        list_id,
                        transaction_id,
                        Ffund_flag,
                        iAppealRole,
                        AppealFee,
                        AppealedFee,
                        UserName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSubmitApprove(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitApproveAsync(string list_id, string transaction_id, int Ffund_flag, string iAppealRole, long AppealFee, long AppealedFee, string UserName) {
            this.SubmitApproveAsync(list_id, transaction_id, Ffund_flag, iAppealRole, AppealFee, AppealedFee, UserName, null);
        }
        
        /// <remarks/>
        public void SubmitApproveAsync(string list_id, string transaction_id, int Ffund_flag, string iAppealRole, long AppealFee, long AppealedFee, string UserName, object userState) {
            if ((this.SubmitApproveOperationCompleted == null)) {
                this.SubmitApproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitApproveOperationCompleted);
            }
            this.InvokeAsync("SubmitApprove", new object[] {
                        list_id,
                        transaction_id,
                        Ffund_flag,
                        iAppealRole,
                        AppealFee,
                        AppealedFee,
                        UserName}, this.SubmitApproveOperationCompleted, userState);
        }
        
        private void OnSubmitApproveOperationCompleted(object arg) {
            if ((this.SubmitApproveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitApproveCompleted(this, new SubmitApproveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ApprovePass", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ApprovePass(string list_id, string transaction_id, string UserName, out string msg) {
            object[] results = this.Invoke("ApprovePass", new object[] {
                        list_id,
                        transaction_id,
                        UserName});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApprovePass(string list_id, string transaction_id, string UserName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ApprovePass", new object[] {
                        list_id,
                        transaction_id,
                        UserName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndApprovePass(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApprovePassAsync(string list_id, string transaction_id, string UserName) {
            this.ApprovePassAsync(list_id, transaction_id, UserName, null);
        }
        
        /// <remarks/>
        public void ApprovePassAsync(string list_id, string transaction_id, string UserName, object userState) {
            if ((this.ApprovePassOperationCompleted == null)) {
                this.ApprovePassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprovePassOperationCompleted);
            }
            this.InvokeAsync("ApprovePass", new object[] {
                        list_id,
                        transaction_id,
                        UserName}, this.ApprovePassOperationCompleted, userState);
        }
        
        private void OnApprovePassOperationCompleted(object arg) {
            if ((this.ApprovePassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApprovePassCompleted(this, new ApprovePassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ApproveCancel", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ApproveCancel(string list_id, string transaction_id, string UserName, out string msg) {
            object[] results = this.Invoke("ApproveCancel", new object[] {
                        list_id,
                        transaction_id,
                        UserName});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApproveCancel(string list_id, string transaction_id, string UserName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ApproveCancel", new object[] {
                        list_id,
                        transaction_id,
                        UserName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndApproveCancel(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveCancelAsync(string list_id, string transaction_id, string UserName) {
            this.ApproveCancelAsync(list_id, transaction_id, UserName, null);
        }
        
        /// <remarks/>
        public void ApproveCancelAsync(string list_id, string transaction_id, string UserName, object userState) {
            if ((this.ApproveCancelOperationCompleted == null)) {
                this.ApproveCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveCancelOperationCompleted);
            }
            this.InvokeAsync("ApproveCancel", new object[] {
                        list_id,
                        transaction_id,
                        UserName}, this.ApproveCancelOperationCompleted, userState);
        }
        
        private void OnApproveCancelOperationCompleted(object arg) {
            if ((this.ApproveCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveCancelCompleted(this, new ApproveCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BusinessIdentityCardNum", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BusinessIdentityCardNum(string Fspid, string OldIdentityCardNum, string NewIdentityCardNum, string IDImage, string ElseImage, string UserName, string Reason) {
            this.Invoke("BusinessIdentityCardNum", new object[] {
                        Fspid,
                        OldIdentityCardNum,
                        NewIdentityCardNum,
                        IDImage,
                        ElseImage,
                        UserName,
                        Reason});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBusinessIdentityCardNum(string Fspid, string OldIdentityCardNum, string NewIdentityCardNum, string IDImage, string ElseImage, string UserName, string Reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BusinessIdentityCardNum", new object[] {
                        Fspid,
                        OldIdentityCardNum,
                        NewIdentityCardNum,
                        IDImage,
                        ElseImage,
                        UserName,
                        Reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBusinessIdentityCardNum(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void BusinessIdentityCardNumAsync(string Fspid, string OldIdentityCardNum, string NewIdentityCardNum, string IDImage, string ElseImage, string UserName, string Reason) {
            this.BusinessIdentityCardNumAsync(Fspid, OldIdentityCardNum, NewIdentityCardNum, IDImage, ElseImage, UserName, Reason, null);
        }
        
        /// <remarks/>
        public void BusinessIdentityCardNumAsync(string Fspid, string OldIdentityCardNum, string NewIdentityCardNum, string IDImage, string ElseImage, string UserName, string Reason, object userState) {
            if ((this.BusinessIdentityCardNumOperationCompleted == null)) {
                this.BusinessIdentityCardNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBusinessIdentityCardNumOperationCompleted);
            }
            this.InvokeAsync("BusinessIdentityCardNum", new object[] {
                        Fspid,
                        OldIdentityCardNum,
                        NewIdentityCardNum,
                        IDImage,
                        ElseImage,
                        UserName,
                        Reason}, this.BusinessIdentityCardNumOperationCompleted, userState);
        }
        
        private void OnBusinessIdentityCardNumOperationCompleted(object arg) {
            if ((this.BusinessIdentityCardNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BusinessIdentityCardNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAllChannelList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllChannelList() {
            object[] results = this.Invoke("GetAllChannelList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllChannelList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllChannelList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAllChannelList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllChannelListAsync() {
            this.GetAllChannelListAsync(null);
        }
        
        /// <remarks/>
        public void GetAllChannelListAsync(object userState) {
            if ((this.GetAllChannelListOperationCompleted == null)) {
                this.GetAllChannelListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllChannelListOperationCompleted);
            }
            this.InvokeAsync("GetAllChannelList", new object[0], this.GetAllChannelListOperationCompleted, userState);
        }
        
        private void OnGetAllChannelListOperationCompleted(object arg) {
            if ((this.GetAllChannelListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllChannelListCompleted(this, new GetAllChannelListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayLimitList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayLimitList(string qqid, int channelid, string aqqid) {
            object[] results = this.Invoke("GetPayLimitList", new object[] {
                        qqid,
                        channelid,
                        aqqid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayLimitList(string qqid, int channelid, string aqqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayLimitList", new object[] {
                        qqid,
                        channelid,
                        aqqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayLimitList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayLimitListAsync(string qqid, int channelid, string aqqid) {
            this.GetPayLimitListAsync(qqid, channelid, aqqid, null);
        }
        
        /// <remarks/>
        public void GetPayLimitListAsync(string qqid, int channelid, string aqqid, object userState) {
            if ((this.GetPayLimitListOperationCompleted == null)) {
                this.GetPayLimitListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayLimitListOperationCompleted);
            }
            this.InvokeAsync("GetPayLimitList", new object[] {
                        qqid,
                        channelid,
                        aqqid}, this.GetPayLimitListOperationCompleted, userState);
        }
        
        private void OnGetPayLimitListOperationCompleted(object arg) {
            if ((this.GetPayLimitListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayLimitListCompleted(this, new GetPayLimitListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetTrustLimitList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTrustLimitList(string qqid, string Fspid) {
            object[] results = this.Invoke("GetTrustLimitList", new object[] {
                        qqid,
                        Fspid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTrustLimitList(string qqid, string Fspid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTrustLimitList", new object[] {
                        qqid,
                        Fspid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTrustLimitList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrustLimitListAsync(string qqid, string Fspid) {
            this.GetTrustLimitListAsync(qqid, Fspid, null);
        }
        
        /// <remarks/>
        public void GetTrustLimitListAsync(string qqid, string Fspid, object userState) {
            if ((this.GetTrustLimitListOperationCompleted == null)) {
                this.GetTrustLimitListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrustLimitListOperationCompleted);
            }
            this.InvokeAsync("GetTrustLimitList", new object[] {
                        qqid,
                        Fspid}, this.GetTrustLimitListOperationCompleted, userState);
        }
        
        private void OnGetTrustLimitListOperationCompleted(object arg) {
            if ((this.GetTrustLimitListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrustLimitListCompleted(this, new GetTrustLimitListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserClassLockList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserClassLockList(System.DateTime BeginDate, System.DateTime EndDate, int fstate, string username, int Count) {
            object[] results = this.Invoke("GetUserClassLockList", new object[] {
                        BeginDate,
                        EndDate,
                        fstate,
                        username,
                        Count});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserClassLockList(System.DateTime BeginDate, System.DateTime EndDate, int fstate, string username, int Count, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserClassLockList", new object[] {
                        BeginDate,
                        EndDate,
                        fstate,
                        username,
                        Count}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserClassLockList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserClassLockListAsync(System.DateTime BeginDate, System.DateTime EndDate, int fstate, string username, int Count) {
            this.GetUserClassLockListAsync(BeginDate, EndDate, fstate, username, Count, null);
        }
        
        /// <remarks/>
        public void GetUserClassLockListAsync(System.DateTime BeginDate, System.DateTime EndDate, int fstate, string username, int Count, object userState) {
            if ((this.GetUserClassLockListOperationCompleted == null)) {
                this.GetUserClassLockListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserClassLockListOperationCompleted);
            }
            this.InvokeAsync("GetUserClassLockList", new object[] {
                        BeginDate,
                        EndDate,
                        fstate,
                        username,
                        Count}, this.GetUserClassLockListOperationCompleted, userState);
        }
        
        private void OnGetUserClassLockListOperationCompleted(object arg) {
            if ((this.GetUserClassLockListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserClassLockListCompleted(this, new GetUserClassLockListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserClassQueryList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserClassQueryList(string u_BeginTime, string u_EndTime, string fuin, int fstate, string QQType, int iPageStart, int iPageMax, int SortType) {
            object[] results = this.Invoke("GetUserClassQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fuin,
                        fstate,
                        QQType,
                        iPageStart,
                        iPageMax,
                        SortType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserClassQueryList(string u_BeginTime, string u_EndTime, string fuin, int fstate, string QQType, int iPageStart, int iPageMax, int SortType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserClassQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fuin,
                        fstate,
                        QQType,
                        iPageStart,
                        iPageMax,
                        SortType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserClassQueryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserClassQueryListAsync(string u_BeginTime, string u_EndTime, string fuin, int fstate, string QQType, int iPageStart, int iPageMax, int SortType) {
            this.GetUserClassQueryListAsync(u_BeginTime, u_EndTime, fuin, fstate, QQType, iPageStart, iPageMax, SortType, null);
        }
        
        /// <remarks/>
        public void GetUserClassQueryListAsync(string u_BeginTime, string u_EndTime, string fuin, int fstate, string QQType, int iPageStart, int iPageMax, int SortType, object userState) {
            if ((this.GetUserClassQueryListOperationCompleted == null)) {
                this.GetUserClassQueryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserClassQueryListOperationCompleted);
            }
            this.InvokeAsync("GetUserClassQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fuin,
                        fstate,
                        QQType,
                        iPageStart,
                        iPageMax,
                        SortType}, this.GetUserClassQueryListOperationCompleted, userState);
        }
        
        private void OnGetUserClassQueryListOperationCompleted(object arg) {
            if ((this.GetUserClassQueryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserClassQueryListCompleted(this, new GetUserClassQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserClassQueryListForThis", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserClassQueryListForThis(string fuin, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetUserClassQueryListForThis", new object[] {
                        fuin,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserClassQueryListForThis(string fuin, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserClassQueryListForThis", new object[] {
                        fuin,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserClassQueryListForThis(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserClassQueryListForThisAsync(string fuin, int iPageStart, int iPageMax) {
            this.GetUserClassQueryListForThisAsync(fuin, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetUserClassQueryListForThisAsync(string fuin, int iPageStart, int iPageMax, object userState) {
            if ((this.GetUserClassQueryListForThisOperationCompleted == null)) {
                this.GetUserClassQueryListForThisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserClassQueryListForThisOperationCompleted);
            }
            this.InvokeAsync("GetUserClassQueryListForThis", new object[] {
                        fuin,
                        iPageStart,
                        iPageMax}, this.GetUserClassQueryListForThisOperationCompleted, userState);
        }
        
        private void OnGetUserClassQueryListForThisOperationCompleted(object arg) {
            if ((this.GetUserClassQueryListForThisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserClassQueryListForThisCompleted(this, new GetUserClassQueryListForThisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserClassQueryCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserClassQueryCount(string u_BeginTime, string u_EndTime, string fuin, int fstate, string QQType, int SortType) {
            object[] results = this.Invoke("GetUserClassQueryCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fuin,
                        fstate,
                        QQType,
                        SortType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserClassQueryCount(string u_BeginTime, string u_EndTime, string fuin, int fstate, string QQType, int SortType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserClassQueryCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fuin,
                        fstate,
                        QQType,
                        SortType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetUserClassQueryCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserClassQueryCountAsync(string u_BeginTime, string u_EndTime, string fuin, int fstate, string QQType, int SortType) {
            this.GetUserClassQueryCountAsync(u_BeginTime, u_EndTime, fuin, fstate, QQType, SortType, null);
        }
        
        /// <remarks/>
        public void GetUserClassQueryCountAsync(string u_BeginTime, string u_EndTime, string fuin, int fstate, string QQType, int SortType, object userState) {
            if ((this.GetUserClassQueryCountOperationCompleted == null)) {
                this.GetUserClassQueryCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserClassQueryCountOperationCompleted);
            }
            this.InvokeAsync("GetUserClassQueryCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fuin,
                        fstate,
                        QQType,
                        SortType}, this.GetUserClassQueryCountOperationCompleted, userState);
        }
        
        private void OnGetUserClassQueryCountOperationCompleted(object arg) {
            if ((this.GetUserClassQueryCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserClassQueryCountCompleted(this, new GetUserClassQueryCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserClassDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserClassDetail(int flist_id) {
            object[] results = this.Invoke("GetUserClassDetail", new object[] {
                        flist_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserClassDetail(int flist_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserClassDetail", new object[] {
                        flist_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserClassDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserClassDetailAsync(int flist_id) {
            this.GetUserClassDetailAsync(flist_id, null);
        }
        
        /// <remarks/>
        public void GetUserClassDetailAsync(int flist_id, object userState) {
            if ((this.GetUserClassDetailOperationCompleted == null)) {
                this.GetUserClassDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserClassDetailOperationCompleted);
            }
            this.InvokeAsync("GetUserClassDetail", new object[] {
                        flist_id}, this.GetUserClassDetailOperationCompleted, userState);
        }
        
        private void OnGetUserClassDetailOperationCompleted(object arg) {
            if ((this.GetUserClassDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserClassDetailCompleted(this, new GetUserClassDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserAuthenState", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserAuthenState(string userAccount, string userBankID, int bankType) {
            object[] results = this.Invoke("GetUserAuthenState", new object[] {
                        userAccount,
                        userBankID,
                        bankType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAuthenState(string userAccount, string userBankID, int bankType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAuthenState", new object[] {
                        userAccount,
                        userBankID,
                        bankType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserAuthenState(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAuthenStateAsync(string userAccount, string userBankID, int bankType) {
            this.GetUserAuthenStateAsync(userAccount, userBankID, bankType, null);
        }
        
        /// <remarks/>
        public void GetUserAuthenStateAsync(string userAccount, string userBankID, int bankType, object userState) {
            if ((this.GetUserAuthenStateOperationCompleted == null)) {
                this.GetUserAuthenStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAuthenStateOperationCompleted);
            }
            this.InvokeAsync("GetUserAuthenState", new object[] {
                        userAccount,
                        userBankID,
                        bankType}, this.GetUserAuthenStateOperationCompleted, userState);
        }
        
        private void OnGetUserAuthenStateOperationCompleted(object arg) {
            if ((this.GetUserAuthenStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAuthenStateCompleted(this, new GetUserAuthenStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserAuthenState_ByCre2", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserAuthenState_ByCre2(string creid, int creType) {
            object[] results = this.Invoke("GetUserAuthenState_ByCre2", new object[] {
                        creid,
                        creType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAuthenState_ByCre2(string creid, int creType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAuthenState_ByCre2", new object[] {
                        creid,
                        creType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserAuthenState_ByCre2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAuthenState_ByCre2Async(string creid, int creType) {
            this.GetUserAuthenState_ByCre2Async(creid, creType, null);
        }
        
        /// <remarks/>
        public void GetUserAuthenState_ByCre2Async(string creid, int creType, object userState) {
            if ((this.GetUserAuthenState_ByCre2OperationCompleted == null)) {
                this.GetUserAuthenState_ByCre2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAuthenState_ByCre2OperationCompleted);
            }
            this.InvokeAsync("GetUserAuthenState_ByCre2", new object[] {
                        creid,
                        creType}, this.GetUserAuthenState_ByCre2OperationCompleted, userState);
        }
        
        private void OnGetUserAuthenState_ByCre2OperationCompleted(object arg) {
            if ((this.GetUserAuthenState_ByCre2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAuthenState_ByCre2Completed(this, new GetUserAuthenState_ByCre2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserAuthenState_ByCre", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserAuthenState_ByCre(int creType, string creNO) {
            object[] results = this.Invoke("GetUserAuthenState_ByCre", new object[] {
                        creType,
                        creNO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAuthenState_ByCre(int creType, string creNO, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAuthenState_ByCre", new object[] {
                        creType,
                        creNO}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserAuthenState_ByCre(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAuthenState_ByCreAsync(int creType, string creNO) {
            this.GetUserAuthenState_ByCreAsync(creType, creNO, null);
        }
        
        /// <remarks/>
        public void GetUserAuthenState_ByCreAsync(int creType, string creNO, object userState) {
            if ((this.GetUserAuthenState_ByCreOperationCompleted == null)) {
                this.GetUserAuthenState_ByCreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAuthenState_ByCreOperationCompleted);
            }
            this.InvokeAsync("GetUserAuthenState_ByCre", new object[] {
                        creType,
                        creNO}, this.GetUserAuthenState_ByCreOperationCompleted, userState);
        }
        
        private void OnGetUserAuthenState_ByCreOperationCompleted(object arg) {
            if ((this.GetUserAuthenState_ByCreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAuthenState_ByCreCompleted(this, new GetUserAuthenState_ByCreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DelAuthen", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelAuthen(string qqid, out string msg) {
            object[] results = this.Invoke("DelAuthen", new object[] {
                        qqid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDelAuthen(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DelAuthen", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDelAuthen(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelAuthenAsync(string qqid) {
            this.DelAuthenAsync(qqid, null);
        }
        
        /// <remarks/>
        public void DelAuthenAsync(string qqid, object userState) {
            if ((this.DelAuthenOperationCompleted == null)) {
                this.DelAuthenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelAuthenOperationCompleted);
            }
            this.InvokeAsync("DelAuthen", new object[] {
                        qqid}, this.DelAuthenOperationCompleted, userState);
        }
        
        private void OnDelAuthenOperationCompleted(object arg) {
            if ((this.DelAuthenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelAuthenCompleted(this, new DelAuthenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserCrtInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserCrtInfo(string qqid) {
            object[] results = this.Invoke("GetUserCrtInfo", new object[] {
                        qqid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserCrtInfo(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserCrtInfo", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetUserCrtInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserCrtInfoAsync(string qqid) {
            this.GetUserCrtInfoAsync(qqid, null);
        }
        
        /// <remarks/>
        public void GetUserCrtInfoAsync(string qqid, object userState) {
            if ((this.GetUserCrtInfoOperationCompleted == null)) {
                this.GetUserCrtInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserCrtInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserCrtInfo", new object[] {
                        qqid}, this.GetUserCrtInfoOperationCompleted, userState);
        }
        
        private void OnGetUserCrtInfoOperationCompleted(object arg) {
            if ((this.GetUserCrtInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCrtInfoCompleted(this, new GetUserCrtInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankByType", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankByType(string typename, string flag) {
            object[] results = this.Invoke("GetBankByType", new object[] {
                        typename,
                        flag});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankByType(string typename, string flag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankByType", new object[] {
                        typename,
                        flag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankByType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankByTypeAsync(string typename, string flag) {
            this.GetBankByTypeAsync(typename, flag, null);
        }
        
        /// <remarks/>
        public void GetBankByTypeAsync(string typename, string flag, object userState) {
            if ((this.GetBankByTypeOperationCompleted == null)) {
                this.GetBankByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankByTypeOperationCompleted);
            }
            this.InvokeAsync("GetBankByType", new object[] {
                        typename,
                        flag}, this.GetBankByTypeOperationCompleted, userState);
        }
        
        private void OnGetBankByTypeOperationCompleted(object arg) {
            if ((this.GetBankByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankByTypeCompleted(this, new GetBankByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserCrtList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserCrtList(string qqid) {
            object[] results = this.Invoke("GetUserCrtList", new object[] {
                        qqid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserCrtList(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserCrtList", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserCrtList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserCrtListAsync(string qqid) {
            this.GetUserCrtListAsync(qqid, null);
        }
        
        /// <remarks/>
        public void GetUserCrtListAsync(string qqid, object userState) {
            if ((this.GetUserCrtListOperationCompleted == null)) {
                this.GetUserCrtListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserCrtListOperationCompleted);
            }
            this.InvokeAsync("GetUserCrtList", new object[] {
                        qqid}, this.GetUserCrtListOperationCompleted, userState);
        }
        
        private void OnGetUserCrtListOperationCompleted(object arg) {
            if ((this.GetUserCrtListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCrtListCompleted(this, new GetUserCrtListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDeleteQueryInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDeleteQueryInfo(string qqid) {
            object[] results = this.Invoke("GetDeleteQueryInfo", new object[] {
                        qqid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeleteQueryInfo(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDeleteQueryInfo", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDeleteQueryInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeleteQueryInfoAsync(string qqid) {
            this.GetDeleteQueryInfoAsync(qqid, null);
        }
        
        /// <remarks/>
        public void GetDeleteQueryInfoAsync(string qqid, object userState) {
            if ((this.GetDeleteQueryInfoOperationCompleted == null)) {
                this.GetDeleteQueryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeleteQueryInfoOperationCompleted);
            }
            this.InvokeAsync("GetDeleteQueryInfo", new object[] {
                        qqid}, this.GetDeleteQueryInfoOperationCompleted, userState);
        }
        
        private void OnGetDeleteQueryInfoOperationCompleted(object arg) {
            if ((this.GetDeleteQueryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeleteQueryInfoCompleted(this, new GetDeleteQueryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DeleteUserCrt", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUserCrt(string qqid) {
            this.Invoke("DeleteUserCrt", new object[] {
                        qqid});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteUserCrt(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteUserCrt", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteUserCrt(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteUserCrtAsync(string qqid) {
            this.DeleteUserCrtAsync(qqid, null);
        }
        
        /// <remarks/>
        public void DeleteUserCrtAsync(string qqid, object userState) {
            if ((this.DeleteUserCrtOperationCompleted == null)) {
                this.DeleteUserCrtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserCrtOperationCompleted);
            }
            this.InvokeAsync("DeleteUserCrt", new object[] {
                        qqid}, this.DeleteUserCrtOperationCompleted, userState);
        }
        
        private void OnDeleteUserCrtOperationCompleted(object arg) {
            if ((this.DeleteUserCrtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCrtCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetShouFuYiList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetShouFuYiList(string qq) {
            object[] results = this.Invoke("GetShouFuYiList", new object[] {
                        qq});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetShouFuYiList(string qq, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetShouFuYiList", new object[] {
                        qq}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetShouFuYiList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetShouFuYiListAsync(string qq) {
            this.GetShouFuYiListAsync(qq, null);
        }
        
        /// <remarks/>
        public void GetShouFuYiListAsync(string qq, object userState) {
            if ((this.GetShouFuYiListOperationCompleted == null)) {
                this.GetShouFuYiListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShouFuYiListOperationCompleted);
            }
            this.InvokeAsync("GetShouFuYiList", new object[] {
                        qq}, this.GetShouFuYiListOperationCompleted, userState);
        }
        
        private void OnGetShouFuYiListOperationCompleted(object arg) {
            if ((this.GetShouFuYiListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShouFuYiListCompleted(this, new GetShouFuYiListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAgencyBusinessInfoList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAgencyBusinessInfoList(string Fspid) {
            object[] results = this.Invoke("GetAgencyBusinessInfoList", new object[] {
                        Fspid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAgencyBusinessInfoList(string Fspid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAgencyBusinessInfoList", new object[] {
                        Fspid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAgencyBusinessInfoList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgencyBusinessInfoListAsync(string Fspid) {
            this.GetAgencyBusinessInfoListAsync(Fspid, null);
        }
        
        /// <remarks/>
        public void GetAgencyBusinessInfoListAsync(string Fspid, object userState) {
            if ((this.GetAgencyBusinessInfoListOperationCompleted == null)) {
                this.GetAgencyBusinessInfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgencyBusinessInfoListOperationCompleted);
            }
            this.InvokeAsync("GetAgencyBusinessInfoList", new object[] {
                        Fspid}, this.GetAgencyBusinessInfoListOperationCompleted, userState);
        }
        
        private void OnGetAgencyBusinessInfoListOperationCompleted(object arg) {
            if ((this.GetAgencyBusinessInfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgencyBusinessInfoListCompleted(this, new GetAgencyBusinessInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBusinessInfoList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBusinessInfoList(string Fspid) {
            object[] results = this.Invoke("GetBusinessInfoList", new object[] {
                        Fspid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBusinessInfoList(string Fspid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBusinessInfoList", new object[] {
                        Fspid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBusinessInfoList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBusinessInfoListAsync(string Fspid) {
            this.GetBusinessInfoListAsync(Fspid, null);
        }
        
        /// <remarks/>
        public void GetBusinessInfoListAsync(string Fspid, object userState) {
            if ((this.GetBusinessInfoListOperationCompleted == null)) {
                this.GetBusinessInfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBusinessInfoListOperationCompleted);
            }
            this.InvokeAsync("GetBusinessInfoList", new object[] {
                        Fspid}, this.GetBusinessInfoListOperationCompleted, userState);
        }
        
        private void OnGetBusinessInfoListOperationCompleted(object arg) {
            if ((this.GetBusinessInfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBusinessInfoListCompleted(this, new GetBusinessInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBusiness2InfoList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBusiness2InfoList(string Fspid) {
            object[] results = this.Invoke("GetBusiness2InfoList", new object[] {
                        Fspid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBusiness2InfoList(string Fspid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBusiness2InfoList", new object[] {
                        Fspid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBusiness2InfoList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBusiness2InfoListAsync(string Fspid) {
            this.GetBusiness2InfoListAsync(Fspid, null);
        }
        
        /// <remarks/>
        public void GetBusiness2InfoListAsync(string Fspid, object userState) {
            if ((this.GetBusiness2InfoListOperationCompleted == null)) {
                this.GetBusiness2InfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBusiness2InfoListOperationCompleted);
            }
            this.InvokeAsync("GetBusiness2InfoList", new object[] {
                        Fspid}, this.GetBusiness2InfoListOperationCompleted, userState);
        }
        
        private void OnGetBusiness2InfoListOperationCompleted(object arg) {
            if ((this.GetBusiness2InfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBusiness2InfoListCompleted(this, new GetBusiness2InfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBusinessBankList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBusinessBankList(string Fspid) {
            object[] results = this.Invoke("GetBusinessBankList", new object[] {
                        Fspid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBusinessBankList(string Fspid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBusinessBankList", new object[] {
                        Fspid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBusinessBankList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBusinessBankListAsync(string Fspid) {
            this.GetBusinessBankListAsync(Fspid, null);
        }
        
        /// <remarks/>
        public void GetBusinessBankListAsync(string Fspid, object userState) {
            if ((this.GetBusinessBankListOperationCompleted == null)) {
                this.GetBusinessBankListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBusinessBankListOperationCompleted);
            }
            this.InvokeAsync("GetBusinessBankList", new object[] {
                        Fspid}, this.GetBusinessBankListOperationCompleted, userState);
        }
        
        private void OnGetBusinessBankListOperationCompleted(object arg) {
            if ((this.GetBusinessBankListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBusinessBankListCompleted(this, new GetBusinessBankListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBusinessEmail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBusinessEmail(string Fspid) {
            object[] results = this.Invoke("GetBusinessEmail", new object[] {
                        Fspid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBusinessEmail(string Fspid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBusinessEmail", new object[] {
                        Fspid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBusinessEmail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBusinessEmailAsync(string Fspid) {
            this.GetBusinessEmailAsync(Fspid, null);
        }
        
        /// <remarks/>
        public void GetBusinessEmailAsync(string Fspid, object userState) {
            if ((this.GetBusinessEmailOperationCompleted == null)) {
                this.GetBusinessEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBusinessEmailOperationCompleted);
            }
            this.InvokeAsync("GetBusinessEmail", new object[] {
                        Fspid}, this.GetBusinessEmailOperationCompleted, userState);
        }
        
        private void OnGetBusinessEmailOperationCompleted(object arg) {
            if ((this.GetBusinessEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBusinessEmailCompleted(this, new GetBusinessEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetHisBusinessList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHisBusinessList(string Fspid) {
            object[] results = this.Invoke("GetHisBusinessList", new object[] {
                        Fspid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHisBusinessList(string Fspid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHisBusinessList", new object[] {
                        Fspid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetHisBusinessList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHisBusinessListAsync(string Fspid) {
            this.GetHisBusinessListAsync(Fspid, null);
        }
        
        /// <remarks/>
        public void GetHisBusinessListAsync(string Fspid, object userState) {
            if ((this.GetHisBusinessListOperationCompleted == null)) {
                this.GetHisBusinessListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHisBusinessListOperationCompleted);
            }
            this.InvokeAsync("GetHisBusinessList", new object[] {
                        Fspid}, this.GetHisBusinessListOperationCompleted, userState);
        }
        
        private void OnGetHisBusinessListOperationCompleted(object arg) {
            if ((this.GetHisBusinessListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHisBusinessListCompleted(this, new GetHisBusinessListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SubmitBusinessInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitBusinessInfo(string UserName, string Fspid, string OldFspName, string NewFspName, string OldEmail, string NewEmail, string OldAddress, string NewAddress, string ApplyResult, string[] FileInfos) {
            this.Invoke("SubmitBusinessInfo", new object[] {
                        UserName,
                        Fspid,
                        OldFspName,
                        NewFspName,
                        OldEmail,
                        NewEmail,
                        OldAddress,
                        NewAddress,
                        ApplyResult,
                        FileInfos});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSubmitBusinessInfo(string UserName, string Fspid, string OldFspName, string NewFspName, string OldEmail, string NewEmail, string OldAddress, string NewAddress, string ApplyResult, string[] FileInfos, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SubmitBusinessInfo", new object[] {
                        UserName,
                        Fspid,
                        OldFspName,
                        NewFspName,
                        OldEmail,
                        NewEmail,
                        OldAddress,
                        NewAddress,
                        ApplyResult,
                        FileInfos}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSubmitBusinessInfo(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SubmitBusinessInfoAsync(string UserName, string Fspid, string OldFspName, string NewFspName, string OldEmail, string NewEmail, string OldAddress, string NewAddress, string ApplyResult, string[] FileInfos) {
            this.SubmitBusinessInfoAsync(UserName, Fspid, OldFspName, NewFspName, OldEmail, NewEmail, OldAddress, NewAddress, ApplyResult, FileInfos, null);
        }
        
        /// <remarks/>
        public void SubmitBusinessInfoAsync(string UserName, string Fspid, string OldFspName, string NewFspName, string OldEmail, string NewEmail, string OldAddress, string NewAddress, string ApplyResult, string[] FileInfos, object userState) {
            if ((this.SubmitBusinessInfoOperationCompleted == null)) {
                this.SubmitBusinessInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitBusinessInfoOperationCompleted);
            }
            this.InvokeAsync("SubmitBusinessInfo", new object[] {
                        UserName,
                        Fspid,
                        OldFspName,
                        NewFspName,
                        OldEmail,
                        NewEmail,
                        OldAddress,
                        NewAddress,
                        ApplyResult,
                        FileInfos}, this.SubmitBusinessInfoOperationCompleted, userState);
        }
        
        private void OnSubmitBusinessInfoOperationCompleted(object arg) {
            if ((this.SubmitBusinessInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitBusinessInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SubmitBusinessCreInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitBusinessCreInfo(string spid, string oldCreID, string newCreID, string memo) {
            this.Invoke("SubmitBusinessCreInfo", new object[] {
                        spid,
                        oldCreID,
                        newCreID,
                        memo});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSubmitBusinessCreInfo(string spid, string oldCreID, string newCreID, string memo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SubmitBusinessCreInfo", new object[] {
                        spid,
                        oldCreID,
                        newCreID,
                        memo}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSubmitBusinessCreInfo(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SubmitBusinessCreInfoAsync(string spid, string oldCreID, string newCreID, string memo) {
            this.SubmitBusinessCreInfoAsync(spid, oldCreID, newCreID, memo, null);
        }
        
        /// <remarks/>
        public void SubmitBusinessCreInfoAsync(string spid, string oldCreID, string newCreID, string memo, object userState) {
            if ((this.SubmitBusinessCreInfoOperationCompleted == null)) {
                this.SubmitBusinessCreInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitBusinessCreInfoOperationCompleted);
            }
            this.InvokeAsync("SubmitBusinessCreInfo", new object[] {
                        spid,
                        oldCreID,
                        newCreID,
                        memo}, this.SubmitBusinessCreInfoOperationCompleted, userState);
        }
        
        private void OnSubmitBusinessCreInfoOperationCompleted(object arg) {
            if ((this.SubmitBusinessCreInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitBusinessCreInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSelfTypeList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSelfTypeList() {
            object[] results = this.Invoke("GetSelfTypeList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSelfTypeList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSelfTypeList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSelfTypeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSelfTypeListAsync() {
            this.GetSelfTypeListAsync(null);
        }
        
        /// <remarks/>
        public void GetSelfTypeListAsync(object userState) {
            if ((this.GetSelfTypeListOperationCompleted == null)) {
                this.GetSelfTypeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSelfTypeListOperationCompleted);
            }
            this.InvokeAsync("GetSelfTypeList", new object[0], this.GetSelfTypeListOperationCompleted, userState);
        }
        
        private void OnGetSelfTypeListOperationCompleted(object arg) {
            if ((this.GetSelfTypeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSelfTypeListCompleted(this, new GetSelfTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSelfKFList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSelfKFList() {
            object[] results = this.Invoke("GetSelfKFList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSelfKFList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSelfKFList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSelfKFList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSelfKFListAsync() {
            this.GetSelfKFListAsync(null);
        }
        
        /// <remarks/>
        public void GetSelfKFListAsync(object userState) {
            if ((this.GetSelfKFListOperationCompleted == null)) {
                this.GetSelfKFListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSelfKFListOperationCompleted);
            }
            this.InvokeAsync("GetSelfKFList", new object[0], this.GetSelfKFListOperationCompleted, userState);
        }
        
        private void OnGetSelfKFListOperationCompleted(object arg) {
            if ((this.GetSelfKFListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSelfKFListCompleted(this, new GetSelfKFListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSelfQueryListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSelfQueryListCount(string filter) {
            object[] results = this.Invoke("GetSelfQueryListCount", new object[] {
                        filter});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSelfQueryListCount(string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSelfQueryListCount", new object[] {
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSelfQueryListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSelfQueryListCountAsync(string filter) {
            this.GetSelfQueryListCountAsync(filter, null);
        }
        
        /// <remarks/>
        public void GetSelfQueryListCountAsync(string filter, object userState) {
            if ((this.GetSelfQueryListCountOperationCompleted == null)) {
                this.GetSelfQueryListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSelfQueryListCountOperationCompleted);
            }
            this.InvokeAsync("GetSelfQueryListCount", new object[] {
                        filter}, this.GetSelfQueryListCountOperationCompleted, userState);
        }
        
        private void OnGetSelfQueryListCountOperationCompleted(object arg) {
            if ((this.GetSelfQueryListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSelfQueryListCountCompleted(this, new GetSelfQueryListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSelfQueryList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSelfQueryList(string filter, int TopCount, int NotInCount) {
            object[] results = this.Invoke("GetSelfQueryList", new object[] {
                        filter,
                        TopCount,
                        NotInCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSelfQueryList(string filter, int TopCount, int NotInCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSelfQueryList", new object[] {
                        filter,
                        TopCount,
                        NotInCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSelfQueryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSelfQueryListAsync(string filter, int TopCount, int NotInCount) {
            this.GetSelfQueryListAsync(filter, TopCount, NotInCount, null);
        }
        
        /// <remarks/>
        public void GetSelfQueryListAsync(string filter, int TopCount, int NotInCount, object userState) {
            if ((this.GetSelfQueryListOperationCompleted == null)) {
                this.GetSelfQueryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSelfQueryListOperationCompleted);
            }
            this.InvokeAsync("GetSelfQueryList", new object[] {
                        filter,
                        TopCount,
                        NotInCount}, this.GetSelfQueryListOperationCompleted, userState);
        }
        
        private void OnGetSelfQueryListOperationCompleted(object arg) {
            if ((this.GetSelfQueryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSelfQueryListCompleted(this, new GetSelfQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSelfQueryInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSelfQueryInfo(string ApplyCpInfoID) {
            object[] results = this.Invoke("GetSelfQueryInfo", new object[] {
                        ApplyCpInfoID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSelfQueryInfo(string ApplyCpInfoID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSelfQueryInfo", new object[] {
                        ApplyCpInfoID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSelfQueryInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSelfQueryInfoAsync(string ApplyCpInfoID) {
            this.GetSelfQueryInfoAsync(ApplyCpInfoID, null);
        }
        
        /// <remarks/>
        public void GetSelfQueryInfoAsync(string ApplyCpInfoID, object userState) {
            if ((this.GetSelfQueryInfoOperationCompleted == null)) {
                this.GetSelfQueryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSelfQueryInfoOperationCompleted);
            }
            this.InvokeAsync("GetSelfQueryInfo", new object[] {
                        ApplyCpInfoID}, this.GetSelfQueryInfoOperationCompleted, userState);
        }
        
        private void OnGetSelfQueryInfoOperationCompleted(object arg) {
            if ((this.GetSelfQueryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSelfQueryInfoCompleted(this, new GetSelfQueryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CheckTicket", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckTicket(string ApplyCpInfoID, string UserID) {
            this.Invoke("CheckTicket", new object[] {
                        ApplyCpInfoID,
                        UserID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckTicket(string ApplyCpInfoID, string UserID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckTicket", new object[] {
                        ApplyCpInfoID,
                        UserID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCheckTicket(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void CheckTicketAsync(string ApplyCpInfoID, string UserID) {
            this.CheckTicketAsync(ApplyCpInfoID, UserID, null);
        }
        
        /// <remarks/>
        public void CheckTicketAsync(string ApplyCpInfoID, string UserID, object userState) {
            if ((this.CheckTicketOperationCompleted == null)) {
                this.CheckTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTicketOperationCompleted);
            }
            this.InvokeAsync("CheckTicket", new object[] {
                        ApplyCpInfoID,
                        UserID}, this.CheckTicketOperationCompleted, userState);
        }
        
        private void OnCheckTicketOperationCompleted(object arg) {
            if ((this.CheckTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTicketCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ApproveTicket", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveTicket(string ApplyCpInfoID, string UserID, bool Result, string Reason) {
            this.Invoke("ApproveTicket", new object[] {
                        ApplyCpInfoID,
                        UserID,
                        Result,
                        Reason});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApproveTicket(string ApplyCpInfoID, string UserID, bool Result, string Reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ApproveTicket", new object[] {
                        ApplyCpInfoID,
                        UserID,
                        Result,
                        Reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndApproveTicket(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ApproveTicketAsync(string ApplyCpInfoID, string UserID, bool Result, string Reason) {
            this.ApproveTicketAsync(ApplyCpInfoID, UserID, Result, Reason, null);
        }
        
        /// <remarks/>
        public void ApproveTicketAsync(string ApplyCpInfoID, string UserID, bool Result, string Reason, object userState) {
            if ((this.ApproveTicketOperationCompleted == null)) {
                this.ApproveTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveTicketOperationCompleted);
            }
            this.InvokeAsync("ApproveTicket", new object[] {
                        ApplyCpInfoID,
                        UserID,
                        Result,
                        Reason}, this.ApproveTicketOperationCompleted, userState);
        }
        
        private void OnApproveTicketOperationCompleted(object arg) {
            if ((this.ApproveTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveTicketCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSpidDomainQueryListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSpidDomainQueryListCount(string filter) {
            object[] results = this.Invoke("GetSpidDomainQueryListCount", new object[] {
                        filter});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSpidDomainQueryListCount(string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSpidDomainQueryListCount", new object[] {
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSpidDomainQueryListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpidDomainQueryListCountAsync(string filter) {
            this.GetSpidDomainQueryListCountAsync(filter, null);
        }
        
        /// <remarks/>
        public void GetSpidDomainQueryListCountAsync(string filter, object userState) {
            if ((this.GetSpidDomainQueryListCountOperationCompleted == null)) {
                this.GetSpidDomainQueryListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpidDomainQueryListCountOperationCompleted);
            }
            this.InvokeAsync("GetSpidDomainQueryListCount", new object[] {
                        filter}, this.GetSpidDomainQueryListCountOperationCompleted, userState);
        }
        
        private void OnGetSpidDomainQueryListCountOperationCompleted(object arg) {
            if ((this.GetSpidDomainQueryListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpidDomainQueryListCountCompleted(this, new GetSpidDomainQueryListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSpidDomainQueryList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSpidDomainQueryList(string filter, string SubmitType, int TopCount, int NotInCount) {
            object[] results = this.Invoke("GetSpidDomainQueryList", new object[] {
                        filter,
                        SubmitType,
                        TopCount,
                        NotInCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSpidDomainQueryList(string filter, string SubmitType, int TopCount, int NotInCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSpidDomainQueryList", new object[] {
                        filter,
                        SubmitType,
                        TopCount,
                        NotInCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSpidDomainQueryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpidDomainQueryListAsync(string filter, string SubmitType, int TopCount, int NotInCount) {
            this.GetSpidDomainQueryListAsync(filter, SubmitType, TopCount, NotInCount, null);
        }
        
        /// <remarks/>
        public void GetSpidDomainQueryListAsync(string filter, string SubmitType, int TopCount, int NotInCount, object userState) {
            if ((this.GetSpidDomainQueryListOperationCompleted == null)) {
                this.GetSpidDomainQueryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpidDomainQueryListOperationCompleted);
            }
            this.InvokeAsync("GetSpidDomainQueryList", new object[] {
                        filter,
                        SubmitType,
                        TopCount,
                        NotInCount}, this.GetSpidDomainQueryListOperationCompleted, userState);
        }
        
        private void OnGetSpidDomainQueryListOperationCompleted(object arg) {
            if ((this.GetSpidDomainQueryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpidDomainQueryListCompleted(this, new GetSpidDomainQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ApproveSpidDomain", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveSpidDomain(string Taskid, string UserID, bool Result, string Reason) {
            this.Invoke("ApproveSpidDomain", new object[] {
                        Taskid,
                        UserID,
                        Result,
                        Reason});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApproveSpidDomain(string Taskid, string UserID, bool Result, string Reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ApproveSpidDomain", new object[] {
                        Taskid,
                        UserID,
                        Result,
                        Reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndApproveSpidDomain(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ApproveSpidDomainAsync(string Taskid, string UserID, bool Result, string Reason) {
            this.ApproveSpidDomainAsync(Taskid, UserID, Result, Reason, null);
        }
        
        /// <remarks/>
        public void ApproveSpidDomainAsync(string Taskid, string UserID, bool Result, string Reason, object userState) {
            if ((this.ApproveSpidDomainOperationCompleted == null)) {
                this.ApproveSpidDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveSpidDomainOperationCompleted);
            }
            this.InvokeAsync("ApproveSpidDomain", new object[] {
                        Taskid,
                        UserID,
                        Result,
                        Reason}, this.ApproveSpidDomainOperationCompleted, userState);
        }
        
        private void OnApproveSpidDomainOperationCompleted(object arg) {
            if ((this.ApproveSpidDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveSpidDomainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ApproveSpidEmail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveSpidEmail(string Taskid, string UserID, bool Result, string Reason) {
            this.Invoke("ApproveSpidEmail", new object[] {
                        Taskid,
                        UserID,
                        Result,
                        Reason});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApproveSpidEmail(string Taskid, string UserID, bool Result, string Reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ApproveSpidEmail", new object[] {
                        Taskid,
                        UserID,
                        Result,
                        Reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndApproveSpidEmail(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ApproveSpidEmailAsync(string Taskid, string UserID, bool Result, string Reason) {
            this.ApproveSpidEmailAsync(Taskid, UserID, Result, Reason, null);
        }
        
        /// <remarks/>
        public void ApproveSpidEmailAsync(string Taskid, string UserID, bool Result, string Reason, object userState) {
            if ((this.ApproveSpidEmailOperationCompleted == null)) {
                this.ApproveSpidEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveSpidEmailOperationCompleted);
            }
            this.InvokeAsync("ApproveSpidEmail", new object[] {
                        Taskid,
                        UserID,
                        Result,
                        Reason}, this.ApproveSpidEmailOperationCompleted, userState);
        }
        
        private void OnApproveSpidEmailOperationCompleted(object arg) {
            if ((this.ApproveSpidEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveSpidEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ApproveSpidCompanyName", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveSpidCompanyName(string Taskid, string UserID, bool Result, string Reason) {
            this.Invoke("ApproveSpidCompanyName", new object[] {
                        Taskid,
                        UserID,
                        Result,
                        Reason});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApproveSpidCompanyName(string Taskid, string UserID, bool Result, string Reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ApproveSpidCompanyName", new object[] {
                        Taskid,
                        UserID,
                        Result,
                        Reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndApproveSpidCompanyName(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ApproveSpidCompanyNameAsync(string Taskid, string UserID, bool Result, string Reason) {
            this.ApproveSpidCompanyNameAsync(Taskid, UserID, Result, Reason, null);
        }
        
        /// <remarks/>
        public void ApproveSpidCompanyNameAsync(string Taskid, string UserID, bool Result, string Reason, object userState) {
            if ((this.ApproveSpidCompanyNameOperationCompleted == null)) {
                this.ApproveSpidCompanyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveSpidCompanyNameOperationCompleted);
            }
            this.InvokeAsync("ApproveSpidCompanyName", new object[] {
                        Taskid,
                        UserID,
                        Result,
                        Reason}, this.ApproveSpidCompanyNameOperationCompleted, userState);
        }
        
        private void OnApproveSpidCompanyNameOperationCompleted(object arg) {
            if ((this.ApproveSpidCompanyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveSpidCompanyNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetApplyValueAddedTax", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetApplyValueAddedTax(string filter, int TopCount, int NotInCount) {
            object[] results = this.Invoke("GetApplyValueAddedTax", new object[] {
                        filter,
                        TopCount,
                        NotInCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetApplyValueAddedTax(string filter, int TopCount, int NotInCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetApplyValueAddedTax", new object[] {
                        filter,
                        TopCount,
                        NotInCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetApplyValueAddedTax(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplyValueAddedTaxAsync(string filter, int TopCount, int NotInCount) {
            this.GetApplyValueAddedTaxAsync(filter, TopCount, NotInCount, null);
        }
        
        /// <remarks/>
        public void GetApplyValueAddedTaxAsync(string filter, int TopCount, int NotInCount, object userState) {
            if ((this.GetApplyValueAddedTaxOperationCompleted == null)) {
                this.GetApplyValueAddedTaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplyValueAddedTaxOperationCompleted);
            }
            this.InvokeAsync("GetApplyValueAddedTax", new object[] {
                        filter,
                        TopCount,
                        NotInCount}, this.GetApplyValueAddedTaxOperationCompleted, userState);
        }
        
        private void OnGetApplyValueAddedTaxOperationCompleted(object arg) {
            if ((this.GetApplyValueAddedTaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplyValueAddedTaxCompleted(this, new GetApplyValueAddedTaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetValueAddedTaxDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetValueAddedTaxDetail(string taskid) {
            object[] results = this.Invoke("GetValueAddedTaxDetail", new object[] {
                        taskid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetValueAddedTaxDetail(string taskid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetValueAddedTaxDetail", new object[] {
                        taskid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetValueAddedTaxDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetValueAddedTaxDetailAsync(string taskid) {
            this.GetValueAddedTaxDetailAsync(taskid, null);
        }
        
        /// <remarks/>
        public void GetValueAddedTaxDetailAsync(string taskid, object userState) {
            if ((this.GetValueAddedTaxDetailOperationCompleted == null)) {
                this.GetValueAddedTaxDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValueAddedTaxDetailOperationCompleted);
            }
            this.InvokeAsync("GetValueAddedTaxDetail", new object[] {
                        taskid}, this.GetValueAddedTaxDetailOperationCompleted, userState);
        }
        
        private void OnGetValueAddedTaxDetailOperationCompleted(object arg) {
            if ((this.GetValueAddedTaxDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValueAddedTaxDetailCompleted(this, new GetValueAddedTaxDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ValueAddedTaxApprove", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValueAddedTaxApprove(string taskid, string Memo, string imgTaxCert, string imgBizLicenseCert, string imgAuthorizationCert, string UserName) {
            this.Invoke("ValueAddedTaxApprove", new object[] {
                        taskid,
                        Memo,
                        imgTaxCert,
                        imgBizLicenseCert,
                        imgAuthorizationCert,
                        UserName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValueAddedTaxApprove(string taskid, string Memo, string imgTaxCert, string imgBizLicenseCert, string imgAuthorizationCert, string UserName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValueAddedTaxApprove", new object[] {
                        taskid,
                        Memo,
                        imgTaxCert,
                        imgBizLicenseCert,
                        imgAuthorizationCert,
                        UserName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndValueAddedTaxApprove(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ValueAddedTaxApproveAsync(string taskid, string Memo, string imgTaxCert, string imgBizLicenseCert, string imgAuthorizationCert, string UserName) {
            this.ValueAddedTaxApproveAsync(taskid, Memo, imgTaxCert, imgBizLicenseCert, imgAuthorizationCert, UserName, null);
        }
        
        /// <remarks/>
        public void ValueAddedTaxApproveAsync(string taskid, string Memo, string imgTaxCert, string imgBizLicenseCert, string imgAuthorizationCert, string UserName, object userState) {
            if ((this.ValueAddedTaxApproveOperationCompleted == null)) {
                this.ValueAddedTaxApproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValueAddedTaxApproveOperationCompleted);
            }
            this.InvokeAsync("ValueAddedTaxApprove", new object[] {
                        taskid,
                        Memo,
                        imgTaxCert,
                        imgBizLicenseCert,
                        imgAuthorizationCert,
                        UserName}, this.ValueAddedTaxApproveOperationCompleted, userState);
        }
        
        private void OnValueAddedTaxApproveOperationCompleted(object arg) {
            if ((this.ValueAddedTaxApproveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValueAddedTaxApproveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ValueAddedTaxCancel", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValueAddedTaxCancel(string taskid, string spid, string Memo, string UserName) {
            this.Invoke("ValueAddedTaxCancel", new object[] {
                        taskid,
                        spid,
                        Memo,
                        UserName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValueAddedTaxCancel(string taskid, string spid, string Memo, string UserName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValueAddedTaxCancel", new object[] {
                        taskid,
                        spid,
                        Memo,
                        UserName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndValueAddedTaxCancel(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ValueAddedTaxCancelAsync(string taskid, string spid, string Memo, string UserName) {
            this.ValueAddedTaxCancelAsync(taskid, spid, Memo, UserName, null);
        }
        
        /// <remarks/>
        public void ValueAddedTaxCancelAsync(string taskid, string spid, string Memo, string UserName, object userState) {
            if ((this.ValueAddedTaxCancelOperationCompleted == null)) {
                this.ValueAddedTaxCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValueAddedTaxCancelOperationCompleted);
            }
            this.InvokeAsync("ValueAddedTaxCancel", new object[] {
                        taskid,
                        spid,
                        Memo,
                        UserName}, this.ValueAddedTaxCancelOperationCompleted, userState);
        }
        
        private void OnValueAddedTaxCancelOperationCompleted(object arg) {
            if ((this.ValueAddedTaxCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValueAddedTaxCancelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAllValueAddedTax", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllValueAddedTax(string filter, int TopCount, int NotInCount) {
            object[] results = this.Invoke("GetAllValueAddedTax", new object[] {
                        filter,
                        TopCount,
                        NotInCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllValueAddedTax(string filter, int TopCount, int NotInCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllValueAddedTax", new object[] {
                        filter,
                        TopCount,
                        NotInCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAllValueAddedTax(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllValueAddedTaxAsync(string filter, int TopCount, int NotInCount) {
            this.GetAllValueAddedTaxAsync(filter, TopCount, NotInCount, null);
        }
        
        /// <remarks/>
        public void GetAllValueAddedTaxAsync(string filter, int TopCount, int NotInCount, object userState) {
            if ((this.GetAllValueAddedTaxOperationCompleted == null)) {
                this.GetAllValueAddedTaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllValueAddedTaxOperationCompleted);
            }
            this.InvokeAsync("GetAllValueAddedTax", new object[] {
                        filter,
                        TopCount,
                        NotInCount}, this.GetAllValueAddedTaxOperationCompleted, userState);
        }
        
        private void OnGetAllValueAddedTaxOperationCompleted(object arg) {
            if ((this.GetAllValueAddedTaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllValueAddedTaxCompleted(this, new GetAllValueAddedTaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetOneValueAddedTax", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOneValueAddedTax(string Spid) {
            object[] results = this.Invoke("GetOneValueAddedTax", new object[] {
                        Spid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOneValueAddedTax(string Spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOneValueAddedTax", new object[] {
                        Spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetOneValueAddedTax(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOneValueAddedTaxAsync(string Spid) {
            this.GetOneValueAddedTaxAsync(Spid, null);
        }
        
        /// <remarks/>
        public void GetOneValueAddedTaxAsync(string Spid, object userState) {
            if ((this.GetOneValueAddedTaxOperationCompleted == null)) {
                this.GetOneValueAddedTaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOneValueAddedTaxOperationCompleted);
            }
            this.InvokeAsync("GetOneValueAddedTax", new object[] {
                        Spid}, this.GetOneValueAddedTaxOperationCompleted, userState);
        }
        
        private void OnGetOneValueAddedTaxOperationCompleted(object arg) {
            if ((this.GetOneValueAddedTaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOneValueAddedTaxCompleted(this, new GetOneValueAddedTaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ValueAddedTaxModify", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValueAddedTaxModify(string Spid, int Flag) {
            this.Invoke("ValueAddedTaxModify", new object[] {
                        Spid,
                        Flag});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValueAddedTaxModify(string Spid, int Flag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValueAddedTaxModify", new object[] {
                        Spid,
                        Flag}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndValueAddedTaxModify(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ValueAddedTaxModifyAsync(string Spid, int Flag) {
            this.ValueAddedTaxModifyAsync(Spid, Flag, null);
        }
        
        /// <remarks/>
        public void ValueAddedTaxModifyAsync(string Spid, int Flag, object userState) {
            if ((this.ValueAddedTaxModifyOperationCompleted == null)) {
                this.ValueAddedTaxModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValueAddedTaxModifyOperationCompleted);
            }
            this.InvokeAsync("ValueAddedTaxModify", new object[] {
                        Spid,
                        Flag}, this.ValueAddedTaxModifyOperationCompleted, userState);
        }
        
        private void OnValueAddedTaxModifyOperationCompleted(object arg) {
            if ((this.ValueAddedTaxModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValueAddedTaxModifyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/AgentCancel", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AgentCancel(string Fspid) {
            this.Invoke("AgentCancel", new object[] {
                        Fspid});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAgentCancel(string Fspid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AgentCancel", new object[] {
                        Fspid}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndAgentCancel(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void AgentCancelAsync(string Fspid) {
            this.AgentCancelAsync(Fspid, null);
        }
        
        /// <remarks/>
        public void AgentCancelAsync(string Fspid, object userState) {
            if ((this.AgentCancelOperationCompleted == null)) {
                this.AgentCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgentCancelOperationCompleted);
            }
            this.InvokeAsync("AgentCancel", new object[] {
                        Fspid}, this.AgentCancelOperationCompleted, userState);
        }
        
        private void OnAgentCancelOperationCompleted(object arg) {
            if ((this.AgentCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgentCancelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SetRole", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetRole(string spid, string qq, int newrole, int signorder) {
            object[] results = this.Invoke("SetRole", new object[] {
                        spid,
                        qq,
                        newrole,
                        signorder});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetRole(string spid, string qq, int newrole, int signorder, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetRole", new object[] {
                        spid,
                        qq,
                        newrole,
                        signorder}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSetRole(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetRoleAsync(string spid, string qq, int newrole, int signorder) {
            this.SetRoleAsync(spid, qq, newrole, signorder, null);
        }
        
        /// <remarks/>
        public void SetRoleAsync(string spid, string qq, int newrole, int signorder, object userState) {
            if ((this.SetRoleOperationCompleted == null)) {
                this.SetRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRoleOperationCompleted);
            }
            this.InvokeAsync("SetRole", new object[] {
                        spid,
                        qq,
                        newrole,
                        signorder}, this.SetRoleOperationCompleted, userState);
        }
        
        private void OnSetRoleOperationCompleted(object arg) {
            if ((this.SetRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRoleCompleted(this, new SetRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BusinessLogout", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BusinessLogout(string Fspid, string UserName, string Reason) {
            this.Invoke("BusinessLogout", new object[] {
                        Fspid,
                        UserName,
                        Reason});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBusinessLogout(string Fspid, string UserName, string Reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BusinessLogout", new object[] {
                        Fspid,
                        UserName,
                        Reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBusinessLogout(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void BusinessLogoutAsync(string Fspid, string UserName, string Reason) {
            this.BusinessLogoutAsync(Fspid, UserName, Reason, null);
        }
        
        /// <remarks/>
        public void BusinessLogoutAsync(string Fspid, string UserName, string Reason, object userState) {
            if ((this.BusinessLogoutOperationCompleted == null)) {
                this.BusinessLogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBusinessLogoutOperationCompleted);
            }
            this.InvokeAsync("BusinessLogout", new object[] {
                        Fspid,
                        UserName,
                        Reason}, this.BusinessLogoutOperationCompleted, userState);
        }
        
        private void OnBusinessLogoutOperationCompleted(object arg) {
            if ((this.BusinessLogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BusinessLogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BusinessFreeze", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BusinessFreeze(string Fspid, string UserName, bool IsFreeze, bool IsFreezePay, bool IsAccLoss, bool IsCloseAgent, string Reason) {
            this.Invoke("BusinessFreeze", new object[] {
                        Fspid,
                        UserName,
                        IsFreeze,
                        IsFreezePay,
                        IsAccLoss,
                        IsCloseAgent,
                        Reason});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBusinessFreeze(string Fspid, string UserName, bool IsFreeze, bool IsFreezePay, bool IsAccLoss, bool IsCloseAgent, string Reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BusinessFreeze", new object[] {
                        Fspid,
                        UserName,
                        IsFreeze,
                        IsFreezePay,
                        IsAccLoss,
                        IsCloseAgent,
                        Reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBusinessFreeze(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void BusinessFreezeAsync(string Fspid, string UserName, bool IsFreeze, bool IsFreezePay, bool IsAccLoss, bool IsCloseAgent, string Reason) {
            this.BusinessFreezeAsync(Fspid, UserName, IsFreeze, IsFreezePay, IsAccLoss, IsCloseAgent, Reason, null);
        }
        
        /// <remarks/>
        public void BusinessFreezeAsync(string Fspid, string UserName, bool IsFreeze, bool IsFreezePay, bool IsAccLoss, bool IsCloseAgent, string Reason, object userState) {
            if ((this.BusinessFreezeOperationCompleted == null)) {
                this.BusinessFreezeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBusinessFreezeOperationCompleted);
            }
            this.InvokeAsync("BusinessFreeze", new object[] {
                        Fspid,
                        UserName,
                        IsFreeze,
                        IsFreezePay,
                        IsAccLoss,
                        IsCloseAgent,
                        Reason}, this.BusinessFreezeOperationCompleted, userState);
        }
        
        private void OnBusinessFreezeOperationCompleted(object arg) {
            if ((this.BusinessFreezeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BusinessFreezeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBussFreezeList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBussFreezeList(string spid, string type, string state) {
            object[] results = this.Invoke("QueryBussFreezeList", new object[] {
                        spid,
                        type,
                        state});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBussFreezeList(string spid, string type, string state, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBussFreezeList", new object[] {
                        spid,
                        type,
                        state}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryBussFreezeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBussFreezeListAsync(string spid, string type, string state) {
            this.QueryBussFreezeListAsync(spid, type, state, null);
        }
        
        /// <remarks/>
        public void QueryBussFreezeListAsync(string spid, string type, string state, object userState) {
            if ((this.QueryBussFreezeListOperationCompleted == null)) {
                this.QueryBussFreezeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBussFreezeListOperationCompleted);
            }
            this.InvokeAsync("QueryBussFreezeList", new object[] {
                        spid,
                        type,
                        state}, this.QueryBussFreezeListOperationCompleted, userState);
        }
        
        private void OnQueryBussFreezeListOperationCompleted(object arg) {
            if ((this.QueryBussFreezeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBussFreezeListCompleted(this, new QueryBussFreezeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBDName", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBDName(string spid) {
            object[] results = this.Invoke("GetBDName", new object[] {
                        spid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBDName(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBDName", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetBDName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBDNameAsync(string spid) {
            this.GetBDNameAsync(spid, null);
        }
        
        /// <remarks/>
        public void GetBDNameAsync(string spid, object userState) {
            if ((this.GetBDNameOperationCompleted == null)) {
                this.GetBDNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBDNameOperationCompleted);
            }
            this.InvokeAsync("GetBDName", new object[] {
                        spid}, this.GetBDNameOperationCompleted, userState);
        }
        
        private void OnGetBDNameOperationCompleted(object arg) {
            if ((this.GetBDNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBDNameCompleted(this, new GetBDNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetWWWAddress", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWWWAddress(string spid) {
            object[] results = this.Invoke("GetWWWAddress", new object[] {
                        spid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWWWAddress(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWWWAddress", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetWWWAddress(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWWWAddressAsync(string spid) {
            this.GetWWWAddressAsync(spid, null);
        }
        
        /// <remarks/>
        public void GetWWWAddressAsync(string spid, object userState) {
            if ((this.GetWWWAddressOperationCompleted == null)) {
                this.GetWWWAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWWWAddressOperationCompleted);
            }
            this.InvokeAsync("GetWWWAddress", new object[] {
                        spid}, this.GetWWWAddressOperationCompleted, userState);
        }
        
        private void OnGetWWWAddressOperationCompleted(object arg) {
            if ((this.GetWWWAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWWWAddressCompleted(this, new GetWWWAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetTradeType", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTradeType(string spid) {
            object[] results = this.Invoke("GetTradeType", new object[] {
                        spid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTradeType(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTradeType", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetTradeType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTradeTypeAsync(string spid) {
            this.GetTradeTypeAsync(spid, null);
        }
        
        /// <remarks/>
        public void GetTradeTypeAsync(string spid, object userState) {
            if ((this.GetTradeTypeOperationCompleted == null)) {
                this.GetTradeTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTradeTypeOperationCompleted);
            }
            this.InvokeAsync("GetTradeType", new object[] {
                        spid}, this.GetTradeTypeOperationCompleted, userState);
        }
        
        private void OnGetTradeTypeOperationCompleted(object arg) {
            if ((this.GetTradeTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTradeTypeCompleted(this, new GetTradeTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BusinessFreezeSPOA", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BusinessFreezeSPOA(string Fspid, bool IsFreeze, bool IsFreezePay, bool IsAccLoss, bool IsCloseAgent, string UserName, string Reason) {
            this.Invoke("BusinessFreezeSPOA", new object[] {
                        Fspid,
                        IsFreeze,
                        IsFreezePay,
                        IsAccLoss,
                        IsCloseAgent,
                        UserName,
                        Reason});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBusinessFreezeSPOA(string Fspid, bool IsFreeze, bool IsFreezePay, bool IsAccLoss, bool IsCloseAgent, string UserName, string Reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BusinessFreezeSPOA", new object[] {
                        Fspid,
                        IsFreeze,
                        IsFreezePay,
                        IsAccLoss,
                        IsCloseAgent,
                        UserName,
                        Reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBusinessFreezeSPOA(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void BusinessFreezeSPOAAsync(string Fspid, bool IsFreeze, bool IsFreezePay, bool IsAccLoss, bool IsCloseAgent, string UserName, string Reason) {
            this.BusinessFreezeSPOAAsync(Fspid, IsFreeze, IsFreezePay, IsAccLoss, IsCloseAgent, UserName, Reason, null);
        }
        
        /// <remarks/>
        public void BusinessFreezeSPOAAsync(string Fspid, bool IsFreeze, bool IsFreezePay, bool IsAccLoss, bool IsCloseAgent, string UserName, string Reason, object userState) {
            if ((this.BusinessFreezeSPOAOperationCompleted == null)) {
                this.BusinessFreezeSPOAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBusinessFreezeSPOAOperationCompleted);
            }
            this.InvokeAsync("BusinessFreezeSPOA", new object[] {
                        Fspid,
                        IsFreeze,
                        IsFreezePay,
                        IsAccLoss,
                        IsCloseAgent,
                        UserName,
                        Reason}, this.BusinessFreezeSPOAOperationCompleted, userState);
        }
        
        private void OnBusinessFreezeSPOAOperationCompleted(object arg) {
            if ((this.BusinessFreezeSPOACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BusinessFreezeSPOACompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRole", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRole(string spid, string qq, int signorder) {
            object[] results = this.Invoke("GetRole", new object[] {
                        spid,
                        qq,
                        signorder});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRole(string spid, string qq, int signorder, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRole", new object[] {
                        spid,
                        qq,
                        signorder}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetRole(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleAsync(string spid, string qq, int signorder) {
            this.GetRoleAsync(spid, qq, signorder, null);
        }
        
        /// <remarks/>
        public void GetRoleAsync(string spid, string qq, int signorder, object userState) {
            if ((this.GetRoleOperationCompleted == null)) {
                this.GetRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleOperationCompleted);
            }
            this.InvokeAsync("GetRole", new object[] {
                        spid,
                        qq,
                        signorder}, this.GetRoleOperationCompleted, userState);
        }
        
        private void OnGetRoleOperationCompleted(object arg) {
            if ((this.GetRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleCompleted(this, new GetRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ShutRefund", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ShutRefund(string Fspid, string UserName, string Reason) {
            this.Invoke("ShutRefund", new object[] {
                        Fspid,
                        UserName,
                        Reason});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginShutRefund(string Fspid, string UserName, string Reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ShutRefund", new object[] {
                        Fspid,
                        UserName,
                        Reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndShutRefund(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ShutRefundAsync(string Fspid, string UserName, string Reason) {
            this.ShutRefundAsync(Fspid, UserName, Reason, null);
        }
        
        /// <remarks/>
        public void ShutRefundAsync(string Fspid, string UserName, string Reason, object userState) {
            if ((this.ShutRefundOperationCompleted == null)) {
                this.ShutRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShutRefundOperationCompleted);
            }
            this.InvokeAsync("ShutRefund", new object[] {
                        Fspid,
                        UserName,
                        Reason}, this.ShutRefundOperationCompleted, userState);
        }
        
        private void OnShutRefundOperationCompleted(object arg) {
            if ((this.ShutRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShutRefundCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ApplyRefund", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApplyRefund(string Fspid, string UserName, string Reason) {
            this.Invoke("ApplyRefund", new object[] {
                        Fspid,
                        UserName,
                        Reason});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApplyRefund(string Fspid, string UserName, string Reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ApplyRefund", new object[] {
                        Fspid,
                        UserName,
                        Reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndApplyRefund(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ApplyRefundAsync(string Fspid, string UserName, string Reason) {
            this.ApplyRefundAsync(Fspid, UserName, Reason, null);
        }
        
        /// <remarks/>
        public void ApplyRefundAsync(string Fspid, string UserName, string Reason, object userState) {
            if ((this.ApplyRefundOperationCompleted == null)) {
                this.ApplyRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyRefundOperationCompleted);
            }
            this.InvokeAsync("ApplyRefund", new object[] {
                        Fspid,
                        UserName,
                        Reason}, this.ApplyRefundOperationCompleted, userState);
        }
        
        private void OnApplyRefundOperationCompleted(object arg) {
            if ((this.ApplyRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyRefundCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BusinessResume", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BusinessResume(string Fspid, string UserName, string Reason) {
            this.Invoke("BusinessResume", new object[] {
                        Fspid,
                        UserName,
                        Reason});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBusinessResume(string Fspid, string UserName, string Reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BusinessResume", new object[] {
                        Fspid,
                        UserName,
                        Reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBusinessResume(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void BusinessResumeAsync(string Fspid, string UserName, string Reason) {
            this.BusinessResumeAsync(Fspid, UserName, Reason, null);
        }
        
        /// <remarks/>
        public void BusinessResumeAsync(string Fspid, string UserName, string Reason, object userState) {
            if ((this.BusinessResumeOperationCompleted == null)) {
                this.BusinessResumeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBusinessResumeOperationCompleted);
            }
            this.InvokeAsync("BusinessResume", new object[] {
                        Fspid,
                        UserName,
                        Reason}, this.BusinessResumeOperationCompleted, userState);
        }
        
        private void OnBusinessResumeOperationCompleted(object arg) {
            if ((this.BusinessResumeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BusinessResumeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SuspendRefundment", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SuspendRefundment(object[] al, string UserIP, out string msg) {
            object[] results = this.Invoke("SuspendRefundment", new object[] {
                        al,
                        UserIP});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSuspendRefundment(object[] al, string UserIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SuspendRefundment", new object[] {
                        al,
                        UserIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSuspendRefundment(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SuspendRefundmentAsync(object[] al, string UserIP) {
            this.SuspendRefundmentAsync(al, UserIP, null);
        }
        
        /// <remarks/>
        public void SuspendRefundmentAsync(object[] al, string UserIP, object userState) {
            if ((this.SuspendRefundmentOperationCompleted == null)) {
                this.SuspendRefundmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuspendRefundmentOperationCompleted);
            }
            this.InvokeAsync("SuspendRefundment", new object[] {
                        al,
                        UserIP}, this.SuspendRefundmentOperationCompleted, userState);
        }
        
        private void OnSuspendRefundmentOperationCompleted(object arg) {
            if ((this.SuspendRefundmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuspendRefundmentCompleted(this, new SuspendRefundmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUIDFromCerNum", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUIDFromCerNum(string cerNum) {
            object[] results = this.Invoke("GetUIDFromCerNum", new object[] {
                        cerNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUIDFromCerNum(string cerNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUIDFromCerNum", new object[] {
                        cerNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetUIDFromCerNum(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUIDFromCerNumAsync(string cerNum) {
            this.GetUIDFromCerNumAsync(cerNum, null);
        }
        
        /// <remarks/>
        public void GetUIDFromCerNumAsync(string cerNum, object userState) {
            if ((this.GetUIDFromCerNumOperationCompleted == null)) {
                this.GetUIDFromCerNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUIDFromCerNumOperationCompleted);
            }
            this.InvokeAsync("GetUIDFromCerNum", new object[] {
                        cerNum}, this.GetUIDFromCerNumOperationCompleted, userState);
        }
        
        private void OnGetUIDFromCerNumOperationCompleted(object arg) {
            if ((this.GetUIDFromCerNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUIDFromCerNumCompleted(this, new GetUIDFromCerNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetB2cReturnCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetB2cReturnCount(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid) {
            object[] results = this.Invoke("GetB2cReturnCount", new object[] {
                        spid,
                        begintime,
                        endtime,
                        refundtype,
                        status,
                        tranid,
                        buyqq,
                        banktype,
                        sumtype,
                        drawid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetB2cReturnCount(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetB2cReturnCount", new object[] {
                        spid,
                        begintime,
                        endtime,
                        refundtype,
                        status,
                        tranid,
                        buyqq,
                        banktype,
                        sumtype,
                        drawid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetB2cReturnCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetB2cReturnCountAsync(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid) {
            this.GetB2cReturnCountAsync(spid, begintime, endtime, refundtype, status, tranid, buyqq, banktype, sumtype, drawid, null);
        }
        
        /// <remarks/>
        public void GetB2cReturnCountAsync(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid, object userState) {
            if ((this.GetB2cReturnCountOperationCompleted == null)) {
                this.GetB2cReturnCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetB2cReturnCountOperationCompleted);
            }
            this.InvokeAsync("GetB2cReturnCount", new object[] {
                        spid,
                        begintime,
                        endtime,
                        refundtype,
                        status,
                        tranid,
                        buyqq,
                        banktype,
                        sumtype,
                        drawid}, this.GetB2cReturnCountOperationCompleted, userState);
        }
        
        private void OnGetB2cReturnCountOperationCompleted(object arg) {
            if ((this.GetB2cReturnCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetB2cReturnCountCompleted(this, new GetB2cReturnCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetB2cReturnList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetB2cReturnList(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid, int queryTable, int istart, int imax) {
            object[] results = this.Invoke("GetB2cReturnList", new object[] {
                        spid,
                        begintime,
                        endtime,
                        refundtype,
                        status,
                        tranid,
                        buyqq,
                        banktype,
                        sumtype,
                        drawid,
                        queryTable,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetB2cReturnList(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid, int queryTable, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetB2cReturnList", new object[] {
                        spid,
                        begintime,
                        endtime,
                        refundtype,
                        status,
                        tranid,
                        buyqq,
                        banktype,
                        sumtype,
                        drawid,
                        queryTable,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetB2cReturnList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetB2cReturnListAsync(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid, int queryTable, int istart, int imax) {
            this.GetB2cReturnListAsync(spid, begintime, endtime, refundtype, status, tranid, buyqq, banktype, sumtype, drawid, queryTable, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetB2cReturnListAsync(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid, int queryTable, int istart, int imax, object userState) {
            if ((this.GetB2cReturnListOperationCompleted == null)) {
                this.GetB2cReturnListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetB2cReturnListOperationCompleted);
            }
            this.InvokeAsync("GetB2cReturnList", new object[] {
                        spid,
                        begintime,
                        endtime,
                        refundtype,
                        status,
                        tranid,
                        buyqq,
                        banktype,
                        sumtype,
                        drawid,
                        queryTable,
                        istart,
                        imax}, this.GetB2cReturnListOperationCompleted, userState);
        }
        
        private void OnGetB2cReturnListOperationCompleted(object arg) {
            if ((this.GetB2cReturnListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetB2cReturnListCompleted(this, new GetB2cReturnListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SettQuery", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SettQuery(string filter) {
            object[] results = this.Invoke("SettQuery", new object[] {
                        filter});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSettQuery(string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SettQuery", new object[] {
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSettQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SettQueryAsync(string filter) {
            this.SettQueryAsync(filter, null);
        }
        
        /// <remarks/>
        public void SettQueryAsync(string filter, object userState) {
            if ((this.SettQueryOperationCompleted == null)) {
                this.SettQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSettQueryOperationCompleted);
            }
            this.InvokeAsync("SettQuery", new object[] {
                        filter}, this.SettQueryOperationCompleted, userState);
        }
        
        private void OnSettQueryOperationCompleted(object arg) {
            if ((this.SettQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SettQueryCompleted(this, new SettQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SettQueryWechat", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SettQueryWechat(string filter) {
            object[] results = this.Invoke("SettQueryWechat", new object[] {
                        filter});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSettQueryWechat(string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SettQueryWechat", new object[] {
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSettQueryWechat(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SettQueryWechatAsync(string filter) {
            this.SettQueryWechatAsync(filter, null);
        }
        
        /// <remarks/>
        public void SettQueryWechatAsync(string filter, object userState) {
            if ((this.SettQueryWechatOperationCompleted == null)) {
                this.SettQueryWechatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSettQueryWechatOperationCompleted);
            }
            this.InvokeAsync("SettQueryWechat", new object[] {
                        filter}, this.SettQueryWechatOperationCompleted, userState);
        }
        
        private void OnSettQueryWechatOperationCompleted(object arg) {
            if ((this.SettQueryWechatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SettQueryWechatCompleted(this, new SettQueryWechatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryForSelect1", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryForSelect1() {
            object[] results = this.Invoke("QueryForSelect1", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryForSelect1(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryForSelect1", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryForSelect1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryForSelect1Async() {
            this.QueryForSelect1Async(null);
        }
        
        /// <remarks/>
        public void QueryForSelect1Async(object userState) {
            if ((this.QueryForSelect1OperationCompleted == null)) {
                this.QueryForSelect1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryForSelect1OperationCompleted);
            }
            this.InvokeAsync("QueryForSelect1", new object[0], this.QueryForSelect1OperationCompleted, userState);
        }
        
        private void OnQueryForSelect1OperationCompleted(object arg) {
            if ((this.QueryForSelect1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryForSelect1Completed(this, new QueryForSelect1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryForSelect2_NOUSE", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryForSelect2_NOUSE() {
            object[] results = this.Invoke("QueryForSelect2_NOUSE", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryForSelect2_NOUSE(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryForSelect2_NOUSE", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryForSelect2_NOUSE(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryForSelect2_NOUSEAsync() {
            this.QueryForSelect2_NOUSEAsync(null);
        }
        
        /// <remarks/>
        public void QueryForSelect2_NOUSEAsync(object userState) {
            if ((this.QueryForSelect2_NOUSEOperationCompleted == null)) {
                this.QueryForSelect2_NOUSEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryForSelect2_NOUSEOperationCompleted);
            }
            this.InvokeAsync("QueryForSelect2_NOUSE", new object[0], this.QueryForSelect2_NOUSEOperationCompleted, userState);
        }
        
        private void OnQueryForSelect2_NOUSEOperationCompleted(object arg) {
            if ((this.QueryForSelect2_NOUSECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryForSelect2_NOUSECompleted(this, new QueryForSelect2_NOUSECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryForSelect3", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryForSelect3() {
            object[] results = this.Invoke("QueryForSelect3", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryForSelect3(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryForSelect3", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryForSelect3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryForSelect3Async() {
            this.QueryForSelect3Async(null);
        }
        
        /// <remarks/>
        public void QueryForSelect3Async(object userState) {
            if ((this.QueryForSelect3OperationCompleted == null)) {
                this.QueryForSelect3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryForSelect3OperationCompleted);
            }
            this.InvokeAsync("QueryForSelect3", new object[0], this.QueryForSelect3OperationCompleted, userState);
        }
        
        private void OnQueryForSelect3OperationCompleted(object arg) {
            if ((this.QueryForSelect3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryForSelect3Completed(this, new QueryForSelect3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryForSelect4", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryForSelect4() {
            object[] results = this.Invoke("QueryForSelect4", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryForSelect4(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryForSelect4", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryForSelect4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryForSelect4Async() {
            this.QueryForSelect4Async(null);
        }
        
        /// <remarks/>
        public void QueryForSelect4Async(object userState) {
            if ((this.QueryForSelect4OperationCompleted == null)) {
                this.QueryForSelect4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryForSelect4OperationCompleted);
            }
            this.InvokeAsync("QueryForSelect4", new object[0], this.QueryForSelect4OperationCompleted, userState);
        }
        
        private void OnQueryForSelect4OperationCompleted(object arg) {
            if ((this.QueryForSelect4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryForSelect4Completed(this, new QueryForSelect4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryForSelect5", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryForSelect5() {
            object[] results = this.Invoke("QueryForSelect5", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryForSelect5(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryForSelect5", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryForSelect5(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryForSelect5Async() {
            this.QueryForSelect5Async(null);
        }
        
        /// <remarks/>
        public void QueryForSelect5Async(object userState) {
            if ((this.QueryForSelect5OperationCompleted == null)) {
                this.QueryForSelect5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryForSelect5OperationCompleted);
            }
            this.InvokeAsync("QueryForSelect5", new object[0], this.QueryForSelect5OperationCompleted, userState);
        }
        
        private void OnQueryForSelect5OperationCompleted(object arg) {
            if ((this.QueryForSelect5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryForSelect5Completed(this, new QueryForSelect5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryForSelect6", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryForSelect6(string id) {
            object[] results = this.Invoke("QueryForSelect6", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryForSelect6(string id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryForSelect6", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryForSelect6(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryForSelect6Async(string id) {
            this.QueryForSelect6Async(id, null);
        }
        
        /// <remarks/>
        public void QueryForSelect6Async(string id, object userState) {
            if ((this.QueryForSelect6OperationCompleted == null)) {
                this.QueryForSelect6OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryForSelect6OperationCompleted);
            }
            this.InvokeAsync("QueryForSelect6", new object[] {
                        id}, this.QueryForSelect6OperationCompleted, userState);
        }
        
        private void OnQueryForSelect6OperationCompleted(object arg) {
            if ((this.QueryForSelect6Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryForSelect6Completed(this, new QueryForSelect6CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryForSelect7", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryForSelect7(string special) {
            object[] results = this.Invoke("QueryForSelect7", new object[] {
                        special});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryForSelect7(string special, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryForSelect7", new object[] {
                        special}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndQueryForSelect7(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryForSelect7Async(string special) {
            this.QueryForSelect7Async(special, null);
        }
        
        /// <remarks/>
        public void QueryForSelect7Async(string special, object userState) {
            if ((this.QueryForSelect7OperationCompleted == null)) {
                this.QueryForSelect7OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryForSelect7OperationCompleted);
            }
            this.InvokeAsync("QueryForSelect7", new object[] {
                        special}, this.QueryForSelect7OperationCompleted, userState);
        }
        
        private void OnQueryForSelect7OperationCompleted(object arg) {
            if ((this.QueryForSelect7Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryForSelect7Completed(this, new QueryForSelect7CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryForSelect8", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryForSelect8(string filter) {
            object[] results = this.Invoke("QueryForSelect8", new object[] {
                        filter});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryForSelect8(string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryForSelect8", new object[] {
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryForSelect8(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryForSelect8Async(string filter) {
            this.QueryForSelect8Async(filter, null);
        }
        
        /// <remarks/>
        public void QueryForSelect8Async(string filter, object userState) {
            if ((this.QueryForSelect8OperationCompleted == null)) {
                this.QueryForSelect8OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryForSelect8OperationCompleted);
            }
            this.InvokeAsync("QueryForSelect8", new object[] {
                        filter}, this.QueryForSelect8OperationCompleted, userState);
        }
        
        private void OnQueryForSelect8OperationCompleted(object arg) {
            if ((this.QueryForSelect8Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryForSelect8Completed(this, new QueryForSelect8CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryContractWechat", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryContractWechat(string filter) {
            object[] results = this.Invoke("QueryContractWechat", new object[] {
                        filter});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryContractWechat(string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryContractWechat", new object[] {
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryContractWechat(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryContractWechatAsync(string filter) {
            this.QueryContractWechatAsync(filter, null);
        }
        
        /// <remarks/>
        public void QueryContractWechatAsync(string filter, object userState) {
            if ((this.QueryContractWechatOperationCompleted == null)) {
                this.QueryContractWechatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryContractWechatOperationCompleted);
            }
            this.InvokeAsync("QueryContractWechat", new object[] {
                        filter}, this.QueryContractWechatOperationCompleted, userState);
        }
        
        private void OnQueryContractWechatOperationCompleted(object arg) {
            if ((this.QueryContractWechatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryContractWechatCompleted(this, new QueryContractWechatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/TranLogIncomeSumQuery", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TranLogIncomeSumQuery(System.DateTime dateFrom, System.DateTime dateTo, string filter) {
            object[] results = this.Invoke("TranLogIncomeSumQuery", new object[] {
                        dateFrom,
                        dateTo,
                        filter});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTranLogIncomeSumQuery(System.DateTime dateFrom, System.DateTime dateTo, string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TranLogIncomeSumQuery", new object[] {
                        dateFrom,
                        dateTo,
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndTranLogIncomeSumQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TranLogIncomeSumQueryAsync(System.DateTime dateFrom, System.DateTime dateTo, string filter) {
            this.TranLogIncomeSumQueryAsync(dateFrom, dateTo, filter, null);
        }
        
        /// <remarks/>
        public void TranLogIncomeSumQueryAsync(System.DateTime dateFrom, System.DateTime dateTo, string filter, object userState) {
            if ((this.TranLogIncomeSumQueryOperationCompleted == null)) {
                this.TranLogIncomeSumQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTranLogIncomeSumQueryOperationCompleted);
            }
            this.InvokeAsync("TranLogIncomeSumQuery", new object[] {
                        dateFrom,
                        dateTo,
                        filter}, this.TranLogIncomeSumQueryOperationCompleted, userState);
        }
        
        private void OnTranLogIncomeSumQueryOperationCompleted(object arg) {
            if ((this.TranLogIncomeSumQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TranLogIncomeSumQueryCompleted(this, new TranLogIncomeSumQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetQuerySettlementList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQuerySettlementList(string Fspid) {
            object[] results = this.Invoke("GetQuerySettlementList", new object[] {
                        Fspid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQuerySettlementList(string Fspid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQuerySettlementList", new object[] {
                        Fspid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetQuerySettlementList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuerySettlementListAsync(string Fspid) {
            this.GetQuerySettlementListAsync(Fspid, null);
        }
        
        /// <remarks/>
        public void GetQuerySettlementListAsync(string Fspid, object userState) {
            if ((this.GetQuerySettlementListOperationCompleted == null)) {
                this.GetQuerySettlementListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuerySettlementListOperationCompleted);
            }
            this.InvokeAsync("GetQuerySettlementList", new object[] {
                        Fspid}, this.GetQuerySettlementListOperationCompleted, userState);
        }
        
        private void OnGetQuerySettlementListOperationCompleted(object arg) {
            if ((this.GetQuerySettlementListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuerySettlementListCompleted(this, new GetQuerySettlementListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QuerySettlementListWechat", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QuerySettlementListWechat(string Fspid) {
            object[] results = this.Invoke("QuerySettlementListWechat", new object[] {
                        Fspid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQuerySettlementListWechat(string Fspid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QuerySettlementListWechat", new object[] {
                        Fspid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQuerySettlementListWechat(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySettlementListWechatAsync(string Fspid) {
            this.QuerySettlementListWechatAsync(Fspid, null);
        }
        
        /// <remarks/>
        public void QuerySettlementListWechatAsync(string Fspid, object userState) {
            if ((this.QuerySettlementListWechatOperationCompleted == null)) {
                this.QuerySettlementListWechatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySettlementListWechatOperationCompleted);
            }
            this.InvokeAsync("QuerySettlementListWechat", new object[] {
                        Fspid}, this.QuerySettlementListWechatOperationCompleted, userState);
        }
        
        private void OnQuerySettlementListWechatOperationCompleted(object arg) {
            if ((this.QuerySettlementListWechatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySettlementListWechatCompleted(this, new QuerySettlementListWechatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetQuerySettlementTodayList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQuerySettlementTodayList(string Fspid) {
            object[] results = this.Invoke("GetQuerySettlementTodayList", new object[] {
                        Fspid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQuerySettlementTodayList(string Fspid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQuerySettlementTodayList", new object[] {
                        Fspid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetQuerySettlementTodayList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuerySettlementTodayListAsync(string Fspid) {
            this.GetQuerySettlementTodayListAsync(Fspid, null);
        }
        
        /// <remarks/>
        public void GetQuerySettlementTodayListAsync(string Fspid, object userState) {
            if ((this.GetQuerySettlementTodayListOperationCompleted == null)) {
                this.GetQuerySettlementTodayListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuerySettlementTodayListOperationCompleted);
            }
            this.InvokeAsync("GetQuerySettlementTodayList", new object[] {
                        Fspid}, this.GetQuerySettlementTodayListOperationCompleted, userState);
        }
        
        private void OnGetQuerySettlementTodayListOperationCompleted(object arg) {
            if ((this.GetQuerySettlementTodayListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuerySettlementTodayListCompleted(this, new GetQuerySettlementTodayListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetQueryBalanceList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQueryBalanceList(string Fspid, System.DateTime BeginDate, System.DateTime EndDate) {
            object[] results = this.Invoke("GetQueryBalanceList", new object[] {
                        Fspid,
                        BeginDate,
                        EndDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQueryBalanceList(string Fspid, System.DateTime BeginDate, System.DateTime EndDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQueryBalanceList", new object[] {
                        Fspid,
                        BeginDate,
                        EndDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetQueryBalanceList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryBalanceListAsync(string Fspid, System.DateTime BeginDate, System.DateTime EndDate) {
            this.GetQueryBalanceListAsync(Fspid, BeginDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetQueryBalanceListAsync(string Fspid, System.DateTime BeginDate, System.DateTime EndDate, object userState) {
            if ((this.GetQueryBalanceListOperationCompleted == null)) {
                this.GetQueryBalanceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryBalanceListOperationCompleted);
            }
            this.InvokeAsync("GetQueryBalanceList", new object[] {
                        Fspid,
                        BeginDate,
                        EndDate}, this.GetQueryBalanceListOperationCompleted, userState);
        }
        
        private void OnGetQueryBalanceListOperationCompleted(object arg) {
            if ((this.GetQueryBalanceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryBalanceListCompleted(this, new GetQueryBalanceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBalanceListWechat", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBalanceListWechat(string Fspid, System.DateTime BeginDate, System.DateTime EndDate) {
            object[] results = this.Invoke("QueryBalanceListWechat", new object[] {
                        Fspid,
                        BeginDate,
                        EndDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBalanceListWechat(string Fspid, System.DateTime BeginDate, System.DateTime EndDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBalanceListWechat", new object[] {
                        Fspid,
                        BeginDate,
                        EndDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryBalanceListWechat(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBalanceListWechatAsync(string Fspid, System.DateTime BeginDate, System.DateTime EndDate) {
            this.QueryBalanceListWechatAsync(Fspid, BeginDate, EndDate, null);
        }
        
        /// <remarks/>
        public void QueryBalanceListWechatAsync(string Fspid, System.DateTime BeginDate, System.DateTime EndDate, object userState) {
            if ((this.QueryBalanceListWechatOperationCompleted == null)) {
                this.QueryBalanceListWechatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBalanceListWechatOperationCompleted);
            }
            this.InvokeAsync("QueryBalanceListWechat", new object[] {
                        Fspid,
                        BeginDate,
                        EndDate}, this.QueryBalanceListWechatOperationCompleted, userState);
        }
        
        private void OnQueryBalanceListWechatOperationCompleted(object arg) {
            if ((this.QueryBalanceListWechatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBalanceListWechatCompleted(this, new QueryBalanceListWechatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetQueryBalanceDetailList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQueryBalanceDetailList(string Fspid, string FDrawNo) {
            object[] results = this.Invoke("GetQueryBalanceDetailList", new object[] {
                        Fspid,
                        FDrawNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQueryBalanceDetailList(string Fspid, string FDrawNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQueryBalanceDetailList", new object[] {
                        Fspid,
                        FDrawNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetQueryBalanceDetailList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryBalanceDetailListAsync(string Fspid, string FDrawNo) {
            this.GetQueryBalanceDetailListAsync(Fspid, FDrawNo, null);
        }
        
        /// <remarks/>
        public void GetQueryBalanceDetailListAsync(string Fspid, string FDrawNo, object userState) {
            if ((this.GetQueryBalanceDetailListOperationCompleted == null)) {
                this.GetQueryBalanceDetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryBalanceDetailListOperationCompleted);
            }
            this.InvokeAsync("GetQueryBalanceDetailList", new object[] {
                        Fspid,
                        FDrawNo}, this.GetQueryBalanceDetailListOperationCompleted, userState);
        }
        
        private void OnGetQueryBalanceDetailListOperationCompleted(object arg) {
            if ((this.GetQueryBalanceDetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryBalanceDetailListCompleted(this, new GetQueryBalanceDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBalanceDetailListWechat", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBalanceDetailListWechat(string Fspid, string FDrawNo) {
            object[] results = this.Invoke("QueryBalanceDetailListWechat", new object[] {
                        Fspid,
                        FDrawNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBalanceDetailListWechat(string Fspid, string FDrawNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBalanceDetailListWechat", new object[] {
                        Fspid,
                        FDrawNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryBalanceDetailListWechat(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBalanceDetailListWechatAsync(string Fspid, string FDrawNo) {
            this.QueryBalanceDetailListWechatAsync(Fspid, FDrawNo, null);
        }
        
        /// <remarks/>
        public void QueryBalanceDetailListWechatAsync(string Fspid, string FDrawNo, object userState) {
            if ((this.QueryBalanceDetailListWechatOperationCompleted == null)) {
                this.QueryBalanceDetailListWechatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBalanceDetailListWechatOperationCompleted);
            }
            this.InvokeAsync("QueryBalanceDetailListWechat", new object[] {
                        Fspid,
                        FDrawNo}, this.QueryBalanceDetailListWechatOperationCompleted, userState);
        }
        
        private void OnQueryBalanceDetailListWechatOperationCompleted(object arg) {
            if ((this.QueryBalanceDetailListWechatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBalanceDetailListWechatCompleted(this, new QueryBalanceDetailListWechatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetReclaimRecord", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReclaimRecord(string u_QQID) {
            object[] results = this.Invoke("GetReclaimRecord", new object[] {
                        u_QQID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReclaimRecord(string u_QQID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReclaimRecord", new object[] {
                        u_QQID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetReclaimRecord(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReclaimRecordAsync(string u_QQID) {
            this.GetReclaimRecordAsync(u_QQID, null);
        }
        
        /// <remarks/>
        public void GetReclaimRecordAsync(string u_QQID, object userState) {
            if ((this.GetReclaimRecordOperationCompleted == null)) {
                this.GetReclaimRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReclaimRecordOperationCompleted);
            }
            this.InvokeAsync("GetReclaimRecord", new object[] {
                        u_QQID}, this.GetReclaimRecordOperationCompleted, userState);
        }
        
        private void OnGetReclaimRecordOperationCompleted(object arg) {
            if ((this.GetReclaimRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReclaimRecordCompleted(this, new GetReclaimRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetQQReclaimRecord", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQQReclaimRecord(string u_QQID) {
            object[] results = this.Invoke("GetQQReclaimRecord", new object[] {
                        u_QQID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQQReclaimRecord(string u_QQID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQQReclaimRecord", new object[] {
                        u_QQID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetQQReclaimRecord(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQQReclaimRecordAsync(string u_QQID) {
            this.GetQQReclaimRecordAsync(u_QQID, null);
        }
        
        /// <remarks/>
        public void GetQQReclaimRecordAsync(string u_QQID, object userState) {
            if ((this.GetQQReclaimRecordOperationCompleted == null)) {
                this.GetQQReclaimRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQQReclaimRecordOperationCompleted);
            }
            this.InvokeAsync("GetQQReclaimRecord", new object[] {
                        u_QQID}, this.GetQQReclaimRecordOperationCompleted, userState);
        }
        
        private void OnGetQQReclaimRecordOperationCompleted(object arg) {
            if ((this.GetQQReclaimRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQQReclaimRecordCompleted(this, new GetQQReclaimRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankCardBindList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankCardBindList(string u_QQID, string Fbank_type) {
            object[] results = this.Invoke("GetBankCardBindList", new object[] {
                        u_QQID,
                        Fbank_type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankCardBindList(string u_QQID, string Fbank_type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankCardBindList", new object[] {
                        u_QQID,
                        Fbank_type}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankCardBindList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankCardBindListAsync(string u_QQID, string Fbank_type) {
            this.GetBankCardBindListAsync(u_QQID, Fbank_type, null);
        }
        
        /// <remarks/>
        public void GetBankCardBindListAsync(string u_QQID, string Fbank_type, object userState) {
            if ((this.GetBankCardBindListOperationCompleted == null)) {
                this.GetBankCardBindListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankCardBindListOperationCompleted);
            }
            this.InvokeAsync("GetBankCardBindList", new object[] {
                        u_QQID,
                        Fbank_type}, this.GetBankCardBindListOperationCompleted, userState);
        }
        
        private void OnGetBankCardBindListOperationCompleted(object arg) {
            if ((this.GetBankCardBindListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankCardBindListCompleted(this, new GetBankCardBindListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankCardBind", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankCardBind(string fuid, string Findex, string FBDIndex) {
            object[] results = this.Invoke("GetBankCardBind", new object[] {
                        fuid,
                        Findex,
                        FBDIndex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankCardBind(string fuid, string Findex, string FBDIndex, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankCardBind", new object[] {
                        fuid,
                        Findex,
                        FBDIndex}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankCardBind(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankCardBindAsync(string fuid, string Findex, string FBDIndex) {
            this.GetBankCardBindAsync(fuid, Findex, FBDIndex, null);
        }
        
        /// <remarks/>
        public void GetBankCardBindAsync(string fuid, string Findex, string FBDIndex, object userState) {
            if ((this.GetBankCardBindOperationCompleted == null)) {
                this.GetBankCardBindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankCardBindOperationCompleted);
            }
            this.InvokeAsync("GetBankCardBind", new object[] {
                        fuid,
                        Findex,
                        FBDIndex}, this.GetBankCardBindOperationCompleted, userState);
        }
        
        private void OnGetBankCardBindOperationCompleted(object arg) {
            if ((this.GetBankCardBindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankCardBindCompleted(this, new GetBankCardBindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankCardBindList_UIN", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankCardBindList_UIN(string Fbank_type, string bankID, string creType, string creID, string protocolno, string phoneno, int bindStatue, int limStart, int limCount) {
            object[] results = this.Invoke("GetBankCardBindList_UIN", new object[] {
                        Fbank_type,
                        bankID,
                        creType,
                        creID,
                        protocolno,
                        phoneno,
                        bindStatue,
                        limStart,
                        limCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankCardBindList_UIN(string Fbank_type, string bankID, string creType, string creID, string protocolno, string phoneno, int bindStatue, int limStart, int limCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankCardBindList_UIN", new object[] {
                        Fbank_type,
                        bankID,
                        creType,
                        creID,
                        protocolno,
                        phoneno,
                        bindStatue,
                        limStart,
                        limCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankCardBindList_UIN(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankCardBindList_UINAsync(string Fbank_type, string bankID, string creType, string creID, string protocolno, string phoneno, int bindStatue, int limStart, int limCount) {
            this.GetBankCardBindList_UINAsync(Fbank_type, bankID, creType, creID, protocolno, phoneno, bindStatue, limStart, limCount, null);
        }
        
        /// <remarks/>
        public void GetBankCardBindList_UINAsync(string Fbank_type, string bankID, string creType, string creID, string protocolno, string phoneno, int bindStatue, int limStart, int limCount, object userState) {
            if ((this.GetBankCardBindList_UINOperationCompleted == null)) {
                this.GetBankCardBindList_UINOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankCardBindList_UINOperationCompleted);
            }
            this.InvokeAsync("GetBankCardBindList_UIN", new object[] {
                        Fbank_type,
                        bankID,
                        creType,
                        creID,
                        protocolno,
                        phoneno,
                        bindStatue,
                        limStart,
                        limCount}, this.GetBankCardBindList_UINOperationCompleted, userState);
        }
        
        private void OnGetBankCardBindList_UINOperationCompleted(object arg) {
            if ((this.GetBankCardBindList_UINCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankCardBindList_UINCompleted(this, new GetBankCardBindList_UINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankCardBindList_UIN_2", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankCardBindList_UIN_2(string Fbank_type, string bankID, string creType, string creID, string protocolno, string phoneno, int bindStatue, int limStart, int limCount) {
            object[] results = this.Invoke("GetBankCardBindList_UIN_2", new object[] {
                        Fbank_type,
                        bankID,
                        creType,
                        creID,
                        protocolno,
                        phoneno,
                        bindStatue,
                        limStart,
                        limCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankCardBindList_UIN_2(string Fbank_type, string bankID, string creType, string creID, string protocolno, string phoneno, int bindStatue, int limStart, int limCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankCardBindList_UIN_2", new object[] {
                        Fbank_type,
                        bankID,
                        creType,
                        creID,
                        protocolno,
                        phoneno,
                        bindStatue,
                        limStart,
                        limCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankCardBindList_UIN_2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankCardBindList_UIN_2Async(string Fbank_type, string bankID, string creType, string creID, string protocolno, string phoneno, int bindStatue, int limStart, int limCount) {
            this.GetBankCardBindList_UIN_2Async(Fbank_type, bankID, creType, creID, protocolno, phoneno, bindStatue, limStart, limCount, null);
        }
        
        /// <remarks/>
        public void GetBankCardBindList_UIN_2Async(string Fbank_type, string bankID, string creType, string creID, string protocolno, string phoneno, int bindStatue, int limStart, int limCount, object userState) {
            if ((this.GetBankCardBindList_UIN_2OperationCompleted == null)) {
                this.GetBankCardBindList_UIN_2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankCardBindList_UIN_2OperationCompleted);
            }
            this.InvokeAsync("GetBankCardBindList_UIN_2", new object[] {
                        Fbank_type,
                        bankID,
                        creType,
                        creID,
                        protocolno,
                        phoneno,
                        bindStatue,
                        limStart,
                        limCount}, this.GetBankCardBindList_UIN_2OperationCompleted, userState);
        }
        
        private void OnGetBankCardBindList_UIN_2OperationCompleted(object arg) {
            if ((this.GetBankCardBindList_UIN_2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankCardBindList_UIN_2Completed(this, new GetBankCardBindList_UIN_2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankCardBindList_2", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankCardBindList_2(string u_QQID, string Fbank_type, string bankID, string creType, string creID, string protocolno, string phoneno, string strBeginDate, string strEndDate, int queryType, int bindStatue, int limStart, int limCount) {
            object[] results = this.Invoke("GetBankCardBindList_2", new object[] {
                        u_QQID,
                        Fbank_type,
                        bankID,
                        creType,
                        creID,
                        protocolno,
                        phoneno,
                        strBeginDate,
                        strEndDate,
                        queryType,
                        bindStatue,
                        limStart,
                        limCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankCardBindList_2(string u_QQID, string Fbank_type, string bankID, string creType, string creID, string protocolno, string phoneno, string strBeginDate, string strEndDate, int queryType, int bindStatue, int limStart, int limCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankCardBindList_2", new object[] {
                        u_QQID,
                        Fbank_type,
                        bankID,
                        creType,
                        creID,
                        protocolno,
                        phoneno,
                        strBeginDate,
                        strEndDate,
                        queryType,
                        bindStatue,
                        limStart,
                        limCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankCardBindList_2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankCardBindList_2Async(string u_QQID, string Fbank_type, string bankID, string creType, string creID, string protocolno, string phoneno, string strBeginDate, string strEndDate, int queryType, int bindStatue, int limStart, int limCount) {
            this.GetBankCardBindList_2Async(u_QQID, Fbank_type, bankID, creType, creID, protocolno, phoneno, strBeginDate, strEndDate, queryType, bindStatue, limStart, limCount, null);
        }
        
        /// <remarks/>
        public void GetBankCardBindList_2Async(string u_QQID, string Fbank_type, string bankID, string creType, string creID, string protocolno, string phoneno, string strBeginDate, string strEndDate, int queryType, int bindStatue, int limStart, int limCount, object userState) {
            if ((this.GetBankCardBindList_2OperationCompleted == null)) {
                this.GetBankCardBindList_2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankCardBindList_2OperationCompleted);
            }
            this.InvokeAsync("GetBankCardBindList_2", new object[] {
                        u_QQID,
                        Fbank_type,
                        bankID,
                        creType,
                        creID,
                        protocolno,
                        phoneno,
                        strBeginDate,
                        strEndDate,
                        queryType,
                        bindStatue,
                        limStart,
                        limCount}, this.GetBankCardBindList_2OperationCompleted, userState);
        }
        
        private void OnGetBankCardBindList_2OperationCompleted(object arg) {
            if ((this.GetBankCardBindList_2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankCardBindList_2Completed(this, new GetBankCardBindList_2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UnbindBankCard", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnbindBankCard(string bankType, string qqid, string protocolNo) {
            this.Invoke("UnbindBankCard", new object[] {
                        bankType,
                        qqid,
                        protocolNo});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnbindBankCard(string bankType, string qqid, string protocolNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnbindBankCard", new object[] {
                        bankType,
                        qqid,
                        protocolNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUnbindBankCard(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UnbindBankCardAsync(string bankType, string qqid, string protocolNo) {
            this.UnbindBankCardAsync(bankType, qqid, protocolNo, null);
        }
        
        /// <remarks/>
        public void UnbindBankCardAsync(string bankType, string qqid, string protocolNo, object userState) {
            if ((this.UnbindBankCardOperationCompleted == null)) {
                this.UnbindBankCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnbindBankCardOperationCompleted);
            }
            this.InvokeAsync("UnbindBankCard", new object[] {
                        bankType,
                        qqid,
                        protocolNo}, this.UnbindBankCardOperationCompleted, userState);
        }
        
        private void OnUnbindBankCardOperationCompleted(object arg) {
            if ((this.UnbindBankCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnbindBankCardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UnbindBankCardSpecial", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UnbindBankCardSpecial(string bankType, string qqid, string card_tail, string bindSerialno, string protocol_no) {
            object[] results = this.Invoke("UnbindBankCardSpecial", new object[] {
                        bankType,
                        qqid,
                        card_tail,
                        bindSerialno,
                        protocol_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnbindBankCardSpecial(string bankType, string qqid, string card_tail, string bindSerialno, string protocol_no, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnbindBankCardSpecial", new object[] {
                        bankType,
                        qqid,
                        card_tail,
                        bindSerialno,
                        protocol_no}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndUnbindBankCardSpecial(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UnbindBankCardSpecialAsync(string bankType, string qqid, string card_tail, string bindSerialno, string protocol_no) {
            this.UnbindBankCardSpecialAsync(bankType, qqid, card_tail, bindSerialno, protocol_no, null);
        }
        
        /// <remarks/>
        public void UnbindBankCardSpecialAsync(string bankType, string qqid, string card_tail, string bindSerialno, string protocol_no, object userState) {
            if ((this.UnbindBankCardSpecialOperationCompleted == null)) {
                this.UnbindBankCardSpecialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnbindBankCardSpecialOperationCompleted);
            }
            this.InvokeAsync("UnbindBankCardSpecial", new object[] {
                        bankType,
                        qqid,
                        card_tail,
                        bindSerialno,
                        protocol_no}, this.UnbindBankCardSpecialOperationCompleted, userState);
        }
        
        private void OnUnbindBankCardSpecialOperationCompleted(object arg) {
            if ((this.UnbindBankCardSpecialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnbindBankCardSpecialCompleted(this, new UnbindBankCardSpecialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankCardBindList_New", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankCardBindList_New(
                    string u_QQID, 
                    string Fbank_type, 
                    string bankID, 
                    string uid, 
                    string creType, 
                    string creID, 
                    string protocolno, 
                    string phoneno, 
                    string strBeginDate, 
                    string strEndDate, 
                    int queryType, 
                    bool isShowAboutDetail, 
                    int bindStatue, 
                    string bind_serialno, 
                    int limStart, 
                    int limCount) {
            object[] results = this.Invoke("GetBankCardBindList_New", new object[] {
                        u_QQID,
                        Fbank_type,
                        bankID,
                        uid,
                        creType,
                        creID,
                        protocolno,
                        phoneno,
                        strBeginDate,
                        strEndDate,
                        queryType,
                        isShowAboutDetail,
                        bindStatue,
                        bind_serialno,
                        limStart,
                        limCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankCardBindList_New(
                    string u_QQID, 
                    string Fbank_type, 
                    string bankID, 
                    string uid, 
                    string creType, 
                    string creID, 
                    string protocolno, 
                    string phoneno, 
                    string strBeginDate, 
                    string strEndDate, 
                    int queryType, 
                    bool isShowAboutDetail, 
                    int bindStatue, 
                    string bind_serialno, 
                    int limStart, 
                    int limCount, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("GetBankCardBindList_New", new object[] {
                        u_QQID,
                        Fbank_type,
                        bankID,
                        uid,
                        creType,
                        creID,
                        protocolno,
                        phoneno,
                        strBeginDate,
                        strEndDate,
                        queryType,
                        isShowAboutDetail,
                        bindStatue,
                        bind_serialno,
                        limStart,
                        limCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankCardBindList_New(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankCardBindList_NewAsync(
                    string u_QQID, 
                    string Fbank_type, 
                    string bankID, 
                    string uid, 
                    string creType, 
                    string creID, 
                    string protocolno, 
                    string phoneno, 
                    string strBeginDate, 
                    string strEndDate, 
                    int queryType, 
                    bool isShowAboutDetail, 
                    int bindStatue, 
                    string bind_serialno, 
                    int limStart, 
                    int limCount) {
            this.GetBankCardBindList_NewAsync(u_QQID, Fbank_type, bankID, uid, creType, creID, protocolno, phoneno, strBeginDate, strEndDate, queryType, isShowAboutDetail, bindStatue, bind_serialno, limStart, limCount, null);
        }
        
        /// <remarks/>
        public void GetBankCardBindList_NewAsync(
                    string u_QQID, 
                    string Fbank_type, 
                    string bankID, 
                    string uid, 
                    string creType, 
                    string creID, 
                    string protocolno, 
                    string phoneno, 
                    string strBeginDate, 
                    string strEndDate, 
                    int queryType, 
                    bool isShowAboutDetail, 
                    int bindStatue, 
                    string bind_serialno, 
                    int limStart, 
                    int limCount, 
                    object userState) {
            if ((this.GetBankCardBindList_NewOperationCompleted == null)) {
                this.GetBankCardBindList_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankCardBindList_NewOperationCompleted);
            }
            this.InvokeAsync("GetBankCardBindList_New", new object[] {
                        u_QQID,
                        Fbank_type,
                        bankID,
                        uid,
                        creType,
                        creID,
                        protocolno,
                        phoneno,
                        strBeginDate,
                        strEndDate,
                        queryType,
                        isShowAboutDetail,
                        bindStatue,
                        bind_serialno,
                        limStart,
                        limCount}, this.GetBankCardBindList_NewOperationCompleted, userState);
        }
        
        private void OnGetBankCardBindList_NewOperationCompleted(object arg) {
            if ((this.GetBankCardBindList_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankCardBindList_NewCompleted(this, new GetBankCardBindList_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ModifyBankCardBind", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyBankCardBind(string fuid, string Findex, string Fmemo) {
            this.Invoke("ModifyBankCardBind", new object[] {
                        fuid,
                        Findex,
                        Fmemo});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginModifyBankCardBind(string fuid, string Findex, string Fmemo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ModifyBankCardBind", new object[] {
                        fuid,
                        Findex,
                        Fmemo}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndModifyBankCardBind(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ModifyBankCardBindAsync(string fuid, string Findex, string Fmemo) {
            this.ModifyBankCardBindAsync(fuid, Findex, Fmemo, null);
        }
        
        /// <remarks/>
        public void ModifyBankCardBindAsync(string fuid, string Findex, string Fmemo, object userState) {
            if ((this.ModifyBankCardBindOperationCompleted == null)) {
                this.ModifyBankCardBindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyBankCardBindOperationCompleted);
            }
            this.InvokeAsync("ModifyBankCardBind", new object[] {
                        fuid,
                        Findex,
                        Fmemo}, this.ModifyBankCardBindOperationCompleted, userState);
        }
        
        private void OnModifyBankCardBindOperationCompleted(object arg) {
            if ((this.ModifyBankCardBindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyBankCardBindCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SynchronBankCardBind", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SynchronBankCardBind(string bankType, string cardTail, string bankId) {
            object[] results = this.Invoke("SynchronBankCardBind", new object[] {
                        bankType,
                        cardTail,
                        bankId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSynchronBankCardBind(string bankType, string cardTail, string bankId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SynchronBankCardBind", new object[] {
                        bankType,
                        cardTail,
                        bankId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSynchronBankCardBind(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SynchronBankCardBindAsync(string bankType, string cardTail, string bankId) {
            this.SynchronBankCardBindAsync(bankType, cardTail, bankId, null);
        }
        
        /// <remarks/>
        public void SynchronBankCardBindAsync(string bankType, string cardTail, string bankId, object userState) {
            if ((this.SynchronBankCardBindOperationCompleted == null)) {
                this.SynchronBankCardBindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSynchronBankCardBindOperationCompleted);
            }
            this.InvokeAsync("SynchronBankCardBind", new object[] {
                        bankType,
                        cardTail,
                        bankId}, this.SynchronBankCardBindOperationCompleted, userState);
        }
        
        private void OnSynchronBankCardBindOperationCompleted(object arg) {
            if ((this.SynchronBankCardBindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SynchronBankCardBindCompleted(this, new SynchronBankCardBindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/WS_AppealDQuery", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet WS_AppealDQuery(string FSpid, string FUser, int FPriType, int FState, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("WS_AppealDQuery", new object[] {
                        FSpid,
                        FUser,
                        FPriType,
                        FState,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWS_AppealDQuery(string FSpid, string FUser, int FPriType, int FState, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WS_AppealDQuery", new object[] {
                        FSpid,
                        FUser,
                        FPriType,
                        FState,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndWS_AppealDQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void WS_AppealDQueryAsync(string FSpid, string FUser, int FPriType, int FState, int iPageStart, int iPageMax) {
            this.WS_AppealDQueryAsync(FSpid, FUser, FPriType, FState, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void WS_AppealDQueryAsync(string FSpid, string FUser, int FPriType, int FState, int iPageStart, int iPageMax, object userState) {
            if ((this.WS_AppealDQueryOperationCompleted == null)) {
                this.WS_AppealDQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_AppealDQueryOperationCompleted);
            }
            this.InvokeAsync("WS_AppealDQuery", new object[] {
                        FSpid,
                        FUser,
                        FPriType,
                        FState,
                        iPageStart,
                        iPageMax}, this.WS_AppealDQueryOperationCompleted, userState);
        }
        
        private void OnWS_AppealDQueryOperationCompleted(object arg) {
            if ((this.WS_AppealDQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_AppealDQueryCompleted(this, new WS_AppealDQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/WS_AppealDQueryCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int WS_AppealDQueryCount(string FSpid, string FUser, int FPriType, int FState) {
            object[] results = this.Invoke("WS_AppealDQueryCount", new object[] {
                        FSpid,
                        FUser,
                        FPriType,
                        FState});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWS_AppealDQueryCount(string FSpid, string FUser, int FPriType, int FState, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WS_AppealDQueryCount", new object[] {
                        FSpid,
                        FUser,
                        FPriType,
                        FState}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndWS_AppealDQueryCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void WS_AppealDQueryCountAsync(string FSpid, string FUser, int FPriType, int FState) {
            this.WS_AppealDQueryCountAsync(FSpid, FUser, FPriType, FState, null);
        }
        
        /// <remarks/>
        public void WS_AppealDQueryCountAsync(string FSpid, string FUser, int FPriType, int FState, object userState) {
            if ((this.WS_AppealDQueryCountOperationCompleted == null)) {
                this.WS_AppealDQueryCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_AppealDQueryCountOperationCompleted);
            }
            this.InvokeAsync("WS_AppealDQueryCount", new object[] {
                        FSpid,
                        FUser,
                        FPriType,
                        FState}, this.WS_AppealDQueryCountOperationCompleted, userState);
        }
        
        private void OnWS_AppealDQueryCountOperationCompleted(object arg) {
            if ((this.WS_AppealDQueryCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_AppealDQueryCountCompleted(this, new WS_AppealDQueryCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/WS_AppealSQuery", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet WS_AppealSQuery(string Fno, string FUserType, string FUser, string FState, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("WS_AppealSQuery", new object[] {
                        Fno,
                        FUserType,
                        FUser,
                        FState,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWS_AppealSQuery(string Fno, string FUserType, string FUser, string FState, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WS_AppealSQuery", new object[] {
                        Fno,
                        FUserType,
                        FUser,
                        FState,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndWS_AppealSQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void WS_AppealSQueryAsync(string Fno, string FUserType, string FUser, string FState, int iPageStart, int iPageMax) {
            this.WS_AppealSQueryAsync(Fno, FUserType, FUser, FState, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void WS_AppealSQueryAsync(string Fno, string FUserType, string FUser, string FState, int iPageStart, int iPageMax, object userState) {
            if ((this.WS_AppealSQueryOperationCompleted == null)) {
                this.WS_AppealSQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_AppealSQueryOperationCompleted);
            }
            this.InvokeAsync("WS_AppealSQuery", new object[] {
                        Fno,
                        FUserType,
                        FUser,
                        FState,
                        iPageStart,
                        iPageMax}, this.WS_AppealSQueryOperationCompleted, userState);
        }
        
        private void OnWS_AppealSQueryOperationCompleted(object arg) {
            if ((this.WS_AppealSQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_AppealSQueryCompleted(this, new WS_AppealSQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/getQueryData", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getQueryData(int istartIndex, int length, System.DateTime bgDate, System.DateTime edDate, string whereStr, string queryType, out System.Data.DataSet ds, out string Msg) {
            object[] results = this.Invoke("getQueryData", new object[] {
                        istartIndex,
                        length,
                        bgDate,
                        edDate,
                        whereStr,
                        queryType});
            ds = ((System.Data.DataSet)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetQueryData(int istartIndex, int length, System.DateTime bgDate, System.DateTime edDate, string whereStr, string queryType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getQueryData", new object[] {
                        istartIndex,
                        length,
                        bgDate,
                        edDate,
                        whereStr,
                        queryType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndgetQueryData(System.IAsyncResult asyncResult, out System.Data.DataSet ds, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            ds = ((System.Data.DataSet)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getQueryDataAsync(int istartIndex, int length, System.DateTime bgDate, System.DateTime edDate, string whereStr, string queryType) {
            this.getQueryDataAsync(istartIndex, length, bgDate, edDate, whereStr, queryType, null);
        }
        
        /// <remarks/>
        public void getQueryDataAsync(int istartIndex, int length, System.DateTime bgDate, System.DateTime edDate, string whereStr, string queryType, object userState) {
            if ((this.getQueryDataOperationCompleted == null)) {
                this.getQueryDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQueryDataOperationCompleted);
            }
            this.InvokeAsync("getQueryData", new object[] {
                        istartIndex,
                        length,
                        bgDate,
                        edDate,
                        whereStr,
                        queryType}, this.getQueryDataOperationCompleted, userState);
        }
        
        private void OngetQueryDataOperationCompleted(object arg) {
            if ((this.getQueryDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQueryDataCompleted(this, new getQueryDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCFTUserAppealList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCFTUserAppealList(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int iPageStart, int iPageMax, int SortType) {
            object[] results = this.Invoke("GetCFTUserAppealList", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        QQType,
                        dotype,
                        iPageStart,
                        iPageMax,
                        SortType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCFTUserAppealList(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int iPageStart, int iPageMax, int SortType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCFTUserAppealList", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        QQType,
                        dotype,
                        iPageStart,
                        iPageMax,
                        SortType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCFTUserAppealList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCFTUserAppealListAsync(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int iPageStart, int iPageMax, int SortType) {
            this.GetCFTUserAppealListAsync(fuin, u_BeginTime, u_EndTime, fstate, ftype, QQType, dotype, iPageStart, iPageMax, SortType, null);
        }
        
        /// <remarks/>
        public void GetCFTUserAppealListAsync(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int iPageStart, int iPageMax, int SortType, object userState) {
            if ((this.GetCFTUserAppealListOperationCompleted == null)) {
                this.GetCFTUserAppealListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCFTUserAppealListOperationCompleted);
            }
            this.InvokeAsync("GetCFTUserAppealList", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        QQType,
                        dotype,
                        iPageStart,
                        iPageMax,
                        SortType}, this.GetCFTUserAppealListOperationCompleted, userState);
        }
        
        private void OnGetCFTUserAppealListOperationCompleted(object arg) {
            if ((this.GetCFTUserAppealListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCFTUserAppealListCompleted(this, new GetCFTUserAppealListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCFTUserAppealListNew", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCFTUserAppealListNew(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int iPageStart, int iPageMax, int SortType) {
            object[] results = this.Invoke("GetCFTUserAppealListNew", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        QQType,
                        dotype,
                        iPageStart,
                        iPageMax,
                        SortType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCFTUserAppealListNew(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int iPageStart, int iPageMax, int SortType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCFTUserAppealListNew", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        QQType,
                        dotype,
                        iPageStart,
                        iPageMax,
                        SortType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCFTUserAppealListNew(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCFTUserAppealListNewAsync(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int iPageStart, int iPageMax, int SortType) {
            this.GetCFTUserAppealListNewAsync(fuin, u_BeginTime, u_EndTime, fstate, ftype, QQType, dotype, iPageStart, iPageMax, SortType, null);
        }
        
        /// <remarks/>
        public void GetCFTUserAppealListNewAsync(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int iPageStart, int iPageMax, int SortType, object userState) {
            if ((this.GetCFTUserAppealListNewOperationCompleted == null)) {
                this.GetCFTUserAppealListNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCFTUserAppealListNewOperationCompleted);
            }
            this.InvokeAsync("GetCFTUserAppealListNew", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        QQType,
                        dotype,
                        iPageStart,
                        iPageMax,
                        SortType}, this.GetCFTUserAppealListNewOperationCompleted, userState);
        }
        
        private void OnGetCFTUserAppealListNewOperationCompleted(object arg) {
            if ((this.GetCFTUserAppealListNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCFTUserAppealListNewCompleted(this, new GetCFTUserAppealListNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCFTUserAppealListFunction", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCFTUserAppealListFunction(System.Data.DataSet dsAll) {
            object[] results = this.Invoke("GetCFTUserAppealListFunction", new object[] {
                        dsAll});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCFTUserAppealListFunction(System.Data.DataSet dsAll, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCFTUserAppealListFunction", new object[] {
                        dsAll}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCFTUserAppealListFunction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCFTUserAppealListFunctionAsync(System.Data.DataSet dsAll) {
            this.GetCFTUserAppealListFunctionAsync(dsAll, null);
        }
        
        /// <remarks/>
        public void GetCFTUserAppealListFunctionAsync(System.Data.DataSet dsAll, object userState) {
            if ((this.GetCFTUserAppealListFunctionOperationCompleted == null)) {
                this.GetCFTUserAppealListFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCFTUserAppealListFunctionOperationCompleted);
            }
            this.InvokeAsync("GetCFTUserAppealListFunction", new object[] {
                        dsAll}, this.GetCFTUserAppealListFunctionOperationCompleted, userState);
        }
        
        private void OnGetCFTUserAppealListFunctionOperationCompleted(object arg) {
            if ((this.GetCFTUserAppealListFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCFTUserAppealListFunctionCompleted(this, new GetCFTUserAppealListFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CFTUserAppealPass", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CFTUserAppealPass(string UserIP, bool IsLockList) {
            this.Invoke("CFTUserAppealPass", new object[] {
                        UserIP,
                        IsLockList});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCFTUserAppealPass(string UserIP, bool IsLockList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CFTUserAppealPass", new object[] {
                        UserIP,
                        IsLockList}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCFTUserAppealPass(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void CFTUserAppealPassAsync(string UserIP, bool IsLockList) {
            this.CFTUserAppealPassAsync(UserIP, IsLockList, null);
        }
        
        /// <remarks/>
        public void CFTUserAppealPassAsync(string UserIP, bool IsLockList, object userState) {
            if ((this.CFTUserAppealPassOperationCompleted == null)) {
                this.CFTUserAppealPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCFTUserAppealPassOperationCompleted);
            }
            this.InvokeAsync("CFTUserAppealPass", new object[] {
                        UserIP,
                        IsLockList}, this.CFTUserAppealPassOperationCompleted, userState);
        }
        
        private void OnCFTUserAppealPassOperationCompleted(object arg) {
            if ((this.CFTUserAppealPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CFTUserAppealPassCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCFTUserAppealCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCFTUserAppealCount(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int SortType) {
            object[] results = this.Invoke("GetCFTUserAppealCount", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        QQType,
                        dotype,
                        SortType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCFTUserAppealCount(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int SortType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCFTUserAppealCount", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        QQType,
                        dotype,
                        SortType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetCFTUserAppealCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCFTUserAppealCountAsync(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int SortType) {
            this.GetCFTUserAppealCountAsync(fuin, u_BeginTime, u_EndTime, fstate, ftype, QQType, dotype, SortType, null);
        }
        
        /// <remarks/>
        public void GetCFTUserAppealCountAsync(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int SortType, object userState) {
            if ((this.GetCFTUserAppealCountOperationCompleted == null)) {
                this.GetCFTUserAppealCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCFTUserAppealCountOperationCompleted);
            }
            this.InvokeAsync("GetCFTUserAppealCount", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        QQType,
                        dotype,
                        SortType}, this.GetCFTUserAppealCountOperationCompleted, userState);
        }
        
        private void OnGetCFTUserAppealCountOperationCompleted(object arg) {
            if ((this.GetCFTUserAppealCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCFTUserAppealCountCompleted(this, new GetCFTUserAppealCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCFTUserAppealCountNew", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCFTUserAppealCountNew(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int SortType) {
            object[] results = this.Invoke("GetCFTUserAppealCountNew", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        QQType,
                        dotype,
                        SortType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCFTUserAppealCountNew(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int SortType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCFTUserAppealCountNew", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        QQType,
                        dotype,
                        SortType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetCFTUserAppealCountNew(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCFTUserAppealCountNewAsync(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int SortType) {
            this.GetCFTUserAppealCountNewAsync(fuin, u_BeginTime, u_EndTime, fstate, ftype, QQType, dotype, SortType, null);
        }
        
        /// <remarks/>
        public void GetCFTUserAppealCountNewAsync(string fuin, string u_BeginTime, string u_EndTime, int fstate, int ftype, string QQType, string dotype, int SortType, object userState) {
            if ((this.GetCFTUserAppealCountNewOperationCompleted == null)) {
                this.GetCFTUserAppealCountNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCFTUserAppealCountNewOperationCompleted);
            }
            this.InvokeAsync("GetCFTUserAppealCountNew", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        QQType,
                        dotype,
                        SortType}, this.GetCFTUserAppealCountNewOperationCompleted, userState);
        }
        
        private void OnGetCFTUserAppealCountNewOperationCompleted(object arg) {
            if ((this.GetCFTUserAppealCountNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCFTUserAppealCountNewCompleted(this, new GetCFTUserAppealCountNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCFTUserAppealDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCFTUserAppealDetail(int fid) {
            object[] results = this.Invoke("GetCFTUserAppealDetail", new object[] {
                        fid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCFTUserAppealDetail(int fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCFTUserAppealDetail", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCFTUserAppealDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCFTUserAppealDetailAsync(int fid) {
            this.GetCFTUserAppealDetailAsync(fid, null);
        }
        
        /// <remarks/>
        public void GetCFTUserAppealDetailAsync(int fid, object userState) {
            if ((this.GetCFTUserAppealDetailOperationCompleted == null)) {
                this.GetCFTUserAppealDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCFTUserAppealDetailOperationCompleted);
            }
            this.InvokeAsync("GetCFTUserAppealDetail", new object[] {
                        fid}, this.GetCFTUserAppealDetailOperationCompleted, userState);
        }
        
        private void OnGetCFTUserAppealDetailOperationCompleted(object arg) {
            if ((this.GetCFTUserAppealDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCFTUserAppealDetailCompleted(this, new GetCFTUserAppealDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCFTUserAppealDetail_New", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCFTUserAppealDetail_New(string fid, string submitDate) {
            object[] results = this.Invoke("GetCFTUserAppealDetail_New", new object[] {
                        fid,
                        submitDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCFTUserAppealDetail_New(string fid, string submitDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCFTUserAppealDetail_New", new object[] {
                        fid,
                        submitDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCFTUserAppealDetail_New(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCFTUserAppealDetail_NewAsync(string fid, string submitDate) {
            this.GetCFTUserAppealDetail_NewAsync(fid, submitDate, null);
        }
        
        /// <remarks/>
        public void GetCFTUserAppealDetail_NewAsync(string fid, string submitDate, object userState) {
            if ((this.GetCFTUserAppealDetail_NewOperationCompleted == null)) {
                this.GetCFTUserAppealDetail_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCFTUserAppealDetail_NewOperationCompleted);
            }
            this.InvokeAsync("GetCFTUserAppealDetail_New", new object[] {
                        fid,
                        submitDate}, this.GetCFTUserAppealDetail_NewOperationCompleted, userState);
        }
        
        private void OnGetCFTUserAppealDetail_NewOperationCompleted(object arg) {
            if ((this.GetCFTUserAppealDetail_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCFTUserAppealDetail_NewCompleted(this, new GetCFTUserAppealDetail_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCFTUserAppealDetailByDBTB", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCFTUserAppealDetailByDBTB(string fid, string db, string tb) {
            object[] results = this.Invoke("GetCFTUserAppealDetailByDBTB", new object[] {
                        fid,
                        db,
                        tb});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCFTUserAppealDetailByDBTB(string fid, string db, string tb, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCFTUserAppealDetailByDBTB", new object[] {
                        fid,
                        db,
                        tb}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCFTUserAppealDetailByDBTB(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCFTUserAppealDetailByDBTBAsync(string fid, string db, string tb) {
            this.GetCFTUserAppealDetailByDBTBAsync(fid, db, tb, null);
        }
        
        /// <remarks/>
        public void GetCFTUserAppealDetailByDBTBAsync(string fid, string db, string tb, object userState) {
            if ((this.GetCFTUserAppealDetailByDBTBOperationCompleted == null)) {
                this.GetCFTUserAppealDetailByDBTBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCFTUserAppealDetailByDBTBOperationCompleted);
            }
            this.InvokeAsync("GetCFTUserAppealDetailByDBTB", new object[] {
                        fid,
                        db,
                        tb}, this.GetCFTUserAppealDetailByDBTBOperationCompleted, userState);
        }
        
        private void OnGetCFTUserAppealDetailByDBTBOperationCompleted(object arg) {
            if ((this.GetCFTUserAppealDetailByDBTBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCFTUserAppealDetailByDBTBCompleted(this, new GetCFTUserAppealDetailByDBTBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserAppealLockList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserAppealLockList(System.DateTime BeginDate, System.DateTime EndDate, string fstate, string ftype, string QQType, string username, int Count, int SortType) {
            object[] results = this.Invoke("GetUserAppealLockList", new object[] {
                        BeginDate,
                        EndDate,
                        fstate,
                        ftype,
                        QQType,
                        username,
                        Count,
                        SortType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAppealLockList(System.DateTime BeginDate, System.DateTime EndDate, string fstate, string ftype, string QQType, string username, int Count, int SortType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAppealLockList", new object[] {
                        BeginDate,
                        EndDate,
                        fstate,
                        ftype,
                        QQType,
                        username,
                        Count,
                        SortType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserAppealLockList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAppealLockListAsync(System.DateTime BeginDate, System.DateTime EndDate, string fstate, string ftype, string QQType, string username, int Count, int SortType) {
            this.GetUserAppealLockListAsync(BeginDate, EndDate, fstate, ftype, QQType, username, Count, SortType, null);
        }
        
        /// <remarks/>
        public void GetUserAppealLockListAsync(System.DateTime BeginDate, System.DateTime EndDate, string fstate, string ftype, string QQType, string username, int Count, int SortType, object userState) {
            if ((this.GetUserAppealLockListOperationCompleted == null)) {
                this.GetUserAppealLockListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAppealLockListOperationCompleted);
            }
            this.InvokeAsync("GetUserAppealLockList", new object[] {
                        BeginDate,
                        EndDate,
                        fstate,
                        ftype,
                        QQType,
                        username,
                        Count,
                        SortType}, this.GetUserAppealLockListOperationCompleted, userState);
        }
        
        private void OnGetUserAppealLockListOperationCompleted(object arg) {
            if ((this.GetUserAppealLockListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAppealLockListCompleted(this, new GetUserAppealLockListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserAppealLockListDBTB", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserAppealLockListDBTB(System.DateTime BeginDate, System.DateTime EndDate, string fstate, string ftype, string QQType, string username, int Count, int SortType) {
            object[] results = this.Invoke("GetUserAppealLockListDBTB", new object[] {
                        BeginDate,
                        EndDate,
                        fstate,
                        ftype,
                        QQType,
                        username,
                        Count,
                        SortType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAppealLockListDBTB(System.DateTime BeginDate, System.DateTime EndDate, string fstate, string ftype, string QQType, string username, int Count, int SortType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAppealLockListDBTB", new object[] {
                        BeginDate,
                        EndDate,
                        fstate,
                        ftype,
                        QQType,
                        username,
                        Count,
                        SortType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserAppealLockListDBTB(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAppealLockListDBTBAsync(System.DateTime BeginDate, System.DateTime EndDate, string fstate, string ftype, string QQType, string username, int Count, int SortType) {
            this.GetUserAppealLockListDBTBAsync(BeginDate, EndDate, fstate, ftype, QQType, username, Count, SortType, null);
        }
        
        /// <remarks/>
        public void GetUserAppealLockListDBTBAsync(System.DateTime BeginDate, System.DateTime EndDate, string fstate, string ftype, string QQType, string username, int Count, int SortType, object userState) {
            if ((this.GetUserAppealLockListDBTBOperationCompleted == null)) {
                this.GetUserAppealLockListDBTBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAppealLockListDBTBOperationCompleted);
            }
            this.InvokeAsync("GetUserAppealLockListDBTB", new object[] {
                        BeginDate,
                        EndDate,
                        fstate,
                        ftype,
                        QQType,
                        username,
                        Count,
                        SortType}, this.GetUserAppealLockListDBTBOperationCompleted, userState);
        }
        
        private void OnGetUserAppealLockListDBTBOperationCompleted(object arg) {
            if ((this.GetUserAppealLockListDBTBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAppealLockListDBTBCompleted(this, new GetUserAppealLockListDBTBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserAppealLockListDBTBInnr" +
            "Fun", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserAppealLockListDBTBInnrFun(System.Data.DataSet ds) {
            object[] results = this.Invoke("GetUserAppealLockListDBTBInnrFun", new object[] {
                        ds});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAppealLockListDBTBInnrFun(System.Data.DataSet ds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAppealLockListDBTBInnrFun", new object[] {
                        ds}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserAppealLockListDBTBInnrFun(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAppealLockListDBTBInnrFunAsync(System.Data.DataSet ds) {
            this.GetUserAppealLockListDBTBInnrFunAsync(ds, null);
        }
        
        /// <remarks/>
        public void GetUserAppealLockListDBTBInnrFunAsync(System.Data.DataSet ds, object userState) {
            if ((this.GetUserAppealLockListDBTBInnrFunOperationCompleted == null)) {
                this.GetUserAppealLockListDBTBInnrFunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAppealLockListDBTBInnrFunOperationCompleted);
            }
            this.InvokeAsync("GetUserAppealLockListDBTBInnrFun", new object[] {
                        ds}, this.GetUserAppealLockListDBTBInnrFunOperationCompleted, userState);
        }
        
        private void OnGetUserAppealLockListDBTBInnrFunOperationCompleted(object arg) {
            if ((this.GetUserAppealLockListDBTBInnrFunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAppealLockListDBTBInnrFunCompleted(this, new GetUserAppealLockListDBTBInnrFunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserAppealLockListDBTB2", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserAppealLockListDBTB2(System.Data.DataSet ds, string username) {
            object[] results = this.Invoke("GetUserAppealLockListDBTB2", new object[] {
                        ds,
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAppealLockListDBTB2(System.Data.DataSet ds, string username, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAppealLockListDBTB2", new object[] {
                        ds,
                        username}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserAppealLockListDBTB2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAppealLockListDBTB2Async(System.Data.DataSet ds, string username) {
            this.GetUserAppealLockListDBTB2Async(ds, username, null);
        }
        
        /// <remarks/>
        public void GetUserAppealLockListDBTB2Async(System.Data.DataSet ds, string username, object userState) {
            if ((this.GetUserAppealLockListDBTB2OperationCompleted == null)) {
                this.GetUserAppealLockListDBTB2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAppealLockListDBTB2OperationCompleted);
            }
            this.InvokeAsync("GetUserAppealLockListDBTB2", new object[] {
                        ds,
                        username}, this.GetUserAppealLockListDBTB2OperationCompleted, userState);
        }
        
        private void OnGetUserAppealLockListDBTB2OperationCompleted(object arg) {
            if ((this.GetUserAppealLockListDBTB2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAppealLockListDBTB2Completed(this, new GetUserAppealLockListDBTB2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CFTCancelAppeal", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CFTCancelAppeal(int fid, string reason, string OtherReason, string Fcomment, string UserName, string UserIP, out string msg) {
            object[] results = this.Invoke("CFTCancelAppeal", new object[] {
                        fid,
                        reason,
                        OtherReason,
                        Fcomment,
                        UserName,
                        UserIP});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCFTCancelAppeal(int fid, string reason, string OtherReason, string Fcomment, string UserName, string UserIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CFTCancelAppeal", new object[] {
                        fid,
                        reason,
                        OtherReason,
                        Fcomment,
                        UserName,
                        UserIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCFTCancelAppeal(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CFTCancelAppealAsync(int fid, string reason, string OtherReason, string Fcomment, string UserName, string UserIP) {
            this.CFTCancelAppealAsync(fid, reason, OtherReason, Fcomment, UserName, UserIP, null);
        }
        
        /// <remarks/>
        public void CFTCancelAppealAsync(int fid, string reason, string OtherReason, string Fcomment, string UserName, string UserIP, object userState) {
            if ((this.CFTCancelAppealOperationCompleted == null)) {
                this.CFTCancelAppealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCFTCancelAppealOperationCompleted);
            }
            this.InvokeAsync("CFTCancelAppeal", new object[] {
                        fid,
                        reason,
                        OtherReason,
                        Fcomment,
                        UserName,
                        UserIP}, this.CFTCancelAppealOperationCompleted, userState);
        }
        
        private void OnCFTCancelAppealOperationCompleted(object arg) {
            if ((this.CFTCancelAppealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CFTCancelAppealCompleted(this, new CFTCancelAppealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CFTCancelAppealDBTB", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CFTCancelAppealDBTB(string fid, string db, string tb, string reason, string OtherReason, string Fcomment, string UserName, string UserIP, out string msg) {
            object[] results = this.Invoke("CFTCancelAppealDBTB", new object[] {
                        fid,
                        db,
                        tb,
                        reason,
                        OtherReason,
                        Fcomment,
                        UserName,
                        UserIP});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCFTCancelAppealDBTB(string fid, string db, string tb, string reason, string OtherReason, string Fcomment, string UserName, string UserIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CFTCancelAppealDBTB", new object[] {
                        fid,
                        db,
                        tb,
                        reason,
                        OtherReason,
                        Fcomment,
                        UserName,
                        UserIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCFTCancelAppealDBTB(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CFTCancelAppealDBTBAsync(string fid, string db, string tb, string reason, string OtherReason, string Fcomment, string UserName, string UserIP) {
            this.CFTCancelAppealDBTBAsync(fid, db, tb, reason, OtherReason, Fcomment, UserName, UserIP, null);
        }
        
        /// <remarks/>
        public void CFTCancelAppealDBTBAsync(string fid, string db, string tb, string reason, string OtherReason, string Fcomment, string UserName, string UserIP, object userState) {
            if ((this.CFTCancelAppealDBTBOperationCompleted == null)) {
                this.CFTCancelAppealDBTBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCFTCancelAppealDBTBOperationCompleted);
            }
            this.InvokeAsync("CFTCancelAppealDBTB", new object[] {
                        fid,
                        db,
                        tb,
                        reason,
                        OtherReason,
                        Fcomment,
                        UserName,
                        UserIP}, this.CFTCancelAppealDBTBOperationCompleted, userState);
        }
        
        private void OnCFTCancelAppealDBTBOperationCompleted(object arg) {
            if ((this.CFTCancelAppealDBTBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CFTCancelAppealDBTBCompleted(this, new CFTCancelAppealDBTBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CFTConfirmAppeal", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CFTConfirmAppeal(int fid, string Fcomment, string UserName, string UserIP, out string msg) {
            object[] results = this.Invoke("CFTConfirmAppeal", new object[] {
                        fid,
                        Fcomment,
                        UserName,
                        UserIP});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCFTConfirmAppeal(int fid, string Fcomment, string UserName, string UserIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CFTConfirmAppeal", new object[] {
                        fid,
                        Fcomment,
                        UserName,
                        UserIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCFTConfirmAppeal(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CFTConfirmAppealAsync(int fid, string Fcomment, string UserName, string UserIP) {
            this.CFTConfirmAppealAsync(fid, Fcomment, UserName, UserIP, null);
        }
        
        /// <remarks/>
        public void CFTConfirmAppealAsync(int fid, string Fcomment, string UserName, string UserIP, object userState) {
            if ((this.CFTConfirmAppealOperationCompleted == null)) {
                this.CFTConfirmAppealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCFTConfirmAppealOperationCompleted);
            }
            this.InvokeAsync("CFTConfirmAppeal", new object[] {
                        fid,
                        Fcomment,
                        UserName,
                        UserIP}, this.CFTConfirmAppealOperationCompleted, userState);
        }
        
        private void OnCFTConfirmAppealOperationCompleted(object arg) {
            if ((this.CFTConfirmAppealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CFTConfirmAppealCompleted(this, new CFTConfirmAppealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CFTConfirmAppealDBTB", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CFTConfirmAppealDBTB(string fid, string db, string tb, string Fcomment, string UserName, string UserIP, out string msg) {
            object[] results = this.Invoke("CFTConfirmAppealDBTB", new object[] {
                        fid,
                        db,
                        tb,
                        Fcomment,
                        UserName,
                        UserIP});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCFTConfirmAppealDBTB(string fid, string db, string tb, string Fcomment, string UserName, string UserIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CFTConfirmAppealDBTB", new object[] {
                        fid,
                        db,
                        tb,
                        Fcomment,
                        UserName,
                        UserIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCFTConfirmAppealDBTB(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CFTConfirmAppealDBTBAsync(string fid, string db, string tb, string Fcomment, string UserName, string UserIP) {
            this.CFTConfirmAppealDBTBAsync(fid, db, tb, Fcomment, UserName, UserIP, null);
        }
        
        /// <remarks/>
        public void CFTConfirmAppealDBTBAsync(string fid, string db, string tb, string Fcomment, string UserName, string UserIP, object userState) {
            if ((this.CFTConfirmAppealDBTBOperationCompleted == null)) {
                this.CFTConfirmAppealDBTBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCFTConfirmAppealDBTBOperationCompleted);
            }
            this.InvokeAsync("CFTConfirmAppealDBTB", new object[] {
                        fid,
                        db,
                        tb,
                        Fcomment,
                        UserName,
                        UserIP}, this.CFTConfirmAppealDBTBOperationCompleted, userState);
        }
        
        private void OnCFTConfirmAppealDBTBOperationCompleted(object arg) {
            if ((this.CFTConfirmAppealDBTBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CFTConfirmAppealDBTBCompleted(this, new CFTConfirmAppealDBTBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CFTDelAppeal", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CFTDelAppeal(int fid, string Fcomment, string UserName, string UserIP, out string msg) {
            object[] results = this.Invoke("CFTDelAppeal", new object[] {
                        fid,
                        Fcomment,
                        UserName,
                        UserIP});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCFTDelAppeal(int fid, string Fcomment, string UserName, string UserIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CFTDelAppeal", new object[] {
                        fid,
                        Fcomment,
                        UserName,
                        UserIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCFTDelAppeal(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CFTDelAppealAsync(int fid, string Fcomment, string UserName, string UserIP) {
            this.CFTDelAppealAsync(fid, Fcomment, UserName, UserIP, null);
        }
        
        /// <remarks/>
        public void CFTDelAppealAsync(int fid, string Fcomment, string UserName, string UserIP, object userState) {
            if ((this.CFTDelAppealOperationCompleted == null)) {
                this.CFTDelAppealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCFTDelAppealOperationCompleted);
            }
            this.InvokeAsync("CFTDelAppeal", new object[] {
                        fid,
                        Fcomment,
                        UserName,
                        UserIP}, this.CFTDelAppealOperationCompleted, userState);
        }
        
        private void OnCFTDelAppealOperationCompleted(object arg) {
            if ((this.CFTDelAppealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CFTDelAppealCompleted(this, new CFTDelAppealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CFTDelAppealDBTB", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CFTDelAppealDBTB(string fid, string db, string tb, string Fcomment, string UserName, string UserIP, out string msg) {
            object[] results = this.Invoke("CFTDelAppealDBTB", new object[] {
                        fid,
                        db,
                        tb,
                        Fcomment,
                        UserName,
                        UserIP});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCFTDelAppealDBTB(string fid, string db, string tb, string Fcomment, string UserName, string UserIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CFTDelAppealDBTB", new object[] {
                        fid,
                        db,
                        tb,
                        Fcomment,
                        UserName,
                        UserIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCFTDelAppealDBTB(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CFTDelAppealDBTBAsync(string fid, string db, string tb, string Fcomment, string UserName, string UserIP) {
            this.CFTDelAppealDBTBAsync(fid, db, tb, Fcomment, UserName, UserIP, null);
        }
        
        /// <remarks/>
        public void CFTDelAppealDBTBAsync(string fid, string db, string tb, string Fcomment, string UserName, string UserIP, object userState) {
            if ((this.CFTDelAppealDBTBOperationCompleted == null)) {
                this.CFTDelAppealDBTBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCFTDelAppealDBTBOperationCompleted);
            }
            this.InvokeAsync("CFTDelAppealDBTB", new object[] {
                        fid,
                        db,
                        tb,
                        Fcomment,
                        UserName,
                        UserIP}, this.CFTDelAppealDBTBOperationCompleted, userState);
        }
        
        private void OnCFTDelAppealDBTBOperationCompleted(object arg) {
            if ((this.CFTDelAppealDBTBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CFTDelAppealDBTBCompleted(this, new CFTDelAppealDBTBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetKFTotalQueryList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetKFTotalQueryList(string User, System.DateTime u_BeginTime, System.DateTime u_EndTime, string OperationType, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetKFTotalQueryList", new object[] {
                        User,
                        u_BeginTime,
                        u_EndTime,
                        OperationType,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetKFTotalQueryList(string User, System.DateTime u_BeginTime, System.DateTime u_EndTime, string OperationType, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetKFTotalQueryList", new object[] {
                        User,
                        u_BeginTime,
                        u_EndTime,
                        OperationType,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetKFTotalQueryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetKFTotalQueryListAsync(string User, System.DateTime u_BeginTime, System.DateTime u_EndTime, string OperationType, int iPageStart, int iPageMax) {
            this.GetKFTotalQueryListAsync(User, u_BeginTime, u_EndTime, OperationType, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetKFTotalQueryListAsync(string User, System.DateTime u_BeginTime, System.DateTime u_EndTime, string OperationType, int iPageStart, int iPageMax, object userState) {
            if ((this.GetKFTotalQueryListOperationCompleted == null)) {
                this.GetKFTotalQueryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKFTotalQueryListOperationCompleted);
            }
            this.InvokeAsync("GetKFTotalQueryList", new object[] {
                        User,
                        u_BeginTime,
                        u_EndTime,
                        OperationType,
                        iPageStart,
                        iPageMax}, this.GetKFTotalQueryListOperationCompleted, userState);
        }
        
        private void OnGetKFTotalQueryListOperationCompleted(object arg) {
            if ((this.GetKFTotalQueryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKFTotalQueryListCompleted(this, new GetKFTotalQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/Test", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Test() {
            object[] results = this.Invoke("Test", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTest(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Test", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndTest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        /// <remarks/>
        public void TestAsync(object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[0], this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAppealUserInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppealUserInfo(string qqid) {
            object[] results = this.Invoke("GetAppealUserInfo", new object[] {
                        qqid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAppealUserInfo(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAppealUserInfo", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAppealUserInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppealUserInfoAsync(string qqid) {
            this.GetAppealUserInfoAsync(qqid, null);
        }
        
        /// <remarks/>
        public void GetAppealUserInfoAsync(string qqid, object userState) {
            if ((this.GetAppealUserInfoOperationCompleted == null)) {
                this.GetAppealUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppealUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetAppealUserInfo", new object[] {
                        qqid}, this.GetAppealUserInfoOperationCompleted, userState);
        }
        
        private void OnGetAppealUserInfoOperationCompleted(object arg) {
            if ((this.GetAppealUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppealUserInfoCompleted(this, new GetAppealUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetChangeQQList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetChangeQQList(string userid, string qq, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetChangeQQList", new object[] {
                        userid,
                        qq,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChangeQQList(string userid, string qq, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChangeQQList", new object[] {
                        userid,
                        qq,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetChangeQQList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChangeQQListAsync(string userid, string qq, int iPageStart, int iPageMax) {
            this.GetChangeQQListAsync(userid, qq, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetChangeQQListAsync(string userid, string qq, int iPageStart, int iPageMax, object userState) {
            if ((this.GetChangeQQListOperationCompleted == null)) {
                this.GetChangeQQListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangeQQListOperationCompleted);
            }
            this.InvokeAsync("GetChangeQQList", new object[] {
                        userid,
                        qq,
                        iPageStart,
                        iPageMax}, this.GetChangeQQListOperationCompleted, userState);
        }
        
        private void OnGetChangeQQListOperationCompleted(object arg) {
            if ((this.GetChangeQQListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangeQQListCompleted(this, new GetChangeQQListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetChangeQQListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetChangeQQListCount(string userid, string qq) {
            object[] results = this.Invoke("GetChangeQQListCount", new object[] {
                        userid,
                        qq});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChangeQQListCount(string userid, string qq, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChangeQQListCount", new object[] {
                        userid,
                        qq}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetChangeQQListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetChangeQQListCountAsync(string userid, string qq) {
            this.GetChangeQQListCountAsync(userid, qq, null);
        }
        
        /// <remarks/>
        public void GetChangeQQListCountAsync(string userid, string qq, object userState) {
            if ((this.GetChangeQQListCountOperationCompleted == null)) {
                this.GetChangeQQListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangeQQListCountOperationCompleted);
            }
            this.InvokeAsync("GetChangeQQListCount", new object[] {
                        userid,
                        qq}, this.GetChangeQQListCountOperationCompleted, userState);
        }
        
        private void OnGetChangeQQListCountOperationCompleted(object arg) {
            if ((this.GetChangeQQListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangeQQListCountCompleted(this, new GetChangeQQListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetQQByType", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetQQByType(int ntype, string dbName, int istartIndex, int length, string whereStr, out System.Data.DataSet ds, out string Msg) {
            object[] results = this.Invoke("GetQQByType", new object[] {
                        ntype,
                        dbName,
                        istartIndex,
                        length,
                        whereStr});
            ds = ((System.Data.DataSet)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQQByType(int ntype, string dbName, int istartIndex, int length, string whereStr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQQByType", new object[] {
                        ntype,
                        dbName,
                        istartIndex,
                        length,
                        whereStr}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetQQByType(System.IAsyncResult asyncResult, out System.Data.DataSet ds, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            ds = ((System.Data.DataSet)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetQQByTypeAsync(int ntype, string dbName, int istartIndex, int length, string whereStr) {
            this.GetQQByTypeAsync(ntype, dbName, istartIndex, length, whereStr, null);
        }
        
        /// <remarks/>
        public void GetQQByTypeAsync(int ntype, string dbName, int istartIndex, int length, string whereStr, object userState) {
            if ((this.GetQQByTypeOperationCompleted == null)) {
                this.GetQQByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQQByTypeOperationCompleted);
            }
            this.InvokeAsync("GetQQByType", new object[] {
                        ntype,
                        dbName,
                        istartIndex,
                        length,
                        whereStr}, this.GetQQByTypeOperationCompleted, userState);
        }
        
        private void OnGetQQByTypeOperationCompleted(object arg) {
            if ((this.GetQQByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQQByTypeCompleted(this, new GetQQByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QQ2Uid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QQ2Uid(string qqid) {
            object[] results = this.Invoke("QQ2Uid", new object[] {
                        qqid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQQ2Uid(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QQ2Uid", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndQQ2Uid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QQ2UidAsync(string qqid) {
            this.QQ2UidAsync(qqid, null);
        }
        
        /// <remarks/>
        public void QQ2UidAsync(string qqid, object userState) {
            if ((this.QQ2UidOperationCompleted == null)) {
                this.QQ2UidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQQ2UidOperationCompleted);
            }
            this.InvokeAsync("QQ2Uid", new object[] {
                        qqid}, this.QQ2UidOperationCompleted, userState);
        }
        
        private void OnQQ2UidOperationCompleted(object arg) {
            if ((this.QQ2UidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QQ2UidCompleted(this, new QQ2UidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QQ2UidX", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QQ2UidX(string qqid) {
            object[] results = this.Invoke("QQ2UidX", new object[] {
                        qqid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQQ2UidX(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QQ2UidX", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndQQ2UidX(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QQ2UidXAsync(string qqid) {
            this.QQ2UidXAsync(qqid, null);
        }
        
        /// <remarks/>
        public void QQ2UidXAsync(string qqid, object userState) {
            if ((this.QQ2UidXOperationCompleted == null)) {
                this.QQ2UidXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQQ2UidXOperationCompleted);
            }
            this.InvokeAsync("QQ2UidX", new object[] {
                        qqid}, this.QQ2UidXOperationCompleted, userState);
        }
        
        private void OnQQ2UidXOperationCompleted(object arg) {
            if ((this.QQ2UidXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QQ2UidXCompleted(this, new QQ2UidXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetQueryList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQueryList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string buyqqInnerID, string saleqqInnerID, string u_QueryType, string queryvalue, int fstate, int fcurtype, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        buyqqInnerID,
                        saleqqInnerID,
                        u_QueryType,
                        queryvalue,
                        fstate,
                        fcurtype,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQueryList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string buyqqInnerID, string saleqqInnerID, string u_QueryType, string queryvalue, int fstate, int fcurtype, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        buyqqInnerID,
                        saleqqInnerID,
                        u_QueryType,
                        queryvalue,
                        fstate,
                        fcurtype,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetQueryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string buyqqInnerID, string saleqqInnerID, string u_QueryType, string queryvalue, int fstate, int fcurtype, int iPageStart, int iPageMax) {
            this.GetQueryListAsync(u_BeginTime, u_EndTime, buyqq, saleqq, buyqqInnerID, saleqqInnerID, u_QueryType, queryvalue, fstate, fcurtype, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetQueryListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string buyqqInnerID, string saleqqInnerID, string u_QueryType, string queryvalue, int fstate, int fcurtype, int iPageStart, int iPageMax, object userState) {
            if ((this.GetQueryListOperationCompleted == null)) {
                this.GetQueryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryListOperationCompleted);
            }
            this.InvokeAsync("GetQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        buyqqInnerID,
                        saleqqInnerID,
                        u_QueryType,
                        queryvalue,
                        fstate,
                        fcurtype,
                        iPageStart,
                        iPageMax}, this.GetQueryListOperationCompleted, userState);
        }
        
        private void OnGetQueryListOperationCompleted(object arg) {
            if ((this.GetQueryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryListCompleted(this, new GetQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetQueryListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetQueryListCount(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string buyqqInnerID, string saleqqInnerID, string u_QueryType, string queryvalue, int fstate, int fcurtype) {
            object[] results = this.Invoke("GetQueryListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        buyqqInnerID,
                        saleqqInnerID,
                        u_QueryType,
                        queryvalue,
                        fstate,
                        fcurtype});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQueryListCount(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string buyqqInnerID, string saleqqInnerID, string u_QueryType, string queryvalue, int fstate, int fcurtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQueryListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        buyqqInnerID,
                        saleqqInnerID,
                        u_QueryType,
                        queryvalue,
                        fstate,
                        fcurtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetQueryListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryListCountAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string buyqqInnerID, string saleqqInnerID, string u_QueryType, string queryvalue, int fstate, int fcurtype) {
            this.GetQueryListCountAsync(u_BeginTime, u_EndTime, buyqq, saleqq, buyqqInnerID, saleqqInnerID, u_QueryType, queryvalue, fstate, fcurtype, null);
        }
        
        /// <remarks/>
        public void GetQueryListCountAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string buyqqInnerID, string saleqqInnerID, string u_QueryType, string queryvalue, int fstate, int fcurtype, object userState) {
            if ((this.GetQueryListCountOperationCompleted == null)) {
                this.GetQueryListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryListCountOperationCompleted);
            }
            this.InvokeAsync("GetQueryListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        buyqqInnerID,
                        saleqqInnerID,
                        u_QueryType,
                        queryvalue,
                        fstate,
                        fcurtype}, this.GetQueryListCountOperationCompleted, userState);
        }
        
        private void OnGetQueryListCountOperationCompleted(object arg) {
            if ((this.GetQueryListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryListCountCompleted(this, new GetQueryListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetQueryListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQueryListDetail(string listid) {
            object[] results = this.Invoke("GetQueryListDetail", new object[] {
                        listid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQueryListDetail(string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQueryListDetail", new object[] {
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetQueryListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryListDetailAsync(string listid) {
            this.GetQueryListDetailAsync(listid, null);
        }
        
        /// <remarks/>
        public void GetQueryListDetailAsync(string listid, object userState) {
            if ((this.GetQueryListDetailOperationCompleted == null)) {
                this.GetQueryListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryListDetailOperationCompleted);
            }
            this.InvokeAsync("GetQueryListDetail", new object[] {
                        listid}, this.GetQueryListDetailOperationCompleted, userState);
        }
        
        private void OnGetQueryListDetailOperationCompleted(object arg) {
            if ((this.GetQueryListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryListDetailCompleted(this, new GetQueryListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAppealList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppealList(string listid) {
            object[] results = this.Invoke("GetAppealList", new object[] {
                        listid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAppealList(string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAppealList", new object[] {
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAppealList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppealListAsync(string listid) {
            this.GetAppealListAsync(listid, null);
        }
        
        /// <remarks/>
        public void GetAppealListAsync(string listid, object userState) {
            if ((this.GetAppealListOperationCompleted == null)) {
                this.GetAppealListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppealListOperationCompleted);
            }
            this.InvokeAsync("GetAppealList", new object[] {
                        listid}, this.GetAppealListOperationCompleted, userState);
        }
        
        private void OnGetAppealListOperationCompleted(object arg) {
            if ((this.GetAppealListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppealListCompleted(this, new GetAppealListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserpayList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserpayList(string listid) {
            object[] results = this.Invoke("GetUserpayList", new object[] {
                        listid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserpayList(string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserpayList", new object[] {
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserpayList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserpayListAsync(string listid) {
            this.GetUserpayListAsync(listid, null);
        }
        
        /// <remarks/>
        public void GetUserpayListAsync(string listid, object userState) {
            if ((this.GetUserpayListOperationCompleted == null)) {
                this.GetUserpayListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserpayListOperationCompleted);
            }
            this.InvokeAsync("GetUserpayList", new object[] {
                        listid}, this.GetUserpayListOperationCompleted, userState);
        }
        
        private void OnGetUserpayListOperationCompleted(object arg) {
            if ((this.GetUserpayListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserpayListCompleted(this, new GetUserpayListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetTransportList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransportList(string listid) {
            object[] results = this.Invoke("GetTransportList", new object[] {
                        listid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransportList(string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransportList", new object[] {
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTransportList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransportListAsync(string listid) {
            this.GetTransportListAsync(listid, null);
        }
        
        /// <remarks/>
        public void GetTransportListAsync(string listid, object userState) {
            if ((this.GetTransportListOperationCompleted == null)) {
                this.GetTransportListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransportListOperationCompleted);
            }
            this.InvokeAsync("GetTransportList", new object[] {
                        listid}, this.GetTransportListOperationCompleted, userState);
        }
        
        private void OnGetTransportListOperationCompleted(object arg) {
            if ((this.GetTransportListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransportListCompleted(this, new GetTransportListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAppealQueryList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppealQueryList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetAppealQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        queryvalue,
                        fstate,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAppealQueryList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAppealQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        queryvalue,
                        fstate,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAppealQueryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppealQueryListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate, int iPageStart, int iPageMax) {
            this.GetAppealQueryListAsync(u_BeginTime, u_EndTime, buyqq, saleqq, queryvalue, fstate, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetAppealQueryListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate, int iPageStart, int iPageMax, object userState) {
            if ((this.GetAppealQueryListOperationCompleted == null)) {
                this.GetAppealQueryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppealQueryListOperationCompleted);
            }
            this.InvokeAsync("GetAppealQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        queryvalue,
                        fstate,
                        iPageStart,
                        iPageMax}, this.GetAppealQueryListOperationCompleted, userState);
        }
        
        private void OnGetAppealQueryListOperationCompleted(object arg) {
            if ((this.GetAppealQueryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppealQueryListCompleted(this, new GetAppealQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAppealListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAppealListCount(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate) {
            object[] results = this.Invoke("GetAppealListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        queryvalue,
                        fstate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAppealListCount(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAppealListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        queryvalue,
                        fstate}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetAppealListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppealListCountAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate) {
            this.GetAppealListCountAsync(u_BeginTime, u_EndTime, buyqq, saleqq, queryvalue, fstate, null);
        }
        
        /// <remarks/>
        public void GetAppealListCountAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate, object userState) {
            if ((this.GetAppealListCountOperationCompleted == null)) {
                this.GetAppealListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppealListCountOperationCompleted);
            }
            this.InvokeAsync("GetAppealListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        queryvalue,
                        fstate}, this.GetAppealListCountOperationCompleted, userState);
        }
        
        private void OnGetAppealListCountOperationCompleted(object arg) {
            if ((this.GetAppealListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppealListCountCompleted(this, new GetAppealListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAppealListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppealListDetail(string appealid) {
            object[] results = this.Invoke("GetAppealListDetail", new object[] {
                        appealid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAppealListDetail(string appealid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAppealListDetail", new object[] {
                        appealid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAppealListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppealListDetailAsync(string appealid) {
            this.GetAppealListDetailAsync(appealid, null);
        }
        
        /// <remarks/>
        public void GetAppealListDetailAsync(string appealid, object userState) {
            if ((this.GetAppealListDetailOperationCompleted == null)) {
                this.GetAppealListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppealListDetailOperationCompleted);
            }
            this.InvokeAsync("GetAppealListDetail", new object[] {
                        appealid}, this.GetAppealListDetailOperationCompleted, userState);
        }
        
        private void OnGetAppealListDetailOperationCompleted(object arg) {
            if ((this.GetAppealListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppealListDetailCompleted(this, new GetAppealListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserClassInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserClassInfo(string qqid) {
            object[] results = this.Invoke("GetUserClassInfo", new object[] {
                        qqid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserClassInfo(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserClassInfo", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserClassInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserClassInfoAsync(string qqid) {
            this.GetUserClassInfoAsync(qqid, null);
        }
        
        /// <remarks/>
        public void GetUserClassInfoAsync(string qqid, object userState) {
            if ((this.GetUserClassInfoOperationCompleted == null)) {
                this.GetUserClassInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserClassInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserClassInfo", new object[] {
                        qqid}, this.GetUserClassInfoOperationCompleted, userState);
        }
        
        private void OnGetUserClassInfoOperationCompleted(object arg) {
            if ((this.GetUserClassInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserClassInfoCompleted(this, new GetUserClassInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserClassInfoFlag", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserClassInfoFlag(string qqid, out string errMsg) {
            object[] results = this.Invoke("GetUserClassInfoFlag", new object[] {
                        qqid});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserClassInfoFlag(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserClassInfoFlag", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserClassInfoFlag(System.IAsyncResult asyncResult, out string errMsg) {
            object[] results = this.EndInvoke(asyncResult);
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserClassInfoFlagAsync(string qqid) {
            this.GetUserClassInfoFlagAsync(qqid, null);
        }
        
        /// <remarks/>
        public void GetUserClassInfoFlagAsync(string qqid, object userState) {
            if ((this.GetUserClassInfoFlagOperationCompleted == null)) {
                this.GetUserClassInfoFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserClassInfoFlagOperationCompleted);
            }
            this.InvokeAsync("GetUserClassInfoFlag", new object[] {
                        qqid}, this.GetUserClassInfoFlagOperationCompleted, userState);
        }
        
        private void OnGetUserClassInfoFlagOperationCompleted(object arg) {
            if ((this.GetUserClassInfoFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserClassInfoFlagCompleted(this, new GetUserClassInfoFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UserClassConfirm", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserClassConfirm(int flist_id, string UserName, out string msg) {
            object[] results = this.Invoke("UserClassConfirm", new object[] {
                        flist_id,
                        UserName});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUserClassConfirm(int flist_id, string UserName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UserClassConfirm", new object[] {
                        flist_id,
                        UserName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUserClassConfirm(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserClassConfirmAsync(int flist_id, string UserName) {
            this.UserClassConfirmAsync(flist_id, UserName, null);
        }
        
        /// <remarks/>
        public void UserClassConfirmAsync(int flist_id, string UserName, object userState) {
            if ((this.UserClassConfirmOperationCompleted == null)) {
                this.UserClassConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserClassConfirmOperationCompleted);
            }
            this.InvokeAsync("UserClassConfirm", new object[] {
                        flist_id,
                        UserName}, this.UserClassConfirmOperationCompleted, userState);
        }
        
        private void OnUserClassConfirmOperationCompleted(object arg) {
            if ((this.UserClassConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserClassConfirmCompleted(this, new UserClassConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UpdateInfoFromPolice", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateInfoFromPolice(string flist_id, string infomation) {
            this.Invoke("UpdateInfoFromPolice", new object[] {
                        flist_id,
                        infomation});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateInfoFromPolice(string flist_id, string infomation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateInfoFromPolice", new object[] {
                        flist_id,
                        infomation}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateInfoFromPolice(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateInfoFromPoliceAsync(string flist_id, string infomation) {
            this.UpdateInfoFromPoliceAsync(flist_id, infomation, null);
        }
        
        /// <remarks/>
        public void UpdateInfoFromPoliceAsync(string flist_id, string infomation, object userState) {
            if ((this.UpdateInfoFromPoliceOperationCompleted == null)) {
                this.UpdateInfoFromPoliceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInfoFromPoliceOperationCompleted);
            }
            this.InvokeAsync("UpdateInfoFromPolice", new object[] {
                        flist_id,
                        infomation}, this.UpdateInfoFromPoliceOperationCompleted, userState);
        }
        
        private void OnUpdateInfoFromPoliceOperationCompleted(object arg) {
            if ((this.UpdateInfoFromPoliceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInfoFromPoliceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UserClassCancel", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserClassCancel(int flist_id, string reason, string OtherReason, string UserName, out string msg) {
            object[] results = this.Invoke("UserClassCancel", new object[] {
                        flist_id,
                        reason,
                        OtherReason,
                        UserName});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUserClassCancel(int flist_id, string reason, string OtherReason, string UserName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UserClassCancel", new object[] {
                        flist_id,
                        reason,
                        OtherReason,
                        UserName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUserClassCancel(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserClassCancelAsync(int flist_id, string reason, string OtherReason, string UserName) {
            this.UserClassCancelAsync(flist_id, reason, OtherReason, UserName, null);
        }
        
        /// <remarks/>
        public void UserClassCancelAsync(int flist_id, string reason, string OtherReason, string UserName, object userState) {
            if ((this.UserClassCancelOperationCompleted == null)) {
                this.UserClassCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserClassCancelOperationCompleted);
            }
            this.InvokeAsync("UserClassCancel", new object[] {
                        flist_id,
                        reason,
                        OtherReason,
                        UserName}, this.UserClassCancelOperationCompleted, userState);
        }
        
        private void OnUserClassCancelOperationCompleted(object arg) {
            if ((this.UserClassCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserClassCancelCompleted(this, new UserClassCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserClassDeleteList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserClassDeleteList(string Fqqid) {
            object[] results = this.Invoke("GetUserClassDeleteList", new object[] {
                        Fqqid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserClassDeleteList(string Fqqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserClassDeleteList", new object[] {
                        Fqqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserClassDeleteList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserClassDeleteListAsync(string Fqqid) {
            this.GetUserClassDeleteListAsync(Fqqid, null);
        }
        
        /// <remarks/>
        public void GetUserClassDeleteListAsync(string Fqqid, object userState) {
            if ((this.GetUserClassDeleteListOperationCompleted == null)) {
                this.GetUserClassDeleteListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserClassDeleteListOperationCompleted);
            }
            this.InvokeAsync("GetUserClassDeleteList", new object[] {
                        Fqqid}, this.GetUserClassDeleteListOperationCompleted, userState);
        }
        
        private void OnGetUserClassDeleteListOperationCompleted(object arg) {
            if ((this.GetUserClassDeleteListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserClassDeleteListCompleted(this, new GetUserClassDeleteListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundErrorCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRefundErrorCount(string batchid, string refundOrder, int orderType, string beginDate, string endDate, int refundType, string bankType, int refundPath, int handleType, int errorType, int refundState, string viewOldIds) {
            object[] results = this.Invoke("GetRefundErrorCount", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        viewOldIds});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundErrorCount(string batchid, string refundOrder, int orderType, string beginDate, string endDate, int refundType, string bankType, int refundPath, int handleType, int errorType, int refundState, string viewOldIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefundErrorCount", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        viewOldIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetRefundErrorCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundErrorCountAsync(string batchid, string refundOrder, int orderType, string beginDate, string endDate, int refundType, string bankType, int refundPath, int handleType, int errorType, int refundState, string viewOldIds) {
            this.GetRefundErrorCountAsync(batchid, refundOrder, orderType, beginDate, endDate, refundType, bankType, refundPath, handleType, errorType, refundState, viewOldIds, null);
        }
        
        /// <remarks/>
        public void GetRefundErrorCountAsync(string batchid, string refundOrder, int orderType, string beginDate, string endDate, int refundType, string bankType, int refundPath, int handleType, int errorType, int refundState, string viewOldIds, object userState) {
            if ((this.GetRefundErrorCountOperationCompleted == null)) {
                this.GetRefundErrorCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundErrorCountOperationCompleted);
            }
            this.InvokeAsync("GetRefundErrorCount", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        viewOldIds}, this.GetRefundErrorCountOperationCompleted, userState);
        }
        
        private void OnGetRefundErrorCountOperationCompleted(object arg) {
            if ((this.GetRefundErrorCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundErrorCountCompleted(this, new GetRefundErrorCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundErrorList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRefundErrorList(string batchid, string refundOrder, int orderType, string beginDate, string endDate, int refundType, string bankType, int refundPath, int handleType, int errorType, int refundState, bool truebankdata, string viewOldIds, int istart, int imax) {
            object[] results = this.Invoke("GetRefundErrorList", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        truebankdata,
                        viewOldIds,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundErrorList(
                    string batchid, 
                    string refundOrder, 
                    int orderType, 
                    string beginDate, 
                    string endDate, 
                    int refundType, 
                    string bankType, 
                    int refundPath, 
                    int handleType, 
                    int errorType, 
                    int refundState, 
                    bool truebankdata, 
                    string viewOldIds, 
                    int istart, 
                    int imax, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("GetRefundErrorList", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        truebankdata,
                        viewOldIds,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRefundErrorList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundErrorListAsync(string batchid, string refundOrder, int orderType, string beginDate, string endDate, int refundType, string bankType, int refundPath, int handleType, int errorType, int refundState, bool truebankdata, string viewOldIds, int istart, int imax) {
            this.GetRefundErrorListAsync(batchid, refundOrder, orderType, beginDate, endDate, refundType, bankType, refundPath, handleType, errorType, refundState, truebankdata, viewOldIds, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetRefundErrorListAsync(
                    string batchid, 
                    string refundOrder, 
                    int orderType, 
                    string beginDate, 
                    string endDate, 
                    int refundType, 
                    string bankType, 
                    int refundPath, 
                    int handleType, 
                    int errorType, 
                    int refundState, 
                    bool truebankdata, 
                    string viewOldIds, 
                    int istart, 
                    int imax, 
                    object userState) {
            if ((this.GetRefundErrorListOperationCompleted == null)) {
                this.GetRefundErrorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundErrorListOperationCompleted);
            }
            this.InvokeAsync("GetRefundErrorList", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        truebankdata,
                        viewOldIds,
                        istart,
                        imax}, this.GetRefundErrorListOperationCompleted, userState);
        }
        
        private void OnGetRefundErrorListOperationCompleted(object arg) {
            if ((this.GetRefundErrorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundErrorListCompleted(this, new GetRefundErrorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundErrorDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRefundErrorDetail(string oldId) {
            object[] results = this.Invoke("GetRefundErrorDetail", new object[] {
                        oldId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundErrorDetail(string oldId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefundErrorDetail", new object[] {
                        oldId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRefundErrorDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundErrorDetailAsync(string oldId) {
            this.GetRefundErrorDetailAsync(oldId, null);
        }
        
        /// <remarks/>
        public void GetRefundErrorDetailAsync(string oldId, object userState) {
            if ((this.GetRefundErrorDetailOperationCompleted == null)) {
                this.GetRefundErrorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundErrorDetailOperationCompleted);
            }
            this.InvokeAsync("GetRefundErrorDetail", new object[] {
                        oldId}, this.GetRefundErrorDetailOperationCompleted, userState);
        }
        
        private void OnGetRefundErrorDetailOperationCompleted(object arg) {
            if ((this.GetRefundErrorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundErrorDetailCompleted(this, new GetRefundErrorDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundCardListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundCardListDetail(string flistid, string fsupplylist, string fcarrdid) {
            object[] results = this.Invoke("GetFundCardListDetail", new object[] {
                        flistid,
                        fsupplylist,
                        fcarrdid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundCardListDetail(string flistid, string fsupplylist, string fcarrdid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundCardListDetail", new object[] {
                        flistid,
                        fsupplylist,
                        fcarrdid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundCardListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundCardListDetailAsync(string flistid, string fsupplylist, string fcarrdid) {
            this.GetFundCardListDetailAsync(flistid, fsupplylist, fcarrdid, null);
        }
        
        /// <remarks/>
        public void GetFundCardListDetailAsync(string flistid, string fsupplylist, string fcarrdid, object userState) {
            if ((this.GetFundCardListDetailOperationCompleted == null)) {
                this.GetFundCardListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundCardListDetailOperationCompleted);
            }
            this.InvokeAsync("GetFundCardListDetail", new object[] {
                        flistid,
                        fsupplylist,
                        fcarrdid}, this.GetFundCardListDetailOperationCompleted, userState);
        }
        
        private void OnGetFundCardListDetailOperationCompleted(object arg) {
            if ((this.GetFundCardListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundCardListDetailCompleted(this, new GetFundCardListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSettleRuleList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSettleRuleList(string Fspid, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetSettleRuleList", new object[] {
                        Fspid,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSettleRuleList(string Fspid, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSettleRuleList", new object[] {
                        Fspid,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSettleRuleList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettleRuleListAsync(string Fspid, int iPageStart, int iPageMax) {
            this.GetSettleRuleListAsync(Fspid, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetSettleRuleListAsync(string Fspid, int iPageStart, int iPageMax, object userState) {
            if ((this.GetSettleRuleListOperationCompleted == null)) {
                this.GetSettleRuleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettleRuleListOperationCompleted);
            }
            this.InvokeAsync("GetSettleRuleList", new object[] {
                        Fspid,
                        iPageStart,
                        iPageMax}, this.GetSettleRuleListOperationCompleted, userState);
        }
        
        private void OnGetSettleRuleListOperationCompleted(object arg) {
            if ((this.GetSettleRuleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettleRuleListCompleted(this, new GetSettleRuleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSettleReqList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSettleReqList(string szListid, string reqid) {
            object[] results = this.Invoke("GetSettleReqList", new object[] {
                        szListid,
                        reqid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSettleReqList(string szListid, string reqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSettleReqList", new object[] {
                        szListid,
                        reqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSettleReqList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettleReqListAsync(string szListid, string reqid) {
            this.GetSettleReqListAsync(szListid, reqid, null);
        }
        
        /// <remarks/>
        public void GetSettleReqListAsync(string szListid, string reqid, object userState) {
            if ((this.GetSettleReqListOperationCompleted == null)) {
                this.GetSettleReqListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettleReqListOperationCompleted);
            }
            this.InvokeAsync("GetSettleReqList", new object[] {
                        szListid,
                        reqid}, this.GetSettleReqListOperationCompleted, userState);
        }
        
        private void OnGetSettleReqListOperationCompleted(object arg) {
            if ((this.GetSettleReqListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettleReqListCompleted(this, new GetSettleReqListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSettleReqInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSettleReqInfo(string szListid) {
            object[] results = this.Invoke("GetSettleReqInfo", new object[] {
                        szListid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSettleReqInfo(string szListid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSettleReqInfo", new object[] {
                        szListid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSettleReqInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettleReqInfoAsync(string szListid) {
            this.GetSettleReqInfoAsync(szListid, null);
        }
        
        /// <remarks/>
        public void GetSettleReqInfoAsync(string szListid, object userState) {
            if ((this.GetSettleReqInfoOperationCompleted == null)) {
                this.GetSettleReqInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettleReqInfoOperationCompleted);
            }
            this.InvokeAsync("GetSettleReqInfo", new object[] {
                        szListid}, this.GetSettleReqInfoOperationCompleted, userState);
        }
        
        private void OnGetSettleReqInfoOperationCompleted(object arg) {
            if ((this.GetSettleReqInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettleReqInfoCompleted(this, new GetSettleReqInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryAdjustList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryAdjustList(string szListid, string spno, string spid, string adjustTime) {
            object[] results = this.Invoke("QueryAdjustList", new object[] {
                        szListid,
                        spno,
                        spid,
                        adjustTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryAdjustList(string szListid, string spno, string spid, string adjustTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryAdjustList", new object[] {
                        szListid,
                        spno,
                        spid,
                        adjustTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryAdjustList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAdjustListAsync(string szListid, string spno, string spid, string adjustTime) {
            this.QueryAdjustListAsync(szListid, spno, spid, adjustTime, null);
        }
        
        /// <remarks/>
        public void QueryAdjustListAsync(string szListid, string spno, string spid, string adjustTime, object userState) {
            if ((this.QueryAdjustListOperationCompleted == null)) {
                this.QueryAdjustListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAdjustListOperationCompleted);
            }
            this.InvokeAsync("QueryAdjustList", new object[] {
                        szListid,
                        spno,
                        spid,
                        adjustTime}, this.QueryAdjustListOperationCompleted, userState);
        }
        
        private void OnQueryAdjustListOperationCompleted(object arg) {
            if ((this.QueryAdjustListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAdjustListCompleted(this, new QueryAdjustListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QuerySettleRuleList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QuerySettleRuleList(string spid) {
            object[] results = this.Invoke("QuerySettleRuleList", new object[] {
                        spid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQuerySettleRuleList(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QuerySettleRuleList", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQuerySettleRuleList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySettleRuleListAsync(string spid) {
            this.QuerySettleRuleListAsync(spid, null);
        }
        
        /// <remarks/>
        public void QuerySettleRuleListAsync(string spid, object userState) {
            if ((this.QuerySettleRuleListOperationCompleted == null)) {
                this.QuerySettleRuleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySettleRuleListOperationCompleted);
            }
            this.InvokeAsync("QuerySettleRuleList", new object[] {
                        spid}, this.QuerySettleRuleListOperationCompleted, userState);
        }
        
        private void OnQuerySettleRuleListOperationCompleted(object arg) {
            if ((this.QuerySettleRuleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySettleRuleListCompleted(this, new QuerySettleRuleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QuerySpControl", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QuerySpControl(string spid) {
            object[] results = this.Invoke("QuerySpControl", new object[] {
                        spid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQuerySpControl(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QuerySpControl", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQuerySpControl(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySpControlAsync(string spid) {
            this.QuerySpControlAsync(spid, null);
        }
        
        /// <remarks/>
        public void QuerySpControlAsync(string spid, object userState) {
            if ((this.QuerySpControlOperationCompleted == null)) {
                this.QuerySpControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySpControlOperationCompleted);
            }
            this.InvokeAsync("QuerySpControl", new object[] {
                        spid}, this.QuerySpControlOperationCompleted, userState);
        }
        
        private void OnQuerySpControlOperationCompleted(object arg) {
            if ((this.QuerySpControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySpControlCompleted(this, new QuerySpControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryRelationOrderList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryRelationOrderList(string szListid, string subListid) {
            object[] results = this.Invoke("QueryRelationOrderList", new object[] {
                        szListid,
                        subListid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryRelationOrderList(string szListid, string subListid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryRelationOrderList", new object[] {
                        szListid,
                        subListid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryRelationOrderList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryRelationOrderListAsync(string szListid, string subListid) {
            this.QueryRelationOrderListAsync(szListid, subListid, null);
        }
        
        /// <remarks/>
        public void QueryRelationOrderListAsync(string szListid, string subListid, object userState) {
            if ((this.QueryRelationOrderListOperationCompleted == null)) {
                this.QueryRelationOrderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRelationOrderListOperationCompleted);
            }
            this.InvokeAsync("QueryRelationOrderList", new object[] {
                        szListid,
                        subListid}, this.QueryRelationOrderListOperationCompleted, userState);
        }
        
        private void OnQueryRelationOrderListOperationCompleted(object arg) {
            if ((this.QueryRelationOrderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRelationOrderListCompleted(this, new QueryRelationOrderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QuerySubOrderList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QuerySubOrderList(string mergeListid, string listid) {
            object[] results = this.Invoke("QuerySubOrderList", new object[] {
                        mergeListid,
                        listid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQuerySubOrderList(string mergeListid, string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QuerySubOrderList", new object[] {
                        mergeListid,
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQuerySubOrderList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySubOrderListAsync(string mergeListid, string listid) {
            this.QuerySubOrderListAsync(mergeListid, listid, null);
        }
        
        /// <remarks/>
        public void QuerySubOrderListAsync(string mergeListid, string listid, object userState) {
            if ((this.QuerySubOrderListOperationCompleted == null)) {
                this.QuerySubOrderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySubOrderListOperationCompleted);
            }
            this.InvokeAsync("QuerySubOrderList", new object[] {
                        mergeListid,
                        listid}, this.QuerySubOrderListOperationCompleted, userState);
        }
        
        private void OnQuerySubOrderListOperationCompleted(object arg) {
            if ((this.QuerySubOrderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySubOrderListCompleted(this, new QuerySubOrderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTrueLimtList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryTrueLimtList(string spid, string qqid) {
            object[] results = this.Invoke("QueryTrueLimtList", new object[] {
                        spid,
                        qqid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTrueLimtList(string spid, string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTrueLimtList", new object[] {
                        spid,
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryTrueLimtList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTrueLimtListAsync(string spid, string qqid) {
            this.QueryTrueLimtListAsync(spid, qqid, null);
        }
        
        /// <remarks/>
        public void QueryTrueLimtListAsync(string spid, string qqid, object userState) {
            if ((this.QueryTrueLimtListOperationCompleted == null)) {
                this.QueryTrueLimtListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTrueLimtListOperationCompleted);
            }
            this.InvokeAsync("QueryTrueLimtList", new object[] {
                        spid,
                        qqid}, this.QueryTrueLimtListOperationCompleted, userState);
        }
        
        private void OnQueryTrueLimtListOperationCompleted(object arg) {
            if ((this.QueryTrueLimtListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTrueLimtListCompleted(this, new QueryTrueLimtListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSettleListAppend", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSettleListAppend(string szListid) {
            object[] results = this.Invoke("GetSettleListAppend", new object[] {
                        szListid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSettleListAppend(string szListid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSettleListAppend", new object[] {
                        szListid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSettleListAppend(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettleListAppendAsync(string szListid) {
            this.GetSettleListAppendAsync(szListid, null);
        }
        
        /// <remarks/>
        public void GetSettleListAppendAsync(string szListid, object userState) {
            if ((this.GetSettleListAppendOperationCompleted == null)) {
                this.GetSettleListAppendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettleListAppendOperationCompleted);
            }
            this.InvokeAsync("GetSettleListAppend", new object[] {
                        szListid}, this.GetSettleListAppendOperationCompleted, userState);
        }
        
        private void OnGetSettleListAppendOperationCompleted(object arg) {
            if ((this.GetSettleListAppendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettleListAppendCompleted(this, new GetSettleListAppendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSettleInfoListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSettleInfoListDetail(string szListid) {
            object[] results = this.Invoke("GetSettleInfoListDetail", new object[] {
                        szListid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSettleInfoListDetail(string szListid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSettleInfoListDetail", new object[] {
                        szListid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSettleInfoListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettleInfoListDetailAsync(string szListid) {
            this.GetSettleInfoListDetailAsync(szListid, null);
        }
        
        /// <remarks/>
        public void GetSettleInfoListDetailAsync(string szListid, object userState) {
            if ((this.GetSettleInfoListDetailOperationCompleted == null)) {
                this.GetSettleInfoListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettleInfoListDetailOperationCompleted);
            }
            this.InvokeAsync("GetSettleInfoListDetail", new object[] {
                        szListid}, this.GetSettleInfoListDetailOperationCompleted, userState);
        }
        
        private void OnGetSettleInfoListDetailOperationCompleted(object arg) {
            if ((this.GetSettleInfoListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettleInfoListDetailCompleted(this, new GetSettleInfoListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSettleRefundListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSettleRefundListDetail(string szRefundId, string szListid) {
            object[] results = this.Invoke("GetSettleRefundListDetail", new object[] {
                        szRefundId,
                        szListid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSettleRefundListDetail(string szRefundId, string szListid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSettleRefundListDetail", new object[] {
                        szRefundId,
                        szListid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSettleRefundListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettleRefundListDetailAsync(string szRefundId, string szListid) {
            this.GetSettleRefundListDetailAsync(szRefundId, szListid, null);
        }
        
        /// <remarks/>
        public void GetSettleRefundListDetailAsync(string szRefundId, string szListid, object userState) {
            if ((this.GetSettleRefundListDetailOperationCompleted == null)) {
                this.GetSettleRefundListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettleRefundListDetailOperationCompleted);
            }
            this.InvokeAsync("GetSettleRefundListDetail", new object[] {
                        szRefundId,
                        szListid}, this.GetSettleRefundListDetailOperationCompleted, userState);
        }
        
        private void OnGetSettleRefundListDetailOperationCompleted(object arg) {
            if ((this.GetSettleRefundListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettleRefundListDetailCompleted(this, new GetSettleRefundListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSpAgentRelation", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSpAgentRelation(string spid, string agentid, int start, int max) {
            object[] results = this.Invoke("GetSpAgentRelation", new object[] {
                        spid,
                        agentid,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSpAgentRelation(string spid, string agentid, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSpAgentRelation", new object[] {
                        spid,
                        agentid,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSpAgentRelation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpAgentRelationAsync(string spid, string agentid, int start, int max) {
            this.GetSpAgentRelationAsync(spid, agentid, start, max, null);
        }
        
        /// <remarks/>
        public void GetSpAgentRelationAsync(string spid, string agentid, int start, int max, object userState) {
            if ((this.GetSpAgentRelationOperationCompleted == null)) {
                this.GetSpAgentRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpAgentRelationOperationCompleted);
            }
            this.InvokeAsync("GetSpAgentRelation", new object[] {
                        spid,
                        agentid,
                        start,
                        max}, this.GetSpAgentRelationOperationCompleted, userState);
        }
        
        private void OnGetSpAgentRelationOperationCompleted(object arg) {
            if ((this.GetSpAgentRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpAgentRelationCompleted(this, new GetSpAgentRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAirAdjustList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAirAdjustList(int iType, string Flistid, string szSpid, string szBeginDate, string szEndDate, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetAirAdjustList", new object[] {
                        iType,
                        Flistid,
                        szSpid,
                        szBeginDate,
                        szEndDate,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAirAdjustList(int iType, string Flistid, string szSpid, string szBeginDate, string szEndDate, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAirAdjustList", new object[] {
                        iType,
                        Flistid,
                        szSpid,
                        szBeginDate,
                        szEndDate,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAirAdjustList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAirAdjustListAsync(int iType, string Flistid, string szSpid, string szBeginDate, string szEndDate, int iPageStart, int iPageMax) {
            this.GetAirAdjustListAsync(iType, Flistid, szSpid, szBeginDate, szEndDate, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetAirAdjustListAsync(int iType, string Flistid, string szSpid, string szBeginDate, string szEndDate, int iPageStart, int iPageMax, object userState) {
            if ((this.GetAirAdjustListOperationCompleted == null)) {
                this.GetAirAdjustListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAirAdjustListOperationCompleted);
            }
            this.InvokeAsync("GetAirAdjustList", new object[] {
                        iType,
                        Flistid,
                        szSpid,
                        szBeginDate,
                        szEndDate,
                        iPageStart,
                        iPageMax}, this.GetAirAdjustListOperationCompleted, userState);
        }
        
        private void OnGetAirAdjustListOperationCompleted(object arg) {
            if ((this.GetAirAdjustListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAirAdjustListCompleted(this, new GetAirAdjustListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAirFreeze", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAirFreeze(string szSpid, string szQQid, string szBeginDate, string szEndDate, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetAirFreeze", new object[] {
                        szSpid,
                        szQQid,
                        szBeginDate,
                        szEndDate,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAirFreeze(string szSpid, string szQQid, string szBeginDate, string szEndDate, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAirFreeze", new object[] {
                        szSpid,
                        szQQid,
                        szBeginDate,
                        szEndDate,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAirFreeze(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAirFreezeAsync(string szSpid, string szQQid, string szBeginDate, string szEndDate, int iPageStart, int iPageMax) {
            this.GetAirFreezeAsync(szSpid, szQQid, szBeginDate, szEndDate, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetAirFreezeAsync(string szSpid, string szQQid, string szBeginDate, string szEndDate, int iPageStart, int iPageMax, object userState) {
            if ((this.GetAirFreezeOperationCompleted == null)) {
                this.GetAirFreezeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAirFreezeOperationCompleted);
            }
            this.InvokeAsync("GetAirFreeze", new object[] {
                        szSpid,
                        szQQid,
                        szBeginDate,
                        szEndDate,
                        iPageStart,
                        iPageMax}, this.GetAirFreezeOperationCompleted, userState);
        }
        
        private void OnGetAirFreezeOperationCompleted(object arg) {
            if ((this.GetAirFreezeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAirFreezeCompleted(this, new GetAirFreezeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSettleRefundList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSettleRefundList(string Flistid, int iQueryType, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetSettleRefundList", new object[] {
                        Flistid,
                        iQueryType,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSettleRefundList(string Flistid, int iQueryType, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSettleRefundList", new object[] {
                        Flistid,
                        iQueryType,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSettleRefundList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettleRefundListAsync(string Flistid, int iQueryType, int iPageStart, int iPageMax) {
            this.GetSettleRefundListAsync(Flistid, iQueryType, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetSettleRefundListAsync(string Flistid, int iQueryType, int iPageStart, int iPageMax, object userState) {
            if ((this.GetSettleRefundListOperationCompleted == null)) {
                this.GetSettleRefundListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettleRefundListOperationCompleted);
            }
            this.InvokeAsync("GetSettleRefundList", new object[] {
                        Flistid,
                        iQueryType,
                        iPageStart,
                        iPageMax}, this.GetSettleRefundListOperationCompleted, userState);
        }
        
        private void OnGetSettleRefundListOperationCompleted(object arg) {
            if ((this.GetSettleRefundListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettleRefundListCompleted(this, new GetSettleRefundListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSeparateOperationList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeparateOperationList(string flistid, int start, int max) {
            object[] results = this.Invoke("GetSeparateOperationList", new object[] {
                        flistid,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSeparateOperationList(string flistid, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSeparateOperationList", new object[] {
                        flistid,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSeparateOperationList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeparateOperationListAsync(string flistid, int start, int max) {
            this.GetSeparateOperationListAsync(flistid, start, max, null);
        }
        
        /// <remarks/>
        public void GetSeparateOperationListAsync(string flistid, int start, int max, object userState) {
            if ((this.GetSeparateOperationListOperationCompleted == null)) {
                this.GetSeparateOperationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeparateOperationListOperationCompleted);
            }
            this.InvokeAsync("GetSeparateOperationList", new object[] {
                        flistid,
                        start,
                        max}, this.GetSeparateOperationListOperationCompleted, userState);
        }
        
        private void OnGetSeparateOperationListOperationCompleted(object arg) {
            if ((this.GetSeparateOperationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeparateOperationListCompleted(this, new GetSeparateOperationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSeparateOperationDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeparateOperationDetail(System.DateTime Starttime, System.DateTime Endtime, string Flistid, string Fuid) {
            object[] results = this.Invoke("GetSeparateOperationDetail", new object[] {
                        Starttime,
                        Endtime,
                        Flistid,
                        Fuid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSeparateOperationDetail(System.DateTime Starttime, System.DateTime Endtime, string Flistid, string Fuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSeparateOperationDetail", new object[] {
                        Starttime,
                        Endtime,
                        Flistid,
                        Fuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSeparateOperationDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeparateOperationDetailAsync(System.DateTime Starttime, System.DateTime Endtime, string Flistid, string Fuid) {
            this.GetSeparateOperationDetailAsync(Starttime, Endtime, Flistid, Fuid, null);
        }
        
        /// <remarks/>
        public void GetSeparateOperationDetailAsync(System.DateTime Starttime, System.DateTime Endtime, string Flistid, string Fuid, object userState) {
            if ((this.GetSeparateOperationDetailOperationCompleted == null)) {
                this.GetSeparateOperationDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeparateOperationDetailOperationCompleted);
            }
            this.InvokeAsync("GetSeparateOperationDetail", new object[] {
                        Starttime,
                        Endtime,
                        Flistid,
                        Fuid}, this.GetSeparateOperationDetailOperationCompleted, userState);
        }
        
        private void OnGetSeparateOperationDetailOperationCompleted(object arg) {
            if ((this.GetSeparateOperationDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeparateOperationDetailCompleted(this, new GetSeparateOperationDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSeparateListForFlistid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeparateListForFlistid(string Flistid, int start, int max) {
            object[] results = this.Invoke("GetSeparateListForFlistid", new object[] {
                        Flistid,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSeparateListForFlistid(string Flistid, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSeparateListForFlistid", new object[] {
                        Flistid,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSeparateListForFlistid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeparateListForFlistidAsync(string Flistid, int start, int max) {
            this.GetSeparateListForFlistidAsync(Flistid, start, max, null);
        }
        
        /// <remarks/>
        public void GetSeparateListForFlistidAsync(string Flistid, int start, int max, object userState) {
            if ((this.GetSeparateListForFlistidOperationCompleted == null)) {
                this.GetSeparateListForFlistidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeparateListForFlistidOperationCompleted);
            }
            this.InvokeAsync("GetSeparateListForFlistid", new object[] {
                        Flistid,
                        start,
                        max}, this.GetSeparateListForFlistidOperationCompleted, userState);
        }
        
        private void OnGetSeparateListForFlistidOperationCompleted(object arg) {
            if ((this.GetSeparateListForFlistidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeparateListForFlistidCompleted(this, new GetSeparateListForFlistidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSeparateListForFspid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeparateListForFspid(string Fspid, System.DateTime BeginDate, System.DateTime EndDate, int start, int max) {
            object[] results = this.Invoke("GetSeparateListForFspid", new object[] {
                        Fspid,
                        BeginDate,
                        EndDate,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSeparateListForFspid(string Fspid, System.DateTime BeginDate, System.DateTime EndDate, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSeparateListForFspid", new object[] {
                        Fspid,
                        BeginDate,
                        EndDate,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSeparateListForFspid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeparateListForFspidAsync(string Fspid, System.DateTime BeginDate, System.DateTime EndDate, int start, int max) {
            this.GetSeparateListForFspidAsync(Fspid, BeginDate, EndDate, start, max, null);
        }
        
        /// <remarks/>
        public void GetSeparateListForFspidAsync(string Fspid, System.DateTime BeginDate, System.DateTime EndDate, int start, int max, object userState) {
            if ((this.GetSeparateListForFspidOperationCompleted == null)) {
                this.GetSeparateListForFspidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeparateListForFspidOperationCompleted);
            }
            this.InvokeAsync("GetSeparateListForFspid", new object[] {
                        Fspid,
                        BeginDate,
                        EndDate,
                        start,
                        max}, this.GetSeparateListForFspidOperationCompleted, userState);
        }
        
        private void OnGetSeparateListForFspidOperationCompleted(object arg) {
            if ((this.GetSeparateListForFspidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeparateListForFspidCompleted(this, new GetSeparateListForFspidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryFeeDataList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryFeeDataList(string ftype, string istate, string ipaystate, string listid, int start, int max) {
            object[] results = this.Invoke("QueryFeeDataList", new object[] {
                        ftype,
                        istate,
                        ipaystate,
                        listid,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryFeeDataList(string ftype, string istate, string ipaystate, string listid, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryFeeDataList", new object[] {
                        ftype,
                        istate,
                        ipaystate,
                        listid,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryFeeDataList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryFeeDataListAsync(string ftype, string istate, string ipaystate, string listid, int start, int max) {
            this.QueryFeeDataListAsync(ftype, istate, ipaystate, listid, start, max, null);
        }
        
        /// <remarks/>
        public void QueryFeeDataListAsync(string ftype, string istate, string ipaystate, string listid, int start, int max, object userState) {
            if ((this.QueryFeeDataListOperationCompleted == null)) {
                this.QueryFeeDataListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryFeeDataListOperationCompleted);
            }
            this.InvokeAsync("QueryFeeDataList", new object[] {
                        ftype,
                        istate,
                        ipaystate,
                        listid,
                        start,
                        max}, this.QueryFeeDataListOperationCompleted, userState);
        }
        
        private void OnQueryFeeDataListOperationCompleted(object arg) {
            if ((this.QueryFeeDataListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryFeeDataListCompleted(this, new QueryFeeDataListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayBusinessList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayBusinessList(string CompanyName, string CompanyID, string URL, string WebName) {
            object[] results = this.Invoke("GetPayBusinessList", new object[] {
                        CompanyName,
                        CompanyID,
                        URL,
                        WebName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayBusinessList(string CompanyName, string CompanyID, string URL, string WebName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayBusinessList", new object[] {
                        CompanyName,
                        CompanyID,
                        URL,
                        WebName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayBusinessList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayBusinessListAsync(string CompanyName, string CompanyID, string URL, string WebName) {
            this.GetPayBusinessListAsync(CompanyName, CompanyID, URL, WebName, null);
        }
        
        /// <remarks/>
        public void GetPayBusinessListAsync(string CompanyName, string CompanyID, string URL, string WebName, object userState) {
            if ((this.GetPayBusinessListOperationCompleted == null)) {
                this.GetPayBusinessListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayBusinessListOperationCompleted);
            }
            this.InvokeAsync("GetPayBusinessList", new object[] {
                        CompanyName,
                        CompanyID,
                        URL,
                        WebName}, this.GetPayBusinessListOperationCompleted, userState);
        }
        
        private void OnGetPayBusinessListOperationCompleted(object arg) {
            if ((this.GetPayBusinessListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayBusinessListCompleted(this, new GetPayBusinessListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMerchantMidUid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetMerchantMidUid(string spid, out string midUid, out string msg) {
            object[] results = this.Invoke("GetMerchantMidUid", new object[] {
                        spid});
            midUid = ((string)(results[1]));
            msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMerchantMidUid(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMerchantMidUid", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetMerchantMidUid(System.IAsyncResult asyncResult, out string midUid, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            midUid = ((string)(results[1]));
            msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetMerchantMidUidAsync(string spid) {
            this.GetMerchantMidUidAsync(spid, null);
        }
        
        /// <remarks/>
        public void GetMerchantMidUidAsync(string spid, object userState) {
            if ((this.GetMerchantMidUidOperationCompleted == null)) {
                this.GetMerchantMidUidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMerchantMidUidOperationCompleted);
            }
            this.InvokeAsync("GetMerchantMidUid", new object[] {
                        spid}, this.GetMerchantMidUidOperationCompleted, userState);
        }
        
        private void OnGetMerchantMidUidOperationCompleted(object arg) {
            if ((this.GetMerchantMidUidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMerchantMidUidCompleted(this, new GetMerchantMidUidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetInsureAccount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInsureAccount(string spid, string insureUIn, out string msg) {
            object[] results = this.Invoke("GetInsureAccount", new object[] {
                        spid,
                        insureUIn});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInsureAccount(string spid, string insureUIn, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInsureAccount", new object[] {
                        spid,
                        insureUIn}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetInsureAccount(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInsureAccountAsync(string spid, string insureUIn) {
            this.GetInsureAccountAsync(spid, insureUIn, null);
        }
        
        /// <remarks/>
        public void GetInsureAccountAsync(string spid, string insureUIn, object userState) {
            if ((this.GetInsureAccountOperationCompleted == null)) {
                this.GetInsureAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInsureAccountOperationCompleted);
            }
            this.InvokeAsync("GetInsureAccount", new object[] {
                        spid,
                        insureUIn}, this.GetInsureAccountOperationCompleted, userState);
        }
        
        private void OnGetInsureAccountOperationCompleted(object arg) {
            if ((this.GetInsureAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInsureAccountCompleted(this, new GetInsureAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QuerySpidOrSpalias", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QuerySpidOrSpalias(string spid, string alias, string qqid) {
            object[] results = this.Invoke("QuerySpidOrSpalias", new object[] {
                        spid,
                        alias,
                        qqid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQuerySpidOrSpalias(string spid, string alias, string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QuerySpidOrSpalias", new object[] {
                        spid,
                        alias,
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndQuerySpidOrSpalias(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySpidOrSpaliasAsync(string spid, string alias, string qqid) {
            this.QuerySpidOrSpaliasAsync(spid, alias, qqid, null);
        }
        
        /// <remarks/>
        public void QuerySpidOrSpaliasAsync(string spid, string alias, string qqid, object userState) {
            if ((this.QuerySpidOrSpaliasOperationCompleted == null)) {
                this.QuerySpidOrSpaliasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySpidOrSpaliasOperationCompleted);
            }
            this.InvokeAsync("QuerySpidOrSpalias", new object[] {
                        spid,
                        alias,
                        qqid}, this.QuerySpidOrSpaliasOperationCompleted, userState);
        }
        
        private void OnQuerySpidOrSpaliasOperationCompleted(object arg) {
            if ((this.QuerySpidOrSpaliasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySpidOrSpaliasCompleted(this, new QuerySpidOrSpaliasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/PaiPaiBMDList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PaiPaiBMDList(string qq) {
            object[] results = this.Invoke("PaiPaiBMDList", new object[] {
                        qq});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPaiPaiBMDList(string qq, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PaiPaiBMDList", new object[] {
                        qq}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndPaiPaiBMDList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PaiPaiBMDListAsync(string qq) {
            this.PaiPaiBMDListAsync(qq, null);
        }
        
        /// <remarks/>
        public void PaiPaiBMDListAsync(string qq, object userState) {
            if ((this.PaiPaiBMDListOperationCompleted == null)) {
                this.PaiPaiBMDListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPaiPaiBMDListOperationCompleted);
            }
            this.InvokeAsync("PaiPaiBMDList", new object[] {
                        qq}, this.PaiPaiBMDListOperationCompleted, userState);
        }
        
        private void OnPaiPaiBMDListOperationCompleted(object arg) {
            if ((this.PaiPaiBMDListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PaiPaiBMDListCompleted(this, new PaiPaiBMDListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayBusinessInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayBusinessInfo(string KeyID) {
            object[] results = this.Invoke("GetPayBusinessInfo", new object[] {
                        KeyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayBusinessInfo(string KeyID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayBusinessInfo", new object[] {
                        KeyID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayBusinessInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayBusinessInfoAsync(string KeyID) {
            this.GetPayBusinessInfoAsync(KeyID, null);
        }
        
        /// <remarks/>
        public void GetPayBusinessInfoAsync(string KeyID, object userState) {
            if ((this.GetPayBusinessInfoOperationCompleted == null)) {
                this.GetPayBusinessInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayBusinessInfoOperationCompleted);
            }
            this.InvokeAsync("GetPayBusinessInfo", new object[] {
                        KeyID}, this.GetPayBusinessInfoOperationCompleted, userState);
        }
        
        private void OnGetPayBusinessInfoOperationCompleted(object arg) {
            if ((this.GetPayBusinessInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayBusinessInfoCompleted(this, new GetPayBusinessInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayBusinessInfoList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayBusinessInfoList(string Fspid) {
            object[] results = this.Invoke("GetPayBusinessInfoList", new object[] {
                        Fspid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayBusinessInfoList(string Fspid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayBusinessInfoList", new object[] {
                        Fspid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayBusinessInfoList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayBusinessInfoListAsync(string Fspid) {
            this.GetPayBusinessInfoListAsync(Fspid, null);
        }
        
        /// <remarks/>
        public void GetPayBusinessInfoListAsync(string Fspid, object userState) {
            if ((this.GetPayBusinessInfoListOperationCompleted == null)) {
                this.GetPayBusinessInfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayBusinessInfoListOperationCompleted);
            }
            this.InvokeAsync("GetPayBusinessInfoList", new object[] {
                        Fspid}, this.GetPayBusinessInfoListOperationCompleted, userState);
        }
        
        private void OnGetPayBusinessInfoListOperationCompleted(object arg) {
            if ((this.GetPayBusinessInfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayBusinessInfoListCompleted(this, new GetPayBusinessInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayBusinessElseInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayBusinessElseInfo(string KeyID) {
            object[] results = this.Invoke("GetPayBusinessElseInfo", new object[] {
                        KeyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayBusinessElseInfo(string KeyID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayBusinessElseInfo", new object[] {
                        KeyID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayBusinessElseInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayBusinessElseInfoAsync(string KeyID) {
            this.GetPayBusinessElseInfoAsync(KeyID, null);
        }
        
        /// <remarks/>
        public void GetPayBusinessElseInfoAsync(string KeyID, object userState) {
            if ((this.GetPayBusinessElseInfoOperationCompleted == null)) {
                this.GetPayBusinessElseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayBusinessElseInfoOperationCompleted);
            }
            this.InvokeAsync("GetPayBusinessElseInfo", new object[] {
                        KeyID}, this.GetPayBusinessElseInfoOperationCompleted, userState);
        }
        
        private void OnGetPayBusinessElseInfoOperationCompleted(object arg) {
            if ((this.GetPayBusinessElseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayBusinessElseInfoCompleted(this, new GetPayBusinessElseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ModifyPayBusinessInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyPayBusinessInfo(string TableFlag, string KeyID, string ContactUser, string ContactPhone, string ContactMobile, string ContactQQ, string ContactEmail, string CompanyAddress, string Postalcode) {
            this.Invoke("ModifyPayBusinessInfo", new object[] {
                        TableFlag,
                        KeyID,
                        ContactUser,
                        ContactPhone,
                        ContactMobile,
                        ContactQQ,
                        ContactEmail,
                        CompanyAddress,
                        Postalcode});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginModifyPayBusinessInfo(string TableFlag, string KeyID, string ContactUser, string ContactPhone, string ContactMobile, string ContactQQ, string ContactEmail, string CompanyAddress, string Postalcode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ModifyPayBusinessInfo", new object[] {
                        TableFlag,
                        KeyID,
                        ContactUser,
                        ContactPhone,
                        ContactMobile,
                        ContactQQ,
                        ContactEmail,
                        CompanyAddress,
                        Postalcode}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndModifyPayBusinessInfo(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ModifyPayBusinessInfoAsync(string TableFlag, string KeyID, string ContactUser, string ContactPhone, string ContactMobile, string ContactQQ, string ContactEmail, string CompanyAddress, string Postalcode) {
            this.ModifyPayBusinessInfoAsync(TableFlag, KeyID, ContactUser, ContactPhone, ContactMobile, ContactQQ, ContactEmail, CompanyAddress, Postalcode, null);
        }
        
        /// <remarks/>
        public void ModifyPayBusinessInfoAsync(string TableFlag, string KeyID, string ContactUser, string ContactPhone, string ContactMobile, string ContactQQ, string ContactEmail, string CompanyAddress, string Postalcode, object userState) {
            if ((this.ModifyPayBusinessInfoOperationCompleted == null)) {
                this.ModifyPayBusinessInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyPayBusinessInfoOperationCompleted);
            }
            this.InvokeAsync("ModifyPayBusinessInfo", new object[] {
                        TableFlag,
                        KeyID,
                        ContactUser,
                        ContactPhone,
                        ContactMobile,
                        ContactQQ,
                        ContactEmail,
                        CompanyAddress,
                        Postalcode}, this.ModifyPayBusinessInfoOperationCompleted, userState);
        }
        
        private void OnModifyPayBusinessInfoOperationCompleted(object arg) {
            if ((this.ModifyPayBusinessInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyPayBusinessInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAgencyBusinessList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAgencyBusinessList(string Fqqid, string Fdomain, int offset, int qcount) {
            object[] results = this.Invoke("GetAgencyBusinessList", new object[] {
                        Fqqid,
                        Fdomain,
                        offset,
                        qcount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAgencyBusinessList(string Fqqid, string Fdomain, int offset, int qcount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAgencyBusinessList", new object[] {
                        Fqqid,
                        Fdomain,
                        offset,
                        qcount}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAgencyBusinessList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgencyBusinessListAsync(string Fqqid, string Fdomain, int offset, int qcount) {
            this.GetAgencyBusinessListAsync(Fqqid, Fdomain, offset, qcount, null);
        }
        
        /// <remarks/>
        public void GetAgencyBusinessListAsync(string Fqqid, string Fdomain, int offset, int qcount, object userState) {
            if ((this.GetAgencyBusinessListOperationCompleted == null)) {
                this.GetAgencyBusinessListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgencyBusinessListOperationCompleted);
            }
            this.InvokeAsync("GetAgencyBusinessList", new object[] {
                        Fqqid,
                        Fdomain,
                        offset,
                        qcount}, this.GetAgencyBusinessListOperationCompleted, userState);
        }
        
        private void OnGetAgencyBusinessListOperationCompleted(object arg) {
            if ((this.GetAgencyBusinessListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgencyBusinessListCompleted(this, new GetAgencyBusinessListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAgencyBusinessInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAgencyBusinessInfo(string Fid) {
            object[] results = this.Invoke("GetAgencyBusinessInfo", new object[] {
                        Fid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAgencyBusinessInfo(string Fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAgencyBusinessInfo", new object[] {
                        Fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAgencyBusinessInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgencyBusinessInfoAsync(string Fid) {
            this.GetAgencyBusinessInfoAsync(Fid, null);
        }
        
        /// <remarks/>
        public void GetAgencyBusinessInfoAsync(string Fid, object userState) {
            if ((this.GetAgencyBusinessInfoOperationCompleted == null)) {
                this.GetAgencyBusinessInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgencyBusinessInfoOperationCompleted);
            }
            this.InvokeAsync("GetAgencyBusinessInfo", new object[] {
                        Fid}, this.GetAgencyBusinessInfoOperationCompleted, userState);
        }
        
        private void OnGetAgencyBusinessInfoOperationCompleted(object arg) {
            if ((this.GetAgencyBusinessInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgencyBusinessInfoCompleted(this, new GetAgencyBusinessInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryAgencyBySpid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryAgencyBySpid(string spid) {
            object[] results = this.Invoke("QueryAgencyBySpid", new object[] {
                        spid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryAgencyBySpid(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryAgencyBySpid", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryAgencyBySpid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAgencyBySpidAsync(string spid) {
            this.QueryAgencyBySpidAsync(spid, null);
        }
        
        /// <remarks/>
        public void QueryAgencyBySpidAsync(string spid, object userState) {
            if ((this.QueryAgencyBySpidOperationCompleted == null)) {
                this.QueryAgencyBySpidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAgencyBySpidOperationCompleted);
            }
            this.InvokeAsync("QueryAgencyBySpid", new object[] {
                        spid}, this.QueryAgencyBySpidOperationCompleted, userState);
        }
        
        private void OnQueryAgencyBySpidOperationCompleted(object arg) {
            if ((this.QueryAgencyBySpidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAgencyBySpidCompleted(this, new QueryAgencyBySpidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryAgencyInfoById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryAgencyInfoById(string fid) {
            object[] results = this.Invoke("QueryAgencyInfoById", new object[] {
                        fid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryAgencyInfoById(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryAgencyInfoById", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryAgencyInfoById(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAgencyInfoByIdAsync(string fid) {
            this.QueryAgencyInfoByIdAsync(fid, null);
        }
        
        /// <remarks/>
        public void QueryAgencyInfoByIdAsync(string fid, object userState) {
            if ((this.QueryAgencyInfoByIdOperationCompleted == null)) {
                this.QueryAgencyInfoByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAgencyInfoByIdOperationCompleted);
            }
            this.InvokeAsync("QueryAgencyInfoById", new object[] {
                        fid}, this.QueryAgencyInfoByIdOperationCompleted, userState);
        }
        
        private void OnQueryAgencyInfoByIdOperationCompleted(object arg) {
            if ((this.QueryAgencyInfoByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAgencyInfoByIdCompleted(this, new QueryAgencyInfoByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPickList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPickList(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype, string sorttype, string cashtype, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetPickList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        idtype,
                        sorttype,
                        cashtype,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPickList(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype, string sorttype, string cashtype, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPickList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        idtype,
                        sorttype,
                        cashtype,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPickList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPickListAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype, string sorttype, string cashtype, int iPageStart, int iPageMax) {
            this.GetPickListAsync(u_ID, u_BeginTime, u_EndTime, fstate, fnum, banktype, idtype, sorttype, cashtype, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetPickListAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype, string sorttype, string cashtype, int iPageStart, int iPageMax, object userState) {
            if ((this.GetPickListOperationCompleted == null)) {
                this.GetPickListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPickListOperationCompleted);
            }
            this.InvokeAsync("GetPickList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        idtype,
                        sorttype,
                        cashtype,
                        iPageStart,
                        iPageMax}, this.GetPickListOperationCompleted, userState);
        }
        
        private void OnGetPickListOperationCompleted(object arg) {
            if ((this.GetPickListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPickListCompleted(this, new GetPickListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPickListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPickListDetail(string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag) {
            object[] results = this.Invoke("GetPickListDetail", new object[] {
                        listid,
                        u_BeginTime,
                        u_EndTime,
                        oldflag});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPickListDetail(string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPickListDetail", new object[] {
                        listid,
                        u_BeginTime,
                        u_EndTime,
                        oldflag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPickListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPickListDetailAsync(string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag) {
            this.GetPickListDetailAsync(listid, u_BeginTime, u_EndTime, oldflag, null);
        }
        
        /// <remarks/>
        public void GetPickListDetailAsync(string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag, object userState) {
            if ((this.GetPickListDetailOperationCompleted == null)) {
                this.GetPickListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPickListDetailOperationCompleted);
            }
            this.InvokeAsync("GetPickListDetail", new object[] {
                        listid,
                        u_BeginTime,
                        u_EndTime,
                        oldflag}, this.GetPickListDetailOperationCompleted, userState);
        }
        
        private void OnGetPickListDetailOperationCompleted(object arg) {
            if ((this.GetPickListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPickListDetailCompleted(this, new GetPickListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetComplainBussList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComplainBussList(string bussId, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetComplainBussList", new object[] {
                        bussId,
                        u_BeginTime,
                        u_EndTime,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetComplainBussList(string bussId, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetComplainBussList", new object[] {
                        bussId,
                        u_BeginTime,
                        u_EndTime,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetComplainBussList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComplainBussListAsync(string bussId, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax) {
            this.GetComplainBussListAsync(bussId, u_BeginTime, u_EndTime, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetComplainBussListAsync(string bussId, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax, object userState) {
            if ((this.GetComplainBussListOperationCompleted == null)) {
                this.GetComplainBussListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComplainBussListOperationCompleted);
            }
            this.InvokeAsync("GetComplainBussList", new object[] {
                        bussId,
                        u_BeginTime,
                        u_EndTime,
                        iPageStart,
                        iPageMax}, this.GetComplainBussListOperationCompleted, userState);
        }
        
        private void OnGetComplainBussListOperationCompleted(object arg) {
            if ((this.GetComplainBussListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComplainBussListCompleted(this, new GetComplainBussListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetComplainBussCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetComplainBussCount(string bussId, System.DateTime u_BeginTime, System.DateTime u_EndTime) {
            object[] results = this.Invoke("GetComplainBussCount", new object[] {
                        bussId,
                        u_BeginTime,
                        u_EndTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetComplainBussCount(string bussId, System.DateTime u_BeginTime, System.DateTime u_EndTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetComplainBussCount", new object[] {
                        bussId,
                        u_BeginTime,
                        u_EndTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetComplainBussCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetComplainBussCountAsync(string bussId, System.DateTime u_BeginTime, System.DateTime u_EndTime) {
            this.GetComplainBussCountAsync(bussId, u_BeginTime, u_EndTime, null);
        }
        
        /// <remarks/>
        public void GetComplainBussCountAsync(string bussId, System.DateTime u_BeginTime, System.DateTime u_EndTime, object userState) {
            if ((this.GetComplainBussCountOperationCompleted == null)) {
                this.GetComplainBussCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComplainBussCountOperationCompleted);
            }
            this.InvokeAsync("GetComplainBussCount", new object[] {
                        bussId,
                        u_BeginTime,
                        u_EndTime}, this.GetComplainBussCountOperationCompleted, userState);
        }
        
        private void OnGetComplainBussCountOperationCompleted(object arg) {
            if ((this.GetComplainBussCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComplainBussCountCompleted(this, new GetComplainBussCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/AddComplainBuss", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddComplainBuss(ComplainBussClass cbs, out string msg) {
            object[] results = this.Invoke("AddComplainBuss", new object[] {
                        cbs});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddComplainBuss(ComplainBussClass cbs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddComplainBuss", new object[] {
                        cbs}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAddComplainBuss(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddComplainBussAsync(ComplainBussClass cbs) {
            this.AddComplainBussAsync(cbs, null);
        }
        
        /// <remarks/>
        public void AddComplainBussAsync(ComplainBussClass cbs, object userState) {
            if ((this.AddComplainBussOperationCompleted == null)) {
                this.AddComplainBussOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddComplainBussOperationCompleted);
            }
            this.InvokeAsync("AddComplainBuss", new object[] {
                        cbs}, this.AddComplainBussOperationCompleted, userState);
        }
        
        private void OnAddComplainBussOperationCompleted(object arg) {
            if ((this.AddComplainBussCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddComplainBussCompleted(this, new AddComplainBussCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ChangeComplainBuss", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeComplainBuss(ComplainBussClass cbs, out string msg) {
            object[] results = this.Invoke("ChangeComplainBuss", new object[] {
                        cbs});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeComplainBuss(ComplainBussClass cbs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeComplainBuss", new object[] {
                        cbs}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndChangeComplainBuss(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeComplainBussAsync(ComplainBussClass cbs) {
            this.ChangeComplainBussAsync(cbs, null);
        }
        
        /// <remarks/>
        public void ChangeComplainBussAsync(ComplainBussClass cbs, object userState) {
            if ((this.ChangeComplainBussOperationCompleted == null)) {
                this.ChangeComplainBussOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeComplainBussOperationCompleted);
            }
            this.InvokeAsync("ChangeComplainBuss", new object[] {
                        cbs}, this.ChangeComplainBussOperationCompleted, userState);
        }
        
        private void OnChangeComplainBussOperationCompleted(object arg) {
            if ((this.ChangeComplainBussCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeComplainBussCompleted(this, new ChangeComplainBussCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetComplainBussDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ComplainBussClass GetComplainBussDetail(string bussid, out string msg) {
            object[] results = this.Invoke("GetComplainBussDetail", new object[] {
                        bussid});
            msg = ((string)(results[1]));
            return ((ComplainBussClass)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetComplainBussDetail(string bussid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetComplainBussDetail", new object[] {
                        bussid}, callback, asyncState);
        }
        
        /// <remarks/>
        public ComplainBussClass EndGetComplainBussDetail(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((ComplainBussClass)(results[0]));
        }
        
        /// <remarks/>
        public void GetComplainBussDetailAsync(string bussid) {
            this.GetComplainBussDetailAsync(bussid, null);
        }
        
        /// <remarks/>
        public void GetComplainBussDetailAsync(string bussid, object userState) {
            if ((this.GetComplainBussDetailOperationCompleted == null)) {
                this.GetComplainBussDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComplainBussDetailOperationCompleted);
            }
            this.InvokeAsync("GetComplainBussDetail", new object[] {
                        bussid}, this.GetComplainBussDetailOperationCompleted, userState);
        }
        
        private void OnGetComplainBussDetailOperationCompleted(object arg) {
            if ((this.GetComplainBussDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComplainBussDetailCompleted(this, new GetComplainBussDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DelComplainBuss", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelComplainBuss(string bussid) {
            this.Invoke("DelComplainBuss", new object[] {
                        bussid});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDelComplainBuss(string bussid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DelComplainBuss", new object[] {
                        bussid}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDelComplainBuss(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DelComplainBussAsync(string bussid) {
            this.DelComplainBussAsync(bussid, null);
        }
        
        /// <remarks/>
        public void DelComplainBussAsync(string bussid, object userState) {
            if ((this.DelComplainBussOperationCompleted == null)) {
                this.DelComplainBussOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelComplainBussOperationCompleted);
            }
            this.InvokeAsync("DelComplainBuss", new object[] {
                        bussid}, this.DelComplainBussOperationCompleted, userState);
        }
        
        private void OnDelComplainBussOperationCompleted(object arg) {
            if ((this.DelComplainBussCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelComplainBussCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserComplainList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserComplainList(string bussId, string cft_orderid, int comptype, int compstatus, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetUserComplainList", new object[] {
                        bussId,
                        cft_orderid,
                        comptype,
                        compstatus,
                        u_BeginTime,
                        u_EndTime,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserComplainList(string bussId, string cft_orderid, int comptype, int compstatus, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserComplainList", new object[] {
                        bussId,
                        cft_orderid,
                        comptype,
                        compstatus,
                        u_BeginTime,
                        u_EndTime,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserComplainList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserComplainListAsync(string bussId, string cft_orderid, int comptype, int compstatus, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax) {
            this.GetUserComplainListAsync(bussId, cft_orderid, comptype, compstatus, u_BeginTime, u_EndTime, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetUserComplainListAsync(string bussId, string cft_orderid, int comptype, int compstatus, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax, object userState) {
            if ((this.GetUserComplainListOperationCompleted == null)) {
                this.GetUserComplainListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserComplainListOperationCompleted);
            }
            this.InvokeAsync("GetUserComplainList", new object[] {
                        bussId,
                        cft_orderid,
                        comptype,
                        compstatus,
                        u_BeginTime,
                        u_EndTime,
                        iPageStart,
                        iPageMax}, this.GetUserComplainListOperationCompleted, userState);
        }
        
        private void OnGetUserComplainListOperationCompleted(object arg) {
            if ((this.GetUserComplainListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserComplainListCompleted(this, new GetUserComplainListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserComplainCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserComplainCount(string bussId, string cft_orderid, int comptype, int compstatus, System.DateTime u_BeginTime, System.DateTime u_EndTime) {
            object[] results = this.Invoke("GetUserComplainCount", new object[] {
                        bussId,
                        cft_orderid,
                        comptype,
                        compstatus,
                        u_BeginTime,
                        u_EndTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserComplainCount(string bussId, string cft_orderid, int comptype, int compstatus, System.DateTime u_BeginTime, System.DateTime u_EndTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserComplainCount", new object[] {
                        bussId,
                        cft_orderid,
                        comptype,
                        compstatus,
                        u_BeginTime,
                        u_EndTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetUserComplainCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserComplainCountAsync(string bussId, string cft_orderid, int comptype, int compstatus, System.DateTime u_BeginTime, System.DateTime u_EndTime) {
            this.GetUserComplainCountAsync(bussId, cft_orderid, comptype, compstatus, u_BeginTime, u_EndTime, null);
        }
        
        /// <remarks/>
        public void GetUserComplainCountAsync(string bussId, string cft_orderid, int comptype, int compstatus, System.DateTime u_BeginTime, System.DateTime u_EndTime, object userState) {
            if ((this.GetUserComplainCountOperationCompleted == null)) {
                this.GetUserComplainCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserComplainCountOperationCompleted);
            }
            this.InvokeAsync("GetUserComplainCount", new object[] {
                        bussId,
                        cft_orderid,
                        comptype,
                        compstatus,
                        u_BeginTime,
                        u_EndTime}, this.GetUserComplainCountOperationCompleted, userState);
        }
        
        private void OnGetUserComplainCountOperationCompleted(object arg) {
            if ((this.GetUserComplainCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserComplainCountCompleted(this, new GetUserComplainCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/AddUserComplain", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddUserComplain(UserComplainClass ucc, out string msg) {
            object[] results = this.Invoke("AddUserComplain", new object[] {
                        ucc});
            msg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddUserComplain(UserComplainClass ucc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddUserComplain", new object[] {
                        ucc}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddUserComplain(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserComplainAsync(UserComplainClass ucc) {
            this.AddUserComplainAsync(ucc, null);
        }
        
        /// <remarks/>
        public void AddUserComplainAsync(UserComplainClass ucc, object userState) {
            if ((this.AddUserComplainOperationCompleted == null)) {
                this.AddUserComplainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserComplainOperationCompleted);
            }
            this.InvokeAsync("AddUserComplain", new object[] {
                        ucc}, this.AddUserComplainOperationCompleted, userState);
        }
        
        private void OnAddUserComplainOperationCompleted(object arg) {
            if ((this.AddUserComplainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserComplainCompleted(this, new AddUserComplainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ChangeUserComplain", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeUserComplain(UserComplainClass ucc, out string msg) {
            object[] results = this.Invoke("ChangeUserComplain", new object[] {
                        ucc});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeUserComplain(UserComplainClass ucc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeUserComplain", new object[] {
                        ucc}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndChangeUserComplain(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserComplainAsync(UserComplainClass ucc) {
            this.ChangeUserComplainAsync(ucc, null);
        }
        
        /// <remarks/>
        public void ChangeUserComplainAsync(UserComplainClass ucc, object userState) {
            if ((this.ChangeUserComplainOperationCompleted == null)) {
                this.ChangeUserComplainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserComplainOperationCompleted);
            }
            this.InvokeAsync("ChangeUserComplain", new object[] {
                        ucc}, this.ChangeUserComplainOperationCompleted, userState);
        }
        
        private void OnChangeUserComplainOperationCompleted(object arg) {
            if ((this.ChangeUserComplainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserComplainCompleted(this, new ChangeUserComplainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserComplainDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserComplainClass GetUserComplainDetail(string listid, out string msg) {
            object[] results = this.Invoke("GetUserComplainDetail", new object[] {
                        listid});
            msg = ((string)(results[1]));
            return ((UserComplainClass)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserComplainDetail(string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserComplainDetail", new object[] {
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserComplainClass EndGetUserComplainDetail(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((UserComplainClass)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserComplainDetailAsync(string listid) {
            this.GetUserComplainDetailAsync(listid, null);
        }
        
        /// <remarks/>
        public void GetUserComplainDetailAsync(string listid, object userState) {
            if ((this.GetUserComplainDetailOperationCompleted == null)) {
                this.GetUserComplainDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserComplainDetailOperationCompleted);
            }
            this.InvokeAsync("GetUserComplainDetail", new object[] {
                        listid}, this.GetUserComplainDetailOperationCompleted, userState);
        }
        
        private void OnGetUserComplainDetailOperationCompleted(object arg) {
            if ((this.GetUserComplainDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserComplainDetailCompleted(this, new GetUserComplainDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/RemindUserComplain", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemindUserComplain(UserComplainClass ucc, out string msg) {
            object[] results = this.Invoke("RemindUserComplain", new object[] {
                        ucc});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemindUserComplain(UserComplainClass ucc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemindUserComplain", new object[] {
                        ucc}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndRemindUserComplain(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemindUserComplainAsync(UserComplainClass ucc) {
            this.RemindUserComplainAsync(ucc, null);
        }
        
        /// <remarks/>
        public void RemindUserComplainAsync(UserComplainClass ucc, object userState) {
            if ((this.RemindUserComplainOperationCompleted == null)) {
                this.RemindUserComplainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemindUserComplainOperationCompleted);
            }
            this.InvokeAsync("RemindUserComplain", new object[] {
                        ucc}, this.RemindUserComplainOperationCompleted, userState);
        }
        
        private void OnRemindUserComplainOperationCompleted(object arg) {
            if ((this.RemindUserComplainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemindUserComplainCompleted(this, new RemindUserComplainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryRefundInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryRefundInfo(string coding, string orderId, string stime, string etime, int refundType, int refundState, string tradeState, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("QueryRefundInfo", new object[] {
                        coding,
                        orderId,
                        stime,
                        etime,
                        refundType,
                        refundState,
                        tradeState,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryRefundInfo(string coding, string orderId, string stime, string etime, int refundType, int refundState, string tradeState, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryRefundInfo", new object[] {
                        coding,
                        orderId,
                        stime,
                        etime,
                        refundType,
                        refundState,
                        tradeState,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryRefundInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryRefundInfoAsync(string coding, string orderId, string stime, string etime, int refundType, int refundState, string tradeState, int iPageStart, int iPageMax) {
            this.QueryRefundInfoAsync(coding, orderId, stime, etime, refundType, refundState, tradeState, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void QueryRefundInfoAsync(string coding, string orderId, string stime, string etime, int refundType, int refundState, string tradeState, int iPageStart, int iPageMax, object userState) {
            if ((this.QueryRefundInfoOperationCompleted == null)) {
                this.QueryRefundInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRefundInfoOperationCompleted);
            }
            this.InvokeAsync("QueryRefundInfo", new object[] {
                        coding,
                        orderId,
                        stime,
                        etime,
                        refundType,
                        refundState,
                        tradeState,
                        iPageStart,
                        iPageMax}, this.QueryRefundInfoOperationCompleted, userState);
        }
        
        private void OnQueryRefundInfoOperationCompleted(object arg) {
            if ((this.QueryRefundInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRefundInfoCompleted(this, new QueryRefundInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryRefundCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryRefundCount(string coding, string orderId, string stime, string etime, int refundType, int refundState, string tradeState) {
            object[] results = this.Invoke("QueryRefundCount", new object[] {
                        coding,
                        orderId,
                        stime,
                        etime,
                        refundType,
                        refundState,
                        tradeState});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryRefundCount(string coding, string orderId, string stime, string etime, int refundType, int refundState, string tradeState, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryRefundCount", new object[] {
                        coding,
                        orderId,
                        stime,
                        etime,
                        refundType,
                        refundState,
                        tradeState}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndQueryRefundCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryRefundCountAsync(string coding, string orderId, string stime, string etime, int refundType, int refundState, string tradeState) {
            this.QueryRefundCountAsync(coding, orderId, stime, etime, refundType, refundState, tradeState, null);
        }
        
        /// <remarks/>
        public void QueryRefundCountAsync(string coding, string orderId, string stime, string etime, int refundType, int refundState, string tradeState, object userState) {
            if ((this.QueryRefundCountOperationCompleted == null)) {
                this.QueryRefundCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRefundCountOperationCompleted);
            }
            this.InvokeAsync("QueryRefundCount", new object[] {
                        coding,
                        orderId,
                        stime,
                        etime,
                        refundType,
                        refundState,
                        tradeState}, this.QueryRefundCountOperationCompleted, userState);
        }
        
        private void OnQueryRefundCountOperationCompleted(object arg) {
            if ((this.QueryRefundCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRefundCountCompleted(this, new QueryRefundCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/AddRefundInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddRefundInfo(RefundInfoClass ric) {
            this.Invoke("AddRefundInfo", new object[] {
                        ric});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddRefundInfo(RefundInfoClass ric, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddRefundInfo", new object[] {
                        ric}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndAddRefundInfo(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void AddRefundInfoAsync(RefundInfoClass ric) {
            this.AddRefundInfoAsync(ric, null);
        }
        
        /// <remarks/>
        public void AddRefundInfoAsync(RefundInfoClass ric, object userState) {
            if ((this.AddRefundInfoOperationCompleted == null)) {
                this.AddRefundInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRefundInfoOperationCompleted);
            }
            this.InvokeAsync("AddRefundInfo", new object[] {
                        ric}, this.AddRefundInfoOperationCompleted, userState);
        }
        
        private void OnAddRefundInfoOperationCompleted(object arg) {
            if ((this.AddRefundInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRefundInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ChangeRefundInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeRefundInfo(RefundInfoClass ric) {
            this.Invoke("ChangeRefundInfo", new object[] {
                        ric});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeRefundInfo(RefundInfoClass ric, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeRefundInfo", new object[] {
                        ric}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndChangeRefundInfo(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ChangeRefundInfoAsync(RefundInfoClass ric) {
            this.ChangeRefundInfoAsync(ric, null);
        }
        
        /// <remarks/>
        public void ChangeRefundInfoAsync(RefundInfoClass ric, object userState) {
            if ((this.ChangeRefundInfoOperationCompleted == null)) {
                this.ChangeRefundInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeRefundInfoOperationCompleted);
            }
            this.InvokeAsync("ChangeRefundInfo", new object[] {
                        ric}, this.ChangeRefundInfoOperationCompleted, userState);
        }
        
        private void OnChangeRefundInfoOperationCompleted(object arg) {
            if ((this.ChangeRefundInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeRefundInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DelRefundInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelRefundInfo(string fid) {
            this.Invoke("DelRefundInfo", new object[] {
                        fid});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDelRefundInfo(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DelRefundInfo", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDelRefundInfo(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DelRefundInfoAsync(string fid) {
            this.DelRefundInfoAsync(fid, null);
        }
        
        /// <remarks/>
        public void DelRefundInfoAsync(string fid, object userState) {
            if ((this.DelRefundInfoOperationCompleted == null)) {
                this.DelRefundInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelRefundInfoOperationCompleted);
            }
            this.InvokeAsync("DelRefundInfo", new object[] {
                        fid}, this.DelRefundInfoOperationCompleted, userState);
        }
        
        private void OnDelRefundInfoOperationCompleted(object arg) {
            if ((this.DelRefundInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelRefundInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RefundInfoClass GetRefundDetail(string fid) {
            object[] results = this.Invoke("GetRefundDetail", new object[] {
                        fid});
            return ((RefundInfoClass)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundDetail(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefundDetail", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public RefundInfoClass EndGetRefundDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RefundInfoClass)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundDetailAsync(string fid) {
            this.GetRefundDetailAsync(fid, null);
        }
        
        /// <remarks/>
        public void GetRefundDetailAsync(string fid, object userState) {
            if ((this.GetRefundDetailOperationCompleted == null)) {
                this.GetRefundDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundDetailOperationCompleted);
            }
            this.InvokeAsync("GetRefundDetail", new object[] {
                        fid}, this.GetRefundDetailOperationCompleted, userState);
        }
        
        private void OnGetRefundDetailOperationCompleted(object arg) {
            if ((this.GetRefundDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundDetailCompleted(this, new GetRefundDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UpdateSubmitRefundState", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSubmitRefundState(string fid, int refundState) {
            this.Invoke("UpdateSubmitRefundState", new object[] {
                        fid,
                        refundState});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSubmitRefundState(string fid, int refundState, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSubmitRefundState", new object[] {
                        fid,
                        refundState}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateSubmitRefundState(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateSubmitRefundStateAsync(string fid, int refundState) {
            this.UpdateSubmitRefundStateAsync(fid, refundState, null);
        }
        
        /// <remarks/>
        public void UpdateSubmitRefundStateAsync(string fid, int refundState, object userState) {
            if ((this.UpdateSubmitRefundStateOperationCompleted == null)) {
                this.UpdateSubmitRefundStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSubmitRefundStateOperationCompleted);
            }
            this.InvokeAsync("UpdateSubmitRefundState", new object[] {
                        fid,
                        refundState}, this.UpdateSubmitRefundStateOperationCompleted, userState);
        }
        
        private void OnUpdateSubmitRefundStateOperationCompleted(object arg) {
            if ((this.UpdateSubmitRefundStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSubmitRefundStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetYTInfoList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetYTInfoList(string cftNo, string ytNo, string beginTime, string card_type) {
            object[] results = this.Invoke("GetYTInfoList", new object[] {
                        cftNo,
                        ytNo,
                        beginTime,
                        card_type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetYTInfoList(string cftNo, string ytNo, string beginTime, string card_type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetYTInfoList", new object[] {
                        cftNo,
                        ytNo,
                        beginTime,
                        card_type}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetYTInfoList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetYTInfoListAsync(string cftNo, string ytNo, string beginTime, string card_type) {
            this.GetYTInfoListAsync(cftNo, ytNo, beginTime, card_type, null);
        }
        
        /// <remarks/>
        public void GetYTInfoListAsync(string cftNo, string ytNo, string beginTime, string card_type, object userState) {
            if ((this.GetYTInfoListOperationCompleted == null)) {
                this.GetYTInfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYTInfoListOperationCompleted);
            }
            this.InvokeAsync("GetYTInfoList", new object[] {
                        cftNo,
                        ytNo,
                        beginTime,
                        card_type}, this.GetYTInfoListOperationCompleted, userState);
        }
        
        private void OnGetYTInfoListOperationCompleted(object arg) {
            if ((this.GetYTInfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYTInfoListCompleted(this, new GetYTInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCertNum", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCertNum(string certNo, string card_type) {
            object[] results = this.Invoke("GetCertNum", new object[] {
                        certNo,
                        card_type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCertNum(string certNo, string card_type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCertNum", new object[] {
                        certNo,
                        card_type}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCertNum(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCertNumAsync(string certNo, string card_type) {
            this.GetCertNumAsync(certNo, card_type, null);
        }
        
        /// <remarks/>
        public void GetCertNumAsync(string certNo, string card_type, object userState) {
            if ((this.GetCertNumOperationCompleted == null)) {
                this.GetCertNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCertNumOperationCompleted);
            }
            this.InvokeAsync("GetCertNum", new object[] {
                        certNo,
                        card_type}, this.GetCertNumOperationCompleted, userState);
        }
        
        private void OnGetCertNumOperationCompleted(object arg) {
            if ((this.GetCertNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCertNumCompleted(this, new GetCertNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetYTFreezeList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetYTFreezeList(string cftNo, string ytNo, string tradeNo, string bussOrderNo, string beginTime, string endTime, int iPageStart, int iPageMax, string card_type) {
            object[] results = this.Invoke("GetYTFreezeList", new object[] {
                        cftNo,
                        ytNo,
                        tradeNo,
                        bussOrderNo,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax,
                        card_type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetYTFreezeList(string cftNo, string ytNo, string tradeNo, string bussOrderNo, string beginTime, string endTime, int iPageStart, int iPageMax, string card_type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetYTFreezeList", new object[] {
                        cftNo,
                        ytNo,
                        tradeNo,
                        bussOrderNo,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax,
                        card_type}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetYTFreezeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetYTFreezeListAsync(string cftNo, string ytNo, string tradeNo, string bussOrderNo, string beginTime, string endTime, int iPageStart, int iPageMax, string card_type) {
            this.GetYTFreezeListAsync(cftNo, ytNo, tradeNo, bussOrderNo, beginTime, endTime, iPageStart, iPageMax, card_type, null);
        }
        
        /// <remarks/>
        public void GetYTFreezeListAsync(string cftNo, string ytNo, string tradeNo, string bussOrderNo, string beginTime, string endTime, int iPageStart, int iPageMax, string card_type, object userState) {
            if ((this.GetYTFreezeListOperationCompleted == null)) {
                this.GetYTFreezeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYTFreezeListOperationCompleted);
            }
            this.InvokeAsync("GetYTFreezeList", new object[] {
                        cftNo,
                        ytNo,
                        tradeNo,
                        bussOrderNo,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax,
                        card_type}, this.GetYTFreezeListOperationCompleted, userState);
        }
        
        private void OnGetYTFreezeListOperationCompleted(object arg) {
            if ((this.GetYTFreezeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYTFreezeListCompleted(this, new GetYTFreezeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetYTTradeList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetYTTradeList(string cftNo, string ytNo, string tradeNo, string bussOrderNo, string beginTime, string endTime, int iPageStart, int iPageMax, string card_type) {
            object[] results = this.Invoke("GetYTTradeList", new object[] {
                        cftNo,
                        ytNo,
                        tradeNo,
                        bussOrderNo,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax,
                        card_type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetYTTradeList(string cftNo, string ytNo, string tradeNo, string bussOrderNo, string beginTime, string endTime, int iPageStart, int iPageMax, string card_type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetYTTradeList", new object[] {
                        cftNo,
                        ytNo,
                        tradeNo,
                        bussOrderNo,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax,
                        card_type}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetYTTradeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetYTTradeListAsync(string cftNo, string ytNo, string tradeNo, string bussOrderNo, string beginTime, string endTime, int iPageStart, int iPageMax, string card_type) {
            this.GetYTTradeListAsync(cftNo, ytNo, tradeNo, bussOrderNo, beginTime, endTime, iPageStart, iPageMax, card_type, null);
        }
        
        /// <remarks/>
        public void GetYTTradeListAsync(string cftNo, string ytNo, string tradeNo, string bussOrderNo, string beginTime, string endTime, int iPageStart, int iPageMax, string card_type, object userState) {
            if ((this.GetYTTradeListOperationCompleted == null)) {
                this.GetYTTradeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYTTradeListOperationCompleted);
            }
            this.InvokeAsync("GetYTTradeList", new object[] {
                        cftNo,
                        ytNo,
                        tradeNo,
                        bussOrderNo,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax,
                        card_type}, this.GetYTTradeListOperationCompleted, userState);
        }
        
        private void OnGetYTTradeListOperationCompleted(object arg) {
            if ((this.GetYTTradeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYTTradeListCompleted(this, new GetYTTradeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetExchangeRateList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetExchangeRateList(string foreType, string issueBank, string beginTime, string endTime, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetExchangeRateList", new object[] {
                        foreType,
                        issueBank,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExchangeRateList(string foreType, string issueBank, string beginTime, string endTime, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExchangeRateList", new object[] {
                        foreType,
                        issueBank,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetExchangeRateList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetExchangeRateListAsync(string foreType, string issueBank, string beginTime, string endTime, int iPageStart, int iPageMax) {
            this.GetExchangeRateListAsync(foreType, issueBank, beginTime, endTime, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetExchangeRateListAsync(string foreType, string issueBank, string beginTime, string endTime, int iPageStart, int iPageMax, object userState) {
            if ((this.GetExchangeRateListOperationCompleted == null)) {
                this.GetExchangeRateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExchangeRateListOperationCompleted);
            }
            this.InvokeAsync("GetExchangeRateList", new object[] {
                        foreType,
                        issueBank,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax}, this.GetExchangeRateListOperationCompleted, userState);
        }
        
        private void OnGetExchangeRateListOperationCompleted(object arg) {
            if ((this.GetExchangeRateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExchangeRateListCompleted(this, new GetExchangeRateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFreeFlowInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFreeFlowInfo(string cftNo) {
            object[] results = this.Invoke("GetFreeFlowInfo", new object[] {
                        cftNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFreeFlowInfo(string cftNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFreeFlowInfo", new object[] {
                        cftNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFreeFlowInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreeFlowInfoAsync(string cftNo) {
            this.GetFreeFlowInfoAsync(cftNo, null);
        }
        
        /// <remarks/>
        public void GetFreeFlowInfoAsync(string cftNo, object userState) {
            if ((this.GetFreeFlowInfoOperationCompleted == null)) {
                this.GetFreeFlowInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreeFlowInfoOperationCompleted);
            }
            this.InvokeAsync("GetFreeFlowInfo", new object[] {
                        cftNo}, this.GetFreeFlowInfoOperationCompleted, userState);
        }
        
        private void OnGetFreeFlowInfoOperationCompleted(object arg) {
            if ((this.GetFreeFlowInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreeFlowInfoCompleted(this, new GetFreeFlowInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserTypeInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserTypeInfo(string cftNo, int product_type, int business_type, int sub_business_type, int cur_type, int userType) {
            object[] results = this.Invoke("GetUserTypeInfo", new object[] {
                        cftNo,
                        product_type,
                        business_type,
                        sub_business_type,
                        cur_type,
                        userType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserTypeInfo(string cftNo, int product_type, int business_type, int sub_business_type, int cur_type, int userType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserTypeInfo", new object[] {
                        cftNo,
                        product_type,
                        business_type,
                        sub_business_type,
                        cur_type,
                        userType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserTypeInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTypeInfoAsync(string cftNo, int product_type, int business_type, int sub_business_type, int cur_type, int userType) {
            this.GetUserTypeInfoAsync(cftNo, product_type, business_type, sub_business_type, cur_type, userType, null);
        }
        
        /// <remarks/>
        public void GetUserTypeInfoAsync(string cftNo, int product_type, int business_type, int sub_business_type, int cur_type, int userType, object userState) {
            if ((this.GetUserTypeInfoOperationCompleted == null)) {
                this.GetUserTypeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTypeInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserTypeInfo", new object[] {
                        cftNo,
                        product_type,
                        business_type,
                        sub_business_type,
                        cur_type,
                        userType}, this.GetUserTypeInfoOperationCompleted, userState);
        }
        
        private void OnGetUserTypeInfoOperationCompleted(object arg) {
            if ((this.GetUserTypeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTypeInfoCompleted(this, new GetUserTypeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatchWithholdReq", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatchWithholdReq(string sp_id, string sp_batchid, string batchid, string fname, int verify_way, int total_count, int faudit_flag, int fcmd) {
            object[] results = this.Invoke("BatchWithholdReq", new object[] {
                        sp_id,
                        sp_batchid,
                        batchid,
                        fname,
                        verify_way,
                        total_count,
                        faudit_flag,
                        fcmd});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatchWithholdReq(string sp_id, string sp_batchid, string batchid, string fname, int verify_way, int total_count, int faudit_flag, int fcmd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatchWithholdReq", new object[] {
                        sp_id,
                        sp_batchid,
                        batchid,
                        fname,
                        verify_way,
                        total_count,
                        faudit_flag,
                        fcmd}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndBatchWithholdReq(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatchWithholdReqAsync(string sp_id, string sp_batchid, string batchid, string fname, int verify_way, int total_count, int faudit_flag, int fcmd) {
            this.BatchWithholdReqAsync(sp_id, sp_batchid, batchid, fname, verify_way, total_count, faudit_flag, fcmd, null);
        }
        
        /// <remarks/>
        public void BatchWithholdReqAsync(string sp_id, string sp_batchid, string batchid, string fname, int verify_way, int total_count, int faudit_flag, int fcmd, object userState) {
            if ((this.BatchWithholdReqOperationCompleted == null)) {
                this.BatchWithholdReqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchWithholdReqOperationCompleted);
            }
            this.InvokeAsync("BatchWithholdReq", new object[] {
                        sp_id,
                        sp_batchid,
                        batchid,
                        fname,
                        verify_way,
                        total_count,
                        faudit_flag,
                        fcmd}, this.BatchWithholdReqOperationCompleted, userState);
        }
        
        private void OnBatchWithholdReqOperationCompleted(object arg) {
            if ((this.BatchWithholdReqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchWithholdReqCompleted(this, new BatchWithholdReqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryProtocolBatch", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryProtocolBatch(string sp_id, string sp_name, string beginTime, string endTime, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("QueryProtocolBatch", new object[] {
                        sp_id,
                        sp_name,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryProtocolBatch(string sp_id, string sp_name, string beginTime, string endTime, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryProtocolBatch", new object[] {
                        sp_id,
                        sp_name,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryProtocolBatch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryProtocolBatchAsync(string sp_id, string sp_name, string beginTime, string endTime, int iPageStart, int iPageMax) {
            this.QueryProtocolBatchAsync(sp_id, sp_name, beginTime, endTime, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void QueryProtocolBatchAsync(string sp_id, string sp_name, string beginTime, string endTime, int iPageStart, int iPageMax, object userState) {
            if ((this.QueryProtocolBatchOperationCompleted == null)) {
                this.QueryProtocolBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryProtocolBatchOperationCompleted);
            }
            this.InvokeAsync("QueryProtocolBatch", new object[] {
                        sp_id,
                        sp_name,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax}, this.QueryProtocolBatchOperationCompleted, userState);
        }
        
        private void OnQueryProtocolBatchOperationCompleted(object arg) {
            if ((this.QueryProtocolBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryProtocolBatchCompleted(this, new QueryProtocolBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryProtocolDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryProtocolDetail(string sp_id, string beginTime, string endTime, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("QueryProtocolDetail", new object[] {
                        sp_id,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryProtocolDetail(string sp_id, string beginTime, string endTime, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryProtocolDetail", new object[] {
                        sp_id,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryProtocolDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryProtocolDetailAsync(string sp_id, string beginTime, string endTime, int iPageStart, int iPageMax) {
            this.QueryProtocolDetailAsync(sp_id, beginTime, endTime, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void QueryProtocolDetailAsync(string sp_id, string beginTime, string endTime, int iPageStart, int iPageMax, object userState) {
            if ((this.QueryProtocolDetailOperationCompleted == null)) {
                this.QueryProtocolDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryProtocolDetailOperationCompleted);
            }
            this.InvokeAsync("QueryProtocolDetail", new object[] {
                        sp_id,
                        beginTime,
                        endTime,
                        iPageStart,
                        iPageMax}, this.QueryProtocolDetailOperationCompleted, userState);
        }
        
        private void OnQueryProtocolDetailOperationCompleted(object arg) {
            if ((this.QueryProtocolDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryProtocolDetailCompleted(this, new QueryProtocolDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryKpsMD5", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryKpsMD5(string sp_id, string m_sp_id, string file_path) {
            object[] results = this.Invoke("QueryKpsMD5", new object[] {
                        sp_id,
                        m_sp_id,
                        file_path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryKpsMD5(string sp_id, string m_sp_id, string file_path, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryKpsMD5", new object[] {
                        sp_id,
                        m_sp_id,
                        file_path}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndQueryKpsMD5(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryKpsMD5Async(string sp_id, string m_sp_id, string file_path) {
            this.QueryKpsMD5Async(sp_id, m_sp_id, file_path, null);
        }
        
        /// <remarks/>
        public void QueryKpsMD5Async(string sp_id, string m_sp_id, string file_path, object userState) {
            if ((this.QueryKpsMD5OperationCompleted == null)) {
                this.QueryKpsMD5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryKpsMD5OperationCompleted);
            }
            this.InvokeAsync("QueryKpsMD5", new object[] {
                        sp_id,
                        m_sp_id,
                        file_path}, this.QueryKpsMD5OperationCompleted, userState);
        }
        
        private void OnQueryKpsMD5OperationCompleted(object arg) {
            if ((this.QueryKpsMD5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryKpsMD5Completed(this, new QueryKpsMD5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDiscountCode", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryDiscountCode(string cft_no, string cdk_no, string s_status, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("QueryDiscountCode", new object[] {
                        cft_no,
                        cdk_no,
                        s_status,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDiscountCode(string cft_no, string cdk_no, string s_status, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDiscountCode", new object[] {
                        cft_no,
                        cdk_no,
                        s_status,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryDiscountCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDiscountCodeAsync(string cft_no, string cdk_no, string s_status, int iPageStart, int iPageMax) {
            this.QueryDiscountCodeAsync(cft_no, cdk_no, s_status, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void QueryDiscountCodeAsync(string cft_no, string cdk_no, string s_status, int iPageStart, int iPageMax, object userState) {
            if ((this.QueryDiscountCodeOperationCompleted == null)) {
                this.QueryDiscountCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDiscountCodeOperationCompleted);
            }
            this.InvokeAsync("QueryDiscountCode", new object[] {
                        cft_no,
                        cdk_no,
                        s_status,
                        iPageStart,
                        iPageMax}, this.QueryDiscountCodeOperationCompleted, userState);
        }
        
        private void OnQueryDiscountCodeOperationCompleted(object arg) {
            if ((this.QueryDiscountCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDiscountCodeCompleted(this, new QueryDiscountCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ClearCreid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ClearCreid(int type, string creid) {
            object[] results = this.Invoke("ClearCreid", new object[] {
                        type,
                        creid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginClearCreid(int type, string creid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ClearCreid", new object[] {
                        type,
                        creid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndClearCreid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ClearCreidAsync(int type, string creid) {
            this.ClearCreidAsync(type, creid, null);
        }
        
        /// <remarks/>
        public void ClearCreidAsync(int type, string creid, object userState) {
            if ((this.ClearCreidOperationCompleted == null)) {
                this.ClearCreidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearCreidOperationCompleted);
            }
            this.InvokeAsync("ClearCreid", new object[] {
                        type,
                        creid}, this.ClearCreidOperationCompleted, userState);
        }
        
        private void OnClearCreidOperationCompleted(object arg) {
            if ((this.ClearCreidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearCreidCompleted(this, new ClearCreidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGwqCount_new", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetGwqCount_new(string u_ID, int is_tdeID, string filter) {
            object[] results = this.Invoke("GetGwqCount_new", new object[] {
                        u_ID,
                        is_tdeID,
                        filter});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGwqCount_new(string u_ID, int is_tdeID, string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGwqCount_new", new object[] {
                        u_ID,
                        is_tdeID,
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetGwqCount_new(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetGwqCount_newAsync(string u_ID, int is_tdeID, string filter) {
            this.GetGwqCount_newAsync(u_ID, is_tdeID, filter, null);
        }
        
        /// <remarks/>
        public void GetGwqCount_newAsync(string u_ID, int is_tdeID, string filter, object userState) {
            if ((this.GetGwqCount_newOperationCompleted == null)) {
                this.GetGwqCount_newOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGwqCount_newOperationCompleted);
            }
            this.InvokeAsync("GetGwqCount_new", new object[] {
                        u_ID,
                        is_tdeID,
                        filter}, this.GetGwqCount_newOperationCompleted, userState);
        }
        
        private void OnGetGwqCount_newOperationCompleted(object arg) {
            if ((this.GetGwqCount_newCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGwqCount_newCompleted(this, new GetGwqCount_newCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGwq_new", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGwq_new(string u_ID, int is_tdeID, string filter, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetGwq_new", new object[] {
                        u_ID,
                        is_tdeID,
                        filter,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGwq_new(string u_ID, int is_tdeID, string filter, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGwq_new", new object[] {
                        u_ID,
                        is_tdeID,
                        filter,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetGwq_new(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGwq_newAsync(string u_ID, int is_tdeID, string filter, int iPageStart, int iPageMax) {
            this.GetGwq_newAsync(u_ID, is_tdeID, filter, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetGwq_newAsync(string u_ID, int is_tdeID, string filter, int iPageStart, int iPageMax, object userState) {
            if ((this.GetGwq_newOperationCompleted == null)) {
                this.GetGwq_newOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGwq_newOperationCompleted);
            }
            this.InvokeAsync("GetGwq_new", new object[] {
                        u_ID,
                        is_tdeID,
                        filter,
                        iPageStart,
                        iPageMax}, this.GetGwq_newOperationCompleted, userState);
        }
        
        private void OnGetGwq_newOperationCompleted(object arg) {
            if ((this.GetGwq_newCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGwq_newCompleted(this, new GetGwq_newCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGwqInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_GWQ GetGwqInfo(string u_ID, string ticket_id) {
            object[] results = this.Invoke("GetGwqInfo", new object[] {
                        u_ID,
                        ticket_id});
            return ((T_GWQ)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGwqInfo(string u_ID, string ticket_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGwqInfo", new object[] {
                        u_ID,
                        ticket_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_GWQ EndGetGwqInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((T_GWQ)(results[0]));
        }
        
        /// <remarks/>
        public void GetGwqInfoAsync(string u_ID, string ticket_id) {
            this.GetGwqInfoAsync(u_ID, ticket_id, null);
        }
        
        /// <remarks/>
        public void GetGwqInfoAsync(string u_ID, string ticket_id, object userState) {
            if ((this.GetGwqInfoOperationCompleted == null)) {
                this.GetGwqInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGwqInfoOperationCompleted);
            }
            this.InvokeAsync("GetGwqInfo", new object[] {
                        u_ID,
                        ticket_id}, this.GetGwqInfoOperationCompleted, userState);
        }
        
        private void OnGetGwqInfoOperationCompleted(object arg) {
            if ((this.GetGwqInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGwqInfoCompleted(this, new GetGwqInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGwqRoll", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGwqRoll(string u_ID, string ticket_id) {
            object[] results = this.Invoke("GetGwqRoll", new object[] {
                        u_ID,
                        ticket_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGwqRoll(string u_ID, string ticket_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGwqRoll", new object[] {
                        u_ID,
                        ticket_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetGwqRoll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGwqRollAsync(string u_ID, string ticket_id) {
            this.GetGwqRollAsync(u_ID, ticket_id, null);
        }
        
        /// <remarks/>
        public void GetGwqRollAsync(string u_ID, string ticket_id, object userState) {
            if ((this.GetGwqRollOperationCompleted == null)) {
                this.GetGwqRollOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGwqRollOperationCompleted);
            }
            this.InvokeAsync("GetGwqRoll", new object[] {
                        u_ID,
                        ticket_id}, this.GetGwqRollOperationCompleted, userState);
        }
        
        private void OnGetGwqRollOperationCompleted(object arg) {
            if ((this.GetGwqRollCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGwqRollCompleted(this, new GetGwqRollCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/FreezeNonPrimaryCard", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FreezeNonPrimaryCard(string qqid, int state, string curtype, string banktype, string cardtail) {
            this.Invoke("FreezeNonPrimaryCard", new object[] {
                        qqid,
                        state,
                        curtype,
                        banktype,
                        cardtail});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFreezeNonPrimaryCard(string qqid, int state, string curtype, string banktype, string cardtail, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FreezeNonPrimaryCard", new object[] {
                        qqid,
                        state,
                        curtype,
                        banktype,
                        cardtail}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndFreezeNonPrimaryCard(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void FreezeNonPrimaryCardAsync(string qqid, int state, string curtype, string banktype, string cardtail) {
            this.FreezeNonPrimaryCardAsync(qqid, state, curtype, banktype, cardtail, null);
        }
        
        /// <remarks/>
        public void FreezeNonPrimaryCardAsync(string qqid, int state, string curtype, string banktype, string cardtail, object userState) {
            if ((this.FreezeNonPrimaryCardOperationCompleted == null)) {
                this.FreezeNonPrimaryCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFreezeNonPrimaryCardOperationCompleted);
            }
            this.InvokeAsync("FreezeNonPrimaryCard", new object[] {
                        qqid,
                        state,
                        curtype,
                        banktype,
                        cardtail}, this.FreezeNonPrimaryCardOperationCompleted, userState);
        }
        
        private void OnFreezeNonPrimaryCardOperationCompleted(object arg) {
            if ((this.FreezeNonPrimaryCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FreezeNonPrimaryCardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCreditRefundList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCreditRefundList(string uin, string s_day, string e_day, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("QueryCreditRefundList", new object[] {
                        uin,
                        s_day,
                        e_day,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCreditRefundList(string uin, string s_day, string e_day, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCreditRefundList", new object[] {
                        uin,
                        s_day,
                        e_day,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryCreditRefundList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCreditRefundListAsync(string uin, string s_day, string e_day, int iPageStart, int iPageMax) {
            this.QueryCreditRefundListAsync(uin, s_day, e_day, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void QueryCreditRefundListAsync(string uin, string s_day, string e_day, int iPageStart, int iPageMax, object userState) {
            if ((this.QueryCreditRefundListOperationCompleted == null)) {
                this.QueryCreditRefundListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCreditRefundListOperationCompleted);
            }
            this.InvokeAsync("QueryCreditRefundList", new object[] {
                        uin,
                        s_day,
                        e_day,
                        iPageStart,
                        iPageMax}, this.QueryCreditRefundListOperationCompleted, userState);
        }
        
        private void OnQueryCreditRefundListOperationCompleted(object arg) {
            if ((this.QueryCreditRefundListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCreditRefundListCompleted(this, new QueryCreditRefundListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCreditDebt", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCreditDebt(string uin) {
            object[] results = this.Invoke("QueryCreditDebt", new object[] {
                        uin});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCreditDebt(string uin, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCreditDebt", new object[] {
                        uin}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryCreditDebt(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCreditDebtAsync(string uin) {
            this.QueryCreditDebtAsync(uin, null);
        }
        
        /// <remarks/>
        public void QueryCreditDebtAsync(string uin, object userState) {
            if ((this.QueryCreditDebtOperationCompleted == null)) {
                this.QueryCreditDebtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCreditDebtOperationCompleted);
            }
            this.InvokeAsync("QueryCreditDebt", new object[] {
                        uin}, this.QueryCreditDebtOperationCompleted, userState);
        }
        
        private void OnQueryCreditDebtOperationCompleted(object arg) {
            if ((this.QueryCreditDebtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCreditDebtCompleted(this, new QueryCreditDebtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCreditUserInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCreditUserInfo(string uin) {
            object[] results = this.Invoke("QueryCreditUserInfo", new object[] {
                        uin});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCreditUserInfo(string uin, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCreditUserInfo", new object[] {
                        uin}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryCreditUserInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCreditUserInfoAsync(string uin) {
            this.QueryCreditUserInfoAsync(uin, null);
        }
        
        /// <remarks/>
        public void QueryCreditUserInfoAsync(string uin, object userState) {
            if ((this.QueryCreditUserInfoOperationCompleted == null)) {
                this.QueryCreditUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCreditUserInfoOperationCompleted);
            }
            this.InvokeAsync("QueryCreditUserInfo", new object[] {
                        uin}, this.QueryCreditUserInfoOperationCompleted, userState);
        }
        
        private void OnQueryCreditUserInfoOperationCompleted(object arg) {
            if ((this.QueryCreditUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCreditUserInfoCompleted(this, new QueryCreditUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCreditBillList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCreditBillList(string uin, string month, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("QueryCreditBillList", new object[] {
                        uin,
                        month,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCreditBillList(string uin, string month, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCreditBillList", new object[] {
                        uin,
                        month,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryCreditBillList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCreditBillListAsync(string uin, string month, int iPageStart, int iPageMax) {
            this.QueryCreditBillListAsync(uin, month, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void QueryCreditBillListAsync(string uin, string month, int iPageStart, int iPageMax, object userState) {
            if ((this.QueryCreditBillListOperationCompleted == null)) {
                this.QueryCreditBillListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCreditBillListOperationCompleted);
            }
            this.InvokeAsync("QueryCreditBillList", new object[] {
                        uin,
                        month,
                        iPageStart,
                        iPageMax}, this.QueryCreditBillListOperationCompleted, userState);
        }
        
        private void OnQueryCreditBillListOperationCompleted(object arg) {
            if ((this.QueryCreditBillListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCreditBillListCompleted(this, new QueryCreditBillListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCreditBillDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCreditBillDetail(string uin, string month, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("QueryCreditBillDetail", new object[] {
                        uin,
                        month,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCreditBillDetail(string uin, string month, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCreditBillDetail", new object[] {
                        uin,
                        month,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryCreditBillDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCreditBillDetailAsync(string uin, string month, int iPageStart, int iPageMax) {
            this.QueryCreditBillDetailAsync(uin, month, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void QueryCreditBillDetailAsync(string uin, string month, int iPageStart, int iPageMax, object userState) {
            if ((this.QueryCreditBillDetailOperationCompleted == null)) {
                this.QueryCreditBillDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCreditBillDetailOperationCompleted);
            }
            this.InvokeAsync("QueryCreditBillDetail", new object[] {
                        uin,
                        month,
                        iPageStart,
                        iPageMax}, this.QueryCreditBillDetailOperationCompleted, userState);
        }
        
        private void OnQueryCreditBillDetailOperationCompleted(object arg) {
            if ((this.QueryCreditBillDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCreditBillDetailCompleted(this, new QueryCreditBillDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCapitalRoll", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCapitalRoll(string uin, string sDate, string eDate, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("QueryCapitalRoll", new object[] {
                        uin,
                        sDate,
                        eDate,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCapitalRoll(string uin, string sDate, string eDate, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCapitalRoll", new object[] {
                        uin,
                        sDate,
                        eDate,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryCapitalRoll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCapitalRollAsync(string uin, string sDate, string eDate, int iPageStart, int iPageMax) {
            this.QueryCapitalRollAsync(uin, sDate, eDate, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void QueryCapitalRollAsync(string uin, string sDate, string eDate, int iPageStart, int iPageMax, object userState) {
            if ((this.QueryCapitalRollOperationCompleted == null)) {
                this.QueryCapitalRollOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCapitalRollOperationCompleted);
            }
            this.InvokeAsync("QueryCapitalRoll", new object[] {
                        uin,
                        sDate,
                        eDate,
                        iPageStart,
                        iPageMax}, this.QueryCapitalRollOperationCompleted, userState);
        }
        
        private void OnQueryCapitalRollOperationCompleted(object arg) {
            if ((this.QueryCapitalRollCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCapitalRollCompleted(this, new QueryCapitalRollCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSPOrder", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSPOrder(string spid, string spcoding) {
            object[] results = this.Invoke("GetSPOrder", new object[] {
                        spid,
                        spcoding});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSPOrder(string spid, string spcoding, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSPOrder", new object[] {
                        spid,
                        spcoding}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSPOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSPOrderAsync(string spid, string spcoding) {
            this.GetSPOrderAsync(spid, spcoding, null);
        }
        
        /// <remarks/>
        public void GetSPOrderAsync(string spid, string spcoding, object userState) {
            if ((this.GetSPOrderOperationCompleted == null)) {
                this.GetSPOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSPOrderOperationCompleted);
            }
            this.InvokeAsync("GetSPOrder", new object[] {
                        spid,
                        spcoding}, this.GetSPOrderOperationCompleted, userState);
        }
        
        private void OnGetSPOrderOperationCompleted(object arg) {
            if ((this.GetSPOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSPOrderCompleted(this, new GetSPOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryActivityList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryActivityList(string act_id) {
            object[] results = this.Invoke("QueryActivityList", new object[] {
                        act_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryActivityList(string act_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryActivityList", new object[] {
                        act_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryActivityList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryActivityListAsync(string act_id) {
            this.QueryActivityListAsync(act_id, null);
        }
        
        /// <remarks/>
        public void QueryActivityListAsync(string act_id, object userState) {
            if ((this.QueryActivityListOperationCompleted == null)) {
                this.QueryActivityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryActivityListOperationCompleted);
            }
            this.InvokeAsync("QueryActivityList", new object[] {
                        act_id}, this.QueryActivityListOperationCompleted, userState);
        }
        
        private void OnQueryActivityListOperationCompleted(object arg) {
            if ((this.QueryActivityListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryActivityListCompleted(this, new QueryActivityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryUserJoinActivity", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryUserJoinActivity(string cft_no, string beginTime, string endTime, string actId, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("QueryUserJoinActivity", new object[] {
                        cft_no,
                        beginTime,
                        endTime,
                        actId,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryUserJoinActivity(string cft_no, string beginTime, string endTime, string actId, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryUserJoinActivity", new object[] {
                        cft_no,
                        beginTime,
                        endTime,
                        actId,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryUserJoinActivity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUserJoinActivityAsync(string cft_no, string beginTime, string endTime, string actId, int iPageStart, int iPageMax) {
            this.QueryUserJoinActivityAsync(cft_no, beginTime, endTime, actId, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void QueryUserJoinActivityAsync(string cft_no, string beginTime, string endTime, string actId, int iPageStart, int iPageMax, object userState) {
            if ((this.QueryUserJoinActivityOperationCompleted == null)) {
                this.QueryUserJoinActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUserJoinActivityOperationCompleted);
            }
            this.InvokeAsync("QueryUserJoinActivity", new object[] {
                        cft_no,
                        beginTime,
                        endTime,
                        actId,
                        iPageStart,
                        iPageMax}, this.QueryUserJoinActivityOperationCompleted, userState);
        }
        
        private void OnQueryUserJoinActivityOperationCompleted(object arg) {
            if ((this.QueryUserJoinActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUserJoinActivityCompleted(this, new QueryUserJoinActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryActivityLogs", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryActivityLogs(string cft_no, string beginTime, string actId, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("QueryActivityLogs", new object[] {
                        cft_no,
                        beginTime,
                        actId,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryActivityLogs(string cft_no, string beginTime, string actId, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryActivityLogs", new object[] {
                        cft_no,
                        beginTime,
                        actId,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryActivityLogs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryActivityLogsAsync(string cft_no, string beginTime, string actId, int iPageStart, int iPageMax) {
            this.QueryActivityLogsAsync(cft_no, beginTime, actId, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void QueryActivityLogsAsync(string cft_no, string beginTime, string actId, int iPageStart, int iPageMax, object userState) {
            if ((this.QueryActivityLogsOperationCompleted == null)) {
                this.QueryActivityLogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryActivityLogsOperationCompleted);
            }
            this.InvokeAsync("QueryActivityLogs", new object[] {
                        cft_no,
                        beginTime,
                        actId,
                        iPageStart,
                        iPageMax}, this.QueryActivityLogsOperationCompleted, userState);
        }
        
        private void OnQueryActivityLogsOperationCompleted(object arg) {
            if ((this.QueryActivityLogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryActivityLogsCompleted(this, new QueryActivityLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryWebchatPayActivity", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryWebchatPayActivity(string cft_no, string beginTime, string endTime, string actId, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("QueryWebchatPayActivity", new object[] {
                        cft_no,
                        beginTime,
                        endTime,
                        actId,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryWebchatPayActivity(string cft_no, string beginTime, string endTime, string actId, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryWebchatPayActivity", new object[] {
                        cft_no,
                        beginTime,
                        endTime,
                        actId,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryWebchatPayActivity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryWebchatPayActivityAsync(string cft_no, string beginTime, string endTime, string actId, int iPageStart, int iPageMax) {
            this.QueryWebchatPayActivityAsync(cft_no, beginTime, endTime, actId, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void QueryWebchatPayActivityAsync(string cft_no, string beginTime, string endTime, string actId, int iPageStart, int iPageMax, object userState) {
            if ((this.QueryWebchatPayActivityOperationCompleted == null)) {
                this.QueryWebchatPayActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryWebchatPayActivityOperationCompleted);
            }
            this.InvokeAsync("QueryWebchatPayActivity", new object[] {
                        cft_no,
                        beginTime,
                        endTime,
                        actId,
                        iPageStart,
                        iPageMax}, this.QueryWebchatPayActivityOperationCompleted, userState);
        }
        
        private void OnQueryWebchatPayActivityOperationCompleted(object arg) {
            if ((this.QueryWebchatPayActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryWebchatPayActivityCompleted(this, new QueryWebchatPayActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediListX", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediListX(string u_ID, string Fcode, string strBeginTime, string strEndTime, string u_UserFilter, string u_OrderBy, int limStart, int limCount) {
            object[] results = this.Invoke("GetMediListX", new object[] {
                        u_ID,
                        Fcode,
                        strBeginTime,
                        strEndTime,
                        u_UserFilter,
                        u_OrderBy,
                        limStart,
                        limCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediListX(string u_ID, string Fcode, string strBeginTime, string strEndTime, string u_UserFilter, string u_OrderBy, int limStart, int limCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediListX", new object[] {
                        u_ID,
                        Fcode,
                        strBeginTime,
                        strEndTime,
                        u_UserFilter,
                        u_OrderBy,
                        limStart,
                        limCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediListX(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediListXAsync(string u_ID, string Fcode, string strBeginTime, string strEndTime, string u_UserFilter, string u_OrderBy, int limStart, int limCount) {
            this.GetMediListXAsync(u_ID, Fcode, strBeginTime, strEndTime, u_UserFilter, u_OrderBy, limStart, limCount, null);
        }
        
        /// <remarks/>
        public void GetMediListXAsync(string u_ID, string Fcode, string strBeginTime, string strEndTime, string u_UserFilter, string u_OrderBy, int limStart, int limCount, object userState) {
            if ((this.GetMediListXOperationCompleted == null)) {
                this.GetMediListXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediListXOperationCompleted);
            }
            this.InvokeAsync("GetMediListX", new object[] {
                        u_ID,
                        Fcode,
                        strBeginTime,
                        strEndTime,
                        u_UserFilter,
                        u_OrderBy,
                        limStart,
                        limCount}, this.GetMediListXOperationCompleted, userState);
        }
        
        private void OnGetMediListXOperationCompleted(object arg) {
            if ((this.GetMediListXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediListXCompleted(this, new GetMediListXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediList(string u_ID, string Fcode, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetMediList", new object[] {
                        u_ID,
                        Fcode,
                        u_BeginTime,
                        u_EndTime,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediList(string u_ID, string Fcode, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediList", new object[] {
                        u_ID,
                        Fcode,
                        u_BeginTime,
                        u_EndTime,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediListAsync(string u_ID, string Fcode, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax) {
            this.GetMediListAsync(u_ID, Fcode, u_BeginTime, u_EndTime, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetMediListAsync(string u_ID, string Fcode, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax, object userState) {
            if ((this.GetMediListOperationCompleted == null)) {
                this.GetMediListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediListOperationCompleted);
            }
            this.InvokeAsync("GetMediList", new object[] {
                        u_ID,
                        Fcode,
                        u_BeginTime,
                        u_EndTime,
                        iPageStart,
                        iPageMax}, this.GetMediListOperationCompleted, userState);
        }
        
        private void OnGetMediListOperationCompleted(object arg) {
            if ((this.GetMediListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediListCompleted(this, new GetMediListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMediListCount(string u_ID, string Fcode, System.DateTime u_BeginTime, System.DateTime u_EndTime) {
            object[] results = this.Invoke("GetMediListCount", new object[] {
                        u_ID,
                        Fcode,
                        u_BeginTime,
                        u_EndTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediListCount(string u_ID, string Fcode, System.DateTime u_BeginTime, System.DateTime u_EndTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediListCount", new object[] {
                        u_ID,
                        Fcode,
                        u_BeginTime,
                        u_EndTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetMediListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediListCountAsync(string u_ID, string Fcode, System.DateTime u_BeginTime, System.DateTime u_EndTime) {
            this.GetMediListCountAsync(u_ID, Fcode, u_BeginTime, u_EndTime, null);
        }
        
        /// <remarks/>
        public void GetMediListCountAsync(string u_ID, string Fcode, System.DateTime u_BeginTime, System.DateTime u_EndTime, object userState) {
            if ((this.GetMediListCountOperationCompleted == null)) {
                this.GetMediListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediListCountOperationCompleted);
            }
            this.InvokeAsync("GetMediListCount", new object[] {
                        u_ID,
                        Fcode,
                        u_BeginTime,
                        u_EndTime}, this.GetMediListCountOperationCompleted, userState);
        }
        
        private void OnGetMediListCountOperationCompleted(object arg) {
            if ((this.GetMediListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediListCountCompleted(this, new GetMediListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetQuickTradeListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQuickTradeListDetail(string listid) {
            object[] results = this.Invoke("GetQuickTradeListDetail", new object[] {
                        listid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQuickTradeListDetail(string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQuickTradeListDetail", new object[] {
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetQuickTradeListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuickTradeListDetailAsync(string listid) {
            this.GetQuickTradeListDetailAsync(listid, null);
        }
        
        /// <remarks/>
        public void GetQuickTradeListDetailAsync(string listid, object userState) {
            if ((this.GetQuickTradeListDetailOperationCompleted == null)) {
                this.GetQuickTradeListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuickTradeListDetailOperationCompleted);
            }
            this.InvokeAsync("GetQuickTradeListDetail", new object[] {
                        listid}, this.GetQuickTradeListDetailOperationCompleted, userState);
        }
        
        private void OnGetQuickTradeListDetailOperationCompleted(object arg) {
            if ((this.GetQuickTradeListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuickTradeListDetailCompleted(this, new GetQuickTradeListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFreezeList_2", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFreezeList_2(string qqid, string szBeginDate, string szEndDate, string szStatue, string szListID, string szFreezeUser, string szFreezeReason, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetFreezeList_2", new object[] {
                        qqid,
                        szBeginDate,
                        szEndDate,
                        szStatue,
                        szListID,
                        szFreezeUser,
                        szFreezeReason,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFreezeList_2(string qqid, string szBeginDate, string szEndDate, string szStatue, string szListID, string szFreezeUser, string szFreezeReason, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFreezeList_2", new object[] {
                        qqid,
                        szBeginDate,
                        szEndDate,
                        szStatue,
                        szListID,
                        szFreezeUser,
                        szFreezeReason,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFreezeList_2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreezeList_2Async(string qqid, string szBeginDate, string szEndDate, string szStatue, string szListID, string szFreezeUser, string szFreezeReason, int iPageStart, int iPageMax) {
            this.GetFreezeList_2Async(qqid, szBeginDate, szEndDate, szStatue, szListID, szFreezeUser, szFreezeReason, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetFreezeList_2Async(string qqid, string szBeginDate, string szEndDate, string szStatue, string szListID, string szFreezeUser, string szFreezeReason, int iPageStart, int iPageMax, object userState) {
            if ((this.GetFreezeList_2OperationCompleted == null)) {
                this.GetFreezeList_2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreezeList_2OperationCompleted);
            }
            this.InvokeAsync("GetFreezeList_2", new object[] {
                        qqid,
                        szBeginDate,
                        szEndDate,
                        szStatue,
                        szListID,
                        szFreezeUser,
                        szFreezeReason,
                        iPageStart,
                        iPageMax}, this.GetFreezeList_2OperationCompleted, userState);
        }
        
        private void OnGetFreezeList_2OperationCompleted(object arg) {
            if ((this.GetFreezeList_2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreezeList_2Completed(this, new GetFreezeList_2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFreezeList_3", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFreezeList_3(string qqid, string szBeginDate, string szEndDate, int iStatue, string szListID, string szFreezeUser, string szFreezeReason, int iPageStart, int iPageMax, string orderType, out int AllRecordCount) {
            object[] results = this.Invoke("GetFreezeList_3", new object[] {
                        qqid,
                        szBeginDate,
                        szEndDate,
                        iStatue,
                        szListID,
                        szFreezeUser,
                        szFreezeReason,
                        iPageStart,
                        iPageMax,
                        orderType});
            AllRecordCount = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFreezeList_3(string qqid, string szBeginDate, string szEndDate, int iStatue, string szListID, string szFreezeUser, string szFreezeReason, int iPageStart, int iPageMax, string orderType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFreezeList_3", new object[] {
                        qqid,
                        szBeginDate,
                        szEndDate,
                        iStatue,
                        szListID,
                        szFreezeUser,
                        szFreezeReason,
                        iPageStart,
                        iPageMax,
                        orderType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFreezeList_3(System.IAsyncResult asyncResult, out int AllRecordCount) {
            object[] results = this.EndInvoke(asyncResult);
            AllRecordCount = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreezeList_3Async(string qqid, string szBeginDate, string szEndDate, int iStatue, string szListID, string szFreezeUser, string szFreezeReason, int iPageStart, int iPageMax, string orderType) {
            this.GetFreezeList_3Async(qqid, szBeginDate, szEndDate, iStatue, szListID, szFreezeUser, szFreezeReason, iPageStart, iPageMax, orderType, null);
        }
        
        /// <remarks/>
        public void GetFreezeList_3Async(string qqid, string szBeginDate, string szEndDate, int iStatue, string szListID, string szFreezeUser, string szFreezeReason, int iPageStart, int iPageMax, string orderType, object userState) {
            if ((this.GetFreezeList_3OperationCompleted == null)) {
                this.GetFreezeList_3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreezeList_3OperationCompleted);
            }
            this.InvokeAsync("GetFreezeList_3", new object[] {
                        qqid,
                        szBeginDate,
                        szEndDate,
                        iStatue,
                        szListID,
                        szFreezeUser,
                        szFreezeReason,
                        iPageStart,
                        iPageMax,
                        orderType}, this.GetFreezeList_3OperationCompleted, userState);
        }
        
        private void OnGetFreezeList_3OperationCompleted(object arg) {
            if ((this.GetFreezeList_3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreezeList_3Completed(this, new GetFreezeList_3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFreezeList_New", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFreezeList_New(string qqid, string szBeginDate, string szEndDate, int iStatue, string szListID, string szFreezeUser, string szFreezeReason, int iPageStart, int iPageMax, string orderType, out int AllRecordCount) {
            object[] results = this.Invoke("GetFreezeList_New", new object[] {
                        qqid,
                        szBeginDate,
                        szEndDate,
                        iStatue,
                        szListID,
                        szFreezeUser,
                        szFreezeReason,
                        iPageStart,
                        iPageMax,
                        orderType});
            AllRecordCount = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFreezeList_New(string qqid, string szBeginDate, string szEndDate, int iStatue, string szListID, string szFreezeUser, string szFreezeReason, int iPageStart, int iPageMax, string orderType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFreezeList_New", new object[] {
                        qqid,
                        szBeginDate,
                        szEndDate,
                        iStatue,
                        szListID,
                        szFreezeUser,
                        szFreezeReason,
                        iPageStart,
                        iPageMax,
                        orderType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFreezeList_New(System.IAsyncResult asyncResult, out int AllRecordCount) {
            object[] results = this.EndInvoke(asyncResult);
            AllRecordCount = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreezeList_NewAsync(string qqid, string szBeginDate, string szEndDate, int iStatue, string szListID, string szFreezeUser, string szFreezeReason, int iPageStart, int iPageMax, string orderType) {
            this.GetFreezeList_NewAsync(qqid, szBeginDate, szEndDate, iStatue, szListID, szFreezeUser, szFreezeReason, iPageStart, iPageMax, orderType, null);
        }
        
        /// <remarks/>
        public void GetFreezeList_NewAsync(string qqid, string szBeginDate, string szEndDate, int iStatue, string szListID, string szFreezeUser, string szFreezeReason, int iPageStart, int iPageMax, string orderType, object userState) {
            if ((this.GetFreezeList_NewOperationCompleted == null)) {
                this.GetFreezeList_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreezeList_NewOperationCompleted);
            }
            this.InvokeAsync("GetFreezeList_New", new object[] {
                        qqid,
                        szBeginDate,
                        szEndDate,
                        iStatue,
                        szListID,
                        szFreezeUser,
                        szFreezeReason,
                        iPageStart,
                        iPageMax,
                        orderType}, this.GetFreezeList_NewOperationCompleted, userState);
        }
        
        private void OnGetFreezeList_NewOperationCompleted(object arg) {
            if ((this.GetFreezeList_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreezeList_NewCompleted(this, new GetFreezeList_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFreezeListDetail_2", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFreezeListDetail_2(string fid) {
            object[] results = this.Invoke("GetFreezeListDetail_2", new object[] {
                        fid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFreezeListDetail_2(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFreezeListDetail_2", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFreezeListDetail_2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreezeListDetail_2Async(string fid) {
            this.GetFreezeListDetail_2Async(fid, null);
        }
        
        /// <remarks/>
        public void GetFreezeListDetail_2Async(string fid, object userState) {
            if ((this.GetFreezeListDetail_2OperationCompleted == null)) {
                this.GetFreezeListDetail_2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreezeListDetail_2OperationCompleted);
            }
            this.InvokeAsync("GetFreezeListDetail_2", new object[] {
                        fid}, this.GetFreezeListDetail_2OperationCompleted, userState);
        }
        
        private void OnGetFreezeListDetail_2OperationCompleted(object arg) {
            if ((this.GetFreezeListDetail_2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreezeListDetail_2Completed(this, new GetFreezeListDetail_2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFreezeDiary", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFreezeDiary(string fid, string ffreezeID, string handleType, string handleUser, string handleResult, string memo, string strBeginDate, string strEndDate, int startIndex, int maxPage) {
            object[] results = this.Invoke("GetFreezeDiary", new object[] {
                        fid,
                        ffreezeID,
                        handleType,
                        handleUser,
                        handleResult,
                        memo,
                        strBeginDate,
                        strEndDate,
                        startIndex,
                        maxPage});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFreezeDiary(string fid, string ffreezeID, string handleType, string handleUser, string handleResult, string memo, string strBeginDate, string strEndDate, int startIndex, int maxPage, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFreezeDiary", new object[] {
                        fid,
                        ffreezeID,
                        handleType,
                        handleUser,
                        handleResult,
                        memo,
                        strBeginDate,
                        strEndDate,
                        startIndex,
                        maxPage}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFreezeDiary(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreezeDiaryAsync(string fid, string ffreezeID, string handleType, string handleUser, string handleResult, string memo, string strBeginDate, string strEndDate, int startIndex, int maxPage) {
            this.GetFreezeDiaryAsync(fid, ffreezeID, handleType, handleUser, handleResult, memo, strBeginDate, strEndDate, startIndex, maxPage, null);
        }
        
        /// <remarks/>
        public void GetFreezeDiaryAsync(string fid, string ffreezeID, string handleType, string handleUser, string handleResult, string memo, string strBeginDate, string strEndDate, int startIndex, int maxPage, object userState) {
            if ((this.GetFreezeDiaryOperationCompleted == null)) {
                this.GetFreezeDiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreezeDiaryOperationCompleted);
            }
            this.InvokeAsync("GetFreezeDiary", new object[] {
                        fid,
                        ffreezeID,
                        handleType,
                        handleUser,
                        handleResult,
                        memo,
                        strBeginDate,
                        strEndDate,
                        startIndex,
                        maxPage}, this.GetFreezeDiaryOperationCompleted, userState);
        }
        
        private void OnGetFreezeDiaryOperationCompleted(object arg) {
            if ((this.GetFreezeDiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreezeDiaryCompleted(this, new GetFreezeDiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CreateFreezeDiary", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateFreezeDiary(string ffreezeListID, int handleType, string handleUser, string handleResult, string memo, string freezedUserName, string emailTo) {
            object[] results = this.Invoke("CreateFreezeDiary", new object[] {
                        ffreezeListID,
                        handleType,
                        handleUser,
                        handleResult,
                        memo,
                        freezedUserName,
                        emailTo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateFreezeDiary(string ffreezeListID, int handleType, string handleUser, string handleResult, string memo, string freezedUserName, string emailTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateFreezeDiary", new object[] {
                        ffreezeListID,
                        handleType,
                        handleUser,
                        handleResult,
                        memo,
                        freezedUserName,
                        emailTo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCreateFreezeDiary(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFreezeDiaryAsync(string ffreezeListID, int handleType, string handleUser, string handleResult, string memo, string freezedUserName, string emailTo) {
            this.CreateFreezeDiaryAsync(ffreezeListID, handleType, handleUser, handleResult, memo, freezedUserName, emailTo, null);
        }
        
        /// <remarks/>
        public void CreateFreezeDiaryAsync(string ffreezeListID, int handleType, string handleUser, string handleResult, string memo, string freezedUserName, string emailTo, object userState) {
            if ((this.CreateFreezeDiaryOperationCompleted == null)) {
                this.CreateFreezeDiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFreezeDiaryOperationCompleted);
            }
            this.InvokeAsync("CreateFreezeDiary", new object[] {
                        ffreezeListID,
                        handleType,
                        handleUser,
                        handleResult,
                        memo,
                        freezedUserName,
                        emailTo}, this.CreateFreezeDiaryOperationCompleted, userState);
        }
        
        private void OnCreateFreezeDiaryOperationCompleted(object arg) {
            if ((this.CreateFreezeDiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFreezeDiaryCompleted(this, new CreateFreezeDiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CreateFreezeDiary_2", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateFreezeDiary_2(string ffreezeListID, int handleType, string handleUser, string handleResult, string memo, string freezedUserName, string emailTo) {
            object[] results = this.Invoke("CreateFreezeDiary_2", new object[] {
                        ffreezeListID,
                        handleType,
                        handleUser,
                        handleResult,
                        memo,
                        freezedUserName,
                        emailTo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateFreezeDiary_2(string ffreezeListID, int handleType, string handleUser, string handleResult, string memo, string freezedUserName, string emailTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateFreezeDiary_2", new object[] {
                        ffreezeListID,
                        handleType,
                        handleUser,
                        handleResult,
                        memo,
                        freezedUserName,
                        emailTo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCreateFreezeDiary_2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFreezeDiary_2Async(string ffreezeListID, int handleType, string handleUser, string handleResult, string memo, string freezedUserName, string emailTo) {
            this.CreateFreezeDiary_2Async(ffreezeListID, handleType, handleUser, handleResult, memo, freezedUserName, emailTo, null);
        }
        
        /// <remarks/>
        public void CreateFreezeDiary_2Async(string ffreezeListID, int handleType, string handleUser, string handleResult, string memo, string freezedUserName, string emailTo, object userState) {
            if ((this.CreateFreezeDiary_2OperationCompleted == null)) {
                this.CreateFreezeDiary_2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFreezeDiary_2OperationCompleted);
            }
            this.InvokeAsync("CreateFreezeDiary_2", new object[] {
                        ffreezeListID,
                        handleType,
                        handleUser,
                        handleResult,
                        memo,
                        freezedUserName,
                        emailTo}, this.CreateFreezeDiary_2OperationCompleted, userState);
        }
        
        private void OnCreateFreezeDiary_2OperationCompleted(object arg) {
            if ((this.CreateFreezeDiary_2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFreezeDiary_2Completed(this, new CreateFreezeDiary_2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CreateFreezeDiary_NEW", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateFreezeDiary_NEW(
                    string ffreezeListID, 
                    int handleType, 
                    string handleUser, 
                    string handleResult, 
                    string memo, 
                    string uin, 
                    string userPhone, 
                    string submitDate, 
                    int bt, 
                    string userDesc, 
                    string zdyBt1, 
                    string zdyBt2, 
                    string zdyBt3, 
                    string zdyBt4, 
                    string zdyCont1, 
                    string zdyCont2, 
                    string zdyCont3, 
                    string zdyCont4) {
            object[] results = this.Invoke("CreateFreezeDiary_NEW", new object[] {
                        ffreezeListID,
                        handleType,
                        handleUser,
                        handleResult,
                        memo,
                        uin,
                        userPhone,
                        submitDate,
                        bt,
                        userDesc,
                        zdyBt1,
                        zdyBt2,
                        zdyBt3,
                        zdyBt4,
                        zdyCont1,
                        zdyCont2,
                        zdyCont3,
                        zdyCont4});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateFreezeDiary_NEW(
                    string ffreezeListID, 
                    int handleType, 
                    string handleUser, 
                    string handleResult, 
                    string memo, 
                    string uin, 
                    string userPhone, 
                    string submitDate, 
                    int bt, 
                    string userDesc, 
                    string zdyBt1, 
                    string zdyBt2, 
                    string zdyBt3, 
                    string zdyBt4, 
                    string zdyCont1, 
                    string zdyCont2, 
                    string zdyCont3, 
                    string zdyCont4, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("CreateFreezeDiary_NEW", new object[] {
                        ffreezeListID,
                        handleType,
                        handleUser,
                        handleResult,
                        memo,
                        uin,
                        userPhone,
                        submitDate,
                        bt,
                        userDesc,
                        zdyBt1,
                        zdyBt2,
                        zdyBt3,
                        zdyBt4,
                        zdyCont1,
                        zdyCont2,
                        zdyCont3,
                        zdyCont4}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCreateFreezeDiary_NEW(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFreezeDiary_NEWAsync(
                    string ffreezeListID, 
                    int handleType, 
                    string handleUser, 
                    string handleResult, 
                    string memo, 
                    string uin, 
                    string userPhone, 
                    string submitDate, 
                    int bt, 
                    string userDesc, 
                    string zdyBt1, 
                    string zdyBt2, 
                    string zdyBt3, 
                    string zdyBt4, 
                    string zdyCont1, 
                    string zdyCont2, 
                    string zdyCont3, 
                    string zdyCont4) {
            this.CreateFreezeDiary_NEWAsync(ffreezeListID, handleType, handleUser, handleResult, memo, uin, userPhone, submitDate, bt, userDesc, zdyBt1, zdyBt2, zdyBt3, zdyBt4, zdyCont1, zdyCont2, zdyCont3, zdyCont4, null);
        }
        
        /// <remarks/>
        public void CreateFreezeDiary_NEWAsync(
                    string ffreezeListID, 
                    int handleType, 
                    string handleUser, 
                    string handleResult, 
                    string memo, 
                    string uin, 
                    string userPhone, 
                    string submitDate, 
                    int bt, 
                    string userDesc, 
                    string zdyBt1, 
                    string zdyBt2, 
                    string zdyBt3, 
                    string zdyBt4, 
                    string zdyCont1, 
                    string zdyCont2, 
                    string zdyCont3, 
                    string zdyCont4, 
                    object userState) {
            if ((this.CreateFreezeDiary_NEWOperationCompleted == null)) {
                this.CreateFreezeDiary_NEWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFreezeDiary_NEWOperationCompleted);
            }
            this.InvokeAsync("CreateFreezeDiary_NEW", new object[] {
                        ffreezeListID,
                        handleType,
                        handleUser,
                        handleResult,
                        memo,
                        uin,
                        userPhone,
                        submitDate,
                        bt,
                        userDesc,
                        zdyBt1,
                        zdyBt2,
                        zdyBt3,
                        zdyBt4,
                        zdyCont1,
                        zdyCont2,
                        zdyCont3,
                        zdyCont4}, this.CreateFreezeDiary_NEWOperationCompleted, userState);
        }
        
        private void OnCreateFreezeDiary_NEWOperationCompleted(object arg) {
            if ((this.CreateFreezeDiary_NEWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFreezeDiary_NEWCompleted(this, new CreateFreezeDiary_NEWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/AutoProcessFreezeStateDaily", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AutoProcessFreezeStateDaily() {
            object[] results = this.Invoke("AutoProcessFreezeStateDaily", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAutoProcessFreezeStateDaily(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AutoProcessFreezeStateDaily", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAutoProcessFreezeStateDaily(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AutoProcessFreezeStateDailyAsync() {
            this.AutoProcessFreezeStateDailyAsync(null);
        }
        
        /// <remarks/>
        public void AutoProcessFreezeStateDailyAsync(object userState) {
            if ((this.AutoProcessFreezeStateDailyOperationCompleted == null)) {
                this.AutoProcessFreezeStateDailyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoProcessFreezeStateDailyOperationCompleted);
            }
            this.InvokeAsync("AutoProcessFreezeStateDaily", new object[0], this.AutoProcessFreezeStateDailyOperationCompleted, userState);
        }
        
        private void OnAutoProcessFreezeStateDailyOperationCompleted(object arg) {
            if ((this.AutoProcessFreezeStateDailyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoProcessFreezeStateDailyCompleted(this, new AutoProcessFreezeStateDailyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UpdateFreezeDiary", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFreezeDiary(string fid, string updateType, string handleUser, string handleResult) {
            object[] results = this.Invoke("UpdateFreezeDiary", new object[] {
                        fid,
                        updateType,
                        handleUser,
                        handleResult});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateFreezeDiary(string fid, string updateType, string handleUser, string handleResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateFreezeDiary", new object[] {
                        fid,
                        updateType,
                        handleUser,
                        handleResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateFreezeDiary(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFreezeDiaryAsync(string fid, string updateType, string handleUser, string handleResult) {
            this.UpdateFreezeDiaryAsync(fid, updateType, handleUser, handleResult, null);
        }
        
        /// <remarks/>
        public void UpdateFreezeDiaryAsync(string fid, string updateType, string handleUser, string handleResult, object userState) {
            if ((this.UpdateFreezeDiaryOperationCompleted == null)) {
                this.UpdateFreezeDiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFreezeDiaryOperationCompleted);
            }
            this.InvokeAsync("UpdateFreezeDiary", new object[] {
                        fid,
                        updateType,
                        handleUser,
                        handleResult}, this.UpdateFreezeDiaryOperationCompleted, userState);
        }
        
        private void OnUpdateFreezeDiaryOperationCompleted(object arg) {
            if ((this.UpdateFreezeDiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFreezeDiaryCompleted(this, new UpdateFreezeDiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFreezeList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFreezeList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetFreezeList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        freezeuser,
                        username,
                        handletype,
                        statetype,
                        qqid,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFreezeList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFreezeList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        freezeuser,
                        username,
                        handletype,
                        statetype,
                        qqid,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFreezeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreezeListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid, int iPageStart, int iPageMax) {
            this.GetFreezeListAsync(u_BeginTime, u_EndTime, freezeuser, username, handletype, statetype, qqid, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetFreezeListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid, int iPageStart, int iPageMax, object userState) {
            if ((this.GetFreezeListOperationCompleted == null)) {
                this.GetFreezeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreezeListOperationCompleted);
            }
            this.InvokeAsync("GetFreezeList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        freezeuser,
                        username,
                        handletype,
                        statetype,
                        qqid,
                        iPageStart,
                        iPageMax}, this.GetFreezeListOperationCompleted, userState);
        }
        
        private void OnGetFreezeListOperationCompleted(object arg) {
            if ((this.GetFreezeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreezeListCompleted(this, new GetFreezeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetExistFreeze", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FreezeInfo GetExistFreeze(string freezeid, int FFreezeType) {
            object[] results = this.Invoke("GetExistFreeze", new object[] {
                        freezeid,
                        FFreezeType});
            return ((FreezeInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExistFreeze(string freezeid, int FFreezeType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExistFreeze", new object[] {
                        freezeid,
                        FFreezeType}, callback, asyncState);
        }
        
        /// <remarks/>
        public FreezeInfo EndGetExistFreeze(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FreezeInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetExistFreezeAsync(string freezeid, int FFreezeType) {
            this.GetExistFreezeAsync(freezeid, FFreezeType, null);
        }
        
        /// <remarks/>
        public void GetExistFreezeAsync(string freezeid, int FFreezeType, object userState) {
            if ((this.GetExistFreezeOperationCompleted == null)) {
                this.GetExistFreezeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExistFreezeOperationCompleted);
            }
            this.InvokeAsync("GetExistFreeze", new object[] {
                        freezeid,
                        FFreezeType}, this.GetExistFreezeOperationCompleted, userState);
        }
        
        private void OnGetExistFreezeOperationCompleted(object arg) {
            if ((this.GetExistFreezeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExistFreezeCompleted(this, new GetExistFreezeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CreateNewFreeze", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateNewFreeze(FreezeInfo fi) {
            this.Invoke("CreateNewFreeze", new object[] {
                        fi});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateNewFreeze(FreezeInfo fi, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateNewFreeze", new object[] {
                        fi}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateNewFreeze(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void CreateNewFreezeAsync(FreezeInfo fi) {
            this.CreateNewFreezeAsync(fi, null);
        }
        
        /// <remarks/>
        public void CreateNewFreezeAsync(FreezeInfo fi, object userState) {
            if ((this.CreateNewFreezeOperationCompleted == null)) {
                this.CreateNewFreezeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewFreezeOperationCompleted);
            }
            this.InvokeAsync("CreateNewFreeze", new object[] {
                        fi}, this.CreateNewFreezeOperationCompleted, userState);
        }
        
        private void OnCreateNewFreezeOperationCompleted(object arg) {
            if ((this.CreateNewFreezeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewFreezeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UpdateFreezeInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFreezeInfo(FreezeInfo fi) {
            this.Invoke("UpdateFreezeInfo", new object[] {
                        fi});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateFreezeInfo(FreezeInfo fi, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateFreezeInfo", new object[] {
                        fi}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateFreezeInfo(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateFreezeInfoAsync(FreezeInfo fi) {
            this.UpdateFreezeInfoAsync(fi, null);
        }
        
        /// <remarks/>
        public void UpdateFreezeInfoAsync(FreezeInfo fi, object userState) {
            if ((this.UpdateFreezeInfoOperationCompleted == null)) {
                this.UpdateFreezeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFreezeInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateFreezeInfo", new object[] {
                        fi}, this.UpdateFreezeInfoOperationCompleted, userState);
        }
        
        private void OnUpdateFreezeInfoOperationCompleted(object arg) {
            if ((this.UpdateFreezeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFreezeInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFreezeListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFreezeListCount(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid) {
            object[] results = this.Invoke("GetFreezeListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        freezeuser,
                        username,
                        handletype,
                        statetype,
                        qqid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFreezeListCount(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFreezeListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        freezeuser,
                        username,
                        handletype,
                        statetype,
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetFreezeListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreezeListCountAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid) {
            this.GetFreezeListCountAsync(u_BeginTime, u_EndTime, freezeuser, username, handletype, statetype, qqid, null);
        }
        
        /// <remarks/>
        public void GetFreezeListCountAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid, object userState) {
            if ((this.GetFreezeListCountOperationCompleted == null)) {
                this.GetFreezeListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreezeListCountOperationCompleted);
            }
            this.InvokeAsync("GetFreezeListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        freezeuser,
                        username,
                        handletype,
                        statetype,
                        qqid}, this.GetFreezeListCountOperationCompleted, userState);
        }
        
        private void OnGetFreezeListCountOperationCompleted(object arg) {
            if ((this.GetFreezeListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreezeListCountCompleted(this, new GetFreezeListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFreezeListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFreezeListDetail(string tdeid) {
            object[] results = this.Invoke("GetFreezeListDetail", new object[] {
                        tdeid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFreezeListDetail(string tdeid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFreezeListDetail", new object[] {
                        tdeid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFreezeListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreezeListDetailAsync(string tdeid) {
            this.GetFreezeListDetailAsync(tdeid, null);
        }
        
        /// <remarks/>
        public void GetFreezeListDetailAsync(string tdeid, object userState) {
            if ((this.GetFreezeListDetailOperationCompleted == null)) {
                this.GetFreezeListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreezeListDetailOperationCompleted);
            }
            this.InvokeAsync("GetFreezeListDetail", new object[] {
                        tdeid}, this.GetFreezeListDetailOperationCompleted, userState);
        }
        
        private void OnGetFreezeListDetailOperationCompleted(object arg) {
            if ((this.GetFreezeListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreezeListDetailCompleted(this, new GetFreezeListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UpdateFreezeListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFreezeListDetail(string fid, string FreezeReason, string UserName, string UserIP) {
            this.Invoke("UpdateFreezeListDetail", new object[] {
                        fid,
                        FreezeReason,
                        UserName,
                        UserIP});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateFreezeListDetail(string fid, string FreezeReason, string UserName, string UserIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateFreezeListDetail", new object[] {
                        fid,
                        FreezeReason,
                        UserName,
                        UserIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateFreezeListDetail(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateFreezeListDetailAsync(string fid, string FreezeReason, string UserName, string UserIP) {
            this.UpdateFreezeListDetailAsync(fid, FreezeReason, UserName, UserIP, null);
        }
        
        /// <remarks/>
        public void UpdateFreezeListDetailAsync(string fid, string FreezeReason, string UserName, string UserIP, object userState) {
            if ((this.UpdateFreezeListDetailOperationCompleted == null)) {
                this.UpdateFreezeListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFreezeListDetailOperationCompleted);
            }
            this.InvokeAsync("UpdateFreezeListDetail", new object[] {
                        fid,
                        FreezeReason,
                        UserName,
                        UserIP}, this.UpdateFreezeListDetailOperationCompleted, userState);
        }
        
        private void OnUpdateFreezeListDetailOperationCompleted(object arg) {
            if ((this.UpdateFreezeListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFreezeListDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryUserFreezeRecord", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryUserFreezeRecord(string strBeginDate, string strEndDate, string fpayAccount, double freezeFin, string flistID, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("QueryUserFreezeRecord", new object[] {
                        strBeginDate,
                        strEndDate,
                        fpayAccount,
                        freezeFin,
                        flistID,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryUserFreezeRecord(string strBeginDate, string strEndDate, string fpayAccount, double freezeFin, string flistID, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryUserFreezeRecord", new object[] {
                        strBeginDate,
                        strEndDate,
                        fpayAccount,
                        freezeFin,
                        flistID,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryUserFreezeRecord(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUserFreezeRecordAsync(string strBeginDate, string strEndDate, string fpayAccount, double freezeFin, string flistID, int iPageStart, int iPageMax) {
            this.QueryUserFreezeRecordAsync(strBeginDate, strEndDate, fpayAccount, freezeFin, flistID, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void QueryUserFreezeRecordAsync(string strBeginDate, string strEndDate, string fpayAccount, double freezeFin, string flistID, int iPageStart, int iPageMax, object userState) {
            if ((this.QueryUserFreezeRecordOperationCompleted == null)) {
                this.QueryUserFreezeRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUserFreezeRecordOperationCompleted);
            }
            this.InvokeAsync("QueryUserFreezeRecord", new object[] {
                        strBeginDate,
                        strEndDate,
                        fpayAccount,
                        freezeFin,
                        flistID,
                        iPageStart,
                        iPageMax}, this.QueryUserFreezeRecordOperationCompleted, userState);
        }
        
        private void OnQueryUserFreezeRecordOperationCompleted(object arg) {
            if ((this.QueryUserFreezeRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUserFreezeRecordCompleted(this, new QueryUserFreezeRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryUserControledRecord", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryUserControledRecord(string qqid, string strBeginDate, string strEndDate, int iNumStart, int iNumMax) {
            object[] results = this.Invoke("QueryUserControledRecord", new object[] {
                        qqid,
                        strBeginDate,
                        strEndDate,
                        iNumStart,
                        iNumMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryUserControledRecord(string qqid, string strBeginDate, string strEndDate, int iNumStart, int iNumMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryUserControledRecord", new object[] {
                        qqid,
                        strBeginDate,
                        strEndDate,
                        iNumStart,
                        iNumMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryUserControledRecord(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUserControledRecordAsync(string qqid, string strBeginDate, string strEndDate, int iNumStart, int iNumMax) {
            this.QueryUserControledRecordAsync(qqid, strBeginDate, strEndDate, iNumStart, iNumMax, null);
        }
        
        /// <remarks/>
        public void QueryUserControledRecordAsync(string qqid, string strBeginDate, string strEndDate, int iNumStart, int iNumMax, object userState) {
            if ((this.QueryUserControledRecordOperationCompleted == null)) {
                this.QueryUserControledRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUserControledRecordOperationCompleted);
            }
            this.InvokeAsync("QueryUserControledRecord", new object[] {
                        qqid,
                        strBeginDate,
                        strEndDate,
                        iNumStart,
                        iNumMax}, this.QueryUserControledRecordOperationCompleted, userState);
        }
        
        private void OnQueryUserControledRecordOperationCompleted(object arg) {
            if ((this.QueryUserControledRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUserControledRecordCompleted(this, new QueryUserControledRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDkInfo_GetBank", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryDkInfo_GetBank() {
            object[] results = this.Invoke("QueryDkInfo_GetBank", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDkInfo_GetBank(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDkInfo_GetBank", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryDkInfo_GetBank(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDkInfo_GetBankAsync() {
            this.QueryDkInfo_GetBankAsync(null);
        }
        
        /// <remarks/>
        public void QueryDkInfo_GetBankAsync(object userState) {
            if ((this.QueryDkInfo_GetBankOperationCompleted == null)) {
                this.QueryDkInfo_GetBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDkInfo_GetBankOperationCompleted);
            }
            this.InvokeAsync("QueryDkInfo_GetBank", new object[0], this.QueryDkInfo_GetBankOperationCompleted, userState);
        }
        
        private void OnQueryDkInfo_GetBankOperationCompleted(object arg) {
            if ((this.QueryDkInfo_GetBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDkInfo_GetBankCompleted(this, new QueryDkInfo_GetBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDkInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryDkInfo(string explain, string bankID, string userID, string strBeginDate, string strEndDate, string spid, string spListID, string spBatchID, string cep_id, string state, string transaction_id, string bank_type, string service_code, int limStart, int limMax) {
            object[] results = this.Invoke("QueryDkInfo", new object[] {
                        explain,
                        bankID,
                        userID,
                        strBeginDate,
                        strEndDate,
                        spid,
                        spListID,
                        spBatchID,
                        cep_id,
                        state,
                        transaction_id,
                        bank_type,
                        service_code,
                        limStart,
                        limMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDkInfo(
                    string explain, 
                    string bankID, 
                    string userID, 
                    string strBeginDate, 
                    string strEndDate, 
                    string spid, 
                    string spListID, 
                    string spBatchID, 
                    string cep_id, 
                    string state, 
                    string transaction_id, 
                    string bank_type, 
                    string service_code, 
                    int limStart, 
                    int limMax, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("QueryDkInfo", new object[] {
                        explain,
                        bankID,
                        userID,
                        strBeginDate,
                        strEndDate,
                        spid,
                        spListID,
                        spBatchID,
                        cep_id,
                        state,
                        transaction_id,
                        bank_type,
                        service_code,
                        limStart,
                        limMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryDkInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDkInfoAsync(string explain, string bankID, string userID, string strBeginDate, string strEndDate, string spid, string spListID, string spBatchID, string cep_id, string state, string transaction_id, string bank_type, string service_code, int limStart, int limMax) {
            this.QueryDkInfoAsync(explain, bankID, userID, strBeginDate, strEndDate, spid, spListID, spBatchID, cep_id, state, transaction_id, bank_type, service_code, limStart, limMax, null);
        }
        
        /// <remarks/>
        public void QueryDkInfoAsync(
                    string explain, 
                    string bankID, 
                    string userID, 
                    string strBeginDate, 
                    string strEndDate, 
                    string spid, 
                    string spListID, 
                    string spBatchID, 
                    string cep_id, 
                    string state, 
                    string transaction_id, 
                    string bank_type, 
                    string service_code, 
                    int limStart, 
                    int limMax, 
                    object userState) {
            if ((this.QueryDkInfoOperationCompleted == null)) {
                this.QueryDkInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDkInfoOperationCompleted);
            }
            this.InvokeAsync("QueryDkInfo", new object[] {
                        explain,
                        bankID,
                        userID,
                        strBeginDate,
                        strEndDate,
                        spid,
                        spListID,
                        spBatchID,
                        cep_id,
                        state,
                        transaction_id,
                        bank_type,
                        service_code,
                        limStart,
                        limMax}, this.QueryDkInfoOperationCompleted, userState);
        }
        
        private void OnQueryDkInfoOperationCompleted(object arg) {
            if ((this.QueryDkInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDkInfoCompleted(this, new QueryDkInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CountDKInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CountDKInfo(string transactionId, string bankType, string bankID, string userID, string strBeginDate, string strEndDate, string spid, string spListID, string spBatchID, string state) {
            object[] results = this.Invoke("CountDKInfo", new object[] {
                        transactionId,
                        bankType,
                        bankID,
                        userID,
                        strBeginDate,
                        strEndDate,
                        spid,
                        spListID,
                        spBatchID,
                        state});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCountDKInfo(string transactionId, string bankType, string bankID, string userID, string strBeginDate, string strEndDate, string spid, string spListID, string spBatchID, string state, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CountDKInfo", new object[] {
                        transactionId,
                        bankType,
                        bankID,
                        userID,
                        strBeginDate,
                        strEndDate,
                        spid,
                        spListID,
                        spBatchID,
                        state}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndCountDKInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CountDKInfoAsync(string transactionId, string bankType, string bankID, string userID, string strBeginDate, string strEndDate, string spid, string spListID, string spBatchID, string state) {
            this.CountDKInfoAsync(transactionId, bankType, bankID, userID, strBeginDate, strEndDate, spid, spListID, spBatchID, state, null);
        }
        
        /// <remarks/>
        public void CountDKInfoAsync(string transactionId, string bankType, string bankID, string userID, string strBeginDate, string strEndDate, string spid, string spListID, string spBatchID, string state, object userState) {
            if ((this.CountDKInfoOperationCompleted == null)) {
                this.CountDKInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountDKInfoOperationCompleted);
            }
            this.InvokeAsync("CountDKInfo", new object[] {
                        transactionId,
                        bankType,
                        bankID,
                        userID,
                        strBeginDate,
                        strEndDate,
                        spid,
                        spListID,
                        spBatchID,
                        state}, this.CountDKInfoOperationCompleted, userState);
        }
        
        private void OnCountDKInfoOperationCompleted(object arg) {
            if ((this.CountDKInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountDKInfoCompleted(this, new CountDKInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDkDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryDkDetail(string cep_id, string strBeginDate, string strEndDate) {
            object[] results = this.Invoke("QueryDkDetail", new object[] {
                        cep_id,
                        strBeginDate,
                        strEndDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDkDetail(string cep_id, string strBeginDate, string strEndDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDkDetail", new object[] {
                        cep_id,
                        strBeginDate,
                        strEndDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryDkDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDkDetailAsync(string cep_id, string strBeginDate, string strEndDate) {
            this.QueryDkDetailAsync(cep_id, strBeginDate, strEndDate, null);
        }
        
        /// <remarks/>
        public void QueryDkDetailAsync(string cep_id, string strBeginDate, string strEndDate, object userState) {
            if ((this.QueryDkDetailOperationCompleted == null)) {
                this.QueryDkDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDkDetailOperationCompleted);
            }
            this.InvokeAsync("QueryDkDetail", new object[] {
                        cep_id,
                        strBeginDate,
                        strEndDate}, this.QueryDkDetailOperationCompleted, userState);
        }
        
        private void OnQueryDkDetailOperationCompleted(object arg) {
            if ((this.QueryDkDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDkDetailCompleted(this, new QueryDkDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBatchInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBatchInfo(string strBeginDate, string strEndDate, string spid, string spBatchID, string batchid, string state, int limStart, int limMax) {
            object[] results = this.Invoke("QueryBatchInfo", new object[] {
                        strBeginDate,
                        strEndDate,
                        spid,
                        spBatchID,
                        batchid,
                        state,
                        limStart,
                        limMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBatchInfo(string strBeginDate, string strEndDate, string spid, string spBatchID, string batchid, string state, int limStart, int limMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBatchInfo", new object[] {
                        strBeginDate,
                        strEndDate,
                        spid,
                        spBatchID,
                        batchid,
                        state,
                        limStart,
                        limMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryBatchInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBatchInfoAsync(string strBeginDate, string strEndDate, string spid, string spBatchID, string batchid, string state, int limStart, int limMax) {
            this.QueryBatchInfoAsync(strBeginDate, strEndDate, spid, spBatchID, batchid, state, limStart, limMax, null);
        }
        
        /// <remarks/>
        public void QueryBatchInfoAsync(string strBeginDate, string strEndDate, string spid, string spBatchID, string batchid, string state, int limStart, int limMax, object userState) {
            if ((this.QueryBatchInfoOperationCompleted == null)) {
                this.QueryBatchInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBatchInfoOperationCompleted);
            }
            this.InvokeAsync("QueryBatchInfo", new object[] {
                        strBeginDate,
                        strEndDate,
                        spid,
                        spBatchID,
                        batchid,
                        state,
                        limStart,
                        limMax}, this.QueryBatchInfoOperationCompleted, userState);
        }
        
        private void OnQueryBatchInfoOperationCompleted(object arg) {
            if ((this.QueryBatchInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBatchInfoCompleted(this, new QueryBatchInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CountBatchInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CountBatchInfo(string strBeginDate, string strEndDate, string spid, string spBatchID, string batchid, string state) {
            object[] results = this.Invoke("CountBatchInfo", new object[] {
                        strBeginDate,
                        strEndDate,
                        spid,
                        spBatchID,
                        batchid,
                        state});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCountBatchInfo(string strBeginDate, string strEndDate, string spid, string spBatchID, string batchid, string state, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CountBatchInfo", new object[] {
                        strBeginDate,
                        strEndDate,
                        spid,
                        spBatchID,
                        batchid,
                        state}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndCountBatchInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CountBatchInfoAsync(string strBeginDate, string strEndDate, string spid, string spBatchID, string batchid, string state) {
            this.CountBatchInfoAsync(strBeginDate, strEndDate, spid, spBatchID, batchid, state, null);
        }
        
        /// <remarks/>
        public void CountBatchInfoAsync(string strBeginDate, string strEndDate, string spid, string spBatchID, string batchid, string state, object userState) {
            if ((this.CountBatchInfoOperationCompleted == null)) {
                this.CountBatchInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountBatchInfoOperationCompleted);
            }
            this.InvokeAsync("CountBatchInfo", new object[] {
                        strBeginDate,
                        strEndDate,
                        spid,
                        spBatchID,
                        batchid,
                        state}, this.CountBatchInfoOperationCompleted, userState);
        }
        
        private void OnCountBatchInfoOperationCompleted(object arg) {
            if ((this.CountBatchInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountBatchInfoCompleted(this, new CountBatchInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCepspServiceInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCepspServiceInfo(string spid, string service_code) {
            object[] results = this.Invoke("GetCepspServiceInfo", new object[] {
                        spid,
                        service_code});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCepspServiceInfo(string spid, string service_code, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCepspServiceInfo", new object[] {
                        spid,
                        service_code}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCepspServiceInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCepspServiceInfoAsync(string spid, string service_code) {
            this.GetCepspServiceInfoAsync(spid, service_code, null);
        }
        
        /// <remarks/>
        public void GetCepspServiceInfoAsync(string spid, string service_code, object userState) {
            if ((this.GetCepspServiceInfoOperationCompleted == null)) {
                this.GetCepspServiceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCepspServiceInfoOperationCompleted);
            }
            this.InvokeAsync("GetCepspServiceInfo", new object[] {
                        spid,
                        service_code}, this.GetCepspServiceInfoOperationCompleted, userState);
        }
        
        private void OnGetCepspServiceInfoOperationCompleted(object arg) {
            if ((this.GetCepspServiceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCepspServiceInfoCompleted(this, new GetCepspServiceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGwq", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGwq(string u_ID, string filter, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetGwq", new object[] {
                        u_ID,
                        filter,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGwq(string u_ID, string filter, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGwq", new object[] {
                        u_ID,
                        filter,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetGwq(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGwqAsync(string u_ID, string filter, int iPageStart, int iPageMax) {
            this.GetGwqAsync(u_ID, filter, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetGwqAsync(string u_ID, string filter, int iPageStart, int iPageMax, object userState) {
            if ((this.GetGwqOperationCompleted == null)) {
                this.GetGwqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGwqOperationCompleted);
            }
            this.InvokeAsync("GetGwq", new object[] {
                        u_ID,
                        filter,
                        iPageStart,
                        iPageMax}, this.GetGwqOperationCompleted, userState);
        }
        
        private void OnGetGwqOperationCompleted(object arg) {
            if ((this.GetGwqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGwqCompleted(this, new GetGwqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGwqCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetGwqCount(string u_ID, string filter) {
            object[] results = this.Invoke("GetGwqCount", new object[] {
                        u_ID,
                        filter});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGwqCount(string u_ID, string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGwqCount", new object[] {
                        u_ID,
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetGwqCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetGwqCountAsync(string u_ID, string filter) {
            this.GetGwqCountAsync(u_ID, filter, null);
        }
        
        /// <remarks/>
        public void GetGwqCountAsync(string u_ID, string filter, object userState) {
            if ((this.GetGwqCountOperationCompleted == null)) {
                this.GetGwqCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGwqCountOperationCompleted);
            }
            this.InvokeAsync("GetGwqCount", new object[] {
                        u_ID,
                        filter}, this.GetGwqCountOperationCompleted, userState);
        }
        
        private void OnGetGwqCountOperationCompleted(object arg) {
            if ((this.GetGwqCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGwqCountCompleted(this, new GetGwqCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/getUserReports", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getUserReports(int istartIndex, int length, System.DateTime bgdate, System.DateTime eddate, string whereStr, out System.Data.DataSet ds, out string Msg) {
            object[] results = this.Invoke("getUserReports", new object[] {
                        istartIndex,
                        length,
                        bgdate,
                        eddate,
                        whereStr});
            ds = ((System.Data.DataSet)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserReports(int istartIndex, int length, System.DateTime bgdate, System.DateTime eddate, string whereStr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserReports", new object[] {
                        istartIndex,
                        length,
                        bgdate,
                        eddate,
                        whereStr}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndgetUserReports(System.IAsyncResult asyncResult, out System.Data.DataSet ds, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            ds = ((System.Data.DataSet)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getUserReportsAsync(int istartIndex, int length, System.DateTime bgdate, System.DateTime eddate, string whereStr) {
            this.getUserReportsAsync(istartIndex, length, bgdate, eddate, whereStr, null);
        }
        
        /// <remarks/>
        public void getUserReportsAsync(int istartIndex, int length, System.DateTime bgdate, System.DateTime eddate, string whereStr, object userState) {
            if ((this.getUserReportsOperationCompleted == null)) {
                this.getUserReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserReportsOperationCompleted);
            }
            this.InvokeAsync("getUserReports", new object[] {
                        istartIndex,
                        length,
                        bgdate,
                        eddate,
                        whereStr}, this.getUserReportsOperationCompleted, userState);
        }
        
        private void OngetUserReportsOperationCompleted(object arg) {
            if ((this.getUserReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserReportsCompleted(this, new getUserReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/getUserModify", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getUserModify(int istartIndex, int length, System.DateTime bgdate, System.DateTime eddate, string whereStr, out System.Data.DataSet ds, out string Msg) {
            object[] results = this.Invoke("getUserModify", new object[] {
                        istartIndex,
                        length,
                        bgdate,
                        eddate,
                        whereStr});
            ds = ((System.Data.DataSet)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserModify(int istartIndex, int length, System.DateTime bgdate, System.DateTime eddate, string whereStr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserModify", new object[] {
                        istartIndex,
                        length,
                        bgdate,
                        eddate,
                        whereStr}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndgetUserModify(System.IAsyncResult asyncResult, out System.Data.DataSet ds, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            ds = ((System.Data.DataSet)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getUserModifyAsync(int istartIndex, int length, System.DateTime bgdate, System.DateTime eddate, string whereStr) {
            this.getUserModifyAsync(istartIndex, length, bgdate, eddate, whereStr, null);
        }
        
        /// <remarks/>
        public void getUserModifyAsync(int istartIndex, int length, System.DateTime bgdate, System.DateTime eddate, string whereStr, object userState) {
            if ((this.getUserModifyOperationCompleted == null)) {
                this.getUserModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserModifyOperationCompleted);
            }
            this.InvokeAsync("getUserModify", new object[] {
                        istartIndex,
                        length,
                        bgdate,
                        eddate,
                        whereStr}, this.getUserModifyOperationCompleted, userState);
        }
        
        private void OngetUserModifyOperationCompleted(object arg) {
            if ((this.getUserModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserModifyCompleted(this, new getUserModifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetChildrenInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetChildrenInfo(string u_QQID, string Fcurtype) {
            object[] results = this.Invoke("GetChildrenInfo", new object[] {
                        u_QQID,
                        Fcurtype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChildrenInfo(string u_QQID, string Fcurtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChildrenInfo", new object[] {
                        u_QQID,
                        Fcurtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetChildrenInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChildrenInfoAsync(string u_QQID, string Fcurtype) {
            this.GetChildrenInfoAsync(u_QQID, Fcurtype, null);
        }
        
        /// <remarks/>
        public void GetChildrenInfoAsync(string u_QQID, string Fcurtype, object userState) {
            if ((this.GetChildrenInfoOperationCompleted == null)) {
                this.GetChildrenInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildrenInfoOperationCompleted);
            }
            this.InvokeAsync("GetChildrenInfo", new object[] {
                        u_QQID,
                        Fcurtype}, this.GetChildrenInfoOperationCompleted, userState);
        }
        
        private void OnGetChildrenInfoOperationCompleted(object arg) {
            if ((this.GetChildrenInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildrenInfoCompleted(this, new GetChildrenInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/LogOnUsercheckOrder", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LogOnUsercheckOrder(string u_QQID, string Fcurtype) {
            object[] results = this.Invoke("LogOnUsercheckOrder", new object[] {
                        u_QQID,
                        Fcurtype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogOnUsercheckOrder(string u_QQID, string Fcurtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogOnUsercheckOrder", new object[] {
                        u_QQID,
                        Fcurtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndLogOnUsercheckOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LogOnUsercheckOrderAsync(string u_QQID, string Fcurtype) {
            this.LogOnUsercheckOrderAsync(u_QQID, Fcurtype, null);
        }
        
        /// <remarks/>
        public void LogOnUsercheckOrderAsync(string u_QQID, string Fcurtype, object userState) {
            if ((this.LogOnUsercheckOrderOperationCompleted == null)) {
                this.LogOnUsercheckOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogOnUsercheckOrderOperationCompleted);
            }
            this.InvokeAsync("LogOnUsercheckOrder", new object[] {
                        u_QQID,
                        Fcurtype}, this.LogOnUsercheckOrderOperationCompleted, userState);
        }
        
        private void OnLogOnUsercheckOrderOperationCompleted(object arg) {
            if ((this.LogOnUsercheckOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogOnUsercheckOrderCompleted(this, new LogOnUsercheckOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/LogOnUserDeleteUser", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LogOnUserDeleteUser(string qqid, string reason, string user, string userIP, out string Msg) {
            object[] results = this.Invoke("LogOnUserDeleteUser", new object[] {
                        qqid,
                        reason,
                        user,
                        userIP});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogOnUserDeleteUser(string qqid, string reason, string user, string userIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogOnUserDeleteUser", new object[] {
                        qqid,
                        reason,
                        user,
                        userIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndLogOnUserDeleteUser(System.IAsyncResult asyncResult, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LogOnUserDeleteUserAsync(string qqid, string reason, string user, string userIP) {
            this.LogOnUserDeleteUserAsync(qqid, reason, user, userIP, null);
        }
        
        /// <remarks/>
        public void LogOnUserDeleteUserAsync(string qqid, string reason, string user, string userIP, object userState) {
            if ((this.LogOnUserDeleteUserOperationCompleted == null)) {
                this.LogOnUserDeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogOnUserDeleteUserOperationCompleted);
            }
            this.InvokeAsync("LogOnUserDeleteUser", new object[] {
                        qqid,
                        reason,
                        user,
                        userIP}, this.LogOnUserDeleteUserOperationCompleted, userState);
        }
        
        private void OnLogOnUserDeleteUserOperationCompleted(object arg) {
            if ((this.LogOnUserDeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogOnUserDeleteUserCompleted(this, new LogOnUserDeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/LogOnUserCheckYDT", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LogOnUserCheckYDT(string qqid, string Fcurtype) {
            object[] results = this.Invoke("LogOnUserCheckYDT", new object[] {
                        qqid,
                        Fcurtype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogOnUserCheckYDT(string qqid, string Fcurtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogOnUserCheckYDT", new object[] {
                        qqid,
                        Fcurtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndLogOnUserCheckYDT(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LogOnUserCheckYDTAsync(string qqid, string Fcurtype) {
            this.LogOnUserCheckYDTAsync(qqid, Fcurtype, null);
        }
        
        /// <remarks/>
        public void LogOnUserCheckYDTAsync(string qqid, string Fcurtype, object userState) {
            if ((this.LogOnUserCheckYDTOperationCompleted == null)) {
                this.LogOnUserCheckYDTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogOnUserCheckYDTOperationCompleted);
            }
            this.InvokeAsync("LogOnUserCheckYDT", new object[] {
                        qqid,
                        Fcurtype}, this.LogOnUserCheckYDTOperationCompleted, userState);
        }
        
        private void OnLogOnUserCheckYDTOperationCompleted(object arg) {
            if ((this.LogOnUserCheckYDTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogOnUserCheckYDTCompleted(this, new LogOnUserCheckYDTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetChildrenBankRollList2", RequestElementName="GetChildrenBankRollList2", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseElementName="GetChildrenBankRollList2Response", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetChildrenBankRollList2Result")]
        public System.Data.DataSet GetChildrenBankRollList(string u_QQID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string Fcurtype, int istr, int imax) {
            object[] results = this.Invoke("GetChildrenBankRollList", new object[] {
                        u_QQID,
                        u_BeginTime,
                        u_EndTime,
                        Fcurtype,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChildrenBankRollList(string u_QQID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string Fcurtype, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChildrenBankRollList", new object[] {
                        u_QQID,
                        u_BeginTime,
                        u_EndTime,
                        Fcurtype,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetChildrenBankRollList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChildrenBankRollListAsync(string u_QQID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string Fcurtype, int istr, int imax) {
            this.GetChildrenBankRollListAsync(u_QQID, u_BeginTime, u_EndTime, Fcurtype, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetChildrenBankRollListAsync(string u_QQID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string Fcurtype, int istr, int imax, object userState) {
            if ((this.GetChildrenBankRollListOperationCompleted == null)) {
                this.GetChildrenBankRollListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildrenBankRollListOperationCompleted);
            }
            this.InvokeAsync("GetChildrenBankRollList", new object[] {
                        u_QQID,
                        u_BeginTime,
                        u_EndTime,
                        Fcurtype,
                        istr,
                        imax}, this.GetChildrenBankRollListOperationCompleted, userState);
        }
        
        private void OnGetChildrenBankRollListOperationCompleted(object arg) {
            if ((this.GetChildrenBankRollListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildrenBankRollListCompleted(this, new GetChildrenBankRollListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="GetChildrenBankRollList1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetChildrenBankRollList", RequestElementName="GetChildrenBankRollList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseElementName="GetChildrenBankRollListResponse", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetChildrenBankRollListResult")]
        public System.Data.DataSet GetChildrenBankRollList(string u_QQID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string Fcurtype, int istr, int imax, int Ftype, string Fmemo) {
            object[] results = this.Invoke("GetChildrenBankRollList1", new object[] {
                        u_QQID,
                        u_BeginTime,
                        u_EndTime,
                        Fcurtype,
                        istr,
                        imax,
                        Ftype,
                        Fmemo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChildrenBankRollList1(string u_QQID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string Fcurtype, int istr, int imax, int Ftype, string Fmemo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChildrenBankRollList1", new object[] {
                        u_QQID,
                        u_BeginTime,
                        u_EndTime,
                        Fcurtype,
                        istr,
                        imax,
                        Ftype,
                        Fmemo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetChildrenBankRollList1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChildrenBankRollList1Async(string u_QQID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string Fcurtype, int istr, int imax, int Ftype, string Fmemo) {
            this.GetChildrenBankRollList1Async(u_QQID, u_BeginTime, u_EndTime, Fcurtype, istr, imax, Ftype, Fmemo, null);
        }
        
        /// <remarks/>
        public void GetChildrenBankRollList1Async(string u_QQID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string Fcurtype, int istr, int imax, int Ftype, string Fmemo, object userState) {
            if ((this.GetChildrenBankRollList1OperationCompleted == null)) {
                this.GetChildrenBankRollList1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildrenBankRollList1OperationCompleted);
            }
            this.InvokeAsync("GetChildrenBankRollList1", new object[] {
                        u_QQID,
                        u_BeginTime,
                        u_EndTime,
                        Fcurtype,
                        istr,
                        imax,
                        Ftype,
                        Fmemo}, this.GetChildrenBankRollList1OperationCompleted, userState);
        }
        
        private void OnGetChildrenBankRollList1OperationCompleted(object arg) {
            if ((this.GetChildrenBankRollList1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildrenBankRollList1Completed(this, new GetChildrenBankRollList1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetChildrenBankRollListEx", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetChildrenBankRollListEx(string qqId, System.DateTime beginTime, System.DateTime endTime, string spId, int pageIndex, int pageMax, int fType, string fMemo) {
            object[] results = this.Invoke("GetChildrenBankRollListEx", new object[] {
                        qqId,
                        beginTime,
                        endTime,
                        spId,
                        pageIndex,
                        pageMax,
                        fType,
                        fMemo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChildrenBankRollListEx(string qqId, System.DateTime beginTime, System.DateTime endTime, string spId, int pageIndex, int pageMax, int fType, string fMemo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChildrenBankRollListEx", new object[] {
                        qqId,
                        beginTime,
                        endTime,
                        spId,
                        pageIndex,
                        pageMax,
                        fType,
                        fMemo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetChildrenBankRollListEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChildrenBankRollListExAsync(string qqId, System.DateTime beginTime, System.DateTime endTime, string spId, int pageIndex, int pageMax, int fType, string fMemo) {
            this.GetChildrenBankRollListExAsync(qqId, beginTime, endTime, spId, pageIndex, pageMax, fType, fMemo, null);
        }
        
        /// <remarks/>
        public void GetChildrenBankRollListExAsync(string qqId, System.DateTime beginTime, System.DateTime endTime, string spId, int pageIndex, int pageMax, int fType, string fMemo, object userState) {
            if ((this.GetChildrenBankRollListExOperationCompleted == null)) {
                this.GetChildrenBankRollListExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildrenBankRollListExOperationCompleted);
            }
            this.InvokeAsync("GetChildrenBankRollListEx", new object[] {
                        qqId,
                        beginTime,
                        endTime,
                        spId,
                        pageIndex,
                        pageMax,
                        fType,
                        fMemo}, this.GetChildrenBankRollListExOperationCompleted, userState);
        }
        
        private void OnGetChildrenBankRollListExOperationCompleted(object arg) {
            if ((this.GetChildrenBankRollListExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildrenBankRollListExCompleted(this, new GetChildrenBankRollListExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetChildrenFlistList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetChildrenFlistList(string Flistid, string Fcurtype) {
            object[] results = this.Invoke("GetChildrenFlistList", new object[] {
                        Flistid,
                        Fcurtype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChildrenFlistList(string Flistid, string Fcurtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChildrenFlistList", new object[] {
                        Flistid,
                        Fcurtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetChildrenFlistList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChildrenFlistListAsync(string Flistid, string Fcurtype) {
            this.GetChildrenFlistListAsync(Flistid, Fcurtype, null);
        }
        
        /// <remarks/>
        public void GetChildrenFlistListAsync(string Flistid, string Fcurtype, object userState) {
            if ((this.GetChildrenFlistListOperationCompleted == null)) {
                this.GetChildrenFlistListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildrenFlistListOperationCompleted);
            }
            this.InvokeAsync("GetChildrenFlistList", new object[] {
                        Flistid,
                        Fcurtype}, this.GetChildrenFlistListOperationCompleted, userState);
        }
        
        private void OnGetChildrenFlistListOperationCompleted(object arg) {
            if ((this.GetChildrenFlistListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildrenFlistListCompleted(this, new GetChildrenFlistListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ChildrenFreezeOrUnfreeze", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChildrenFreezeOrUnfreeze(string u_QQID, string Fcurtype, string UpdateFstate) {
            this.Invoke("ChildrenFreezeOrUnfreeze", new object[] {
                        u_QQID,
                        Fcurtype,
                        UpdateFstate});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChildrenFreezeOrUnfreeze(string u_QQID, string Fcurtype, string UpdateFstate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChildrenFreezeOrUnfreeze", new object[] {
                        u_QQID,
                        Fcurtype,
                        UpdateFstate}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndChildrenFreezeOrUnfreeze(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ChildrenFreezeOrUnfreezeAsync(string u_QQID, string Fcurtype, string UpdateFstate) {
            this.ChildrenFreezeOrUnfreezeAsync(u_QQID, Fcurtype, UpdateFstate, null);
        }
        
        /// <remarks/>
        public void ChildrenFreezeOrUnfreezeAsync(string u_QQID, string Fcurtype, string UpdateFstate, object userState) {
            if ((this.ChildrenFreezeOrUnfreezeOperationCompleted == null)) {
                this.ChildrenFreezeOrUnfreezeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChildrenFreezeOrUnfreezeOperationCompleted);
            }
            this.InvokeAsync("ChildrenFreezeOrUnfreeze", new object[] {
                        u_QQID,
                        Fcurtype,
                        UpdateFstate}, this.ChildrenFreezeOrUnfreezeOperationCompleted, userState);
        }
        
        private void OnChildrenFreezeOrUnfreezeOperationCompleted(object arg) {
            if ((this.ChildrenFreezeOrUnfreezeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChildrenFreezeOrUnfreezeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSysBulletin", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSysBulletin(string listtype, out string msg) {
            object[] results = this.Invoke("GetSysBulletin", new object[] {
                        listtype});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSysBulletin(string listtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSysBulletin", new object[] {
                        listtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSysBulletin(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSysBulletinAsync(string listtype) {
            this.GetSysBulletinAsync(listtype, null);
        }
        
        /// <remarks/>
        public void GetSysBulletinAsync(string listtype, object userState) {
            if ((this.GetSysBulletinOperationCompleted == null)) {
                this.GetSysBulletinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSysBulletinOperationCompleted);
            }
            this.InvokeAsync("GetSysBulletin", new object[] {
                        listtype}, this.GetSysBulletinOperationCompleted, userState);
        }
        
        private void OnGetSysBulletinOperationCompleted(object arg) {
            if ((this.GetSysBulletinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSysBulletinCompleted(this, new GetSysBulletinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSysBankBulletin", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSysBankBulletin(string banktype, out string msg) {
            object[] results = this.Invoke("GetSysBankBulletin", new object[] {
                        banktype});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSysBankBulletin(string banktype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSysBankBulletin", new object[] {
                        banktype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSysBankBulletin(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSysBankBulletinAsync(string banktype) {
            this.GetSysBankBulletinAsync(banktype, null);
        }
        
        /// <remarks/>
        public void GetSysBankBulletinAsync(string banktype, object userState) {
            if ((this.GetSysBankBulletinOperationCompleted == null)) {
                this.GetSysBankBulletinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSysBankBulletinOperationCompleted);
            }
            this.InvokeAsync("GetSysBankBulletin", new object[] {
                        banktype}, this.GetSysBankBulletinOperationCompleted, userState);
        }
        
        private void OnGetSysBankBulletinOperationCompleted(object arg) {
            if ((this.GetSysBankBulletinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSysBankBulletinCompleted(this, new GetSysBankBulletinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSysBankInterface", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSysBankInterface(string busineType, string banktype, out string msg) {
            object[] results = this.Invoke("GetSysBankInterface", new object[] {
                        busineType,
                        banktype});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSysBankInterface(string busineType, string banktype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSysBankInterface", new object[] {
                        busineType,
                        banktype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSysBankInterface(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSysBankInterfaceAsync(string busineType, string banktype) {
            this.GetSysBankInterfaceAsync(busineType, banktype, null);
        }
        
        /// <remarks/>
        public void GetSysBankInterfaceAsync(string busineType, string banktype, object userState) {
            if ((this.GetSysBankInterfaceOperationCompleted == null)) {
                this.GetSysBankInterfaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSysBankInterfaceOperationCompleted);
            }
            this.InvokeAsync("GetSysBankInterface", new object[] {
                        busineType,
                        banktype}, this.GetSysBankInterfaceOperationCompleted, userState);
        }
        
        private void OnGetSysBankInterfaceOperationCompleted(object arg) {
            if ((this.GetSysBankInterfaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSysBankInterfaceCompleted(this, new GetSysBankInterfaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankInterfaceById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANKBULLETIN_TYPE_ALL QueryBankInterfaceById(string fid, out string msg) {
            object[] results = this.Invoke("QueryBankInterfaceById", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((T_BANKBULLETIN_TYPE_ALL)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankInterfaceById(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankInterfaceById", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_TYPE_ALL EndQueryBankInterfaceById(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANKBULLETIN_TYPE_ALL)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankInterfaceByIdAsync(string fid) {
            this.QueryBankInterfaceByIdAsync(fid, null);
        }
        
        /// <remarks/>
        public void QueryBankInterfaceByIdAsync(string fid, object userState) {
            if ((this.QueryBankInterfaceByIdOperationCompleted == null)) {
                this.QueryBankInterfaceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankInterfaceByIdOperationCompleted);
            }
            this.InvokeAsync("QueryBankInterfaceById", new object[] {
                        fid}, this.QueryBankInterfaceByIdOperationCompleted, userState);
        }
        
        private void OnQueryBankInterfaceByIdOperationCompleted(object arg) {
            if ((this.QueryBankInterfaceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankInterfaceByIdCompleted(this, new QueryBankInterfaceByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankInterfaceByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANKBULLETIN_TYPE_ALL QueryBankInterfaceByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryBankInterfaceByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_BANKBULLETIN_TYPE_ALL)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankInterfaceByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankInterfaceByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_TYPE_ALL EndQueryBankInterfaceByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANKBULLETIN_TYPE_ALL)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankInterfaceByObjidAsync(string objid, string checkType) {
            this.QueryBankInterfaceByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryBankInterfaceByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryBankInterfaceByObjidOperationCompleted == null)) {
                this.QueryBankInterfaceByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankInterfaceByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryBankInterfaceByObjid", new object[] {
                        objid,
                        checkType}, this.QueryBankInterfaceByObjidOperationCompleted, userState);
        }
        
        private void OnQueryBankInterfaceByObjidOperationCompleted(object arg) {
            if ((this.QueryBankInterfaceByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankInterfaceByObjidCompleted(this, new QueryBankInterfaceByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/IsRepeatedTime", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsRepeatedTime(string Fid, string Fbanktype, string Fbusinetype, string Fstartime, string Fendtime, out string msg) {
            object[] results = this.Invoke("IsRepeatedTime", new object[] {
                        Fid,
                        Fbanktype,
                        Fbusinetype,
                        Fstartime,
                        Fendtime});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsRepeatedTime(string Fid, string Fbanktype, string Fbusinetype, string Fstartime, string Fendtime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsRepeatedTime", new object[] {
                        Fid,
                        Fbanktype,
                        Fbusinetype,
                        Fstartime,
                        Fendtime}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsRepeatedTime(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsRepeatedTimeAsync(string Fid, string Fbanktype, string Fbusinetype, string Fstartime, string Fendtime) {
            this.IsRepeatedTimeAsync(Fid, Fbanktype, Fbusinetype, Fstartime, Fendtime, null);
        }
        
        /// <remarks/>
        public void IsRepeatedTimeAsync(string Fid, string Fbanktype, string Fbusinetype, string Fstartime, string Fendtime, object userState) {
            if ((this.IsRepeatedTimeOperationCompleted == null)) {
                this.IsRepeatedTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsRepeatedTimeOperationCompleted);
            }
            this.InvokeAsync("IsRepeatedTime", new object[] {
                        Fid,
                        Fbanktype,
                        Fbusinetype,
                        Fstartime,
                        Fendtime}, this.IsRepeatedTimeOperationCompleted, userState);
        }
        
        private void OnIsRepeatedTimeOperationCompleted(object arg) {
            if ((this.IsRepeatedTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsRepeatedTimeCompleted(this, new IsRepeatedTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankBulletinById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANKBULLETIN_INFO_ALL QueryBankBulletinById(string fid, out string msg) {
            object[] results = this.Invoke("QueryBankBulletinById", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((T_BANKBULLETIN_INFO_ALL)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankBulletinById(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankBulletinById", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_INFO_ALL EndQueryBankBulletinById(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANKBULLETIN_INFO_ALL)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankBulletinByIdAsync(string fid) {
            this.QueryBankBulletinByIdAsync(fid, null);
        }
        
        /// <remarks/>
        public void QueryBankBulletinByIdAsync(string fid, object userState) {
            if ((this.QueryBankBulletinByIdOperationCompleted == null)) {
                this.QueryBankBulletinByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankBulletinByIdOperationCompleted);
            }
            this.InvokeAsync("QueryBankBulletinById", new object[] {
                        fid}, this.QueryBankBulletinByIdOperationCompleted, userState);
        }
        
        private void OnQueryBankBulletinByIdOperationCompleted(object arg) {
            if ((this.QueryBankBulletinByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankBulletinByIdCompleted(this, new QueryBankBulletinByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankBulletinInfoByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANKBULLETIN_INFO_ALL QueryBankBulletinInfoByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryBankBulletinInfoByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_BANKBULLETIN_INFO_ALL)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankBulletinInfoByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankBulletinInfoByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_INFO_ALL EndQueryBankBulletinInfoByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANKBULLETIN_INFO_ALL)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankBulletinInfoByObjidAsync(string objid, string checkType) {
            this.QueryBankBulletinInfoByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryBankBulletinInfoByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryBankBulletinInfoByObjidOperationCompleted == null)) {
                this.QueryBankBulletinInfoByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankBulletinInfoByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryBankBulletinInfoByObjid", new object[] {
                        objid,
                        checkType}, this.QueryBankBulletinInfoByObjidOperationCompleted, userState);
        }
        
        private void OnQueryBankBulletinInfoByObjidOperationCompleted(object arg) {
            if ((this.QueryBankBulletinInfoByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankBulletinInfoByObjidCompleted(this, new QueryBankBulletinInfoByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUtility_charge", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUtility_charge(string servicecode, out string msg) {
            object[] results = this.Invoke("GetUtility_charge", new object[] {
                        servicecode});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUtility_charge(string servicecode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUtility_charge", new object[] {
                        servicecode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUtility_charge(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUtility_chargeAsync(string servicecode) {
            this.GetUtility_chargeAsync(servicecode, null);
        }
        
        /// <remarks/>
        public void GetUtility_chargeAsync(string servicecode, object userState) {
            if ((this.GetUtility_chargeOperationCompleted == null)) {
                this.GetUtility_chargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUtility_chargeOperationCompleted);
            }
            this.InvokeAsync("GetUtility_charge", new object[] {
                        servicecode}, this.GetUtility_chargeOperationCompleted, userState);
        }
        
        private void OnGetUtility_chargeOperationCompleted(object arg) {
            if ((this.GetUtility_chargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUtility_chargeCompleted(this, new GetUtility_chargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryUCBulletinById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_PUCNEWSERVICE_INFO QueryUCBulletinById(string fid, string uctype, out string msg) {
            object[] results = this.Invoke("QueryUCBulletinById", new object[] {
                        fid,
                        uctype});
            msg = ((string)(results[1]));
            return ((T_PUCNEWSERVICE_INFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryUCBulletinById(string fid, string uctype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryUCBulletinById", new object[] {
                        fid,
                        uctype}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_PUCNEWSERVICE_INFO EndQueryUCBulletinById(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_PUCNEWSERVICE_INFO)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUCBulletinByIdAsync(string fid, string uctype) {
            this.QueryUCBulletinByIdAsync(fid, uctype, null);
        }
        
        /// <remarks/>
        public void QueryUCBulletinByIdAsync(string fid, string uctype, object userState) {
            if ((this.QueryUCBulletinByIdOperationCompleted == null)) {
                this.QueryUCBulletinByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUCBulletinByIdOperationCompleted);
            }
            this.InvokeAsync("QueryUCBulletinById", new object[] {
                        fid,
                        uctype}, this.QueryUCBulletinByIdOperationCompleted, userState);
        }
        
        private void OnQueryUCBulletinByIdOperationCompleted(object arg) {
            if ((this.QueryUCBulletinByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUCBulletinByIdCompleted(this, new QueryUCBulletinByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryUCBulletinInfoByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_PUCNEWSERVICE_INFO QueryUCBulletinInfoByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryUCBulletinInfoByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_PUCNEWSERVICE_INFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryUCBulletinInfoByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryUCBulletinInfoByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_PUCNEWSERVICE_INFO EndQueryUCBulletinInfoByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_PUCNEWSERVICE_INFO)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUCBulletinInfoByObjidAsync(string objid, string checkType) {
            this.QueryUCBulletinInfoByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryUCBulletinInfoByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryUCBulletinInfoByObjidOperationCompleted == null)) {
                this.QueryUCBulletinInfoByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUCBulletinInfoByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryUCBulletinInfoByObjid", new object[] {
                        objid,
                        checkType}, this.QueryUCBulletinInfoByObjidOperationCompleted, userState);
        }
        
        private void OnQueryUCBulletinInfoByObjidOperationCompleted(object arg) {
            if ((this.QueryUCBulletinInfoByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUCBulletinInfoByObjidCompleted(this, new QueryUCBulletinInfoByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SysBulletinIssue", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SysBulletinIssue(string sysid, out string msg) {
            object[] results = this.Invoke("SysBulletinIssue", new object[] {
                        sysid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSysBulletinIssue(string sysid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SysBulletinIssue", new object[] {
                        sysid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSysBulletinIssue(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SysBulletinIssueAsync(string sysid) {
            this.SysBulletinIssueAsync(sysid, null);
        }
        
        /// <remarks/>
        public void SysBulletinIssueAsync(string sysid, object userState) {
            if ((this.SysBulletinIssueOperationCompleted == null)) {
                this.SysBulletinIssueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSysBulletinIssueOperationCompleted);
            }
            this.InvokeAsync("SysBulletinIssue", new object[] {
                        sysid}, this.SysBulletinIssueOperationCompleted, userState);
        }
        
        private void OnSysBulletinIssueOperationCompleted(object arg) {
            if ((this.SysBulletinIssueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SysBulletinIssueCompleted(this, new SysBulletinIssueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SysBulletinGoPrior", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SysBulletinGoPrior(string fid, string UserIP, out string msg) {
            object[] results = this.Invoke("SysBulletinGoPrior", new object[] {
                        fid,
                        UserIP});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSysBulletinGoPrior(string fid, string UserIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SysBulletinGoPrior", new object[] {
                        fid,
                        UserIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSysBulletinGoPrior(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SysBulletinGoPriorAsync(string fid, string UserIP) {
            this.SysBulletinGoPriorAsync(fid, UserIP, null);
        }
        
        /// <remarks/>
        public void SysBulletinGoPriorAsync(string fid, string UserIP, object userState) {
            if ((this.SysBulletinGoPriorOperationCompleted == null)) {
                this.SysBulletinGoPriorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSysBulletinGoPriorOperationCompleted);
            }
            this.InvokeAsync("SysBulletinGoPrior", new object[] {
                        fid,
                        UserIP}, this.SysBulletinGoPriorOperationCompleted, userState);
        }
        
        private void OnSysBulletinGoPriorOperationCompleted(object arg) {
            if ((this.SysBulletinGoPriorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SysBulletinGoPriorCompleted(this, new SysBulletinGoPriorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SysBulletinGoNext", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SysBulletinGoNext(string fid, string UserIP, out string msg) {
            object[] results = this.Invoke("SysBulletinGoNext", new object[] {
                        fid,
                        UserIP});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSysBulletinGoNext(string fid, string UserIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SysBulletinGoNext", new object[] {
                        fid,
                        UserIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSysBulletinGoNext(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SysBulletinGoNextAsync(string fid, string UserIP) {
            this.SysBulletinGoNextAsync(fid, UserIP, null);
        }
        
        /// <remarks/>
        public void SysBulletinGoNextAsync(string fid, string UserIP, object userState) {
            if ((this.SysBulletinGoNextOperationCompleted == null)) {
                this.SysBulletinGoNextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSysBulletinGoNextOperationCompleted);
            }
            this.InvokeAsync("SysBulletinGoNext", new object[] {
                        fid,
                        UserIP}, this.SysBulletinGoNextOperationCompleted, userState);
        }
        
        private void OnSysBulletinGoNextOperationCompleted(object arg) {
            if ((this.SysBulletinGoNextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SysBulletinGoNextCompleted(this, new SysBulletinGoNextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SysBulletinDel", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SysBulletinDel(string fid, string UserIP, out string msg) {
            object[] results = this.Invoke("SysBulletinDel", new object[] {
                        fid,
                        UserIP});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSysBulletinDel(string fid, string UserIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SysBulletinDel", new object[] {
                        fid,
                        UserIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSysBulletinDel(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SysBulletinDelAsync(string fid, string UserIP) {
            this.SysBulletinDelAsync(fid, UserIP, null);
        }
        
        /// <remarks/>
        public void SysBulletinDelAsync(string fid, string UserIP, object userState) {
            if ((this.SysBulletinDelOperationCompleted == null)) {
                this.SysBulletinDelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSysBulletinDelOperationCompleted);
            }
            this.InvokeAsync("SysBulletinDel", new object[] {
                        fid,
                        UserIP}, this.SysBulletinDelOperationCompleted, userState);
        }
        
        private void OnSysBulletinDelOperationCompleted(object arg) {
            if ((this.SysBulletinDelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SysBulletinDelCompleted(this, new SysBulletinDelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SysBulletinGoHistory", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SysBulletinGoHistory(string fid, string UserIP, out string msg) {
            object[] results = this.Invoke("SysBulletinGoHistory", new object[] {
                        fid,
                        UserIP});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSysBulletinGoHistory(string fid, string UserIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SysBulletinGoHistory", new object[] {
                        fid,
                        UserIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSysBulletinGoHistory(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SysBulletinGoHistoryAsync(string fid, string UserIP) {
            this.SysBulletinGoHistoryAsync(fid, UserIP, null);
        }
        
        /// <remarks/>
        public void SysBulletinGoHistoryAsync(string fid, string UserIP, object userState) {
            if ((this.SysBulletinGoHistoryOperationCompleted == null)) {
                this.SysBulletinGoHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSysBulletinGoHistoryOperationCompleted);
            }
            this.InvokeAsync("SysBulletinGoHistory", new object[] {
                        fid,
                        UserIP}, this.SysBulletinGoHistoryOperationCompleted, userState);
        }
        
        private void OnSysBulletinGoHistoryOperationCompleted(object arg) {
            if ((this.SysBulletinGoHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SysBulletinGoHistoryCompleted(this, new SysBulletinGoHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetOneSysBulletin", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SysBulletinClass GetOneSysBulletin(string fid, out string msg) {
            object[] results = this.Invoke("GetOneSysBulletin", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((SysBulletinClass)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOneSysBulletin(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOneSysBulletin", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public SysBulletinClass EndGetOneSysBulletin(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((SysBulletinClass)(results[0]));
        }
        
        /// <remarks/>
        public void GetOneSysBulletinAsync(string fid) {
            this.GetOneSysBulletinAsync(fid, null);
        }
        
        /// <remarks/>
        public void GetOneSysBulletinAsync(string fid, object userState) {
            if ((this.GetOneSysBulletinOperationCompleted == null)) {
                this.GetOneSysBulletinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOneSysBulletinOperationCompleted);
            }
            this.InvokeAsync("GetOneSysBulletin", new object[] {
                        fid}, this.GetOneSysBulletinOperationCompleted, userState);
        }
        
        private void OnGetOneSysBulletinOperationCompleted(object arg) {
            if ((this.GetOneSysBulletinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOneSysBulletinCompleted(this, new GetOneSysBulletinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/AddOneSysBulletin", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddOneSysBulletin(SysBulletinClass sc, string UserIP, out string msg) {
            object[] results = this.Invoke("AddOneSysBulletin", new object[] {
                        sc,
                        UserIP});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddOneSysBulletin(SysBulletinClass sc, string UserIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddOneSysBulletin", new object[] {
                        sc,
                        UserIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAddOneSysBulletin(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddOneSysBulletinAsync(SysBulletinClass sc, string UserIP) {
            this.AddOneSysBulletinAsync(sc, UserIP, null);
        }
        
        /// <remarks/>
        public void AddOneSysBulletinAsync(SysBulletinClass sc, string UserIP, object userState) {
            if ((this.AddOneSysBulletinOperationCompleted == null)) {
                this.AddOneSysBulletinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOneSysBulletinOperationCompleted);
            }
            this.InvokeAsync("AddOneSysBulletin", new object[] {
                        sc,
                        UserIP}, this.AddOneSysBulletinOperationCompleted, userState);
        }
        
        private void OnAddOneSysBulletinOperationCompleted(object arg) {
            if ((this.AddOneSysBulletinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOneSysBulletinCompleted(this, new AddOneSysBulletinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetB", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANKBULLETIN_INFO GetB() {
            object[] results = this.Invoke("GetB", new object[0]);
            return ((T_BANKBULLETIN_INFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetB(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetB", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_INFO EndGetB(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((T_BANKBULLETIN_INFO)(results[0]));
        }
        
        /// <remarks/>
        public void GetBAsync() {
            this.GetBAsync(null);
        }
        
        /// <remarks/>
        public void GetBAsync(object userState) {
            if ((this.GetBOperationCompleted == null)) {
                this.GetBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBOperationCompleted);
            }
            this.InvokeAsync("GetB", new object[0], this.GetBOperationCompleted, userState);
        }
        
        private void OnGetBOperationCompleted(object arg) {
            if ((this.GetBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBCompleted(this, new GetBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ChangeOneSysBulletin", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeOneSysBulletin(SysBulletinClass sc, string UserIP, out string msg) {
            object[] results = this.Invoke("ChangeOneSysBulletin", new object[] {
                        sc,
                        UserIP});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeOneSysBulletin(SysBulletinClass sc, string UserIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeOneSysBulletin", new object[] {
                        sc,
                        UserIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndChangeOneSysBulletin(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeOneSysBulletinAsync(SysBulletinClass sc, string UserIP) {
            this.ChangeOneSysBulletinAsync(sc, UserIP, null);
        }
        
        /// <remarks/>
        public void ChangeOneSysBulletinAsync(SysBulletinClass sc, string UserIP, object userState) {
            if ((this.ChangeOneSysBulletinOperationCompleted == null)) {
                this.ChangeOneSysBulletinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeOneSysBulletinOperationCompleted);
            }
            this.InvokeAsync("ChangeOneSysBulletin", new object[] {
                        sc,
                        UserIP}, this.ChangeOneSysBulletinOperationCompleted, userState);
        }
        
        private void OnChangeOneSysBulletinOperationCompleted(object arg) {
            if ((this.ChangeOneSysBulletinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeOneSysBulletinCompleted(this, new ChangeOneSysBulletinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankBulletinNotUse", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBankBulletinNotUse(int businesstype, int op_support_flag, int banktype, string bulletin_id) {
            object[] results = this.Invoke("QueryBankBulletinNotUse", new object[] {
                        businesstype,
                        op_support_flag,
                        banktype,
                        bulletin_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankBulletinNotUse(int businesstype, int op_support_flag, int banktype, string bulletin_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankBulletinNotUse", new object[] {
                        businesstype,
                        op_support_flag,
                        banktype,
                        bulletin_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryBankBulletinNotUse(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankBulletinNotUseAsync(int businesstype, int op_support_flag, int banktype, string bulletin_id) {
            this.QueryBankBulletinNotUseAsync(businesstype, op_support_flag, banktype, bulletin_id, null);
        }
        
        /// <remarks/>
        public void QueryBankBulletinNotUseAsync(int businesstype, int op_support_flag, int banktype, string bulletin_id, object userState) {
            if ((this.QueryBankBulletinNotUseOperationCompleted == null)) {
                this.QueryBankBulletinNotUseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankBulletinNotUseOperationCompleted);
            }
            this.InvokeAsync("QueryBankBulletinNotUse", new object[] {
                        businesstype,
                        op_support_flag,
                        banktype,
                        bulletin_id}, this.QueryBankBulletinNotUseOperationCompleted, userState);
        }
        
        private void OnQueryBankBulletinNotUseOperationCompleted(object arg) {
            if ((this.QueryBankBulletinNotUseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankBulletinNotUseCompleted(this, new QueryBankBulletinNotUseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankBulletin", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBankBulletin(int businesstype, int op_support_flag, int banktype, string bulletin_id, int limit, int offset) {
            object[] results = this.Invoke("QueryBankBulletin", new object[] {
                        businesstype,
                        op_support_flag,
                        banktype,
                        bulletin_id,
                        limit,
                        offset});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankBulletin(int businesstype, int op_support_flag, int banktype, string bulletin_id, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankBulletin", new object[] {
                        businesstype,
                        op_support_flag,
                        banktype,
                        bulletin_id,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryBankBulletin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankBulletinAsync(int businesstype, int op_support_flag, int banktype, string bulletin_id, int limit, int offset) {
            this.QueryBankBulletinAsync(businesstype, op_support_flag, banktype, bulletin_id, limit, offset, null);
        }
        
        /// <remarks/>
        public void QueryBankBulletinAsync(int businesstype, int op_support_flag, int banktype, string bulletin_id, int limit, int offset, object userState) {
            if ((this.QueryBankBulletinOperationCompleted == null)) {
                this.QueryBankBulletinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankBulletinOperationCompleted);
            }
            this.InvokeAsync("QueryBankBulletin", new object[] {
                        businesstype,
                        op_support_flag,
                        banktype,
                        bulletin_id,
                        limit,
                        offset}, this.QueryBankBulletinOperationCompleted, userState);
        }
        
        private void OnQueryBankBulletinOperationCompleted(object arg) {
            if ((this.QueryBankBulletinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankBulletinCompleted(this, new QueryBankBulletinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/TurnBankBulletinClass", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANKBULLETIN_INFO TurnBankBulletinClass(System.Data.DataSet ds) {
            object[] results = this.Invoke("TurnBankBulletinClass", new object[] {
                        ds});
            return ((T_BANKBULLETIN_INFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTurnBankBulletinClass(System.Data.DataSet ds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TurnBankBulletinClass", new object[] {
                        ds}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_INFO EndTurnBankBulletinClass(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((T_BANKBULLETIN_INFO)(results[0]));
        }
        
        /// <remarks/>
        public void TurnBankBulletinClassAsync(System.Data.DataSet ds) {
            this.TurnBankBulletinClassAsync(ds, null);
        }
        
        /// <remarks/>
        public void TurnBankBulletinClassAsync(System.Data.DataSet ds, object userState) {
            if ((this.TurnBankBulletinClassOperationCompleted == null)) {
                this.TurnBankBulletinClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTurnBankBulletinClassOperationCompleted);
            }
            this.InvokeAsync("TurnBankBulletinClass", new object[] {
                        ds}, this.TurnBankBulletinClassOperationCompleted, userState);
        }
        
        private void OnTurnBankBulletinClassOperationCompleted(object arg) {
            if ((this.TurnBankBulletinClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TurnBankBulletinClassCompleted(this, new TurnBankBulletinClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankBulletinByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANKBULLETIN_INFO QueryBankBulletinByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryBankBulletinByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_BANKBULLETIN_INFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankBulletinByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankBulletinByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_INFO EndQueryBankBulletinByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANKBULLETIN_INFO)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankBulletinByObjidAsync(string objid, string checkType) {
            this.QueryBankBulletinByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryBankBulletinByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryBankBulletinByObjidOperationCompleted == null)) {
                this.QueryBankBulletinByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankBulletinByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryBankBulletinByObjid", new object[] {
                        objid,
                        checkType}, this.QueryBankBulletinByObjidOperationCompleted, userState);
        }
        
        private void OnQueryBankBulletinByObjidOperationCompleted(object arg) {
            if ((this.QueryBankBulletinByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankBulletinByObjidCompleted(this, new QueryBankBulletinByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/Getfbank_orderList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Getfbank_orderList(string fpay_acc, string Date, int istr, int imax) {
            object[] results = this.Invoke("Getfbank_orderList", new object[] {
                        fpay_acc,
                        Date,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetfbank_orderList(string fpay_acc, string Date, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Getfbank_orderList", new object[] {
                        fpay_acc,
                        Date,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetfbank_orderList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Getfbank_orderListAsync(string fpay_acc, string Date, int istr, int imax) {
            this.Getfbank_orderListAsync(fpay_acc, Date, istr, imax, null);
        }
        
        /// <remarks/>
        public void Getfbank_orderListAsync(string fpay_acc, string Date, int istr, int imax, object userState) {
            if ((this.Getfbank_orderListOperationCompleted == null)) {
                this.Getfbank_orderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetfbank_orderListOperationCompleted);
            }
            this.InvokeAsync("Getfbank_orderList", new object[] {
                        fpay_acc,
                        Date,
                        istr,
                        imax}, this.Getfbank_orderListOperationCompleted, userState);
        }
        
        private void OnGetfbank_orderListOperationCompleted(object arg) {
            if ((this.Getfbank_orderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Getfbank_orderListCompleted(this, new Getfbank_orderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/Getfbank_twoBank_orderList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Getfbank_twoBank_orderList(string fpay_acc, System.DateTime Date) {
            object[] results = this.Invoke("Getfbank_twoBank_orderList", new object[] {
                        fpay_acc,
                        Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetfbank_twoBank_orderList(string fpay_acc, System.DateTime Date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Getfbank_twoBank_orderList", new object[] {
                        fpay_acc,
                        Date}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetfbank_twoBank_orderList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Getfbank_twoBank_orderListAsync(string fpay_acc, System.DateTime Date) {
            this.Getfbank_twoBank_orderListAsync(fpay_acc, Date, null);
        }
        
        /// <remarks/>
        public void Getfbank_twoBank_orderListAsync(string fpay_acc, System.DateTime Date, object userState) {
            if ((this.Getfbank_twoBank_orderListOperationCompleted == null)) {
                this.Getfbank_twoBank_orderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetfbank_twoBank_orderListOperationCompleted);
            }
            this.InvokeAsync("Getfbank_twoBank_orderList", new object[] {
                        fpay_acc,
                        Date}, this.Getfbank_twoBank_orderListOperationCompleted, userState);
        }
        
        private void OnGetfbank_twoBank_orderListOperationCompleted(object arg) {
            if ((this.Getfbank_twoBank_orderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Getfbank_twoBank_orderListCompleted(this, new Getfbank_twoBank_orderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/Synchro_State", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Synchro_State(string transaction_id, out string msg) {
            object[] results = this.Invoke("Synchro_State", new object[] {
                        transaction_id});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSynchro_State(string transaction_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Synchro_State", new object[] {
                        transaction_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSynchro_State(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Synchro_StateAsync(string transaction_id) {
            this.Synchro_StateAsync(transaction_id, null);
        }
        
        /// <remarks/>
        public void Synchro_StateAsync(string transaction_id, object userState) {
            if ((this.Synchro_StateOperationCompleted == null)) {
                this.Synchro_StateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSynchro_StateOperationCompleted);
            }
            this.InvokeAsync("Synchro_State", new object[] {
                        transaction_id}, this.Synchro_StateOperationCompleted, userState);
        }
        
        private void OnSynchro_StateOperationCompleted(object arg) {
            if ((this.Synchro_StateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Synchro_StateCompleted(this, new Synchro_StateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/IsSecondPasseword", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsSecondPasseword(string qqid) {
            object[] results = this.Invoke("IsSecondPasseword", new object[] {
                        qqid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsSecondPasseword(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsSecondPasseword", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsSecondPasseword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsSecondPassewordAsync(string qqid) {
            this.IsSecondPassewordAsync(qqid, null);
        }
        
        /// <remarks/>
        public void IsSecondPassewordAsync(string qqid, object userState) {
            if ((this.IsSecondPassewordOperationCompleted == null)) {
                this.IsSecondPassewordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsSecondPassewordOperationCompleted);
            }
            this.InvokeAsync("IsSecondPasseword", new object[] {
                        qqid}, this.IsSecondPassewordOperationCompleted, userState);
        }
        
        private void OnIsSecondPassewordOperationCompleted(object arg) {
            if ((this.IsSecondPassewordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsSecondPassewordCompleted(this, new IsSecondPassewordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SuspendSecondPasseword", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SuspendSecondPasseword(string qqid, out string msg) {
            object[] results = this.Invoke("SuspendSecondPasseword", new object[] {
                        qqid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSuspendSecondPasseword(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SuspendSecondPasseword", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSuspendSecondPasseword(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SuspendSecondPassewordAsync(string qqid) {
            this.SuspendSecondPassewordAsync(qqid, null);
        }
        
        /// <remarks/>
        public void SuspendSecondPassewordAsync(string qqid, object userState) {
            if ((this.SuspendSecondPassewordOperationCompleted == null)) {
                this.SuspendSecondPassewordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuspendSecondPassewordOperationCompleted);
            }
            this.InvokeAsync("SuspendSecondPasseword", new object[] {
                        qqid}, this.SuspendSecondPassewordOperationCompleted, userState);
        }
        
        private void OnSuspendSecondPassewordOperationCompleted(object arg) {
            if ((this.SuspendSecondPassewordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuspendSecondPassewordCompleted(this, new SuspendSecondPassewordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPNRSpid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPNRSpid(string qqid) {
            object[] results = this.Invoke("GetPNRSpid", new object[] {
                        qqid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPNRSpid(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPNRSpid", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPNRSpid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPNRSpidAsync(string qqid) {
            this.GetPNRSpidAsync(qqid, null);
        }
        
        /// <remarks/>
        public void GetPNRSpidAsync(string qqid, object userState) {
            if ((this.GetPNRSpidOperationCompleted == null)) {
                this.GetPNRSpidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPNRSpidOperationCompleted);
            }
            this.InvokeAsync("GetPNRSpid", new object[] {
                        qqid}, this.GetPNRSpidOperationCompleted, userState);
        }
        
        private void OnGetPNRSpidOperationCompleted(object arg) {
            if ((this.GetPNRSpidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPNRSpidCompleted(this, new GetPNRSpidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/IsFastPayUser", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsFastPayUser(string qqid) {
            object[] results = this.Invoke("IsFastPayUser", new object[] {
                        qqid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsFastPayUser(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsFastPayUser", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsFastPayUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsFastPayUserAsync(string qqid) {
            this.IsFastPayUserAsync(qqid, null);
        }
        
        /// <remarks/>
        public void IsFastPayUserAsync(string qqid, object userState) {
            if ((this.IsFastPayUserOperationCompleted == null)) {
                this.IsFastPayUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsFastPayUserOperationCompleted);
            }
            this.InvokeAsync("IsFastPayUser", new object[] {
                        qqid}, this.IsFastPayUserOperationCompleted, userState);
        }
        
        private void OnIsFastPayUserOperationCompleted(object arg) {
            if ((this.IsFastPayUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsFastPayUserCompleted(this, new IsFastPayUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserAccount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserAccount(string u_QQID, int fcurtype, int istr, int imax) {
            object[] results = this.Invoke("GetUserAccount", new object[] {
                        u_QQID,
                        fcurtype,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAccount(string u_QQID, int fcurtype, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAccount", new object[] {
                        u_QQID,
                        fcurtype,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAccountAsync(string u_QQID, int fcurtype, int istr, int imax) {
            this.GetUserAccountAsync(u_QQID, fcurtype, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserAccountAsync(string u_QQID, int fcurtype, int istr, int imax, object userState) {
            if ((this.GetUserAccountOperationCompleted == null)) {
                this.GetUserAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAccountOperationCompleted);
            }
            this.InvokeAsync("GetUserAccount", new object[] {
                        u_QQID,
                        fcurtype,
                        istr,
                        imax}, this.GetUserAccountOperationCompleted, userState);
        }
        
        private void OnGetUserAccountOperationCompleted(object arg) {
            if ((this.GetUserAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAccountCompleted(this, new GetUserAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserAccountFromWechat", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserAccountFromWechat(string u_QQID, int istr, int imax) {
            object[] results = this.Invoke("GetUserAccountFromWechat", new object[] {
                        u_QQID,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAccountFromWechat(string u_QQID, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAccountFromWechat", new object[] {
                        u_QQID,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserAccountFromWechat(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAccountFromWechatAsync(string u_QQID, int istr, int imax) {
            this.GetUserAccountFromWechatAsync(u_QQID, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserAccountFromWechatAsync(string u_QQID, int istr, int imax, object userState) {
            if ((this.GetUserAccountFromWechatOperationCompleted == null)) {
                this.GetUserAccountFromWechatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAccountFromWechatOperationCompleted);
            }
            this.InvokeAsync("GetUserAccountFromWechat", new object[] {
                        u_QQID,
                        istr,
                        imax}, this.GetUserAccountFromWechatOperationCompleted, userState);
        }
        
        private void OnGetUserAccountFromWechatOperationCompleted(object arg) {
            if ((this.GetUserAccountFromWechatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAccountFromWechatCompleted(this, new GetUserAccountFromWechatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserAccountCancel", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserAccountCancel(string fuid, int fcurtype, int istr, int imax) {
            object[] results = this.Invoke("GetUserAccountCancel", new object[] {
                        fuid,
                        fcurtype,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAccountCancel(string fuid, int fcurtype, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAccountCancel", new object[] {
                        fuid,
                        fcurtype,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserAccountCancel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAccountCancelAsync(string fuid, int fcurtype, int istr, int imax) {
            this.GetUserAccountCancelAsync(fuid, fcurtype, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserAccountCancelAsync(string fuid, int fcurtype, int istr, int imax, object userState) {
            if ((this.GetUserAccountCancelOperationCompleted == null)) {
                this.GetUserAccountCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAccountCancelOperationCompleted);
            }
            this.InvokeAsync("GetUserAccountCancel", new object[] {
                        fuid,
                        fcurtype,
                        istr,
                        imax}, this.GetUserAccountCancelOperationCompleted, userState);
        }
        
        private void OnGetUserAccountCancelOperationCompleted(object arg) {
            if ((this.GetUserAccountCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAccountCancelCompleted(this, new GetUserAccountCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserAccountMain", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserAccountMain(string u_QQID, int istr, int imax) {
            object[] results = this.Invoke("GetUserAccountMain", new object[] {
                        u_QQID,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAccountMain(string u_QQID, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAccountMain", new object[] {
                        u_QQID,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserAccountMain(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAccountMainAsync(string u_QQID, int istr, int imax) {
            this.GetUserAccountMainAsync(u_QQID, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserAccountMainAsync(string u_QQID, int istr, int imax, object userState) {
            if ((this.GetUserAccountMainOperationCompleted == null)) {
                this.GetUserAccountMainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAccountMainOperationCompleted);
            }
            this.InvokeAsync("GetUserAccountMain", new object[] {
                        u_QQID,
                        istr,
                        imax}, this.GetUserAccountMainOperationCompleted, userState);
        }
        
        private void OnGetUserAccountMainOperationCompleted(object arg) {
            if ((this.GetUserAccountMainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAccountMainCompleted(this, new GetUserAccountMainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserButtonInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserButtonInfo(string u_QQID, int istr, int imax) {
            object[] results = this.Invoke("GetUserButtonInfo", new object[] {
                        u_QQID,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserButtonInfo(string u_QQID, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserButtonInfo", new object[] {
                        u_QQID,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserButtonInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserButtonInfoAsync(string u_QQID, int istr, int imax) {
            this.GetUserButtonInfoAsync(u_QQID, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserButtonInfoAsync(string u_QQID, int istr, int imax, object userState) {
            if ((this.GetUserButtonInfoOperationCompleted == null)) {
                this.GetUserButtonInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserButtonInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserButtonInfo", new object[] {
                        u_QQID,
                        istr,
                        imax}, this.GetUserButtonInfoOperationCompleted, userState);
        }
        
        private void OnGetUserButtonInfoOperationCompleted(object arg) {
            if ((this.GetUserButtonInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserButtonInfoCompleted(this, new GetUserButtonInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserMedInfoList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserMedInfoList() {
            object[] results = this.Invoke("GetUserMedInfoList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserMedInfoList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserMedInfoList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserMedInfoList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserMedInfoListAsync() {
            this.GetUserMedInfoListAsync(null);
        }
        
        /// <remarks/>
        public void GetUserMedInfoListAsync(object userState) {
            if ((this.GetUserMedInfoListOperationCompleted == null)) {
                this.GetUserMedInfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserMedInfoListOperationCompleted);
            }
            this.InvokeAsync("GetUserMedInfoList", new object[0], this.GetUserMedInfoListOperationCompleted, userState);
        }
        
        private void OnGetUserMedInfoListOperationCompleted(object arg) {
            if ((this.GetUserMedInfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserMedInfoListCompleted(this, new GetUserMedInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserMedInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_USER_MED GetUserMedInfo(string SPID, int istr, int imax) {
            object[] results = this.Invoke("GetUserMedInfo", new object[] {
                        SPID,
                        istr,
                        imax});
            return ((T_USER_MED)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserMedInfo(string SPID, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserMedInfo", new object[] {
                        SPID,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_USER_MED EndGetUserMedInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((T_USER_MED)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserMedInfoAsync(string SPID, int istr, int imax) {
            this.GetUserMedInfoAsync(SPID, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserMedInfoAsync(string SPID, int istr, int imax, object userState) {
            if ((this.GetUserMedInfoOperationCompleted == null)) {
                this.GetUserMedInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserMedInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserMedInfo", new object[] {
                        SPID,
                        istr,
                        imax}, this.GetUserMedInfoOperationCompleted, userState);
        }
        
        private void OnGetUserMedInfoOperationCompleted(object arg) {
            if ((this.GetUserMedInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserMedInfoCompleted(this, new GetUserMedInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ResetMediPasswd", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ResetMediPasswd(string spid, out string Password) {
            object[] results = this.Invoke("ResetMediPasswd", new object[] {
                        spid});
            Password = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginResetMediPasswd(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ResetMediPasswd", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndResetMediPasswd(System.IAsyncResult asyncResult, out string Password) {
            object[] results = this.EndInvoke(asyncResult);
            Password = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ResetMediPasswdAsync(string spid) {
            this.ResetMediPasswdAsync(spid, null);
        }
        
        /// <remarks/>
        public void ResetMediPasswdAsync(string spid, object userState) {
            if ((this.ResetMediPasswdOperationCompleted == null)) {
                this.ResetMediPasswdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetMediPasswdOperationCompleted);
            }
            this.InvokeAsync("ResetMediPasswd", new object[] {
                        spid}, this.ResetMediPasswdOperationCompleted, userState);
        }
        
        private void OnResetMediPasswdOperationCompleted(object arg) {
            if ((this.ResetMediPasswdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetMediPasswdCompleted(this, new ResetMediPasswdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserInfo(string u_QQID, int istr, int imax) {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                        u_QQID,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserInfo(string u_QQID, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserInfo", new object[] {
                        u_QQID,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string u_QQID, int istr, int imax) {
            this.GetUserInfoAsync(u_QQID, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string u_QQID, int istr, int imax, object userState) {
            if ((this.GetUserInfoOperationCompleted == null)) {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                        u_QQID,
                        istr,
                        imax}, this.GetUserInfoOperationCompleted, userState);
        }
        
        private void OnGetUserInfoOperationCompleted(object arg) {
            if ((this.GetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBankAccount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserBankAccount(string u_QQID, int istr, int imax) {
            object[] results = this.Invoke("GetUserBankAccount", new object[] {
                        u_QQID,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBankAccount(string u_QQID, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBankAccount", new object[] {
                        u_QQID,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserBankAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBankAccountAsync(string u_QQID, int istr, int imax) {
            this.GetUserBankAccountAsync(u_QQID, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserBankAccountAsync(string u_QQID, int istr, int imax, object userState) {
            if ((this.GetUserBankAccountOperationCompleted == null)) {
                this.GetUserBankAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBankAccountOperationCompleted);
            }
            this.InvokeAsync("GetUserBankAccount", new object[] {
                        u_QQID,
                        istr,
                        imax}, this.GetUserBankAccountOperationCompleted, userState);
        }
        
        private void OnGetUserBankAccountOperationCompleted(object arg) {
            if ((this.GetUserBankAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBankAccountCompleted(this, new GetUserBankAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchUserBankAccount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBatchUserBankAccount(string u_QQID) {
            object[] results = this.Invoke("GetBatchUserBankAccount", new object[] {
                        u_QQID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchUserBankAccount(string u_QQID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchUserBankAccount", new object[] {
                        u_QQID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBatchUserBankAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchUserBankAccountAsync(string u_QQID) {
            this.GetBatchUserBankAccountAsync(u_QQID, null);
        }
        
        /// <remarks/>
        public void GetBatchUserBankAccountAsync(string u_QQID, object userState) {
            if ((this.GetBatchUserBankAccountOperationCompleted == null)) {
                this.GetBatchUserBankAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchUserBankAccountOperationCompleted);
            }
            this.InvokeAsync("GetBatchUserBankAccount", new object[] {
                        u_QQID}, this.GetBatchUserBankAccountOperationCompleted, userState);
        }
        
        private void OnGetBatchUserBankAccountOperationCompleted(object arg) {
            if ((this.GetBatchUserBankAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchUserBankAccountCompleted(this, new GetBatchUserBankAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayList(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            object[] results = this.Invoke("GetPayList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayList(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayListAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            this.GetPayListAsync(u_ID, u_IDType, u_BeginTime, u_EndTime, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetPayListAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, object userState) {
            if ((this.GetPayListOperationCompleted == null)) {
                this.GetPayListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayListOperationCompleted);
            }
            this.InvokeAsync("GetPayList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, this.GetPayListOperationCompleted, userState);
        }
        
        private void OnGetPayListOperationCompleted(object arg) {
            if ((this.GetPayListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayListCompleted(this, new GetPayListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetManJianUsingList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetManJianUsingList(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int istr, int imax) {
            object[] results = this.Invoke("GetManJianUsingList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetManJianUsingList(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetManJianUsingList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetManJianUsingList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetManJianUsingListAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int istr, int imax) {
            this.GetManJianUsingListAsync(u_ID, u_IDType, u_BeginTime, u_EndTime, banktype, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetManJianUsingListAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int istr, int imax, object userState) {
            if ((this.GetManJianUsingListOperationCompleted == null)) {
                this.GetManJianUsingListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetManJianUsingListOperationCompleted);
            }
            this.InvokeAsync("GetManJianUsingList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        istr,
                        imax}, this.GetManJianUsingListOperationCompleted, userState);
        }
        
        private void OnGetManJianUsingListOperationCompleted(object arg) {
            if ((this.GetManJianUsingListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetManJianUsingListCompleted(this, new GetManJianUsingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ManJianUserList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ManJianUserList(string u_QQID) {
            object[] results = this.Invoke("ManJianUserList", new object[] {
                        u_QQID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginManJianUserList(string u_QQID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ManJianUserList", new object[] {
                        u_QQID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndManJianUserList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ManJianUserListAsync(string u_QQID) {
            this.ManJianUserListAsync(u_QQID, null);
        }
        
        /// <remarks/>
        public void ManJianUserListAsync(string u_QQID, object userState) {
            if ((this.ManJianUserListOperationCompleted == null)) {
                this.ManJianUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManJianUserListOperationCompleted);
            }
            this.InvokeAsync("ManJianUserList", new object[] {
                        u_QQID}, this.ManJianUserListOperationCompleted, userState);
        }
        
        private void OnManJianUserListOperationCompleted(object arg) {
            if ((this.ManJianUserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManJianUserListCompleted(this, new ManJianUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ManJianAddOne", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ManJianAddOne(string uin, string cre_id, string bank_type, string mobile) {
            object[] results = this.Invoke("ManJianAddOne", new object[] {
                        uin,
                        cre_id,
                        bank_type,
                        mobile});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginManJianAddOne(string uin, string cre_id, string bank_type, string mobile, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ManJianAddOne", new object[] {
                        uin,
                        cre_id,
                        bank_type,
                        mobile}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndManJianAddOne(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ManJianAddOneAsync(string uin, string cre_id, string bank_type, string mobile) {
            this.ManJianAddOneAsync(uin, cre_id, bank_type, mobile, null);
        }
        
        /// <remarks/>
        public void ManJianAddOneAsync(string uin, string cre_id, string bank_type, string mobile, object userState) {
            if ((this.ManJianAddOneOperationCompleted == null)) {
                this.ManJianAddOneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManJianAddOneOperationCompleted);
            }
            this.InvokeAsync("ManJianAddOne", new object[] {
                        uin,
                        cre_id,
                        bank_type,
                        mobile}, this.ManJianAddOneOperationCompleted, userState);
        }
        
        private void OnManJianAddOneOperationCompleted(object arg) {
            if ((this.ManJianAddOneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManJianAddOneCompleted(this, new ManJianAddOneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayListForChildren", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayListForChildren(string u_ID, int curType, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            object[] results = this.Invoke("GetPayListForChildren", new object[] {
                        u_ID,
                        curType,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayListForChildren(string u_ID, int curType, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayListForChildren", new object[] {
                        u_ID,
                        curType,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayListForChildren(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayListForChildrenAsync(string u_ID, int curType, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            this.GetPayListForChildrenAsync(u_ID, curType, u_IDType, u_BeginTime, u_EndTime, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetPayListForChildrenAsync(string u_ID, int curType, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, object userState) {
            if ((this.GetPayListForChildrenOperationCompleted == null)) {
                this.GetPayListForChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayListForChildrenOperationCompleted);
            }
            this.InvokeAsync("GetPayListForChildren", new object[] {
                        u_ID,
                        curType,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, this.GetPayListForChildrenOperationCompleted, userState);
        }
        
        private void OnGetPayListForChildrenOperationCompleted(object arg) {
            if ((this.GetPayListForChildrenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayListForChildrenCompleted(this, new GetPayListForChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayList_List", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayList_List(string u_ID) {
            object[] results = this.Invoke("GetPayList_List", new object[] {
                        u_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayList_List(string u_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayList_List", new object[] {
                        u_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayList_List(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayList_ListAsync(string u_ID) {
            this.GetPayList_ListAsync(u_ID, null);
        }
        
        /// <remarks/>
        public void GetPayList_ListAsync(string u_ID, object userState) {
            if ((this.GetPayList_ListOperationCompleted == null)) {
                this.GetPayList_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayList_ListOperationCompleted);
            }
            this.InvokeAsync("GetPayList_List", new object[] {
                        u_ID}, this.GetPayList_ListOperationCompleted, userState);
        }
        
        private void OnGetPayList_ListOperationCompleted(object arg) {
            if ((this.GetPayList_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayList_ListCompleted(this, new GetPayList_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayList_Pick", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayList_Pick(string u_ID) {
            object[] results = this.Invoke("GetPayList_Pick", new object[] {
                        u_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayList_Pick(string u_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayList_Pick", new object[] {
                        u_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayList_Pick(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayList_PickAsync(string u_ID) {
            this.GetPayList_PickAsync(u_ID, null);
        }
        
        /// <remarks/>
        public void GetPayList_PickAsync(string u_ID, object userState) {
            if ((this.GetPayList_PickOperationCompleted == null)) {
                this.GetPayList_PickOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayList_PickOperationCompleted);
            }
            this.InvokeAsync("GetPayList_Pick", new object[] {
                        u_ID}, this.GetPayList_PickOperationCompleted, userState);
        }
        
        private void OnGetPayList_PickOperationCompleted(object arg) {
            if ((this.GetPayList_PickCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayList_PickCompleted(this, new GetPayList_PickCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankRollList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankRollList(string u_QQID, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            object[] results = this.Invoke("GetBankRollList", new object[] {
                        u_QQID,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankRollList(string u_QQID, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankRollList", new object[] {
                        u_QQID,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankRollList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankRollListAsync(string u_QQID, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            this.GetBankRollListAsync(u_QQID, fcurtype, u_BeginTime, u_EndTime, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetBankRollListAsync(string u_QQID, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, object userState) {
            if ((this.GetBankRollListOperationCompleted == null)) {
                this.GetBankRollListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankRollListOperationCompleted);
            }
            this.InvokeAsync("GetBankRollList", new object[] {
                        u_QQID,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, this.GetBankRollListOperationCompleted, userState);
        }
        
        private void OnGetBankRollListOperationCompleted(object arg) {
            if ((this.GetBankRollListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankRollListCompleted(this, new GetBankRollListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankRollList_withID", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankRollList_withID(System.DateTime u_BeginTime, System.DateTime u_EndTime, string ListID, int istr, int imax) {
            object[] results = this.Invoke("GetBankRollList_withID", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        ListID,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankRollList_withID(System.DateTime u_BeginTime, System.DateTime u_EndTime, string ListID, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankRollList_withID", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        ListID,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankRollList_withID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankRollList_withIDAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string ListID, int istr, int imax) {
            this.GetBankRollList_withIDAsync(u_BeginTime, u_EndTime, ListID, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetBankRollList_withIDAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string ListID, int istr, int imax, object userState) {
            if ((this.GetBankRollList_withIDOperationCompleted == null)) {
                this.GetBankRollList_withIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankRollList_withIDOperationCompleted);
            }
            this.InvokeAsync("GetBankRollList_withID", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        ListID,
                        istr,
                        imax}, this.GetBankRollList_withIDOperationCompleted, userState);
        }
        
        private void OnGetBankRollList_withIDOperationCompleted(object arg) {
            if ((this.GetBankRollList_withIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankRollList_withIDCompleted(this, new GetBankRollList_withIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserPayList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserPayList(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            object[] results = this.Invoke("GetUserPayList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserPayList(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserPayList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserPayList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPayListAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            this.GetUserPayListAsync(u_ID, u_IDType, u_BeginTime, u_EndTime, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserPayListAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, object userState) {
            if ((this.GetUserPayListOperationCompleted == null)) {
                this.GetUserPayListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPayListOperationCompleted);
            }
            this.InvokeAsync("GetUserPayList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, this.GetUserPayListOperationCompleted, userState);
        }
        
        private void OnGetUserPayListOperationCompleted(object arg) {
            if ((this.GetUserPayListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPayListCompleted(this, new GetUserPayListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserPayList_withID", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserPayList_withID(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string slistID, int istr, int imax) {
            object[] results = this.Invoke("GetUserPayList_withID", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        slistID,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserPayList_withID(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string slistID, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserPayList_withID", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        slistID,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserPayList_withID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPayList_withIDAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string slistID, int istr, int imax) {
            this.GetUserPayList_withIDAsync(u_ID, u_BeginTime, u_EndTime, slistID, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserPayList_withIDAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string slistID, int istr, int imax, object userState) {
            if ((this.GetUserPayList_withIDOperationCompleted == null)) {
                this.GetUserPayList_withIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPayList_withIDOperationCompleted);
            }
            this.InvokeAsync("GetUserPayList_withID", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        slistID,
                        istr,
                        imax}, this.GetUserPayList_withIDOperationCompleted, userState);
        }
        
        private void OnGetUserPayList_withIDOperationCompleted(object arg) {
            if ((this.GetUserPayList_withIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPayList_withIDCompleted(this, new GetUserPayList_withIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetTCBankAccount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTCBankAccount(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            object[] results = this.Invoke("GetTCBankAccount", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTCBankAccount(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTCBankAccount", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTCBankAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTCBankAccountAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            this.GetTCBankAccountAsync(u_ID, u_IDType, u_BeginTime, u_EndTime, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetTCBankAccountAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, object userState) {
            if ((this.GetTCBankAccountOperationCompleted == null)) {
                this.GetTCBankAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTCBankAccountOperationCompleted);
            }
            this.InvokeAsync("GetTCBankAccount", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, this.GetTCBankAccountOperationCompleted, userState);
        }
        
        private void OnGetTCBankAccountOperationCompleted(object arg) {
            if ((this.GetTCBankAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTCBankAccountCompleted(this, new GetTCBankAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetTCBankRollList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTCBankRollList(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool isHistory, int istr, int imax) {
            object[] results = this.Invoke("GetTCBankRollList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        isHistory,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTCBankRollList(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool isHistory, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTCBankRollList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        isHistory,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTCBankRollList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTCBankRollListAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool isHistory, int istr, int imax) {
            this.GetTCBankRollListAsync(u_ID, u_IDType, u_BeginTime, u_EndTime, isHistory, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetTCBankRollListAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool isHistory, int istr, int imax, object userState) {
            if ((this.GetTCBankRollListOperationCompleted == null)) {
                this.GetTCBankRollListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTCBankRollListOperationCompleted);
            }
            this.InvokeAsync("GetTCBankRollList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        isHistory,
                        istr,
                        imax}, this.GetTCBankRollListOperationCompleted, userState);
        }
        
        private void OnGetTCBankRollListOperationCompleted(object arg) {
            if ((this.GetTCBankRollListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTCBankRollListCompleted(this, new GetTCBankRollListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankRollListByListId", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankRollListByListId(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetBankRollListByListId", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankRollListByListId(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankRollListByListId", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankRollListByListId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankRollListByListIdAsync(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, int iPageStart, int iPageMax) {
            this.GetBankRollListByListIdAsync(u_ID, u_QueryType, fcurtype, u_BeginTime, u_EndTime, fstate, fnum, fnumMax, banktype, sorttype, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetBankRollListByListIdAsync(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, int iPageStart, int iPageMax, object userState) {
            if ((this.GetBankRollListByListIdOperationCompleted == null)) {
                this.GetBankRollListByListIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankRollListByListIdOperationCompleted);
            }
            this.InvokeAsync("GetBankRollListByListId", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax}, this.GetBankRollListByListIdOperationCompleted, userState);
        }
        
        private void OnGetBankRollListByListIdOperationCompleted(object arg) {
            if ((this.GetBankRollListByListIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankRollListByListIdCompleted(this, new GetBankRollListByListIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundListDetail_New", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundListDetail_New(string listid, string fbank_list, string fbank_type, out string mesgg) {
            object[] results = this.Invoke("GetFundListDetail_New", new object[] {
                        listid,
                        fbank_list,
                        fbank_type});
            mesgg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundListDetail_New(string listid, string fbank_list, string fbank_type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundListDetail_New", new object[] {
                        listid,
                        fbank_list,
                        fbank_type}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundListDetail_New(System.IAsyncResult asyncResult, out string mesgg) {
            object[] results = this.EndInvoke(asyncResult);
            mesgg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundListDetail_NewAsync(string listid, string fbank_list, string fbank_type) {
            this.GetFundListDetail_NewAsync(listid, fbank_list, fbank_type, null);
        }
        
        /// <remarks/>
        public void GetFundListDetail_NewAsync(string listid, string fbank_list, string fbank_type, object userState) {
            if ((this.GetFundListDetail_NewOperationCompleted == null)) {
                this.GetFundListDetail_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundListDetail_NewOperationCompleted);
            }
            this.InvokeAsync("GetFundListDetail_New", new object[] {
                        listid,
                        fbank_list,
                        fbank_type}, this.GetFundListDetail_NewOperationCompleted, userState);
        }
        
        private void OnGetFundListDetail_NewOperationCompleted(object arg) {
            if ((this.GetFundListDetail_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundListDetail_NewCompleted(this, new GetFundListDetail_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/IsNewOrderCZData", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsNewOrderCZData(System.DateTime payFrontTime) {
            object[] results = this.Invoke("IsNewOrderCZData", new object[] {
                        payFrontTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsNewOrderCZData(System.DateTime payFrontTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsNewOrderCZData", new object[] {
                        payFrontTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsNewOrderCZData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsNewOrderCZDataAsync(System.DateTime payFrontTime) {
            this.IsNewOrderCZDataAsync(payFrontTime, null);
        }
        
        /// <remarks/>
        public void IsNewOrderCZDataAsync(System.DateTime payFrontTime, object userState) {
            if ((this.IsNewOrderCZDataOperationCompleted == null)) {
                this.IsNewOrderCZDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsNewOrderCZDataOperationCompleted);
            }
            this.InvokeAsync("IsNewOrderCZData", new object[] {
                        payFrontTime}, this.IsNewOrderCZDataOperationCompleted, userState);
        }
        
        private void OnIsNewOrderCZDataOperationCompleted(object arg) {
            if ((this.IsNewOrderCZDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsNewOrderCZDataCompleted(this, new IsNewOrderCZDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetTCBankPAYList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTCBankPAYList(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            object[] results = this.Invoke("GetTCBankPAYList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTCBankPAYList(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTCBankPAYList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTCBankPAYList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTCBankPAYListAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            this.GetTCBankPAYListAsync(u_ID, u_IDType, u_BeginTime, u_EndTime, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetTCBankPAYListAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, object userState) {
            if ((this.GetTCBankPAYListOperationCompleted == null)) {
                this.GetTCBankPAYListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTCBankPAYListOperationCompleted);
            }
            this.InvokeAsync("GetTCBankPAYList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, this.GetTCBankPAYListOperationCompleted, userState);
        }
        
        private void OnGetTCBankPAYListOperationCompleted(object arg) {
            if ((this.GetTCBankPAYListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTCBankPAYListCompleted(this, new GetTCBankPAYListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefund", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRefund(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            object[] results = this.Invoke("GetRefund", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefund(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefund", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRefund(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            this.GetRefundAsync(u_ID, u_IDType, u_BeginTime, u_EndTime, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetRefundAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, object userState) {
            if ((this.GetRefundOperationCompleted == null)) {
                this.GetRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundOperationCompleted);
            }
            this.InvokeAsync("GetRefund", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, this.GetRefundOperationCompleted, userState);
        }
        
        private void OnGetRefundOperationCompleted(object arg) {
            if ((this.GetRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundCompleted(this, new GetRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayListByType", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayListByType(string u_BuyID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int U_Type, int istr, int imax) {
            object[] results = this.Invoke("GetPayListByType", new object[] {
                        u_BuyID,
                        u_BeginTime,
                        u_EndTime,
                        U_Type,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayListByType(string u_BuyID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int U_Type, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayListByType", new object[] {
                        u_BuyID,
                        u_BeginTime,
                        u_EndTime,
                        U_Type,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayListByType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayListByTypeAsync(string u_BuyID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int U_Type, int istr, int imax) {
            this.GetPayListByTypeAsync(u_BuyID, u_BeginTime, u_EndTime, U_Type, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetPayListByTypeAsync(string u_BuyID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int U_Type, int istr, int imax, object userState) {
            if ((this.GetPayListByTypeOperationCompleted == null)) {
                this.GetPayListByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayListByTypeOperationCompleted);
            }
            this.InvokeAsync("GetPayListByType", new object[] {
                        u_BuyID,
                        u_BeginTime,
                        u_EndTime,
                        U_Type,
                        istr,
                        imax}, this.GetPayListByTypeOperationCompleted, userState);
        }
        
        private void OnGetPayListByTypeOperationCompleted(object arg) {
            if ((this.GetPayListByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayListByTypeCompleted(this, new GetPayListByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/returnListID", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string returnListID(string sFbankAcc, string sDateTime) {
            object[] results = this.Invoke("returnListID", new object[] {
                        sFbankAcc,
                        sDateTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginreturnListID(string sFbankAcc, string sDateTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("returnListID", new object[] {
                        sFbankAcc,
                        sDateTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndreturnListID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void returnListIDAsync(string sFbankAcc, string sDateTime) {
            this.returnListIDAsync(sFbankAcc, sDateTime, null);
        }
        
        /// <remarks/>
        public void returnListIDAsync(string sFbankAcc, string sDateTime, object userState) {
            if ((this.returnListIDOperationCompleted == null)) {
                this.returnListIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreturnListIDOperationCompleted);
            }
            this.InvokeAsync("returnListID", new object[] {
                        sFbankAcc,
                        sDateTime}, this.returnListIDOperationCompleted, userState);
        }
        
        private void OnreturnListIDOperationCompleted(object arg) {
            if ((this.returnListIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.returnListIDCompleted(this, new returnListIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ValidUser", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TCreateSessionReply ValidUser(string LoginUserID, string strPassword, string userIP) {
            object[] results = this.Invoke("ValidUser", new object[] {
                        LoginUserID,
                        strPassword,
                        userIP});
            return ((TCreateSessionReply)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidUser(string LoginUserID, string strPassword, string userIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidUser", new object[] {
                        LoginUserID,
                        strPassword,
                        userIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public TCreateSessionReply EndValidUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TCreateSessionReply)(results[0]));
        }
        
        /// <remarks/>
        public void ValidUserAsync(string LoginUserID, string strPassword, string userIP) {
            this.ValidUserAsync(LoginUserID, strPassword, userIP, null);
        }
        
        /// <remarks/>
        public void ValidUserAsync(string LoginUserID, string strPassword, string userIP, object userState) {
            if ((this.ValidUserOperationCompleted == null)) {
                this.ValidUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidUserOperationCompleted);
            }
            this.InvokeAsync("ValidUser", new object[] {
                        LoginUserID,
                        strPassword,
                        userIP}, this.ValidUserOperationCompleted, userState);
        }
        
        private void OnValidUserOperationCompleted(object arg) {
            if ((this.ValidUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidUserCompleted(this, new ValidUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundList(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, bool isHistory, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetFundList", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        isHistory,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundList(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, bool isHistory, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundList", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        isHistory,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundListAsync(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, bool isHistory, int iPageStart, int iPageMax) {
            this.GetFundListAsync(u_ID, u_QueryType, fcurtype, u_BeginTime, u_EndTime, fstate, fnum, fnumMax, banktype, sorttype, isHistory, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetFundListAsync(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, bool isHistory, int iPageStart, int iPageMax, object userState) {
            if ((this.GetFundListOperationCompleted == null)) {
                this.GetFundListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundListOperationCompleted);
            }
            this.InvokeAsync("GetFundList", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        isHistory,
                        iPageStart,
                        iPageMax}, this.GetFundListOperationCompleted, userState);
        }
        
        private void OnGetFundListOperationCompleted(object arg) {
            if ((this.GetFundListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundListCompleted(this, new GetFundListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFundListCount(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, bool isHistory) {
            object[] results = this.Invoke("GetFundListCount", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        isHistory});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundListCount(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, bool isHistory, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundListCount", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        isHistory}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetFundListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundListCountAsync(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, bool isHistory) {
            this.GetFundListCountAsync(u_ID, u_QueryType, fcurtype, u_BeginTime, u_EndTime, fstate, fnum, fnumMax, banktype, isHistory, null);
        }
        
        /// <remarks/>
        public void GetFundListCountAsync(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, bool isHistory, object userState) {
            if ((this.GetFundListCountOperationCompleted == null)) {
                this.GetFundListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundListCountOperationCompleted);
            }
            this.InvokeAsync("GetFundListCount", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        isHistory}, this.GetFundListCountOperationCompleted, userState);
        }
        
        private void OnGetFundListCountOperationCompleted(object arg) {
            if ((this.GetFundListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundListCountCompleted(this, new GetFundListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundListDetail(string tdeid, string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag, bool isHistory) {
            object[] results = this.Invoke("GetFundListDetail", new object[] {
                        tdeid,
                        listid,
                        u_BeginTime,
                        u_EndTime,
                        oldflag,
                        isHistory});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundListDetail(string tdeid, string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag, bool isHistory, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundListDetail", new object[] {
                        tdeid,
                        listid,
                        u_BeginTime,
                        u_EndTime,
                        oldflag,
                        isHistory}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundListDetailAsync(string tdeid, string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag, bool isHistory) {
            this.GetFundListDetailAsync(tdeid, listid, u_BeginTime, u_EndTime, oldflag, isHistory, null);
        }
        
        /// <remarks/>
        public void GetFundListDetailAsync(string tdeid, string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag, bool isHistory, object userState) {
            if ((this.GetFundListDetailOperationCompleted == null)) {
                this.GetFundListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundListDetailOperationCompleted);
            }
            this.InvokeAsync("GetFundListDetail", new object[] {
                        tdeid,
                        listid,
                        u_BeginTime,
                        u_EndTime,
                        oldflag,
                        isHistory}, this.GetFundListDetailOperationCompleted, userState);
        }
        
        private void OnGetFundListDetailOperationCompleted(object arg) {
            if ((this.GetFundListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundListDetailCompleted(this, new GetFundListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundHistoryDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundHistoryDetail(string u_ID, string payTime, string listid, string bank_type) {
            object[] results = this.Invoke("GetFundHistoryDetail", new object[] {
                        u_ID,
                        payTime,
                        listid,
                        bank_type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundHistoryDetail(string u_ID, string payTime, string listid, string bank_type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundHistoryDetail", new object[] {
                        u_ID,
                        payTime,
                        listid,
                        bank_type}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundHistoryDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundHistoryDetailAsync(string u_ID, string payTime, string listid, string bank_type) {
            this.GetFundHistoryDetailAsync(u_ID, payTime, listid, bank_type, null);
        }
        
        /// <remarks/>
        public void GetFundHistoryDetailAsync(string u_ID, string payTime, string listid, string bank_type, object userState) {
            if ((this.GetFundHistoryDetailOperationCompleted == null)) {
                this.GetFundHistoryDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundHistoryDetailOperationCompleted);
            }
            this.InvokeAsync("GetFundHistoryDetail", new object[] {
                        u_ID,
                        payTime,
                        listid,
                        bank_type}, this.GetFundHistoryDetailOperationCompleted, userState);
        }
        
        private void OnGetFundHistoryDetailOperationCompleted(object arg) {
            if ((this.GetFundHistoryDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundHistoryDetailCompleted(this, new GetFundHistoryDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPickListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPickListCount(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype, string cashtype) {
            object[] results = this.Invoke("GetPickListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        idtype,
                        cashtype});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPickListCount(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype, string cashtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPickListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        idtype,
                        cashtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetPickListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPickListCountAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype, string cashtype) {
            this.GetPickListCountAsync(u_ID, u_BeginTime, u_EndTime, fstate, fnum, banktype, idtype, cashtype, null);
        }
        
        /// <remarks/>
        public void GetPickListCountAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype, string cashtype, object userState) {
            if ((this.GetPickListCountOperationCompleted == null)) {
                this.GetPickListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPickListCountOperationCompleted);
            }
            this.InvokeAsync("GetPickListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        idtype,
                        cashtype}, this.GetPickListCountOperationCompleted, userState);
        }
        
        private void OnGetPickListCountOperationCompleted(object arg) {
            if ((this.GetPickListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPickListCountCompleted(this, new GetPickListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundListDetail_Subacc", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundListDetail_Subacc(string listid, string fcurtype, out string strResp) {
            object[] results = this.Invoke("GetFundListDetail_Subacc", new object[] {
                        listid,
                        fcurtype});
            strResp = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundListDetail_Subacc(string listid, string fcurtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundListDetail_Subacc", new object[] {
                        listid,
                        fcurtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundListDetail_Subacc(System.IAsyncResult asyncResult, out string strResp) {
            object[] results = this.EndInvoke(asyncResult);
            strResp = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundListDetail_SubaccAsync(string listid, string fcurtype) {
            this.GetFundListDetail_SubaccAsync(listid, fcurtype, null);
        }
        
        /// <remarks/>
        public void GetFundListDetail_SubaccAsync(string listid, string fcurtype, object userState) {
            if ((this.GetFundListDetail_SubaccOperationCompleted == null)) {
                this.GetFundListDetail_SubaccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundListDetail_SubaccOperationCompleted);
            }
            this.InvokeAsync("GetFundListDetail_Subacc", new object[] {
                        listid,
                        fcurtype}, this.GetFundListDetail_SubaccOperationCompleted, userState);
        }
        
        private void OnGetFundListDetail_SubaccOperationCompleted(object arg) {
            if ((this.GetFundListDetail_SubaccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundListDetail_SubaccCompleted(this, new GetFundListDetail_SubaccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", IsNullable=false)]
    public partial class Finance_Header : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string userIPField;
        
        private string szKeyField;
        
        private int operIDField;
        
        private string rightStringField;
        
        private string userPasswordField;
        
        private string sessionIDField;
        
        private string srcUrlField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserIP {
            get {
                return this.userIPField;
            }
            set {
                this.userIPField = value;
            }
        }
        
        /// <remarks/>
        public string SzKey {
            get {
                return this.szKeyField;
            }
            set {
                this.szKeyField = value;
            }
        }
        
        /// <remarks/>
        public int OperID {
            get {
                return this.operIDField;
            }
            set {
                this.operIDField = value;
            }
        }
        
        /// <remarks/>
        public string RightString {
            get {
                return this.rightStringField;
            }
            set {
                this.rightStringField = value;
            }
        }
        
        /// <remarks/>
        public string UserPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string SessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
            }
        }
        
        /// <remarks/>
        public string SrcUrl {
            get {
                return this.srcUrlField;
            }
            set {
                this.srcUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class TCreateSessionReply {
        
        private int opResultField;
        
        private string szKeyField;
        
        private int operIdField;
        
        private string rightStringField;
        
        /// <remarks/>
        public int OpResult {
            get {
                return this.opResultField;
            }
            set {
                this.opResultField = value;
            }
        }
        
        /// <remarks/>
        public string szKey {
            get {
                return this.szKeyField;
            }
            set {
                this.szKeyField = value;
            }
        }
        
        /// <remarks/>
        public int OperId {
            get {
                return this.operIdField;
            }
            set {
                this.operIdField = value;
            }
        }
        
        /// <remarks/>
        public string RightString {
            get {
                return this.rightStringField;
            }
            set {
                this.rightStringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class SysBulletinClass {
        
        private int fIDField;
        
        private int fSysIDField;
        
        private int fIsNewField;
        
        private string fTitleField;
        
        private string fUrlField;
        
        private string fissueTimeField;
        
        private string fLastTimeField;
        
        private string fuserIdField;
        
        private int fIsRedField;
        
        /// <remarks/>
        public int FID {
            get {
                return this.fIDField;
            }
            set {
                this.fIDField = value;
            }
        }
        
        /// <remarks/>
        public int FSysID {
            get {
                return this.fSysIDField;
            }
            set {
                this.fSysIDField = value;
            }
        }
        
        /// <remarks/>
        public int FIsNew {
            get {
                return this.fIsNewField;
            }
            set {
                this.fIsNewField = value;
            }
        }
        
        /// <remarks/>
        public string FTitle {
            get {
                return this.fTitleField;
            }
            set {
                this.fTitleField = value;
            }
        }
        
        /// <remarks/>
        public string FUrl {
            get {
                return this.fUrlField;
            }
            set {
                this.fUrlField = value;
            }
        }
        
        /// <remarks/>
        public string FissueTime {
            get {
                return this.fissueTimeField;
            }
            set {
                this.fissueTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FLastTime {
            get {
                return this.fLastTimeField;
            }
            set {
                this.fLastTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FuserId {
            get {
                return this.fuserIdField;
            }
            set {
                this.fuserIdField = value;
            }
        }
        
        /// <remarks/>
        public int FIsRed {
            get {
                return this.fIsRedField;
            }
            set {
                this.fIsRedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class FreezeInfo {
        
        private string fidField;
        
        private string usernameField;
        
        private string contactField;
        
        private int fFreezeTypeField;
        
        private string fFreezeIDField;
        
        private string fFreezeReasonField;
        
        private string fHandleResultField;
        
        private string fFreezeChannelField;
        
        private string strFreezeEndDateField;
        
        /// <remarks/>
        public string fid {
            get {
                return this.fidField;
            }
            set {
                this.fidField = value;
            }
        }
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public int FFreezeType {
            get {
                return this.fFreezeTypeField;
            }
            set {
                this.fFreezeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FFreezeID {
            get {
                return this.fFreezeIDField;
            }
            set {
                this.fFreezeIDField = value;
            }
        }
        
        /// <remarks/>
        public string FFreezeReason {
            get {
                return this.fFreezeReasonField;
            }
            set {
                this.fFreezeReasonField = value;
            }
        }
        
        /// <remarks/>
        public string FHandleResult {
            get {
                return this.fHandleResultField;
            }
            set {
                this.fHandleResultField = value;
            }
        }
        
        /// <remarks/>
        public string FFreezeChannel {
            get {
                return this.fFreezeChannelField;
            }
            set {
                this.fFreezeChannelField = value;
            }
        }
        
        /// <remarks/>
        public string strFreezeEndDate {
            get {
                return this.strFreezeEndDateField;
            }
            set {
                this.strFreezeEndDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefundInfoClass))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserComplainClass))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ComplainBussClass))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class Query_BaseForNET {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class RefundInfoClass : Query_BaseForNET {
        
        private int fIdField;
        
        private string fOrderIdField;
        
        private string fCodingField;
        
        private string fAmountField;
        
        private int fTrade_stateField;
        
        private string fBuy_accField;
        
        private string fTrade_descField;
        
        private int fRefund_typeField;
        
        private int fRefund_stateField;
        
        private string fCreateTimeField;
        
        private string fModifyTimeField;
        
        private string fMemoField;
        
        private string fSubmit_userField;
        
        private string fRecycle_userField;
        
        private string fSam_noField;
        
        private int fSubmit_refundField;
        
        private string fRefund_amountField;
        
        /// <remarks/>
        public int FId {
            get {
                return this.fIdField;
            }
            set {
                this.fIdField = value;
            }
        }
        
        /// <remarks/>
        public string FOrderId {
            get {
                return this.fOrderIdField;
            }
            set {
                this.fOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public string FCoding {
            get {
                return this.fCodingField;
            }
            set {
                this.fCodingField = value;
            }
        }
        
        /// <remarks/>
        public string FAmount {
            get {
                return this.fAmountField;
            }
            set {
                this.fAmountField = value;
            }
        }
        
        /// <remarks/>
        public int FTrade_state {
            get {
                return this.fTrade_stateField;
            }
            set {
                this.fTrade_stateField = value;
            }
        }
        
        /// <remarks/>
        public string FBuy_acc {
            get {
                return this.fBuy_accField;
            }
            set {
                this.fBuy_accField = value;
            }
        }
        
        /// <remarks/>
        public string FTrade_desc {
            get {
                return this.fTrade_descField;
            }
            set {
                this.fTrade_descField = value;
            }
        }
        
        /// <remarks/>
        public int FRefund_type {
            get {
                return this.fRefund_typeField;
            }
            set {
                this.fRefund_typeField = value;
            }
        }
        
        /// <remarks/>
        public int FRefund_state {
            get {
                return this.fRefund_stateField;
            }
            set {
                this.fRefund_stateField = value;
            }
        }
        
        /// <remarks/>
        public string FCreateTime {
            get {
                return this.fCreateTimeField;
            }
            set {
                this.fCreateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FModifyTime {
            get {
                return this.fModifyTimeField;
            }
            set {
                this.fModifyTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FMemo {
            get {
                return this.fMemoField;
            }
            set {
                this.fMemoField = value;
            }
        }
        
        /// <remarks/>
        public string FSubmit_user {
            get {
                return this.fSubmit_userField;
            }
            set {
                this.fSubmit_userField = value;
            }
        }
        
        /// <remarks/>
        public string FRecycle_user {
            get {
                return this.fRecycle_userField;
            }
            set {
                this.fRecycle_userField = value;
            }
        }
        
        /// <remarks/>
        public string FSam_no {
            get {
                return this.fSam_noField;
            }
            set {
                this.fSam_noField = value;
            }
        }
        
        /// <remarks/>
        public int FSubmit_refund {
            get {
                return this.fSubmit_refundField;
            }
            set {
                this.fSubmit_refundField = value;
            }
        }
        
        /// <remarks/>
        public string FRefund_amount {
            get {
                return this.fRefund_amountField;
            }
            set {
                this.fRefund_amountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class UserComplainClass : Query_BaseForNET {
        
        private int fListIdField;
        
        private string fBussIdField;
        
        private string fBussNameField;
        
        private string fCftOrderIdField;
        
        private string fOrderFeeField;
        
        private int fCompTypeField;
        
        private int fStatusField;
        
        private int fReplyTypeField;
        
        private string fContactField;
        
        private string fNoticeTimeField;
        
        private string fRemindTimeField;
        
        private string fCreateTimeField;
        
        private string fModifyTimeField;
        
        private string fBussOrderIdField;
        
        private string fMemoField;
        
        /// <remarks/>
        public int FListId {
            get {
                return this.fListIdField;
            }
            set {
                this.fListIdField = value;
            }
        }
        
        /// <remarks/>
        public string FBussId {
            get {
                return this.fBussIdField;
            }
            set {
                this.fBussIdField = value;
            }
        }
        
        /// <remarks/>
        public string FBussName {
            get {
                return this.fBussNameField;
            }
            set {
                this.fBussNameField = value;
            }
        }
        
        /// <remarks/>
        public string FCftOrderId {
            get {
                return this.fCftOrderIdField;
            }
            set {
                this.fCftOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public string FOrderFee {
            get {
                return this.fOrderFeeField;
            }
            set {
                this.fOrderFeeField = value;
            }
        }
        
        /// <remarks/>
        public int FCompType {
            get {
                return this.fCompTypeField;
            }
            set {
                this.fCompTypeField = value;
            }
        }
        
        /// <remarks/>
        public int FStatus {
            get {
                return this.fStatusField;
            }
            set {
                this.fStatusField = value;
            }
        }
        
        /// <remarks/>
        public int FReplyType {
            get {
                return this.fReplyTypeField;
            }
            set {
                this.fReplyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FContact {
            get {
                return this.fContactField;
            }
            set {
                this.fContactField = value;
            }
        }
        
        /// <remarks/>
        public string FNoticeTime {
            get {
                return this.fNoticeTimeField;
            }
            set {
                this.fNoticeTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FRemindTime {
            get {
                return this.fRemindTimeField;
            }
            set {
                this.fRemindTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FCreateTime {
            get {
                return this.fCreateTimeField;
            }
            set {
                this.fCreateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FModifyTime {
            get {
                return this.fModifyTimeField;
            }
            set {
                this.fModifyTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FBussOrderId {
            get {
                return this.fBussOrderIdField;
            }
            set {
                this.fBussOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public string FMemo {
            get {
                return this.fMemoField;
            }
            set {
                this.fMemoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class ComplainBussClass : Query_BaseForNET {
        
        private string fBussIdField;
        
        private string fBussNameField;
        
        private string fBussEmailField;
        
        private string fCreateTimeField;
        
        private string fModifyTimeField;
        
        /// <remarks/>
        public string FBussId {
            get {
                return this.fBussIdField;
            }
            set {
                this.fBussIdField = value;
            }
        }
        
        /// <remarks/>
        public string FBussName {
            get {
                return this.fBussNameField;
            }
            set {
                this.fBussNameField = value;
            }
        }
        
        /// <remarks/>
        public string FBussEmail {
            get {
                return this.fBussEmailField;
            }
            set {
                this.fBussEmailField = value;
            }
        }
        
        /// <remarks/>
        public string FCreateTime {
            get {
                return this.fCreateTimeField;
            }
            set {
                this.fCreateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FModifyTime {
            get {
                return this.fModifyTimeField;
            }
            set {
                this.fModifyTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_USER_MED))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_BANKBULLETIN_INFO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_PUCNEWSERVICE_INFO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_BANKBULLETIN_INFO_ALL))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_BANKBULLETIN_TYPE_ALL))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_GWQ))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_RareName_INFO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_CLASS_BASIC {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_USER_MED : T_CLASS_BASIC {
        
        private string fuidField;
        
        private bool isNewField;
        
        private string fcurtypeField;
        
        private string fqqidField;
        
        private string fuser_typeField;
        
        private string fspidField;
        
        private string fbalanceField;
        
        private string ftruenameField;
        
        private string fcompany_nameField;
        
        private string fSexField;
        
        private string fAgeField;
        
        private string fphoneField;
        
        private string fmobileField;
        
        private string fcre_typeField;
        
        private string fcreidField;
        
        private string fpcodeField;
        
        private string femailField;
        
        private string fareaField;
        
        private string fCityField;
        
        private string faddressField;
        
        private string fmemoField;
        
        private string fatt_idField;
        
        private string fmer_keyField;
        
        /// <remarks/>
        public string fuid {
            get {
                return this.fuidField;
            }
            set {
                this.fuidField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string Fcurtype {
            get {
                return this.fcurtypeField;
            }
            set {
                this.fcurtypeField = value;
            }
        }
        
        /// <remarks/>
        public string fqqid {
            get {
                return this.fqqidField;
            }
            set {
                this.fqqidField = value;
            }
        }
        
        /// <remarks/>
        public string Fuser_type {
            get {
                return this.fuser_typeField;
            }
            set {
                this.fuser_typeField = value;
            }
        }
        
        /// <remarks/>
        public string fspid {
            get {
                return this.fspidField;
            }
            set {
                this.fspidField = value;
            }
        }
        
        /// <remarks/>
        public string Fbalance {
            get {
                return this.fbalanceField;
            }
            set {
                this.fbalanceField = value;
            }
        }
        
        /// <remarks/>
        public string Ftruename {
            get {
                return this.ftruenameField;
            }
            set {
                this.ftruenameField = value;
            }
        }
        
        /// <remarks/>
        public string Fcompany_name {
            get {
                return this.fcompany_nameField;
            }
            set {
                this.fcompany_nameField = value;
            }
        }
        
        /// <remarks/>
        public string FSex {
            get {
                return this.fSexField;
            }
            set {
                this.fSexField = value;
            }
        }
        
        /// <remarks/>
        public string FAge {
            get {
                return this.fAgeField;
            }
            set {
                this.fAgeField = value;
            }
        }
        
        /// <remarks/>
        public string Fphone {
            get {
                return this.fphoneField;
            }
            set {
                this.fphoneField = value;
            }
        }
        
        /// <remarks/>
        public string Fmobile {
            get {
                return this.fmobileField;
            }
            set {
                this.fmobileField = value;
            }
        }
        
        /// <remarks/>
        public string Fcre_type {
            get {
                return this.fcre_typeField;
            }
            set {
                this.fcre_typeField = value;
            }
        }
        
        /// <remarks/>
        public string Fcreid {
            get {
                return this.fcreidField;
            }
            set {
                this.fcreidField = value;
            }
        }
        
        /// <remarks/>
        public string Fpcode {
            get {
                return this.fpcodeField;
            }
            set {
                this.fpcodeField = value;
            }
        }
        
        /// <remarks/>
        public string Femail {
            get {
                return this.femailField;
            }
            set {
                this.femailField = value;
            }
        }
        
        /// <remarks/>
        public string Farea {
            get {
                return this.fareaField;
            }
            set {
                this.fareaField = value;
            }
        }
        
        /// <remarks/>
        public string FCity {
            get {
                return this.fCityField;
            }
            set {
                this.fCityField = value;
            }
        }
        
        /// <remarks/>
        public string Faddress {
            get {
                return this.faddressField;
            }
            set {
                this.faddressField = value;
            }
        }
        
        /// <remarks/>
        public string Fmemo {
            get {
                return this.fmemoField;
            }
            set {
                this.fmemoField = value;
            }
        }
        
        /// <remarks/>
        public string Fatt_id {
            get {
                return this.fatt_idField;
            }
            set {
                this.fatt_idField = value;
            }
        }
        
        /// <remarks/>
        public string fmer_key {
            get {
                return this.fmer_keyField;
            }
            set {
                this.fmer_keyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_BANKBULLETIN_INFO : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private bool isOPenField;
        
        private string bulletin_idField;
        
        private string banktypeField;
        
        private string businesstypeField;
        
        private string op_support_flagField;
        
        private string closetypeField;
        
        private string titleField;
        
        private string maintextField;
        
        private string popuptextField;
        
        private string startimeField;
        
        private string endtimeField;
        
        private string createuserField;
        
        private string updateuserField;
        
        private string createtimeField;
        
        private string updatetimeField;
        
        private string returnUrlField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOPen {
            get {
                return this.isOPenField;
            }
            set {
                this.isOPenField = value;
            }
        }
        
        /// <remarks/>
        public string bulletin_id {
            get {
                return this.bulletin_idField;
            }
            set {
                this.bulletin_idField = value;
            }
        }
        
        /// <remarks/>
        public string banktype {
            get {
                return this.banktypeField;
            }
            set {
                this.banktypeField = value;
            }
        }
        
        /// <remarks/>
        public string businesstype {
            get {
                return this.businesstypeField;
            }
            set {
                this.businesstypeField = value;
            }
        }
        
        /// <remarks/>
        public string op_support_flag {
            get {
                return this.op_support_flagField;
            }
            set {
                this.op_support_flagField = value;
            }
        }
        
        /// <remarks/>
        public string closetype {
            get {
                return this.closetypeField;
            }
            set {
                this.closetypeField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string maintext {
            get {
                return this.maintextField;
            }
            set {
                this.maintextField = value;
            }
        }
        
        /// <remarks/>
        public string popuptext {
            get {
                return this.popuptextField;
            }
            set {
                this.popuptextField = value;
            }
        }
        
        /// <remarks/>
        public string startime {
            get {
                return this.startimeField;
            }
            set {
                this.startimeField = value;
            }
        }
        
        /// <remarks/>
        public string endtime {
            get {
                return this.endtimeField;
            }
            set {
                this.endtimeField = value;
            }
        }
        
        /// <remarks/>
        public string createuser {
            get {
                return this.createuserField;
            }
            set {
                this.createuserField = value;
            }
        }
        
        /// <remarks/>
        public string updateuser {
            get {
                return this.updateuserField;
            }
            set {
                this.updateuserField = value;
            }
        }
        
        /// <remarks/>
        public string createtime {
            get {
                return this.createtimeField;
            }
            set {
                this.createtimeField = value;
            }
        }
        
        /// <remarks/>
        public string updatetime {
            get {
                return this.updatetimeField;
            }
            set {
                this.updatetimeField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_PUCNEWSERVICE_INFO : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fservicecodeField;
        
        private string fuctypeField;
        
        private string ftipsField;
        
        private string fstartimeField;
        
        private string fendtimeField;
        
        private string fupdatetimeField;
        
        private string returnUrlField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string Fservicecode {
            get {
                return this.fservicecodeField;
            }
            set {
                this.fservicecodeField = value;
            }
        }
        
        /// <remarks/>
        public string Fuctype {
            get {
                return this.fuctypeField;
            }
            set {
                this.fuctypeField = value;
            }
        }
        
        /// <remarks/>
        public string Ftips {
            get {
                return this.ftipsField;
            }
            set {
                this.ftipsField = value;
            }
        }
        
        /// <remarks/>
        public string Fstartime {
            get {
                return this.fstartimeField;
            }
            set {
                this.fstartimeField = value;
            }
        }
        
        /// <remarks/>
        public string Fendtime {
            get {
                return this.fendtimeField;
            }
            set {
                this.fendtimeField = value;
            }
        }
        
        /// <remarks/>
        public string Fupdatetime {
            get {
                return this.fupdatetimeField;
            }
            set {
                this.fupdatetimeField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_BANKBULLETIN_INFO_ALL : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private bool isOPenField;
        
        private string fbanktypeField;
        
        private string ftitleField;
        
        private string fmaintextField;
        
        private string fstartimeField;
        
        private string fendtimeField;
        
        private string fcreateuserField;
        
        private string fcreatetimeField;
        
        private string fupdateuserField;
        
        private string fupdatetimeField;
        
        private string returnUrlField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOPen {
            get {
                return this.isOPenField;
            }
            set {
                this.isOPenField = value;
            }
        }
        
        /// <remarks/>
        public string Fbanktype {
            get {
                return this.fbanktypeField;
            }
            set {
                this.fbanktypeField = value;
            }
        }
        
        /// <remarks/>
        public string Ftitle {
            get {
                return this.ftitleField;
            }
            set {
                this.ftitleField = value;
            }
        }
        
        /// <remarks/>
        public string Fmaintext {
            get {
                return this.fmaintextField;
            }
            set {
                this.fmaintextField = value;
            }
        }
        
        /// <remarks/>
        public string Fstartime {
            get {
                return this.fstartimeField;
            }
            set {
                this.fstartimeField = value;
            }
        }
        
        /// <remarks/>
        public string Fendtime {
            get {
                return this.fendtimeField;
            }
            set {
                this.fendtimeField = value;
            }
        }
        
        /// <remarks/>
        public string Fcreateuser {
            get {
                return this.fcreateuserField;
            }
            set {
                this.fcreateuserField = value;
            }
        }
        
        /// <remarks/>
        public string Fcreatetime {
            get {
                return this.fcreatetimeField;
            }
            set {
                this.fcreatetimeField = value;
            }
        }
        
        /// <remarks/>
        public string Fupdateuser {
            get {
                return this.fupdateuserField;
            }
            set {
                this.fupdateuserField = value;
            }
        }
        
        /// <remarks/>
        public string Fupdatetime {
            get {
                return this.fupdatetimeField;
            }
            set {
                this.fupdatetimeField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_BANKBULLETIN_TYPE_ALL : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private bool isOPenField;
        
        private string fbanktypeField;
        
        private string fmaintextField;
        
        private string fstartimeField;
        
        private string fendtimeField;
        
        private string fcreateuserField;
        
        private string fcreatetimeField;
        
        private string fupdateuserField;
        
        private string fupdatetimeField;
        
        private string returnUrlField;
        
        private string fareaField;
        
        private string fcityField;
        
        private string fbusinetypeField;
        
        private string isaffectinterfaceField;
        
        private string ftitleField;
        
        private string ftctextField;
        
        private string fidField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOPen {
            get {
                return this.isOPenField;
            }
            set {
                this.isOPenField = value;
            }
        }
        
        /// <remarks/>
        public string Fbanktype {
            get {
                return this.fbanktypeField;
            }
            set {
                this.fbanktypeField = value;
            }
        }
        
        /// <remarks/>
        public string Fmaintext {
            get {
                return this.fmaintextField;
            }
            set {
                this.fmaintextField = value;
            }
        }
        
        /// <remarks/>
        public string Fstartime {
            get {
                return this.fstartimeField;
            }
            set {
                this.fstartimeField = value;
            }
        }
        
        /// <remarks/>
        public string Fendtime {
            get {
                return this.fendtimeField;
            }
            set {
                this.fendtimeField = value;
            }
        }
        
        /// <remarks/>
        public string Fcreateuser {
            get {
                return this.fcreateuserField;
            }
            set {
                this.fcreateuserField = value;
            }
        }
        
        /// <remarks/>
        public string Fcreatetime {
            get {
                return this.fcreatetimeField;
            }
            set {
                this.fcreatetimeField = value;
            }
        }
        
        /// <remarks/>
        public string Fupdateuser {
            get {
                return this.fupdateuserField;
            }
            set {
                this.fupdateuserField = value;
            }
        }
        
        /// <remarks/>
        public string Fupdatetime {
            get {
                return this.fupdatetimeField;
            }
            set {
                this.fupdatetimeField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public string Farea {
            get {
                return this.fareaField;
            }
            set {
                this.fareaField = value;
            }
        }
        
        /// <remarks/>
        public string Fcity {
            get {
                return this.fcityField;
            }
            set {
                this.fcityField = value;
            }
        }
        
        /// <remarks/>
        public string Fbusinetype {
            get {
                return this.fbusinetypeField;
            }
            set {
                this.fbusinetypeField = value;
            }
        }
        
        /// <remarks/>
        public string Isaffectinterface {
            get {
                return this.isaffectinterfaceField;
            }
            set {
                this.isaffectinterfaceField = value;
            }
        }
        
        /// <remarks/>
        public string Ftitle {
            get {
                return this.ftitleField;
            }
            set {
                this.ftitleField = value;
            }
        }
        
        /// <remarks/>
        public string Ftctext {
            get {
                return this.ftctextField;
            }
            set {
                this.ftctextField = value;
            }
        }
        
        /// <remarks/>
        public string Fid {
            get {
                return this.fidField;
            }
            set {
                this.fidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_GWQ : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fauto_idField;
        
        private string fticket_idField;
        
        private string ftde_idField;
        
        private string fson_idField;
        
        private string fuser_idField;
        
        private string fuser_uidField;
        
        private string fpub_idField;
        
        private string fpub_uidField;
        
        private string flistidField;
        
        private string fspidField;
        
        private string fatt_nameField;
        
        private string fmer_idField;
        
        private string fdonate_typeField;
        
        private string fdonate_numField;
        
        private string ftypeField;
        
        private string fpub_typeField;
        
        private string fstateField;
        
        private string flist_stateField;
        
        private string fadjust_flagField;
        
        private string ffeeField;
        
        private string fuse_proField;
        
        private string fmin_feeField;
        
        private string fmax_numField;
        
        private string ffact_feeField;
        
        private string fstimeField;
        
        private string fetimeField;
        
        private string fpub_timeField;
        
        private string fuse_timeField;
        
        private string furlField;
        
        private string fpub_userField;
        
        private string fuser_ipField;
        
        private string fpub_ipField;
        
        private string fstandby1Field;
        
        private string fstandby2Field;
        
        private string fstandby3Field;
        
        private string fstandby4Field;
        
        private string fmemoField;
        
        private string fmodify_timeField;
        
        private string fpub_nameField;
        
        private string fdonate_idField;
        
        private string fdonate_uidField;
        
        private string fdonate_timeField;
        
        private string fuse_listidField;
        
        private string fac_stimeField;
        
        private string fac_etimeField;
        
        private string fac_flagField;
        
        private string fac_numField;
        
        private string fac_uinField;
        
        private string fac_uidField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string fauto_id {
            get {
                return this.fauto_idField;
            }
            set {
                this.fauto_idField = value;
            }
        }
        
        /// <remarks/>
        public string fticket_id {
            get {
                return this.fticket_idField;
            }
            set {
                this.fticket_idField = value;
            }
        }
        
        /// <remarks/>
        public string ftde_id {
            get {
                return this.ftde_idField;
            }
            set {
                this.ftde_idField = value;
            }
        }
        
        /// <remarks/>
        public string fson_id {
            get {
                return this.fson_idField;
            }
            set {
                this.fson_idField = value;
            }
        }
        
        /// <remarks/>
        public string fuser_id {
            get {
                return this.fuser_idField;
            }
            set {
                this.fuser_idField = value;
            }
        }
        
        /// <remarks/>
        public string fuser_uid {
            get {
                return this.fuser_uidField;
            }
            set {
                this.fuser_uidField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_id {
            get {
                return this.fpub_idField;
            }
            set {
                this.fpub_idField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_uid {
            get {
                return this.fpub_uidField;
            }
            set {
                this.fpub_uidField = value;
            }
        }
        
        /// <remarks/>
        public string flistid {
            get {
                return this.flistidField;
            }
            set {
                this.flistidField = value;
            }
        }
        
        /// <remarks/>
        public string fspid {
            get {
                return this.fspidField;
            }
            set {
                this.fspidField = value;
            }
        }
        
        /// <remarks/>
        public string fatt_name {
            get {
                return this.fatt_nameField;
            }
            set {
                this.fatt_nameField = value;
            }
        }
        
        /// <remarks/>
        public string fmer_id {
            get {
                return this.fmer_idField;
            }
            set {
                this.fmer_idField = value;
            }
        }
        
        /// <remarks/>
        public string fdonate_type {
            get {
                return this.fdonate_typeField;
            }
            set {
                this.fdonate_typeField = value;
            }
        }
        
        /// <remarks/>
        public string fdonate_num {
            get {
                return this.fdonate_numField;
            }
            set {
                this.fdonate_numField = value;
            }
        }
        
        /// <remarks/>
        public string ftype {
            get {
                return this.ftypeField;
            }
            set {
                this.ftypeField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_type {
            get {
                return this.fpub_typeField;
            }
            set {
                this.fpub_typeField = value;
            }
        }
        
        /// <remarks/>
        public string fstate {
            get {
                return this.fstateField;
            }
            set {
                this.fstateField = value;
            }
        }
        
        /// <remarks/>
        public string flist_state {
            get {
                return this.flist_stateField;
            }
            set {
                this.flist_stateField = value;
            }
        }
        
        /// <remarks/>
        public string fadjust_flag {
            get {
                return this.fadjust_flagField;
            }
            set {
                this.fadjust_flagField = value;
            }
        }
        
        /// <remarks/>
        public string ffee {
            get {
                return this.ffeeField;
            }
            set {
                this.ffeeField = value;
            }
        }
        
        /// <remarks/>
        public string fuse_pro {
            get {
                return this.fuse_proField;
            }
            set {
                this.fuse_proField = value;
            }
        }
        
        /// <remarks/>
        public string fmin_fee {
            get {
                return this.fmin_feeField;
            }
            set {
                this.fmin_feeField = value;
            }
        }
        
        /// <remarks/>
        public string fmax_num {
            get {
                return this.fmax_numField;
            }
            set {
                this.fmax_numField = value;
            }
        }
        
        /// <remarks/>
        public string ffact_fee {
            get {
                return this.ffact_feeField;
            }
            set {
                this.ffact_feeField = value;
            }
        }
        
        /// <remarks/>
        public string fstime {
            get {
                return this.fstimeField;
            }
            set {
                this.fstimeField = value;
            }
        }
        
        /// <remarks/>
        public string fetime {
            get {
                return this.fetimeField;
            }
            set {
                this.fetimeField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_time {
            get {
                return this.fpub_timeField;
            }
            set {
                this.fpub_timeField = value;
            }
        }
        
        /// <remarks/>
        public string fuse_time {
            get {
                return this.fuse_timeField;
            }
            set {
                this.fuse_timeField = value;
            }
        }
        
        /// <remarks/>
        public string furl {
            get {
                return this.furlField;
            }
            set {
                this.furlField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_user {
            get {
                return this.fpub_userField;
            }
            set {
                this.fpub_userField = value;
            }
        }
        
        /// <remarks/>
        public string fuser_ip {
            get {
                return this.fuser_ipField;
            }
            set {
                this.fuser_ipField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_ip {
            get {
                return this.fpub_ipField;
            }
            set {
                this.fpub_ipField = value;
            }
        }
        
        /// <remarks/>
        public string fstandby1 {
            get {
                return this.fstandby1Field;
            }
            set {
                this.fstandby1Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby2 {
            get {
                return this.fstandby2Field;
            }
            set {
                this.fstandby2Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby3 {
            get {
                return this.fstandby3Field;
            }
            set {
                this.fstandby3Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby4 {
            get {
                return this.fstandby4Field;
            }
            set {
                this.fstandby4Field = value;
            }
        }
        
        /// <remarks/>
        public string fmemo {
            get {
                return this.fmemoField;
            }
            set {
                this.fmemoField = value;
            }
        }
        
        /// <remarks/>
        public string fmodify_time {
            get {
                return this.fmodify_timeField;
            }
            set {
                this.fmodify_timeField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_name {
            get {
                return this.fpub_nameField;
            }
            set {
                this.fpub_nameField = value;
            }
        }
        
        /// <remarks/>
        public string fdonate_id {
            get {
                return this.fdonate_idField;
            }
            set {
                this.fdonate_idField = value;
            }
        }
        
        /// <remarks/>
        public string fdonate_uid {
            get {
                return this.fdonate_uidField;
            }
            set {
                this.fdonate_uidField = value;
            }
        }
        
        /// <remarks/>
        public string fdonate_time {
            get {
                return this.fdonate_timeField;
            }
            set {
                this.fdonate_timeField = value;
            }
        }
        
        /// <remarks/>
        public string fuse_listid {
            get {
                return this.fuse_listidField;
            }
            set {
                this.fuse_listidField = value;
            }
        }
        
        /// <remarks/>
        public string fac_stime {
            get {
                return this.fac_stimeField;
            }
            set {
                this.fac_stimeField = value;
            }
        }
        
        /// <remarks/>
        public string fac_etime {
            get {
                return this.fac_etimeField;
            }
            set {
                this.fac_etimeField = value;
            }
        }
        
        /// <remarks/>
        public string fac_flag {
            get {
                return this.fac_flagField;
            }
            set {
                this.fac_flagField = value;
            }
        }
        
        /// <remarks/>
        public string fac_num {
            get {
                return this.fac_numField;
            }
            set {
                this.fac_numField = value;
            }
        }
        
        /// <remarks/>
        public string fac_uin {
            get {
                return this.fac_uinField;
            }
            set {
                this.fac_uinField = value;
            }
        }
        
        /// <remarks/>
        public string fac_uid {
            get {
                return this.fac_uidField;
            }
            set {
                this.fac_uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_RareName_INFO : T_CLASS_BASIC {
        
        private string sp_idField;
        
        private string op_typeField;
        
        private string card_noField;
        
        private string card_tailField;
        
        private string user_typeField;
        
        private string account_nameField;
        
        private string card_stateField;
        
        private string modify_usernameField;
        
        private string modify_typeField;
        
        /// <remarks/>
        public string sp_id {
            get {
                return this.sp_idField;
            }
            set {
                this.sp_idField = value;
            }
        }
        
        /// <remarks/>
        public string op_type {
            get {
                return this.op_typeField;
            }
            set {
                this.op_typeField = value;
            }
        }
        
        /// <remarks/>
        public string card_no {
            get {
                return this.card_noField;
            }
            set {
                this.card_noField = value;
            }
        }
        
        /// <remarks/>
        public string card_tail {
            get {
                return this.card_tailField;
            }
            set {
                this.card_tailField = value;
            }
        }
        
        /// <remarks/>
        public string user_type {
            get {
                return this.user_typeField;
            }
            set {
                this.user_typeField = value;
            }
        }
        
        /// <remarks/>
        public string account_name {
            get {
                return this.account_nameField;
            }
            set {
                this.account_nameField = value;
            }
        }
        
        /// <remarks/>
        public string card_state {
            get {
                return this.card_stateField;
            }
            set {
                this.card_stateField = value;
            }
        }
        
        /// <remarks/>
        public string modify_username {
            get {
                return this.modify_usernameField;
            }
            set {
                this.modify_usernameField = value;
            }
        }
        
        /// <remarks/>
        public string modify_type {
            get {
                return this.modify_typeField;
            }
            set {
                this.modify_typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteCrtServiceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMobileTokenListCompletedEventHandler(object sender, GetMobileTokenListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMobileTokenListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMobileTokenListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPhoneBillRecordByTransIDCompletedEventHandler(object sender, GetPhoneBillRecordByTransIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPhoneBillRecordByTransIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPhoneBillRecordByTransIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strOutMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPhoneBillRecordByPhoneNumberCompletedEventHandler(object sender, GetPhoneBillRecordByPhoneNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPhoneBillRecordByPhoneNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPhoneBillRecordByPhoneNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strOutMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDKBankListCompletedEventHandler(object sender, QueryDKBankListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDKBankListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDKBankListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CountDKBankListCompletedEventHandler(object sender, CountDKBankListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountDKBankListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountDKBankListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDKBankListDetailCompletedEventHandler(object sender, QueryDKBankListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDKBankListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDKBankListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDKContractListCompletedEventHandler(object sender, QueryDKContractListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDKContractListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDKContractListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDKContractDetailCompletedEventHandler(object sender, QueryDKContractDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDKContractDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDKContractDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDKContractBatchListCompletedEventHandler(object sender, QueryDKContractBatchListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDKContractBatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDKContractBatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDKContractBatchDetailCompletedEventHandler(object sender, QueryDKContractBatchDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDKContractBatchDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDKContractBatchDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDKLimit_ListCompletedEventHandler(object sender, GetDKLimit_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDKLimit_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDKLimit_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDKLimit_DetailCompletedEventHandler(object sender, GetDKLimit_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDKLimit_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDKLimit_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDKService_ListCompletedEventHandler(object sender, GetDKService_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDKService_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDKService_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDKService_Detail9999CompletedEventHandler(object sender, GetDKService_Detail9999CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDKService_Detail9999CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDKService_Detail9999CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDKService_SPServiceDetailCompletedEventHandler(object sender, GetDKService_SPServiceDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDKService_SPServiceDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDKService_SPServiceDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCFTMemberCompletedEventHandler(object sender, QueryCFTMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCFTMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCFTMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCFTMemberAdvancedCompletedEventHandler(object sender, QueryCFTMemberAdvancedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCFTMemberAdvancedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCFTMemberAdvancedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTurnoverCompletedEventHandler(object sender, QueryTurnoverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTurnoverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTurnoverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankCardBindCompletedEventHandler(object sender, QueryBankCardBindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankCardBindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankCardBindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankCardTransactionCompletedEventHandler(object sender, QueryBankCardTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankCardTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankCardTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankCardInfoCompletedEventHandler(object sender, QueryBankCardInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankCardInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankCardInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryForeignCardInfoByOrderCompletedEventHandler(object sender, QueryForeignCardInfoByOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryForeignCardInfoByOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryForeignCardInfoByOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryForeignCardInfoByMerchantCompletedEventHandler(object sender, QueryForeignCardInfoByMerchantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryForeignCardInfoByMerchantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryForeignCardInfoByMerchantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryForeignCardInfoByBankOrderCompletedEventHandler(object sender, QueryForeignCardInfoByBankOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryForeignCardInfoByBankOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryForeignCardInfoByBankOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBalanceCompletedEventHandler(object sender, GetUserBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBalanceByUIdCompletedEventHandler(object sender, GetUserBalanceByUIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBalanceByUIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBalanceByUIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryMobilRechargeCompletedEventHandler(object sender, QueryMobilRechargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMobilRechargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMobilRechargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryMobilRechargeOrderCompletedEventHandler(object sender, QueryMobilRechargeOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMobilRechargeOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMobilRechargeOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QuerySupplierValidDateCompletedEventHandler(object sender, QuerySupplierValidDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySupplierValidDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySupplierValidDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QuerySupplierNameCompletedEventHandler(object sender, QuerySupplierNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySupplierNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySupplierNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateSupplierVaildDateCompletedEventHandler(object sender, UpdateSupplierVaildDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSupplierVaildDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSupplierVaildDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryMobilProductCompletedEventHandler(object sender, QueryMobilProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMobilProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMobilProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryOneMobilProductCompletedEventHandler(object sender, QueryOneMobilProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryOneMobilProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryOneMobilProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateMobileProductCompletedEventHandler(object sender, UpdateMobileProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMobileProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMobileProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteMobileProductCompletedEventHandler(object sender, DeleteMobileProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMobileProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMobileProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DK_BatchSelectCompletedEventHandler(object sender, DK_BatchSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DK_BatchSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DK_BatchSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string batchid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DK_FileSelectCompletedEventHandler(object sender, DK_FileSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DK_FileSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DK_FileSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string batchid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DK_QueryCheckBatchAllDetailCompletedEventHandler(object sender, DK_QueryCheckBatchAllDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DK_QueryCheckBatchAllDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DK_QueryCheckBatchAllDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DK_QueryCheckBatchSumAmountCompletedEventHandler(object sender, DK_QueryCheckBatchSumAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DK_QueryCheckBatchSumAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DK_QueryCheckBatchSumAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DK_QueryCheckInfoCompletedEventHandler(object sender, DK_QueryCheckInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DK_QueryCheckInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DK_QueryCheckInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DK_QueryCheckDetailInfoCompletedEventHandler(object sender, DK_QueryCheckDetailInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DK_QueryCheckDetailInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DK_QueryCheckDetailInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DK_StartCheckCompletedEventHandler(object sender, DK_StartCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DK_StartCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DK_StartCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InternetBankTurnoverBillQueryCompletedEventHandler(object sender, InternetBankTurnoverBillQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InternetBankTurnoverBillQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InternetBankTurnoverBillQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InternetBankBillHistoryQueryCompletedEventHandler(object sender, InternetBankBillHistoryQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InternetBankBillHistoryQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InternetBankBillHistoryQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBatchInfo_DFCompletedEventHandler(object sender, QueryBatchInfo_DFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBatchInfo_DFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBatchInfo_DFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CountBatchInfo_DFCompletedEventHandler(object sender, CountBatchInfo_DFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountBatchInfo_DFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountBatchInfo_DFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDFInfoCompletedEventHandler(object sender, QueryDFInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDFInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDFInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCFTTransferInfoCompletedEventHandler(object sender, QueryCFTTransferInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCFTTransferInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCFTTransferInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTransferDetailCompletedEventHandler(object sender, QueryTransferDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTransferDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTransferDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CountDFInfoCompletedEventHandler(object sender, CountDFInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountDFInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountDFInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDFDetailCompletedEventHandler(object sender, QueryDFDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDFDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDFDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryIconInfoCompletedEventHandler(object sender, QueryIconInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryIconInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryIconInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RefreshIconCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExtinguishIconCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryAutomaticRechargeCompletedEventHandler(object sender, QueryAutomaticRechargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAutomaticRechargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAutomaticRechargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryAutomaticRechargeBillListCompletedEventHandler(object sender, QueryAutomaticRechargeBillListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAutomaticRechargeBillListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAutomaticRechargeBillListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankTypeKKCompletedEventHandler(object sender, GetBankTypeKKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankTypeKKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankTypeKKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Uid2QQCompletedEventHandler(object sender, Uid2QQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Uid2QQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Uid2QQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SingedByServiceCompletedEventHandler(object sender, SingedByServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SingedByServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SingedByServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAATradeListCompletedEventHandler(object sender, GetAATradeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAATradeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAATradeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAATradeDetailsSingleYearCompletedEventHandler(object sender, GetAATradeDetailsSingleYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAATradeDetailsSingleYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAATradeDetailsSingleYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryAATotalTradeInfoCompletedEventHandler(object sender, QueryAATotalTradeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAATotalTradeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAATotalTradeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReceiveRedPacketListCompletedEventHandler(object sender, GetReceiveRedPacketListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceiveRedPacketListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceiveRedPacketListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRedPacketDetailListCompletedEventHandler(object sender, GetRedPacketDetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRedPacketDetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRedPacketDetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSendRedPacketListCompletedEventHandler(object sender, GetSendRedPacketListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSendRedPacketListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSendRedPacketListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSmallCreditCardInfoCompletedEventHandler(object sender, GetSmallCreditCardInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmallCreditCardInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmallCreditCardInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void OverseasReturnQueryCompletedEventHandler(object sender, OverseasReturnQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OverseasReturnQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OverseasReturnQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AirTicketsOrderQueryCompletedEventHandler(object sender, AirTicketsOrderQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirTicketsOrderQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirTicketsOrderQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HotelOrderQueryCompletedEventHandler(object sender, HotelOrderQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HotelOrderQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HotelOrderQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RareNameQueryCompletedEventHandler(object sender, RareNameQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RareNameQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RareNameQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddOneRareNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AtuoRenewQueryCompletedEventHandler(object sender, AtuoRenewQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AtuoRenewQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AtuoRenewQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AtuoRenewUnbindCompletedEventHandler(object sender, AtuoRenewUnbindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AtuoRenewUnbindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AtuoRenewUnbindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void WS_AppealSQueryCountCompletedEventHandler(object sender, WS_AppealSQueryCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_AppealSQueryCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_AppealSQueryCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCreditQueryListForFaidCountCompletedEventHandler(object sender, GetCreditQueryListForFaidCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditQueryListForFaidCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditQueryListForFaidCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCreditQueryListCountCompletedEventHandler(object sender, GetCreditQueryListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditQueryListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditQueryListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCreditQueryListForFaidCompletedEventHandler(object sender, GetCreditQueryListForFaidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditQueryListForFaidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditQueryListForFaidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCreditQueryListCompletedEventHandler(object sender, GetCreditQueryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditQueryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditQueryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatPay_InitGridCompletedEventHandler(object sender, BatPay_InitGridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_InitGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_InitGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatPay_GetBankCompletedEventHandler(object sender, BatPay_GetBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_GetBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_GetBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatPay_CanVisibleCompletedEventHandler(object sender, BatPay_CanVisibleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CanVisibleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CanVisibleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatPay_SixCheckCompletedEventHandler(object sender, BatPay_SixCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_SixCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_SixCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatPay_CheckSnapFinishCompletedEventHandler(object sender, BatPay_CheckSnapFinishCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CheckSnapFinishCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CheckSnapFinishCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatPay_CheckFinish11CompletedEventHandler(object sender, BatPay_CheckFinish11CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CheckFinish11CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CheckFinish11CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatPay_GetErrorMsgCompletedEventHandler(object sender, BatPay_GetErrorMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_GetErrorMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_GetErrorMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatpayDetail_GetCountCompletedEventHandler(object sender, BatpayDetail_GetCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatpayDetail_GetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatpayDetail_GetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatpayDetail_BindDataCompletedEventHandler(object sender, BatpayDetail_BindDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatpayDetail_BindDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatpayDetail_BindDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRealTimeOrderListCountCompletedEventHandler(object sender, GetRealTimeOrderListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRealTimeOrderListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRealTimeOrderListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRealTimeOrderListCompletedEventHandler(object sender, GetRealTimeOrderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRealTimeOrderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRealTimeOrderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInversatorSignDetailCompletedEventHandler(object sender, GetInversatorSignDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInversatorSignDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInversatorSignDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundInfoCompletedEventHandler(object sender, GetFundInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChargeInfoCompletedEventHandler(object sender, GetChargeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChargeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChargeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryUid_ByCerNumCompletedEventHandler(object sender, QueryUid_ByCerNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUid_ByCerNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUid_ByCerNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserFundAccountInfoCompletedEventHandler(object sender, GetUserFundAccountInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserFundAccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserFundAccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserFundAccountInfo1CompletedEventHandler(object sender, GetUserFundAccountInfo1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserFundAccountInfo1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserFundAccountInfo1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserFundCardBindCompletedEventHandler(object sender, GetUserFundCardBindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserFundCardBindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserFundCardBindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayCardInfoCompletedEventHandler(object sender, GetPayCardInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayCardInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayCardInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayCardInfoExCompletedEventHandler(object sender, GetPayCardInfoExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayCardInfoExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayCardInfoExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBindBankCardCompletedEventHandler(object sender, GetBindBankCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBindBankCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBindBankCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundSupportBankCompletedEventHandler(object sender, GetFundSupportBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundSupportBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundSupportBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ModifyFundPayCardCompletedEventHandler(object sender, ModifyFundPayCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyFundPayCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyFundPayCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundTradeListCompletedEventHandler(object sender, GetFundTradeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundTradeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundTradeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserCrtCFDInfoCompletedEventHandler(object sender, GetUserCrtCFDInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCrtCFDInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCrtCFDInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCFDInfoCompletedEventHandler(object sender, QueryCFDInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCFDInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCFDInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediCertManageCountCompletedEventHandler(object sender, GetMediCertManageCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediCertManageCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediCertManageCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediCertManageListCompletedEventHandler(object sender, GetMediCertManageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediCertManageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediCertManageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediOperatorManageListCompletedEventHandler(object sender, GetMediOperatorManageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediOperatorManageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediOperatorManageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediOperatorRoleCompletedEventHandler(object sender, GetMediOperatorRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediOperatorRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediOperatorRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediOperatorRoleNewCompletedEventHandler(object sender, GetMediOperatorRoleNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediOperatorRoleNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediOperatorRoleNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ResetSynRecordStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SynPayStateCompletedEventHandler(object sender, SynPayStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SynPayStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SynPayStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSynRecordQueryListCompletedEventHandler(object sender, GetSynRecordQueryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSynRecordQueryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSynRecordQueryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSynRecordQueryDetailCompletedEventHandler(object sender, GetSynRecordQueryDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSynRecordQueryDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSynRecordQueryDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatchSynPayStateCompletedEventHandler(object sender, BatchSynPayStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchSynPayStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchSynPayStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetB2cReturnDetailCompletedEventHandler(object sender, GetB2cReturnDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetB2cReturnDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetB2cReturnDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatPay_InitGrid_RCompletedEventHandler(object sender, BatPay_InitGrid_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_InitGrid_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_InitGrid_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatPay_CanVisible_RCompletedEventHandler(object sender, BatPay_CanVisible_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CanVisible_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CanVisible_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllRefundBankCompletedEventHandler(object sender, GetAllRefundBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRefundBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRefundBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundListCompletedEventHandler(object sender, GetRefundListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundListCountCompletedEventHandler(object sender, GetRefundListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpDateBindInfoCompletedEventHandler(object sender, UpDateBindInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpDateBindInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpDateBindInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMsgNotifyCompletedEventHandler(object sender, GetMsgNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMsgNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMsgNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMsgNotifyByPhoneNumberCompletedEventHandler(object sender, GetMsgNotifyByPhoneNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMsgNotifyByPhoneNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMsgNotifyByPhoneNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UnbindMsgNotifyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BindMsgNotifyCompletedEventHandler(object sender, BindMsgNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BindMsgNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BindMsgNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string BindMail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOldBindMobileCompletedEventHandler(object sender, GetOldBindMobileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOldBindMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOldBindMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatPay_InitGrid_BCompletedEventHandler(object sender, BatPay_InitGrid_BCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_InitGrid_BCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_InitGrid_BCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatPay_CanVisible_BCompletedEventHandler(object sender, BatPay_CanVisible_BCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CanVisible_BCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CanVisible_BCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ShowDetail_BindDataCompletedEventHandler(object sender, ShowDetail_BindDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowDetail_BindDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowDetail_BindDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Gett_appealListCompletedEventHandler(object sender, Gett_appealListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gett_appealListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Gett_appealListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Gett_messageCompletedEventHandler(object sender, Gett_messageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gett_messageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Gett_messageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Savetp_add_msgCompletedEventHandler(object sender, Savetp_add_msgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Savetp_add_msgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Savetp_add_msgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SubmitApproveCompletedEventHandler(object sender, SubmitApproveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitApproveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitApproveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApprovePassCompletedEventHandler(object sender, ApprovePassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApprovePassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApprovePassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApproveCancelCompletedEventHandler(object sender, ApproveCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BusinessIdentityCardNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllChannelListCompletedEventHandler(object sender, GetAllChannelListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllChannelListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllChannelListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayLimitListCompletedEventHandler(object sender, GetPayLimitListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayLimitListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayLimitListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTrustLimitListCompletedEventHandler(object sender, GetTrustLimitListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrustLimitListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrustLimitListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserClassLockListCompletedEventHandler(object sender, GetUserClassLockListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserClassLockListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserClassLockListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserClassQueryListCompletedEventHandler(object sender, GetUserClassQueryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserClassQueryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserClassQueryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserClassQueryListForThisCompletedEventHandler(object sender, GetUserClassQueryListForThisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserClassQueryListForThisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserClassQueryListForThisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserClassQueryCountCompletedEventHandler(object sender, GetUserClassQueryCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserClassQueryCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserClassQueryCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserClassDetailCompletedEventHandler(object sender, GetUserClassDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserClassDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserClassDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserAuthenStateCompletedEventHandler(object sender, GetUserAuthenStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAuthenStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAuthenStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserAuthenState_ByCre2CompletedEventHandler(object sender, GetUserAuthenState_ByCre2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAuthenState_ByCre2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAuthenState_ByCre2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserAuthenState_ByCreCompletedEventHandler(object sender, GetUserAuthenState_ByCreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAuthenState_ByCreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAuthenState_ByCreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DelAuthenCompletedEventHandler(object sender, DelAuthenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelAuthenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelAuthenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserCrtInfoCompletedEventHandler(object sender, GetUserCrtInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCrtInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCrtInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankByTypeCompletedEventHandler(object sender, GetBankByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserCrtListCompletedEventHandler(object sender, GetUserCrtListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCrtListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCrtListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDeleteQueryInfoCompletedEventHandler(object sender, GetDeleteQueryInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeleteQueryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeleteQueryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteUserCrtCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetShouFuYiListCompletedEventHandler(object sender, GetShouFuYiListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShouFuYiListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShouFuYiListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAgencyBusinessInfoListCompletedEventHandler(object sender, GetAgencyBusinessInfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgencyBusinessInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgencyBusinessInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBusinessInfoListCompletedEventHandler(object sender, GetBusinessInfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBusinessInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBusinessInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBusiness2InfoListCompletedEventHandler(object sender, GetBusiness2InfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBusiness2InfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBusiness2InfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBusinessBankListCompletedEventHandler(object sender, GetBusinessBankListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBusinessBankListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBusinessBankListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBusinessEmailCompletedEventHandler(object sender, GetBusinessEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBusinessEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBusinessEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetHisBusinessListCompletedEventHandler(object sender, GetHisBusinessListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHisBusinessListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHisBusinessListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SubmitBusinessInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SubmitBusinessCreInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSelfTypeListCompletedEventHandler(object sender, GetSelfTypeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSelfTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSelfTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSelfKFListCompletedEventHandler(object sender, GetSelfKFListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSelfKFListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSelfKFListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSelfQueryListCountCompletedEventHandler(object sender, GetSelfQueryListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSelfQueryListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSelfQueryListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSelfQueryListCompletedEventHandler(object sender, GetSelfQueryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSelfQueryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSelfQueryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSelfQueryInfoCompletedEventHandler(object sender, GetSelfQueryInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSelfQueryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSelfQueryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckTicketCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApproveTicketCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSpidDomainQueryListCountCompletedEventHandler(object sender, GetSpidDomainQueryListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpidDomainQueryListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpidDomainQueryListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSpidDomainQueryListCompletedEventHandler(object sender, GetSpidDomainQueryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpidDomainQueryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpidDomainQueryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApproveSpidDomainCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApproveSpidEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApproveSpidCompanyNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetApplyValueAddedTaxCompletedEventHandler(object sender, GetApplyValueAddedTaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplyValueAddedTaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplyValueAddedTaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetValueAddedTaxDetailCompletedEventHandler(object sender, GetValueAddedTaxDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValueAddedTaxDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValueAddedTaxDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValueAddedTaxApproveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValueAddedTaxCancelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllValueAddedTaxCompletedEventHandler(object sender, GetAllValueAddedTaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllValueAddedTaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllValueAddedTaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOneValueAddedTaxCompletedEventHandler(object sender, GetOneValueAddedTaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOneValueAddedTaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOneValueAddedTaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValueAddedTaxModifyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AgentCancelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetRoleCompletedEventHandler(object sender, SetRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BusinessLogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BusinessFreezeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBussFreezeListCompletedEventHandler(object sender, QueryBussFreezeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBussFreezeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBussFreezeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBDNameCompletedEventHandler(object sender, GetBDNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBDNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBDNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWWWAddressCompletedEventHandler(object sender, GetWWWAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWWWAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWWWAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTradeTypeCompletedEventHandler(object sender, GetTradeTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTradeTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTradeTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BusinessFreezeSPOACompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRoleCompletedEventHandler(object sender, GetRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ShutRefundCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApplyRefundCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BusinessResumeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SuspendRefundmentCompletedEventHandler(object sender, SuspendRefundmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuspendRefundmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuspendRefundmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUIDFromCerNumCompletedEventHandler(object sender, GetUIDFromCerNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUIDFromCerNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUIDFromCerNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetB2cReturnCountCompletedEventHandler(object sender, GetB2cReturnCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetB2cReturnCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetB2cReturnCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetB2cReturnListCompletedEventHandler(object sender, GetB2cReturnListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetB2cReturnListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetB2cReturnListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SettQueryCompletedEventHandler(object sender, SettQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SettQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SettQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SettQueryWechatCompletedEventHandler(object sender, SettQueryWechatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SettQueryWechatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SettQueryWechatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryForSelect1CompletedEventHandler(object sender, QueryForSelect1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryForSelect1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryForSelect1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryForSelect2_NOUSECompletedEventHandler(object sender, QueryForSelect2_NOUSECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryForSelect2_NOUSECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryForSelect2_NOUSECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryForSelect3CompletedEventHandler(object sender, QueryForSelect3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryForSelect3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryForSelect3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryForSelect4CompletedEventHandler(object sender, QueryForSelect4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryForSelect4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryForSelect4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryForSelect5CompletedEventHandler(object sender, QueryForSelect5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryForSelect5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryForSelect5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryForSelect6CompletedEventHandler(object sender, QueryForSelect6CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryForSelect6CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryForSelect6CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryForSelect7CompletedEventHandler(object sender, QueryForSelect7CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryForSelect7CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryForSelect7CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryForSelect8CompletedEventHandler(object sender, QueryForSelect8CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryForSelect8CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryForSelect8CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryContractWechatCompletedEventHandler(object sender, QueryContractWechatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryContractWechatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryContractWechatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TranLogIncomeSumQueryCompletedEventHandler(object sender, TranLogIncomeSumQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TranLogIncomeSumQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TranLogIncomeSumQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQuerySettlementListCompletedEventHandler(object sender, GetQuerySettlementListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuerySettlementListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuerySettlementListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QuerySettlementListWechatCompletedEventHandler(object sender, QuerySettlementListWechatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySettlementListWechatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySettlementListWechatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQuerySettlementTodayListCompletedEventHandler(object sender, GetQuerySettlementTodayListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuerySettlementTodayListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuerySettlementTodayListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQueryBalanceListCompletedEventHandler(object sender, GetQueryBalanceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryBalanceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryBalanceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBalanceListWechatCompletedEventHandler(object sender, QueryBalanceListWechatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBalanceListWechatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBalanceListWechatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQueryBalanceDetailListCompletedEventHandler(object sender, GetQueryBalanceDetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryBalanceDetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryBalanceDetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBalanceDetailListWechatCompletedEventHandler(object sender, QueryBalanceDetailListWechatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBalanceDetailListWechatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBalanceDetailListWechatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReclaimRecordCompletedEventHandler(object sender, GetReclaimRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReclaimRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReclaimRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQQReclaimRecordCompletedEventHandler(object sender, GetQQReclaimRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQQReclaimRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQQReclaimRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankCardBindListCompletedEventHandler(object sender, GetBankCardBindListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankCardBindListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankCardBindListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankCardBindCompletedEventHandler(object sender, GetBankCardBindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankCardBindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankCardBindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankCardBindList_UINCompletedEventHandler(object sender, GetBankCardBindList_UINCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankCardBindList_UINCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankCardBindList_UINCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankCardBindList_UIN_2CompletedEventHandler(object sender, GetBankCardBindList_UIN_2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankCardBindList_UIN_2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankCardBindList_UIN_2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankCardBindList_2CompletedEventHandler(object sender, GetBankCardBindList_2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankCardBindList_2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankCardBindList_2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UnbindBankCardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UnbindBankCardSpecialCompletedEventHandler(object sender, UnbindBankCardSpecialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnbindBankCardSpecialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnbindBankCardSpecialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankCardBindList_NewCompletedEventHandler(object sender, GetBankCardBindList_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankCardBindList_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankCardBindList_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ModifyBankCardBindCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SynchronBankCardBindCompletedEventHandler(object sender, SynchronBankCardBindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SynchronBankCardBindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SynchronBankCardBindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void WS_AppealDQueryCompletedEventHandler(object sender, WS_AppealDQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_AppealDQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_AppealDQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void WS_AppealDQueryCountCompletedEventHandler(object sender, WS_AppealDQueryCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_AppealDQueryCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_AppealDQueryCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void WS_AppealSQueryCompletedEventHandler(object sender, WS_AppealSQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_AppealSQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_AppealSQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getQueryDataCompletedEventHandler(object sender, getQueryDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQueryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQueryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCFTUserAppealListCompletedEventHandler(object sender, GetCFTUserAppealListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCFTUserAppealListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCFTUserAppealListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCFTUserAppealListNewCompletedEventHandler(object sender, GetCFTUserAppealListNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCFTUserAppealListNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCFTUserAppealListNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCFTUserAppealListFunctionCompletedEventHandler(object sender, GetCFTUserAppealListFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCFTUserAppealListFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCFTUserAppealListFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CFTUserAppealPassCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCFTUserAppealCountCompletedEventHandler(object sender, GetCFTUserAppealCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCFTUserAppealCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCFTUserAppealCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCFTUserAppealCountNewCompletedEventHandler(object sender, GetCFTUserAppealCountNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCFTUserAppealCountNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCFTUserAppealCountNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCFTUserAppealDetailCompletedEventHandler(object sender, GetCFTUserAppealDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCFTUserAppealDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCFTUserAppealDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCFTUserAppealDetail_NewCompletedEventHandler(object sender, GetCFTUserAppealDetail_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCFTUserAppealDetail_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCFTUserAppealDetail_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCFTUserAppealDetailByDBTBCompletedEventHandler(object sender, GetCFTUserAppealDetailByDBTBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCFTUserAppealDetailByDBTBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCFTUserAppealDetailByDBTBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserAppealLockListCompletedEventHandler(object sender, GetUserAppealLockListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAppealLockListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAppealLockListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserAppealLockListDBTBCompletedEventHandler(object sender, GetUserAppealLockListDBTBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAppealLockListDBTBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAppealLockListDBTBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserAppealLockListDBTBInnrFunCompletedEventHandler(object sender, GetUserAppealLockListDBTBInnrFunCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAppealLockListDBTBInnrFunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAppealLockListDBTBInnrFunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserAppealLockListDBTB2CompletedEventHandler(object sender, GetUserAppealLockListDBTB2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAppealLockListDBTB2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAppealLockListDBTB2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CFTCancelAppealCompletedEventHandler(object sender, CFTCancelAppealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CFTCancelAppealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CFTCancelAppealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CFTCancelAppealDBTBCompletedEventHandler(object sender, CFTCancelAppealDBTBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CFTCancelAppealDBTBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CFTCancelAppealDBTBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CFTConfirmAppealCompletedEventHandler(object sender, CFTConfirmAppealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CFTConfirmAppealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CFTConfirmAppealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CFTConfirmAppealDBTBCompletedEventHandler(object sender, CFTConfirmAppealDBTBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CFTConfirmAppealDBTBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CFTConfirmAppealDBTBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CFTDelAppealCompletedEventHandler(object sender, CFTDelAppealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CFTDelAppealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CFTDelAppealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CFTDelAppealDBTBCompletedEventHandler(object sender, CFTDelAppealDBTBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CFTDelAppealDBTBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CFTDelAppealDBTBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetKFTotalQueryListCompletedEventHandler(object sender, GetKFTotalQueryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKFTotalQueryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKFTotalQueryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAppealUserInfoCompletedEventHandler(object sender, GetAppealUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppealUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppealUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChangeQQListCompletedEventHandler(object sender, GetChangeQQListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangeQQListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangeQQListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChangeQQListCountCompletedEventHandler(object sender, GetChangeQQListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangeQQListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangeQQListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQQByTypeCompletedEventHandler(object sender, GetQQByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQQByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQQByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QQ2UidCompletedEventHandler(object sender, QQ2UidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QQ2UidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QQ2UidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QQ2UidXCompletedEventHandler(object sender, QQ2UidXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QQ2UidXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QQ2UidXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQueryListCompletedEventHandler(object sender, GetQueryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQueryListCountCompletedEventHandler(object sender, GetQueryListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQueryListDetailCompletedEventHandler(object sender, GetQueryListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAppealListCompletedEventHandler(object sender, GetAppealListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppealListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppealListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserpayListCompletedEventHandler(object sender, GetUserpayListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserpayListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserpayListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTransportListCompletedEventHandler(object sender, GetTransportListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransportListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransportListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAppealQueryListCompletedEventHandler(object sender, GetAppealQueryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppealQueryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppealQueryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAppealListCountCompletedEventHandler(object sender, GetAppealListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppealListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppealListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAppealListDetailCompletedEventHandler(object sender, GetAppealListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppealListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppealListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserClassInfoCompletedEventHandler(object sender, GetUserClassInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserClassInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserClassInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserClassInfoFlagCompletedEventHandler(object sender, GetUserClassInfoFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserClassInfoFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserClassInfoFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UserClassConfirmCompletedEventHandler(object sender, UserClassConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserClassConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserClassConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateInfoFromPoliceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UserClassCancelCompletedEventHandler(object sender, UserClassCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserClassCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserClassCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserClassDeleteListCompletedEventHandler(object sender, GetUserClassDeleteListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserClassDeleteListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserClassDeleteListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundErrorCountCompletedEventHandler(object sender, GetRefundErrorCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundErrorCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundErrorCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundErrorListCompletedEventHandler(object sender, GetRefundErrorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundErrorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundErrorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundErrorDetailCompletedEventHandler(object sender, GetRefundErrorDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundErrorDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundErrorDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundCardListDetailCompletedEventHandler(object sender, GetFundCardListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundCardListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundCardListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSettleRuleListCompletedEventHandler(object sender, GetSettleRuleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSettleRuleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSettleRuleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSettleReqListCompletedEventHandler(object sender, GetSettleReqListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSettleReqListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSettleReqListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSettleReqInfoCompletedEventHandler(object sender, GetSettleReqInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSettleReqInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSettleReqInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryAdjustListCompletedEventHandler(object sender, QueryAdjustListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAdjustListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAdjustListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QuerySettleRuleListCompletedEventHandler(object sender, QuerySettleRuleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySettleRuleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySettleRuleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QuerySpControlCompletedEventHandler(object sender, QuerySpControlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySpControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySpControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryRelationOrderListCompletedEventHandler(object sender, QueryRelationOrderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRelationOrderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryRelationOrderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QuerySubOrderListCompletedEventHandler(object sender, QuerySubOrderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySubOrderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySubOrderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTrueLimtListCompletedEventHandler(object sender, QueryTrueLimtListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTrueLimtListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTrueLimtListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSettleListAppendCompletedEventHandler(object sender, GetSettleListAppendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSettleListAppendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSettleListAppendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSettleInfoListDetailCompletedEventHandler(object sender, GetSettleInfoListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSettleInfoListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSettleInfoListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSettleRefundListDetailCompletedEventHandler(object sender, GetSettleRefundListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSettleRefundListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSettleRefundListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSpAgentRelationCompletedEventHandler(object sender, GetSpAgentRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpAgentRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpAgentRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAirAdjustListCompletedEventHandler(object sender, GetAirAdjustListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAirAdjustListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAirAdjustListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAirFreezeCompletedEventHandler(object sender, GetAirFreezeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAirFreezeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAirFreezeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSettleRefundListCompletedEventHandler(object sender, GetSettleRefundListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSettleRefundListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSettleRefundListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeparateOperationListCompletedEventHandler(object sender, GetSeparateOperationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeparateOperationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeparateOperationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeparateOperationDetailCompletedEventHandler(object sender, GetSeparateOperationDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeparateOperationDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeparateOperationDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeparateListForFlistidCompletedEventHandler(object sender, GetSeparateListForFlistidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeparateListForFlistidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeparateListForFlistidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeparateListForFspidCompletedEventHandler(object sender, GetSeparateListForFspidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeparateListForFspidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeparateListForFspidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryFeeDataListCompletedEventHandler(object sender, QueryFeeDataListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryFeeDataListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryFeeDataListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayBusinessListCompletedEventHandler(object sender, GetPayBusinessListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayBusinessListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayBusinessListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMerchantMidUidCompletedEventHandler(object sender, GetMerchantMidUidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMerchantMidUidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMerchantMidUidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string midUid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInsureAccountCompletedEventHandler(object sender, GetInsureAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInsureAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInsureAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QuerySpidOrSpaliasCompletedEventHandler(object sender, QuerySpidOrSpaliasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySpidOrSpaliasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySpidOrSpaliasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PaiPaiBMDListCompletedEventHandler(object sender, PaiPaiBMDListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PaiPaiBMDListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PaiPaiBMDListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayBusinessInfoCompletedEventHandler(object sender, GetPayBusinessInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayBusinessInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayBusinessInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayBusinessInfoListCompletedEventHandler(object sender, GetPayBusinessInfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayBusinessInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayBusinessInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayBusinessElseInfoCompletedEventHandler(object sender, GetPayBusinessElseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayBusinessElseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayBusinessElseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ModifyPayBusinessInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAgencyBusinessListCompletedEventHandler(object sender, GetAgencyBusinessListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgencyBusinessListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgencyBusinessListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAgencyBusinessInfoCompletedEventHandler(object sender, GetAgencyBusinessInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgencyBusinessInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgencyBusinessInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryAgencyBySpidCompletedEventHandler(object sender, QueryAgencyBySpidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAgencyBySpidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAgencyBySpidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryAgencyInfoByIdCompletedEventHandler(object sender, QueryAgencyInfoByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAgencyInfoByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAgencyInfoByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPickListCompletedEventHandler(object sender, GetPickListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPickListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPickListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPickListDetailCompletedEventHandler(object sender, GetPickListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPickListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPickListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetComplainBussListCompletedEventHandler(object sender, GetComplainBussListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComplainBussListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComplainBussListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetComplainBussCountCompletedEventHandler(object sender, GetComplainBussCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComplainBussCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComplainBussCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddComplainBussCompletedEventHandler(object sender, AddComplainBussCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddComplainBussCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddComplainBussCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeComplainBussCompletedEventHandler(object sender, ChangeComplainBussCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeComplainBussCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeComplainBussCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetComplainBussDetailCompletedEventHandler(object sender, GetComplainBussDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComplainBussDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComplainBussDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ComplainBussClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ComplainBussClass)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DelComplainBussCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserComplainListCompletedEventHandler(object sender, GetUserComplainListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserComplainListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserComplainListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserComplainCountCompletedEventHandler(object sender, GetUserComplainCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserComplainCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserComplainCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddUserComplainCompletedEventHandler(object sender, AddUserComplainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserComplainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserComplainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeUserComplainCompletedEventHandler(object sender, ChangeUserComplainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserComplainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserComplainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserComplainDetailCompletedEventHandler(object sender, GetUserComplainDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserComplainDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserComplainDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserComplainClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserComplainClass)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemindUserComplainCompletedEventHandler(object sender, RemindUserComplainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemindUserComplainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemindUserComplainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryRefundInfoCompletedEventHandler(object sender, QueryRefundInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRefundInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryRefundInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryRefundCountCompletedEventHandler(object sender, QueryRefundCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRefundCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryRefundCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddRefundInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeRefundInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DelRefundInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundDetailCompletedEventHandler(object sender, GetRefundDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RefundInfoClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefundInfoClass)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateSubmitRefundStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetYTInfoListCompletedEventHandler(object sender, GetYTInfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYTInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYTInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCertNumCompletedEventHandler(object sender, GetCertNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCertNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCertNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetYTFreezeListCompletedEventHandler(object sender, GetYTFreezeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYTFreezeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYTFreezeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetYTTradeListCompletedEventHandler(object sender, GetYTTradeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYTTradeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYTTradeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetExchangeRateListCompletedEventHandler(object sender, GetExchangeRateListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExchangeRateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExchangeRateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFreeFlowInfoCompletedEventHandler(object sender, GetFreeFlowInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreeFlowInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreeFlowInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserTypeInfoCompletedEventHandler(object sender, GetUserTypeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTypeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTypeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatchWithholdReqCompletedEventHandler(object sender, BatchWithholdReqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchWithholdReqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchWithholdReqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryProtocolBatchCompletedEventHandler(object sender, QueryProtocolBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryProtocolBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryProtocolBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryProtocolDetailCompletedEventHandler(object sender, QueryProtocolDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryProtocolDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryProtocolDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryKpsMD5CompletedEventHandler(object sender, QueryKpsMD5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryKpsMD5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryKpsMD5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDiscountCodeCompletedEventHandler(object sender, QueryDiscountCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDiscountCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDiscountCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ClearCreidCompletedEventHandler(object sender, ClearCreidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearCreidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearCreidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGwqCount_newCompletedEventHandler(object sender, GetGwqCount_newCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGwqCount_newCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGwqCount_newCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGwq_newCompletedEventHandler(object sender, GetGwq_newCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGwq_newCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGwq_newCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGwqInfoCompletedEventHandler(object sender, GetGwqInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGwqInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGwqInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_GWQ Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_GWQ)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGwqRollCompletedEventHandler(object sender, GetGwqRollCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGwqRollCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGwqRollCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FreezeNonPrimaryCardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCreditRefundListCompletedEventHandler(object sender, QueryCreditRefundListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCreditRefundListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCreditRefundListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCreditDebtCompletedEventHandler(object sender, QueryCreditDebtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCreditDebtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCreditDebtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCreditUserInfoCompletedEventHandler(object sender, QueryCreditUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCreditUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCreditUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCreditBillListCompletedEventHandler(object sender, QueryCreditBillListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCreditBillListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCreditBillListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCreditBillDetailCompletedEventHandler(object sender, QueryCreditBillDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCreditBillDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCreditBillDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCapitalRollCompletedEventHandler(object sender, QueryCapitalRollCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCapitalRollCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCapitalRollCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSPOrderCompletedEventHandler(object sender, GetSPOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSPOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSPOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryActivityListCompletedEventHandler(object sender, QueryActivityListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryActivityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryActivityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryUserJoinActivityCompletedEventHandler(object sender, QueryUserJoinActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUserJoinActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUserJoinActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryActivityLogsCompletedEventHandler(object sender, QueryActivityLogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryActivityLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryActivityLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryWebchatPayActivityCompletedEventHandler(object sender, QueryWebchatPayActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryWebchatPayActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryWebchatPayActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediListXCompletedEventHandler(object sender, GetMediListXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediListXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediListXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediListCompletedEventHandler(object sender, GetMediListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediListCountCompletedEventHandler(object sender, GetMediListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQuickTradeListDetailCompletedEventHandler(object sender, GetQuickTradeListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuickTradeListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuickTradeListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFreezeList_2CompletedEventHandler(object sender, GetFreezeList_2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreezeList_2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreezeList_2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFreezeList_3CompletedEventHandler(object sender, GetFreezeList_3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreezeList_3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreezeList_3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int AllRecordCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFreezeList_NewCompletedEventHandler(object sender, GetFreezeList_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreezeList_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreezeList_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int AllRecordCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFreezeListDetail_2CompletedEventHandler(object sender, GetFreezeListDetail_2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreezeListDetail_2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreezeListDetail_2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFreezeDiaryCompletedEventHandler(object sender, GetFreezeDiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreezeDiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreezeDiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateFreezeDiaryCompletedEventHandler(object sender, CreateFreezeDiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFreezeDiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFreezeDiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateFreezeDiary_2CompletedEventHandler(object sender, CreateFreezeDiary_2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFreezeDiary_2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFreezeDiary_2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateFreezeDiary_NEWCompletedEventHandler(object sender, CreateFreezeDiary_NEWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFreezeDiary_NEWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFreezeDiary_NEWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AutoProcessFreezeStateDailyCompletedEventHandler(object sender, AutoProcessFreezeStateDailyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoProcessFreezeStateDailyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoProcessFreezeStateDailyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateFreezeDiaryCompletedEventHandler(object sender, UpdateFreezeDiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFreezeDiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFreezeDiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFreezeListCompletedEventHandler(object sender, GetFreezeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreezeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreezeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetExistFreezeCompletedEventHandler(object sender, GetExistFreezeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExistFreezeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExistFreezeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FreezeInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FreezeInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateNewFreezeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateFreezeInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFreezeListCountCompletedEventHandler(object sender, GetFreezeListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreezeListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreezeListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFreezeListDetailCompletedEventHandler(object sender, GetFreezeListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreezeListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreezeListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateFreezeListDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryUserFreezeRecordCompletedEventHandler(object sender, QueryUserFreezeRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUserFreezeRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUserFreezeRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryUserControledRecordCompletedEventHandler(object sender, QueryUserControledRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUserControledRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUserControledRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDkInfo_GetBankCompletedEventHandler(object sender, QueryDkInfo_GetBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDkInfo_GetBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDkInfo_GetBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDkInfoCompletedEventHandler(object sender, QueryDkInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDkInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDkInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CountDKInfoCompletedEventHandler(object sender, CountDKInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountDKInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountDKInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDkDetailCompletedEventHandler(object sender, QueryDkDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDkDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDkDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBatchInfoCompletedEventHandler(object sender, QueryBatchInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBatchInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBatchInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CountBatchInfoCompletedEventHandler(object sender, CountBatchInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountBatchInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountBatchInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCepspServiceInfoCompletedEventHandler(object sender, GetCepspServiceInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCepspServiceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCepspServiceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGwqCompletedEventHandler(object sender, GetGwqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGwqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGwqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGwqCountCompletedEventHandler(object sender, GetGwqCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGwqCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGwqCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getUserReportsCompletedEventHandler(object sender, getUserReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getUserModifyCompletedEventHandler(object sender, getUserModifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserModifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserModifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChildrenInfoCompletedEventHandler(object sender, GetChildrenInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildrenInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildrenInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LogOnUsercheckOrderCompletedEventHandler(object sender, LogOnUsercheckOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogOnUsercheckOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogOnUsercheckOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LogOnUserDeleteUserCompletedEventHandler(object sender, LogOnUserDeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogOnUserDeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogOnUserDeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LogOnUserCheckYDTCompletedEventHandler(object sender, LogOnUserCheckYDTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogOnUserCheckYDTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogOnUserCheckYDTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChildrenBankRollListCompletedEventHandler(object sender, GetChildrenBankRollListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildrenBankRollListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildrenBankRollListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChildrenBankRollList1CompletedEventHandler(object sender, GetChildrenBankRollList1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildrenBankRollList1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildrenBankRollList1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChildrenBankRollListExCompletedEventHandler(object sender, GetChildrenBankRollListExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildrenBankRollListExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildrenBankRollListExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChildrenFlistListCompletedEventHandler(object sender, GetChildrenFlistListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildrenFlistListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildrenFlistListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChildrenFreezeOrUnfreezeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSysBulletinCompletedEventHandler(object sender, GetSysBulletinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSysBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSysBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSysBankBulletinCompletedEventHandler(object sender, GetSysBankBulletinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSysBankBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSysBankBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSysBankInterfaceCompletedEventHandler(object sender, GetSysBankInterfaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSysBankInterfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSysBankInterfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankInterfaceByIdCompletedEventHandler(object sender, QueryBankInterfaceByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankInterfaceByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankInterfaceByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_TYPE_ALL Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANKBULLETIN_TYPE_ALL)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankInterfaceByObjidCompletedEventHandler(object sender, QueryBankInterfaceByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankInterfaceByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankInterfaceByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_TYPE_ALL Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANKBULLETIN_TYPE_ALL)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsRepeatedTimeCompletedEventHandler(object sender, IsRepeatedTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsRepeatedTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsRepeatedTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankBulletinByIdCompletedEventHandler(object sender, QueryBankBulletinByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankBulletinByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankBulletinByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_INFO_ALL Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANKBULLETIN_INFO_ALL)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankBulletinInfoByObjidCompletedEventHandler(object sender, QueryBankBulletinInfoByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankBulletinInfoByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankBulletinInfoByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_INFO_ALL Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANKBULLETIN_INFO_ALL)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUtility_chargeCompletedEventHandler(object sender, GetUtility_chargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUtility_chargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUtility_chargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryUCBulletinByIdCompletedEventHandler(object sender, QueryUCBulletinByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUCBulletinByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUCBulletinByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_PUCNEWSERVICE_INFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_PUCNEWSERVICE_INFO)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryUCBulletinInfoByObjidCompletedEventHandler(object sender, QueryUCBulletinInfoByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUCBulletinInfoByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUCBulletinInfoByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_PUCNEWSERVICE_INFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_PUCNEWSERVICE_INFO)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SysBulletinIssueCompletedEventHandler(object sender, SysBulletinIssueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SysBulletinIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SysBulletinIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SysBulletinGoPriorCompletedEventHandler(object sender, SysBulletinGoPriorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SysBulletinGoPriorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SysBulletinGoPriorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SysBulletinGoNextCompletedEventHandler(object sender, SysBulletinGoNextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SysBulletinGoNextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SysBulletinGoNextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SysBulletinDelCompletedEventHandler(object sender, SysBulletinDelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SysBulletinDelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SysBulletinDelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SysBulletinGoHistoryCompletedEventHandler(object sender, SysBulletinGoHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SysBulletinGoHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SysBulletinGoHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOneSysBulletinCompletedEventHandler(object sender, GetOneSysBulletinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOneSysBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOneSysBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SysBulletinClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SysBulletinClass)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddOneSysBulletinCompletedEventHandler(object sender, AddOneSysBulletinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOneSysBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOneSysBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBCompletedEventHandler(object sender, GetBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_INFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANKBULLETIN_INFO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeOneSysBulletinCompletedEventHandler(object sender, ChangeOneSysBulletinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeOneSysBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeOneSysBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankBulletinNotUseCompletedEventHandler(object sender, QueryBankBulletinNotUseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankBulletinNotUseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankBulletinNotUseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankBulletinCompletedEventHandler(object sender, QueryBankBulletinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TurnBankBulletinClassCompletedEventHandler(object sender, TurnBankBulletinClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TurnBankBulletinClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TurnBankBulletinClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_INFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANKBULLETIN_INFO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankBulletinByObjidCompletedEventHandler(object sender, QueryBankBulletinByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankBulletinByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankBulletinByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_INFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANKBULLETIN_INFO)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Getfbank_orderListCompletedEventHandler(object sender, Getfbank_orderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Getfbank_orderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Getfbank_orderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Getfbank_twoBank_orderListCompletedEventHandler(object sender, Getfbank_twoBank_orderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Getfbank_twoBank_orderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Getfbank_twoBank_orderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Synchro_StateCompletedEventHandler(object sender, Synchro_StateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Synchro_StateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Synchro_StateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsSecondPassewordCompletedEventHandler(object sender, IsSecondPassewordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsSecondPassewordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsSecondPassewordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SuspendSecondPassewordCompletedEventHandler(object sender, SuspendSecondPassewordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuspendSecondPassewordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuspendSecondPassewordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPNRSpidCompletedEventHandler(object sender, GetPNRSpidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPNRSpidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPNRSpidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsFastPayUserCompletedEventHandler(object sender, IsFastPayUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsFastPayUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsFastPayUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserAccountCompletedEventHandler(object sender, GetUserAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserAccountFromWechatCompletedEventHandler(object sender, GetUserAccountFromWechatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAccountFromWechatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAccountFromWechatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserAccountCancelCompletedEventHandler(object sender, GetUserAccountCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAccountCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAccountCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserAccountMainCompletedEventHandler(object sender, GetUserAccountMainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAccountMainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAccountMainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserButtonInfoCompletedEventHandler(object sender, GetUserButtonInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserButtonInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserButtonInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserMedInfoListCompletedEventHandler(object sender, GetUserMedInfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserMedInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserMedInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserMedInfoCompletedEventHandler(object sender, GetUserMedInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserMedInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserMedInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_USER_MED Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_USER_MED)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ResetMediPasswdCompletedEventHandler(object sender, ResetMediPasswdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetMediPasswdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetMediPasswdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBankAccountCompletedEventHandler(object sender, GetUserBankAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchUserBankAccountCompletedEventHandler(object sender, GetBatchUserBankAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchUserBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchUserBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayListCompletedEventHandler(object sender, GetPayListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetManJianUsingListCompletedEventHandler(object sender, GetManJianUsingListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetManJianUsingListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetManJianUsingListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ManJianUserListCompletedEventHandler(object sender, ManJianUserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManJianUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManJianUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ManJianAddOneCompletedEventHandler(object sender, ManJianAddOneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManJianAddOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManJianAddOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayListForChildrenCompletedEventHandler(object sender, GetPayListForChildrenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayListForChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayListForChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayList_ListCompletedEventHandler(object sender, GetPayList_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayList_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayList_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayList_PickCompletedEventHandler(object sender, GetPayList_PickCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayList_PickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayList_PickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankRollListCompletedEventHandler(object sender, GetBankRollListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankRollListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankRollListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankRollList_withIDCompletedEventHandler(object sender, GetBankRollList_withIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankRollList_withIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankRollList_withIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserPayListCompletedEventHandler(object sender, GetUserPayListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPayListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPayListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserPayList_withIDCompletedEventHandler(object sender, GetUserPayList_withIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPayList_withIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPayList_withIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTCBankAccountCompletedEventHandler(object sender, GetTCBankAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTCBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTCBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTCBankRollListCompletedEventHandler(object sender, GetTCBankRollListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTCBankRollListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTCBankRollListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankRollListByListIdCompletedEventHandler(object sender, GetBankRollListByListIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankRollListByListIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankRollListByListIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundListDetail_NewCompletedEventHandler(object sender, GetFundListDetail_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundListDetail_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundListDetail_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string mesgg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsNewOrderCZDataCompletedEventHandler(object sender, IsNewOrderCZDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsNewOrderCZDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsNewOrderCZDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTCBankPAYListCompletedEventHandler(object sender, GetTCBankPAYListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTCBankPAYListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTCBankPAYListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundCompletedEventHandler(object sender, GetRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayListByTypeCompletedEventHandler(object sender, GetPayListByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayListByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayListByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void returnListIDCompletedEventHandler(object sender, returnListIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class returnListIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal returnListIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidUserCompletedEventHandler(object sender, ValidUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TCreateSessionReply Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TCreateSessionReply)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundListCompletedEventHandler(object sender, GetFundListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundListCountCompletedEventHandler(object sender, GetFundListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundListDetailCompletedEventHandler(object sender, GetFundListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundHistoryDetailCompletedEventHandler(object sender, GetFundHistoryDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundHistoryDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundHistoryDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPickListCountCompletedEventHandler(object sender, GetPickListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPickListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPickListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundListDetail_SubaccCompletedEventHandler(object sender, GetFundListDetail_SubaccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundListDetail_SubaccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundListDetail_SubaccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResp {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591