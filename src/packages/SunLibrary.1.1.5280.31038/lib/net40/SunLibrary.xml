<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SunLibrary</name>
    </assembly>
    <members>
        <member name="T:SunLibrary.DataAccess.LogType">
            <summary>
            定义系统日志的类型
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.LogType.信息">
            <summary>
            信息日志，任何时候都可以记录
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.LogType.警告">
            <summary>
            警告日志，当系统出现未知异常情况时记录
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.LogType.错误">
            <summary>
            错误日志，当系统出现已知的错误时记录
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.LogType.足迹">
            <summary>
            足迹日志，当用户在UI之间跳转时记录
            </summary>
        </member>
        <member name="T:SunLibrary.DataAccess.DataProvider">
            <summary>
            抽象数据源，由派生类按照具体数据库实现
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.DataProvider.LogConfigTime">
            <summary>
            系统配置存放于日志表中，以特殊日期区分
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.DataProvider.ServerName">
            <summary>
            服务器名称
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.DataProvider.DatabaseName">
            <summary>
            数据库名称
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.DataProvider.Dsn">
            <summary>
            指定的DSN串
            </summary>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="serverName">服务器名称</param>
            <param name="databaseName">数据库名称</param>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="dsn">直接指定DSN串</param>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.GetProvider(System.String,System.String)">
            <summary>
            获取当前配置(Web.config-appSettings-DataProvider)的provider
            </summary>
            <param name="serverName">服务器名称</param>
            <param name="databaseName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.GetProvider(System.String)">
            <summary>
            获取当前配置(Web.config-appSettings-DataProvider)的provider
            </summary>
            <param name="dsn">dsn名称</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.GetDataSet(System.Data.DataSet,System.String,System.String)">
            <summary>
            根据语句获取数据集，并加入到DataSet中
            </summary>
            <param name="ds">数据集</param>
            <param name="table">表名</param>
            <param name="sql">语句</param>
            <returns>添加成功，返回true；否则，返回false</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.GetValue(System.String,System.Boolean)">
            <summary>
            执行SQL查询语句，返回第一行第一个字段的值
            </summary>
            <param name="sql">SQL查询语句</param>
            <param name="ZeroWhenNull">在值为NULL时是否返回整型的“0”</param>
            <returns>第一行第一个字段的值</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.GetValue(System.String)">
            <summary>
            执行SQL查询语句，返回第一行第一个字段的值
            </summary>
            <param name="sql">SQL查询语句</param>
            <returns>第一行第一个字段的值</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.GetServerTime">
            <summary>
            获取数据库服务器时间（当需要修改服务器的时间戳时，尽量先用此函数获取时间，再将结果写于SQL语句中，这样在需要根据日志恢复数据库时能避免可能潜在的问题）
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.GetServerDate">
            <summary>
            获取数据库服务器日期（当需要修改服务器的时间戳时，尽量先用此函数获取时间，再将结果写于SQL语句中，这样在需要根据日志恢复数据库时能避免可能潜在的问题）
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.GetSafeString(System.String)">
            <summary>
            过滤危险字符，返回安全的字符串
            </summary>
            <param name="src">原始字符串</param>
            <returns>安全字符串</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.FormatData(System.Type,System.Object)">
            <summary>
            按照字段类型，将字段值格式化为SQL语句中的有效形式
            </summary>
            <param name="FieldType">字段类型</param>
            <param name="FieldValue">字段值</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.Log(SunLibrary.DataAccess.LogType,System.String,System.String,System.String,System.String)">
            <summary>
            记录系统日志
            </summary>
            <param name="logType">类型</param>
            <param name="UserId">操作员号</param>
            <param name="UserIp">操作员IP地址（传空串时自动获取IP）</param>
            <param name="DescShort">内容</param>
            <param name="DescMore">其他信息</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.LogPageTrack(System.String,System.String,System.String)">
            <summary>
            记录页面访问日志
            </summary>
            <param name="UserId">操作员号</param>
            <param name="UserIp">操作员IP地址（传空串时自动获取IP）</param>
            <param name="FunctionName">页面中文名称</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.LogConfigCache(System.String)">
            <summary>
            系统参数值缓存索引名称
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.LogConfigSet(System.String,System.String)">
            <summary>
            设置系统参数值
            </summary>
            <param name="index">参数名</param>
            <param name="value">参数值</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.LogConfigGet(System.String)">
            <summary>
            获取系统参数值
            </summary>
            <param name="index">参数名</param>
            <returns>参数值</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.GetDataSet(System.String,System.String)">
            <summary>
            根据语句获取数据集
            </summary>
            <param name="table">表名</param>
            <param name="sql">语句</param>
            <returns>数据集</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.dsGetTableByRange(System.String,System.Int32,System.Int32)">
            <summary>
            Get table by range
            </summary>
            <param name="strCmd"></param>
            <param name="istart"></param>
            <param name="imax"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.Execute(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="sql">SQL语句</param>
            <returns>受影响的记录数</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.ExecuteTransaction(System.String[])">
            <summary>
            按事务执行SQL语句
            </summary>
            <param name="sqls">SQL语句数组</param>
            <returns>受影响的总的记录数</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.Dispose">
            <summary>
            释放所有资源
            </summary>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.InsertAndGetKey(System.String,System.String,System.String)">
            <summary>
            添加一条记录，并获取自增量的字段值
            </summary>
            <param name="sql">添加记录语句</param>
            <param name="keyName">自增量字段名</param>
            <param name="tableName">表名</param>
            <returns>成功时，返回自增量字段值；否则，返回null</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.dsnSqlServer(System.String,System.String,System.String,System.String)">
            <summary>
            构造SQLServer的连接串
            </summary>
            <param name="sServer">服务器名称</param>
            <param name="sDatabase">默认数据库名</param>
            <param name="sUser">登录用户名，空串代表采用Windows认证</param>
            <param name="sPassword">登录密码，用户名为空串时忽略</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.dsnSqlServer(System.String,System.String)">
            <summary>
            重载dsnSqlServer(sServer,sDatabase,"","")
            </summary>
            <param name="sServer"></param>
            <param name="sDatabase"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.dsnAccess(System.String,System.String)">
            <summary>
            构造Access连接串
            </summary>
            <param name="sFile">文件名</param>
            <param name="sPassword">密码，空串代表没有密码</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.dsnAccess(System.String)">
            <summary>
            重载dsnAccess(sFile,"")
            </summary>
            <param name="sFile"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.DateFormat(System.DateTime)">
            <summary>
            为日期提供统一的格式化操作，以便适用所有的数据库
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.DateTimeFormat(System.DateTime)">
            <summary>
            为日期提供统一的格式化操作，以便适用所有的数据库
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.DateBetween(System.String,System.DateTime,System.DateTime)">
            <summary>
            构造查询日期段的WHERE子句（从开始日期到结束日期，包含结束日期）
            </summary>
            <param name="FieldName">日期字段名</param>
            <param name="dateFrom">开始日期</param>
            <param name="dateTo">结束日期</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.Encode(System.String,System.String,System.Object)">
            <summary>
            对值进行编码转换
            </summary>
            <param name="fromName">源编码类型名称</param>
            <param name="toName">目标编码类型名称</param>
            <param name="obj">按照源编码类型编码的值</param>
            <returns>按照目标编码类型编码的值</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.DataProvider.Encode(System.String,System.String,System.Data.DataTable)">
            <summary>
            对整个数据表的数据进行编码转换
            </summary>
            <param name="fromName">源编码类型名称</param>
            <param name="toName">目标编码类型名称</param>
            <param name="dt">按照源编码类型编码的表（执行后已转换为目标编码）</param>
            <returns></returns>
        </member>
        <member name="P:SunLibrary.DataAccess.DataProvider.ConnectionString">
            <summary>
            获取当前配置(Web.config-appSettings-ConnectionString)的数据库连接串
            </summary>
        </member>
        <member name="P:SunLibrary.DataAccess.DataProvider.Charset">
            <summary>
            获取当前配置(Web.config-appSettings-Charset)的字符集
            </summary>
        </member>
        <member name="P:SunLibrary.DataAccess.DataProvider.CharsetIsLatin">
            <summary>
            判断是否拉丁字符集
            </summary>
        </member>
        <member name="T:SunLibrary.DataAccess.MSExcel">
            <summary>
            访问Excel文件的函数
            </summary>
        </member>
        <member name="M:SunLibrary.DataAccess.MSExcel.Load(System.String,System.String)">
            <summary>
            读取Excel文档
            </summary>
            <param name="FileName">文件名</param>
            <param name="SheetName">工作表名</param>
            <returns>返回一个数据集</returns>
        </member>
        <member name="T:SunLibrary.DataAccess.MySQLProvider">
            <summary>
            实现MySQL数据库的provider
            直接连接串格式：		Database={0};Data Source=172.16.61.46;User Id=root;Password=root1234
            ODBC连接串格式：	Driver={{MySQL ODBC 3.51 Driver}};Database={0};Server=172.16.61.46;UID=root;PWD=root1234;Option=3
            </summary>
        </member>
        <member name="M:SunLibrary.DataAccess.MySQLProvider.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="serverName">服务器名称</param>
            <param name="databaseName">数据库名称</param>
        </member>
        <member name="M:SunLibrary.DataAccess.MySQLProvider.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="dsn">直接指定DSN串</param>
        </member>
        <member name="M:SunLibrary.DataAccess.MySQLProvider.GetDataSet(System.String,System.String)">
            <summary>
            根据语句获取数据集
            </summary>
            <param name="table">表名</param>
            <param name="sql">语句</param>
            <returns>数据集</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.MySQLProvider.dsGetTableByRange(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="strCmd"></param>
            <param name="istart"></param>
            <param name="imax">步长</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.MySQLProvider.DbopBegin">
            <summary>
            获得db连接
            </summary>
            <returns>db连接</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.MySQLProvider.GetDataSetLongConn(System.String,System.String,System.Data.Odbc.OdbcConnection)">
            <summary>
            长连接执行查询
            </summary>
            <param name="table">表名</param>
            <param name="sql">语句</param>
            <param name="conn">连接</param>
            <returns>数据集</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.MySQLProvider.DbopEnd(System.Data.Odbc.OdbcConnection)">
            <summary>
            释放连接
            </summary>
            <returns>无</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.MySQLProvider.Execute(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="sql">SQL语句</param>
            <returns>受影响的记录数</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.MySQLProvider.ExecuteTransaction(System.String[])">
            <summary>
            按事务执行SQL语句
            </summary>
            <param name="sqls">SQL语句数组</param>
            <returns>受影响的总的记录数</returns>
        </member>
        <member name="T:SunLibrary.DataAccess.OdbcProvider">
            <summary>
            实现ODBC数据库的Provider
            </summary>
        </member>
        <member name="M:SunLibrary.DataAccess.OdbcProvider.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="serverName">服务器名称</param>
            <param name="databaseName">数据库名称</param>
        </member>
        <member name="M:SunLibrary.DataAccess.OdbcProvider.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="dsn">直接指定DSN串</param>
        </member>
        <member name="M:SunLibrary.DataAccess.OdbcProvider.GetDataSet(System.String,System.String)">
            <summary>
            根据语句获取数据集
            </summary>
            <param name="table">表名</param>
            <param name="sql">语句</param>
            <returns>数据集</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.OdbcProvider.Execute(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="sql">SQL语句</param>
            <returns>受影响的记录数</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.OdbcProvider.ExecuteTransaction(System.String[])">
            <summary>
            按事务执行SQL语句
            </summary>
            <param name="sqls">SQL语句数组</param>
            <returns>受影响的总的记录数</returns>
        </member>
        <member name="T:SunLibrary.DataAccess.SQLServerProvider">
            <summary>
            实现SQLServer数据库的Provider
            Windows认证连接串：Persist Security Info=False;Integrated Security=SSPI;Connect Timeout=30;database={0};server=192.168.0.1;
            SQL服务器认证连接串：Persist Security Info=False;Integrated Security=NO;Connect Timeout=30;database={0};server=192.168.0.1;UID=UserName;PWD=Password;
            </summary>
        </member>
        <member name="M:SunLibrary.DataAccess.SQLServerProvider.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="serverName">服务器名称</param>
            <param name="databaseName">数据库名称</param>
        </member>
        <member name="M:SunLibrary.DataAccess.SQLServerProvider.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="dsn">直接指定DSN串</param>
        </member>
        <member name="M:SunLibrary.DataAccess.SQLServerProvider.GetDataSet(System.String,System.String)">
            <summary>
            根据语句获取数据集
            </summary>
            <param name="table">表名</param>
            <param name="sql">语句</param>
            <returns>数据集</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.SQLServerProvider.Execute(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="sql">SQL语句</param>
            <returns>受影响的记录数</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.SQLServerProvider.ExecuteTransaction(System.String[])">
            <summary>
            按事务执行SQL语句
            </summary>
            <param name="sqls">SQL语句数组</param>
            <returns>受影响的总的记录数</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.SQLServerProvider.InsertAndGetKey(System.String,System.String,System.String)">
            <summary>
            添加一条记录，并获取自增量的字段值
            </summary>
            <param name="sql">添加记录语句</param>
            <param name="keyName">自增量字段名</param>
            <param name="tableName">表名</param>
            <returns>成功时，返回自增量字段值；否则，返回null</returns>
        </member>
        <member name="T:SunLibrary.DataAccess.TableInterface.ColumnDisplayValue">
            <summary>
            获取字段值的可显示文本，由派生类提供
            </summary>
            <remarks>
            DisplayValue带有初始值，如果不需要进行转义，则不用修改该字段
            </remarks>
        </member>
        <member name="T:SunLibrary.DataAccess.TableInterface.ColumnDefine">
            <summary>
            字段定义
            </summary>
            支持以下特性：
            1、是否主键字段、是否自动增量字段、字段名、字段数据类型、字段默认值
            2、字段中文名、字段附加说明信息
            3、字段当前值
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.ColumnDefine.FullName">
            <summary>
            完整的类型名
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.ColumnDefine.PrimaryKey">
            <summary>
            是否主键字段
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.ColumnDefine.AutoIncrement">
            <summary>
            是否自动增量字段
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.ColumnDefine.ColumnName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.ColumnDefine.DataType">
            <summary>
            字段类型
            </summary>
            <remarks>
            目前仅支持String、Int32、Int64、DateTime、Double
            </remarks>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.ColumnDefine.MaxLength">
            <summary>
            字符串最大长度，0为不限制
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.ColumnDefine.AllowNull">
            <summary>
            是否允许NULL
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.ColumnDefine.DefaultValue">
            <summary>
            字段默认值
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.ColumnDefine.Text">
            <summary>
            字段中文名称
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.ColumnDefine.Tip">
            <summary>
            字段附加说明信息（数值的单位等）
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.ColumnDefine.Value">
            <summary>
            字段当前值
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.ColumnDefine.DisplayValue">
            <summary>
            自定义的字段值显示文本函数
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.ColumnDefine.Dict">
            <summary>
            指定关联的词典类
            </summary>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.ColumnDefine.#ctor(System.String,System.Type,System.Int32,System.Boolean,SunLibrary.DataAccess.TableInterface.DataDict,System.Object,SunLibrary.DataAccess.TableInterface.ColumnDisplayValue,System.String,System.String)">
            <summary>
            非主键字段的构造函数
            </summary>
            <param name="ColumnName">字段名称</param>
            <param name="DataType">字段类型</param>
            <param name="MaxLength">字符串最大长度</param>
            <param name="AllowNull">是否允许为NULL</param>
            <param name="Dict">关联的词典类</param>
            <param name="DefaultValue">字段默认值</param>
            <param name="DisplayValue">字段值可显示文本代理</param>
            <param name="Text">字段中文名称</param>
            <param name="Tip">字段附加说明信息</param>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.ColumnDefine.#ctor(System.Boolean,System.Boolean,System.String,System.Type,System.Int32,System.Boolean,SunLibrary.DataAccess.TableInterface.DataDict,System.Object,SunLibrary.DataAccess.TableInterface.ColumnDisplayValue,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="PrimaryKey">是否主键</param>
            <param name="AutoIncrement">是否自动增量</param>
            <param name="ColumnName">字段名称</param>
            <param name="DataType">字段类型</param>
            <param name="MaxLength">字符串最大长度</param>
            <param name="AllowNull">是否允许为NULL</param>
            <param name="Dict">关联的词典类</param>
            <param name="DefaultValue">字段默认值</param>
            <param name="DisplayValue">字段值可显示文本代理</param>
            <param name="Text">字段中文名称</param>
            <param name="Tip">字段附加说明信息</param>
        </member>
        <member name="P:SunLibrary.DataAccess.TableInterface.ColumnDefine.VString">
            <summary>
            获取string类型的Value值
            </summary>
            <remarks>
            如果 value 为空引用，则为零。
            </remarks>
        </member>
        <member name="P:SunLibrary.DataAccess.TableInterface.ColumnDefine.VInt32">
            <summary>
            获取int类型的Value值
            </summary>
            <remarks>
            如果 value 为空引用，则为零。
            </remarks>
        </member>
        <member name="P:SunLibrary.DataAccess.TableInterface.ColumnDefine.VInt64">
            <summary>
            获取long类型的Value值
            </summary>
            <remarks>
            如果 value 为空引用，则为零。
            </remarks>
        </member>
        <member name="P:SunLibrary.DataAccess.TableInterface.ColumnDefine.VDouble">
            <summary>
            获取Double类型的Value值
            </summary>
            <remarks>
            如果 value 为空引用，则为零。
            </remarks>
        </member>
        <member name="P:SunLibrary.DataAccess.TableInterface.ColumnDefine.VDateTime">
            <summary>
            获取DateTime类型的Value值
            </summary>
            <remarks>
            如果 value 为空引用，则为零。
            </remarks>
        </member>
        <member name="P:SunLibrary.DataAccess.TableInterface.ColumnDefine.ValueToSQL">
            <summary>
            得到格式化为SQL语句的字段值
            </summary>
            <remarks>
            如果Value为null，则使用DefaultValue
            </remarks>
        </member>
        <member name="T:SunLibrary.DataAccess.TableInterface.DataDict">
            <summary>
            数据字典基类
            </summary>
            <remarks>
            提供以下特性：
            1、封装词典数据库操作，提供高层访问接口
            2、使用Session作为缓存，提高效率
            派生类需要做以下工作：
            1、在派生类构造函数中初始化成员变量
            2、实现GetProvider函数，返回数据库访问对象
            </remarks>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.DataDict._Name">
            <summary>
            字典名称，在派生类构造函数中初始化
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.DataDict._TableName">
            <summary>
            数据表名，在派生类构造函数中初始化
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.DataDict._IDField">
            <summary>
            ID字段名称，在派生类构造函数中初始化
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.DataDict._NameField">
            <summary>
            Name字段名称，在派生类构造函数中初始化
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.DataDict._QueryString">
            <summary>
            查询时的过滤条件，在派生类构造函数中初始化
            </summary>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.DataDict.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.DataDict.GetProvider">
            <summary>
            获取数据库Provider，由派生类重载
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.DataDict.Load">
            <summary>
            从数据库中读入词典数据
            </summary>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.DataDict.ID2Name(System.String)">
            <summary>
            获取ID对应的Name
            </summary>
            <param name="id">ID</param>
            <returns>如果Name存在，则返回Name；否则，返回Unknown。</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.DataDict.IDExist(System.String)">
            <summary>
            指定ID是否存在
            </summary>
            <param name="id">ID</param>
            <returns>如果ID存在，则返回true；否则，返回false</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.DataDict.Fill(System.String,System.Web.UI.WebControls.ListControl[])">
            <summary>
            填充词典表到ListControl中
            </summary>
            <param name="AllItemText">是否显示“全部”项；该项的值为空串</param>
            <param name="List">要填充的ListControl列表</param>
        </member>
        <member name="P:SunLibrary.DataAccess.TableInterface.DataDict.Data">
            <summary>
            获取或设置词典的哈希表数据
            </summary>
            <remarks>
            可以通过将此值设置为null来促发词典表缓存的更新
            </remarks>
        </member>
        <member name="T:SunLibrary.DataAccess.TableInterface.TableStorage">
            <summary>
            表存储基类
            </summary>
            <remarks>
            提供以下特性：
            1、提供基本的添加、删除、修改操作和查询，可直接使用
            派生类需要做以下工作：
            1、为每个字段定义一个ColumnDefine类型的成员变量（变量名和字段名一致）并初始化
               如果需要自定义可显示文本，则需要提供ColumnDisplayValue函数；如果有关联的数据字典，则需要定义一个DataDict的派生类
            2、在构造函数中对base._TableName进行赋值（数据库中的表名）
            3、实现GetProvider函数，返回数据库访问对象
            4、实现Check函数，对数据的有效性做检查
            </remarks>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.TableStorage._TableName">
            <summary>
            表名，由派生类在构造函数中赋值
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.TableStorage._LastError">
            <summary>
            最近一条错误信息
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.TableStorage._LastAffectedRow">
            <summary>
            最近一次受影响记录数
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.TableStorage._Fields">
            <summary>
            字段定义信息
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.TableStorage._CheckNull">
            <summary>
            是否在Check函数中对不允许空的字段进行检查
            </summary>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:SunLibrary.DataAccess.TableInterface.TableStorage._LastTime">
            <summary>
            内部计时器
            </summary>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.TimerStart">
            <summary>
            开始计时
            </summary>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.TimerTicks(System.Boolean)">
            <summary>
            获取上次计时以来经过的毫秒数
            </summary>
            <param name="Reset">是否重新开始计时</param>
            <returns>上次计时以来经过的毫秒数</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.GetProvider">
            <summary>
            由派生类返回一个数据库对象
            </summary>
            <returns>数据库对象</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.CheckInner">
            <summary>
            由派生类重写，以执行特定的检查
            </summary>
            <remarks>
            不能通过检查时，将_LastError置为错误信息并返回，否则，不要更改_LastError
            </remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.Check">
            <summary>
            检查数据是否满足有效性条件
            </summary>
            <returns>如果满足条件，返回true；否则，返回false</returns>
            <remarks>当返回false时，可以从LastError成员变量获取错误信息</remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.QuerySQL(System.String)">
            <summary>
            返回记录集
            </summary>
            <param name="sql">SQL语句</param>
            <returns>如果查询成功，返回满足条件的记录集；否则，返回null</returns>
            <remarks>当返回null时，可以从LastError成员变量获取错误信息</remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.RunSQL(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="sql">SQL语句</param>
            <returns>如果执行成功，返回true；否则，返回false</returns>
            <remarks>当返回false时，可以从LastError成员变量获取错误信息</remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.Insert">
            <summary>
            将当前数据作为新记录插入
            </summary>
            <returns>如果插入成功，返回true；否则，返回false</returns>
            <remarks>
            当返回false时，可以从LastError成员变量获取错误信息；
            当返回true时，可以从自增量的字段Value获取新记录的自增量字段值（并发频繁时不一定正确）
            </remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.Update">
            <summary>
            更新当前主键标识的所有记录
            </summary>
            <returns>如果更新成功，返回true；否则，返回false</returns>
            <remarks>当返回false时，可以从LastError成员变量获取错误信息</remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.Update(System.String)">
            <summary>
            更新当前主键标识的记录
            </summary>
            <param name="ColumnsToUpdate">待更新的字段名称列表，用分号连接，以分号结尾；为空串时表示更新所有字段</param>
            <returns>如果更新成功，返回true；否则，返回false</returns>
            <remarks>当返回false时，可以从LastError成员变量获取错误信息</remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.DeleteByPrimaryKey">
            <summary>
            删除当前主键标记的记录
            </summary>
            <returns>如果删除成功，返回true；否则，返回false</returns>
            <remarks>当返回false时，可以从LastError成员变量获取错误信息</remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.Delete(System.String)">
            <summary>
            删除满足条件的记录
            </summary>
            <returns>如果删除成功，返回true；否则，返回false</returns>
            <remarks>当返回false时，可以从LastError成员变量获取错误信息</remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.Query(System.String,System.String,System.String)">
            <summary>
            查询满足条件的记录集
            </summary>
            <param name="FieldString">要查询的字段名称列表，逗号分隔</param>
            <param name="QueryString">条件表达式</param>
            <param name="OrderString">排序表达式</param>
            <returns>如果查询成功，返回满足条件的记录集；否则，返回null</returns>
            <remarks>当返回null时，可以从LastError成员变量获取错误信息</remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.Find(System.String)">
            <summary>
            获取满足条件的单条记录
            </summary>
            <returns>如果该记录存在，返回true，并且将值取到当前实例中；否则，返回false</returns>
            <remarks>当返回false时，可以从LastError成员变量获取错误信息</remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.FindByPrimaryKey">
            <summary>
            根据当前主键查找满足条件的单条记录
            </summary>
            <returns>如果该记录存在，返回true，并且将值取到当前实例中；否则，返回false</returns>
            <remarks>当返回false时，可以从LastError成员变量获取错误信息</remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.FromDataRow(System.Data.DataRow)">
            <summary>
            从记录行读入数据到成员变量中
            </summary>
            <param name="row">记录行</param>
            <returns>如果成功，返回true；否则，返回false</returns>
            <remarks>当返回false时，可以从LastError成员变量获取错误信息</remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.FromObject(System.Object)">
            <summary>
            从对象读入数据到成员变量中
            </summary>
            <param name="obj">对象实例</param>
            <returns>如果成功，返回true；否则，返回false</returns>
            <remarks>当返回false时，可以从LastError成员变量获取错误信息</remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.FromObject(System.Object,System.Boolean)">
            <summary>
            从对象读入数据到成员变量中
            </summary>
            <param name="obj">对象实例</param>
            <param name="SetDefaultIfNotExist">是否在界面不存在时自动设置为默认值或NULL；默认为true</param>
            <returns>如果成功，返回true；否则，返回false</returns>
            <remarks>当返回false时，可以从LastError成员变量获取错误信息</remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.FromUI(System.Web.UI.Control,System.String)">
            <summary>
            从界面读入数据到成员变量中
            </summary>
            <param name="Container">容器对象，一般是页面</param>
            <param name="Prefix">命名前缀</param>
            <returns>如果执行成功，返回true；否则，返回false</returns>
            <remarks>
            页面上的控件的命名规则为：命名前缀＋下划线＋字段名＋下划线＋Value。
            Value属性支持Label、TextBox、ListControl控件。
            </remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.FromUI(System.Web.UI.Control,System.String,System.Boolean)">
            <summary>
            从界面读入数据到成员变量中
            </summary>
            <param name="Container">容器对象，一般是页面</param>
            <param name="Prefix">命名前缀</param>
            <param name="SetDefaultIfNotExist">是否在界面不存在时自动设置为默认值或NULL；默认为true</param>
            <returns>如果执行成功，返回true；否则，返回false</returns>
            <remarks>
            页面上的控件的命名规则为：命名前缀＋下划线＋字段名＋下划线＋Value。
            Value属性支持Label、TextBox、ListControl控件。
            </remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.ShowInit(System.Web.UI.Control,System.Boolean,System.String)">
            <summary>
            初始化界面
            </summary>
            <param name="Container">容器对象，一般是页面</param>
            <param name="ForEdit">是否为编辑而准备</param>
            <param name="Prefix">命名前缀</param>
            <returns>如果执行成功，返回true；否则，返回false</returns>
            <remarks>
            页面上的控件的命名规则为：命名前缀＋下划线＋字段名＋下划线＋属性（value、text、tip）。
            1、Text属性仅支持Label控件；如果是ForEdit，则自动显示红色的*号
            2、Tip属性仅支持Label控件；
            3、Value属性支持Label、TextBox、ListControl控件；
               如果字段有字典类，则自动初始化ListControl；如果字段有默认值，则自动显示默认值。
            </remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.ShowValue(System.Web.UI.Control,System.String)">
            <summary>
            将表数据显示到界面上
            </summary>
            <param name="Container">容器对象，一般是页面</param>
            <param name="Prefix">命名前缀</param>
            <returns>如果执行成功，返回true；否则，返回false</returns>
            <remarks>
            页面上的控件的命名规则为：命名前缀＋下划线＋字段名＋下划线＋Value。
            1、Value属性支持Label、TextBox、ListControl控件；当控件为Label时，显示DisplayValue，其他情况直接显示Value。
            </remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.ShowGrid(System.Web.UI.WebControls.DataGrid,System.Data.DataSet)">
            <summary>
            显示并绑定数据到DataGrid控件
            </summary>
            <param name="Grid">表格控件</param>
            <param name="DataSource">数据源</param>
            <returns>如果成功，返回true；否则，返回false</returns>
            <remarks>
            支持的特性：
            1、对绑定列自动显示标题文本和Tip；自动对需要转义的列进行文本转义显示
            2、自动设置表格CSS（对应的CSS内容由用户定义并包含到页面中），包括以下几个：
            	设置标题行CSS（名称为SUN_DataGridHeader）
            	设置普通行CSS（名称分别为SUN_DataGridItem、SUN_DataGridItemAlter、SUN_DataGridItemOver）
            3、设置为单元格不折行
            4、为CommandName为Delete的按钮自动添加删除确认
            5、分页时自动处理CurrentPageIndex越界的情况
            6、标题为“序号”的模板列（含“__ROW__INDEX”Label控件）会自动填充序号
            
            使用说明：
            1、在页面上拖放一个DataGrid控件，不要设置任何格式
            2、将要显示的列加入到控件中：一般的绑定列将页面文本填写为“字段名”，其他信息留空；
            3、链接列、按钮列、模板列根据需要自行设置
            4、在代码中准备好数据源（通常是DataSet）后，调用本函数
            </remarks>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.GetHorizontalAlign(SunLibrary.DataAccess.TableInterface.ColumnDefine)">
            <summary>
            获取指定字段的水平对齐方式
            </summary>
            <param name="Column">字段</param>
            <returns>水平对齐方式</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.GetFriendlyName(System.Type)">
            <summary>
            获取类型的友好名称
            </summary>
            <param name="type">类型</param>
            <returns>名称</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.UI_FindBoundColumnByHeader(System.Web.UI.WebControls.DataGrid,System.String)">
            <summary>
            根据列的标题文本查找绑定列
            </summary>
            <param name="Grid">表格控件</param>
            <param name="HeaderText">标题文本</param>
            <returns>如果该列存在，并且是绑定列，则返回该列；否则，返回null</returns>
        </member>
        <member name="M:SunLibrary.DataAccess.TableInterface.TableStorage.UI_FindBoundColumnByField(System.Web.UI.WebControls.DataGrid,System.String)">
            <summary>
            根据列的数据字段查找绑定列
            </summary>
            <param name="Grid">表格控件</param>
            <param name="DataField">数据字段</param>
            <returns>如果该列存在，并且是绑定列，则返回该列；否则，返回null</returns>
        </member>
        <member name="P:SunLibrary.DataAccess.TableInterface.TableStorage.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:SunLibrary.DataAccess.TableInterface.TableStorage.LastError">
            <summary>
            最近一条错误信息
            </summary>
        </member>
        <member name="P:SunLibrary.DataAccess.TableInterface.TableStorage.LastAffectedRow">
            <summary>
            最近一次受影响记录数
            </summary>
        </member>
        <member name="P:SunLibrary.DataAccess.TableInterface.TableStorage.CheckNull">
            <summary>
            是否在Check函数中对不允许空的字段进行检查
            </summary>
        </member>
        <member name="T:SunLibrary.StringEx">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunLibrary.StringEx.Replace(System.String,System.String,System.Int32,System.Func{System.String,System.String})">
            <summary>
            替换带分隔符的字符串的指定节的内容
            </summary>
            <param name="oldValue"></param>
            <param name="separator"></param>
            <param name="index"></param>
            <param name="changeMethod"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.StringEx.Replace(System.String,System.String,System.Func{System.String,System.String})">
            <summary>
            替换带分隔符的字符串的所有节的内容
            </summary>
            <param name="oldValue"></param>
            <param name="separator"></param>
            <param name="changeMethod"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.StringEx.ConvertToDictionary(System.String)">
            <summary>
            将以&amp;=格式的字符串转换成字典类型
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.StringEx.GetLastString(System.String,System.Int32)">
            <summary>
            截取字符串最后几位
            </summary>
            <param name="oldValue"></param>
            <param name="lastLength"></param>
            <returns></returns>
        </member>
        <member name="T:SunLibrary.IEnumerableEx">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunLibrary.IEnumerableEx.ToString(System.Collections.IEnumerable,System.String)">
            <summary>
            将数组转换成字符串，用指定的间隔字符间隔
            </summary>
            <param name="collections"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="T:SunLibrary.ArrayEx">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunLibrary.ArrayEx.Cut``1(``0[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <param name="start"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.ArrayEx.Cut``1(``0[],System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <param name="start"></param>
            <returns></returns>
        </member>
        <member name="T:SunLibrary.DateTimeRange">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunLibrary.DateTimeRange.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunLibrary.DateTimeRange.StartTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunLibrary.DateTimeRange.EndTime">
            <summary>
            
            </summary>
        </member>
        <member name="T:SunLibrary.BoolEx">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunLibrary.BoolEx.ToUIString(System.Nullable{System.Boolean})">
            <summary>
            
            </summary>
            <param name="raw"></param>
            <returns></returns>
        </member>
        <member name="T:SunLibrary.DateTimeEx">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunLibrary.DateTimeEx.TryParse(System.String)">
            <summary>
            
            </summary>
            <param name="dateTimeString"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.DateTimeEx.FirstDay">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SunLibrary.DecimalEx">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunLibrary.DecimalEx.TryParse(System.String)">
            <summary>
            
            </summary>
            <param name="decimalString"></param>
            <returns></returns>
        </member>
        <member name="T:SunLibrary.IntEx">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunLibrary.IntEx.TryParse(System.String)">
            <summary>
            
            </summary>
            <param name="intString"></param>
            <returns></returns>
        </member>
        <member name="T:SunLibrary.DescriptionAttribute">
            <summary>
            成员附加描述特性
            </summary>
        </member>
        <member name="M:SunLibrary.DescriptionAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="descriptionValue"></param>
        </member>
        <member name="P:SunLibrary.DescriptionAttribute.Description">
            <summary>
            
            </summary>
        </member>
        <member name="T:SunLibrary.EnumHelper">
            <summary>
            枚举工具类
            </summary>
        </member>
        <member name="M:SunLibrary.EnumHelper.GetDescription(System.Type,System.String)">
            <summary>
            获取枚举的成员附加描述值
            </summary>
            <param name="enumType">枚举类型</param>
            <param name="itemValue">枚举成员值</param>
            <returns>对应的枚举成员附加描述值</returns>
        </member>
        <member name="T:SunLibrary.Framework.BufferedWriter">
            <summary>
            提供带自动缓冲区的文本流写入
            </summary>
        </member>
        <member name="M:SunLibrary.Framework.BufferedWriter.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="bufferSize">缓冲区大小</param>
        </member>
        <member name="M:SunLibrary.Framework.BufferedWriter.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SunLibrary.Framework.BufferedWriter.Prepare(System.String,System.Boolean)">
            <summary>
            初始化文本文件作为写入流
            </summary>
            <param name="outputFile">文件名</param>
            <param name="append">是否追加模式</param>
        </member>
        <member name="M:SunLibrary.Framework.BufferedWriter.Write(System.String)">
            <summary>
            写入文本
            </summary>
            <param name="content">内容</param>
        </member>
        <member name="M:SunLibrary.Framework.BufferedWriter.WriteLine(System.String)">
            <summary>
            写入一行文本
            </summary>
            <param name="content">内容</param>
        </member>
        <member name="M:SunLibrary.Framework.BufferedWriter.Close">
            <summary>
            写入缓冲区的的内容后，关闭流
            </summary>
        </member>
        <member name="T:SunLibrary.Base64DES">
            <summary>
            Base64DES加密解密
            </summary>
        </member>
        <member name="M:SunLibrary.Base64DES.EncryptToBase64Url(System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Base64DES.Encrypt(System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Base64DES.Encrypt(System.Byte[])">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Base64DES.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="key"></param>
            <param name="iv"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Base64DES.Encrypt(System.String,System.Byte[],System.Byte[])">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="key"></param>
            <param name="iv"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Base64DES.DecryptFromBase64Url(System.String)">
            <summary>
            
            </summary>
            <param name="Base64Url"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Base64DES.Decrypt(System.String)">
            <summary>
            
            </summary>
            <param name="StandardBase64"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Base64DES.DecrypeToBytes(System.String)">
            <summary>
            
            </summary>
            <param name="standarBase64"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Base64DES.DecryptToBytes(System.String,System.Byte[],System.Byte[])">
            <summary>
            
            </summary>
            <param name="StandardBase64"></param>
            <param name="key"></param>
            <param name="iv"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Base64DES.Decrypt(System.String,System.Byte[],System.Byte[])">
            <summary>
            
            </summary>
            <param name="StandardBase64"></param>
            <param name="key"></param>
            <param name="iv"></param>
            <returns></returns>
        </member>
        <member name="T:SunLibrary.LogHelper">
            <summary>
            日志辅助类
            </summary>
        </member>
        <member name="M:SunLibrary.LogHelper.LogInfo(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="loggerName"></param>
            <param name="message"></param>
        </member>
        <member name="M:SunLibrary.LogHelper.LogInfo(System.String,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="loggerName"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:SunLibrary.LogHelper.LogError(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="loggerName"></param>
            <param name="message"></param>
        </member>
        <member name="M:SunLibrary.LogHelper.LogError(System.String,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="loggerName"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:SunLibrary.LogHelper.LogDebug(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="loggerName"></param>
            <param name="message"></param>
        </member>
        <member name="T:SunLibrary.Framework.SunException">
            <summary>
            提供一个异常基类，为应用程序框架提供统一异常处理机制（主要是异常日志）。
            </summary>
            <remarks>
            本类通过在应用程序名称相对应的配置文件中配置跟踪开关来控制日志的记录。
            </remarks>
            <example>配置文件示例
            <code escaped="true">
            <configuration>
            	<system.diagnostics>
            		<!-- 添加跟踪开关，value取值为TraceLevel枚举：Off=0 错误=1 警告=2 Info=3 Verbose=4 -->
            		<switches>
            			<add name="GlobalSwitch" value="3" />
            		</switches>
            		<!-- 设置自动刷新输出缓冲区，并且缩进4个空格 -->
            		<trace autoflush="true" indentsize="4">
            			<!-- 移除默认的跟踪侦听器，并添加自己需要的跟踪侦听器，根据具体需要选择。-->
            			<listeners>
            				<remove type="System.Diagnostics.DefaultTraceListener"/>
            				<add name="GlobalLogFileListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="C:\GlobalLogFileListener.log" />
            				<add name="GlobalEventLogListener" type="System.Diagnostics.EventLogTraceListener" initializeData="GlobalEventLogListener" />
            			</listeners>
            		</trace>
            		</system.diagnostics>
            </configuration>
            </code>
            </example>
        </member>
        <member name="F:SunLibrary.Framework.SunException.GlobalSwitch">
            <summary>
            获取全局跟踪开关的静态成员
            </summary>
        </member>
        <member name="F:SunLibrary.Framework.SunException.m_nCode">
            <summary>
            异常代码私有成员
            </summary>
        </member>
        <member name="M:SunLibrary.Framework.SunException.#ctor(System.Object,System.Int32,System.String,System.Exception,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="oSource">引发异常的对象</param>
            <param name="nCode">异常代码</param>
            <param name="sMessage">异常描述信息</param>
            <param name="oInnerException">导致当前异常的异常类（这样就可以跟踪异常堆栈）</param>
            <param name="bLog">是否要记录日志</param>
        </member>
        <member name="M:SunLibrary.Framework.SunException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SunLibrary.Framework.SunException.#ctor(System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="sMessage">异常描述信息</param>
            <param name="bLog">是否要记录日志</param>
        </member>
        <member name="M:SunLibrary.Framework.SunException.#ctor(System.String,System.Exception,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="sMessage">异常描述信息</param>
            <param name="oInnerException">导致当前异常的异常类（这样就可以跟踪异常堆栈）</param>
            <param name="bLog">是否要记录日志</param>
        </member>
        <member name="M:SunLibrary.Framework.SunException.#ctor(System.Object,System.Int32,System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="oSource">引发异常的对象</param>
            <param name="nCode">异常代码</param>
            <param name="sMessage">异常描述信息</param>
            <param name="bLog">是否要记录日志</param>
        </member>
        <member name="M:SunLibrary.Framework.SunException.TraceLog(System.Exception)">
            <summary>
            当没有禁止Trace时，将异常信息发送到侦听器
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SunLibrary.Framework.SunException.FormatExceptions(System.Exception)">
            <summary>
            自定义的格式化异常信息
            实现方式和Exception类提供的ToString()类似，但格式化后生成结果的可读性可能更好一些
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Framework.SunException.FormatException(System.Exception)">
            <summary>
            格式化单个异常信息
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Framework.SunException.ProcessApplicationError(System.Web.HttpApplication,System.Boolean)">
            <summary>
            用于统一处理应用程序异常
            </summary>
            <param name="app">应用程序对象</param>
            <param name="IsWeb">是否Web应用程序</param>
        </member>
        <member name="P:SunLibrary.Framework.SunException.Code">
            <summary>
            异常代码
            </summary>
        </member>
        <member name="T:SunLibrary.Framework.XmlConfigulation">
            <summary>
            基于XML的配置文件操作类
            </summary>
        </member>
        <member name="F:SunLibrary.Framework.XmlConfigulation.doc">
            <summary>
            XML实例
            </summary>
        </member>
        <member name="M:SunLibrary.Framework.XmlConfigulation.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SunLibrary.Framework.XmlConfigulation.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="FileName">默认要打开的XML文件</param>
        </member>
        <member name="M:SunLibrary.Framework.XmlConfigulation.Load(System.String)">
            <summary>
            打开XML文件
            </summary>
            <param name="FileName">要打开的XML文件</param>
        </member>
        <member name="M:SunLibrary.Framework.XmlConfigulation.Read(System.String,System.String)">
            <summary>
            读取指定节点值
            </summary>
            <param name="xPath">节点</param>
            <param name="defaultValue">默认值</param>
            <returns>节点值</returns>
        </member>
        <member name="M:SunLibrary.Framework.XmlConfigulation.Write(System.String,System.String)">
            <summary>
            写入指定节点值
            </summary>
            <param name="xPath">节点</param>
            <param name="value">节点值</param>
        </member>
        <member name="M:SunLibrary.Framework.XmlConfigulation.Save(System.String)">
            <summary>
            保存XML文件
            </summary>
            <param name="FileName"></param>
        </member>
        <member name="T:SunLibrary.Sun">
            <summary>
            提供常用的函数
            </summary>
        </member>
        <member name="M:SunLibrary.Sun.AppSetting(System.String)">
            <summary>
            读取Web.config中AppSetting节的配置项
            </summary>
            <param name="Name">配置项名称</param>
            <returns>配置项值</returns>
        </member>
        <member name="M:SunLibrary.Sun.AppSettingInt32(System.String)">
            <summary>
            读取Web.config中AppSetting节的配置项
            </summary>
            <param name="Name">配置项名称</param>
            <returns>配置项值</returns>
            <remarks>如果配置项不存在或不能转换为有效的32位整型，则会抛出异常</remarks>
        </member>
        <member name="M:SunLibrary.Sun.AppSettingInt64(System.String)">
            <summary>
            读取Web.config中AppSetting节的配置项
            </summary>
            <param name="Name">配置项名称</param>
            <returns>配置项值</returns>
            <remarks>如果配置项不存在或不能转换为有效的64位整型，则会抛出异常</remarks>
        </member>
        <member name="M:SunLibrary.Sun.Message(System.String)">
            <summary>
            显示Windows标准信息框
            </summary>
            <param name="Message">要显示的文本</param>
        </member>
        <member name="M:SunLibrary.Sun.MessageConfirm(System.String)">
            <summary>
            显示Windows标准确认信息框
            </summary>
            <param name="Message">要显示的文本</param>
            <returns>如果用户确认，则为true；否则，为false。</returns>
        </member>
        <member name="M:SunLibrary.Sun.CheckListSet(System.Windows.Forms.CheckedListBox,System.Boolean)">
            <summary>
            设置CheckListBox中所有项的选中状态
            </summary>
            <param name="List">CheckListBox控件</param>
            <param name="Checked">true为选中，false为取消选中</param>
        </member>
        <member name="M:SunLibrary.Sun.ArraySearch(System.Int32[],System.Int32)">
            <summary>
            查找一个值是否在数组中
            </summary>
            <param name="List">数组</param>
            <param name="Value">要查找的值</param>
            <returns>如果值在数组中存在，则返回该值在数组中的位置；否则，返回-1。</returns>
        </member>
        <member name="M:SunLibrary.Sun.ArraySearch(System.String[],System.String)">
            <summary>
            查找一个值是否在数组中
            </summary>
            <param name="List">数组</param>
            <param name="Value">要查找的值</param>
            <returns>如果值在数组中存在，则返回该值在数组中的位置；否则，返回-1。</returns>
        </member>
        <member name="M:SunLibrary.Sun.ArraySearch(System.Int64[],System.Int64)">
            <summary>
            查找一个值是否在数组中
            </summary>
            <param name="List">数组</param>
            <param name="Value">要查找的值</param>
            <returns>如果值在数组中存在，则返回该值在数组中的位置；否则，返回-1。</returns>
        </member>
        <member name="M:SunLibrary.Sun.ArraySearch(System.Double[],System.Double)">
            <summary>
            查找一个值是否在数组中
            </summary>
            <param name="List">数组</param>
            <param name="Value">要查找的值</param>
            <returns>如果值在数组中存在，则返回该值在数组中的位置；否则，返回-1。</returns>
        </member>
        <member name="M:SunLibrary.Sun.MoneyFormat(System.Int64)">
            <summary>
            获取金额的格式化文本
            </summary>
            <param name="Value">金额值，单位是“分”</param>
            <returns>格式化文本，单位是“元”</returns>
            <remarks>格式化规则：保留两位小数，整数部分使用千分号。</remarks>
        </member>
        <member name="M:SunLibrary.Sun.MoneyFormat(System.String)">
            <summary>
            获取金额的格式化文本
            </summary>
            <param name="Value">金额值，单位是“分”</param>
            <returns>格式化文本，单位是“元”</returns>
            <remarks>格式化规则：保留两位小数，整数部分使用千分号。</remarks>
        </member>
        <member name="M:SunLibrary.Sun.MoneyConvert(System.String)">
            <summary>
            从文本转换为金额
            </summary>
            <param name="Value">文本，单位是“元”</param>
            <returns>金额，单位是“分”</returns>
            <remarks>转换规则：采用向下取整法保留两位小数。</remarks>
        </member>
        <member name="M:SunLibrary.Sun.IsType(System.String,System.Int32@)">
            <summary>
            检查字符串能否转换为指定的类型
            </summary>
            <param name="Text">字符串</param>
            <param name="Value">接收转换结果的值</param>
            <returns>如果能够转换，返回true；否则，返回false</returns>
        </member>
        <member name="M:SunLibrary.Sun.IsType(System.String,System.Int64@)">
            <summary>
            检查字符串能否转换为指定的类型
            </summary>
            <param name="Text">字符串</param>
            <param name="Value">接收转换结果的值</param>
            <returns>如果能够转换，返回true；否则，返回false</returns>
        </member>
        <member name="M:SunLibrary.Sun.IsType(System.String,System.Double@)">
            <summary>
            检查字符串能否转换为指定的类型
            </summary>
            <param name="Text">字符串</param>
            <param name="Value">接收转换结果的值</param>
            <returns>如果能够转换，返回true；否则，返回false</returns>
        </member>
        <member name="M:SunLibrary.Sun.IsType(System.String,System.DateTime@)">
            <summary>
            检查字符串能否转换为指定的类型
            </summary>
            <param name="Text">字符串</param>
            <param name="Value">接收转换结果的值</param>
            <returns>如果能够转换，返回true；否则，返回false</returns>
        </member>
        <member name="M:SunLibrary.Sun.IsEmailAddress(System.String)">
            <summary>
            检查字符串是否有效的Email地址
            </summary>
            <param name="Text">字符串</param>
            <returns>如果有效，返回true；否则，返回false</returns>
        </member>
        <member name="M:SunLibrary.Sun.IsAccount(System.String)">
            <summary>
            检查字符串是否有效的用户账号
            </summary>
            <param name="Text">字符串</param>
            <returns>如果有效，返回true；否则，返回false</returns>
            <remarks>有效的用户账号是指：以字母开头，字母、数字和下划线组成的字符串。</remarks>
        </member>
        <member name="M:SunLibrary.Sun.StringCompare(System.String,System.String,System.Int32)">
            <summary>
            比较两个长度相等的字符串，在指定位置的字符是否相同
            </summary>
            <param name="Text1">字符串1</param>
            <param name="Text2">字符串2</param>
            <param name="Pos">比较位置，0为第一个字符</param>
            <returns>如果在指定位置的字符相同，则返回true；否则，返回false</returns>
        </member>
        <member name="M:SunLibrary.Sun.StringSub(System.String,System.Int32,System.Int32)">
            <summary>
            从字符串实例中检索子字符串
            </summary>
            <param name="Src">字符串</param>
            <param name="StartIndex">子字符串起始位置</param>
            <param name="Length">子字符串长度</param>
            <returns>子字符串</returns>
            <remarks>
            本函数是String.Substring的一个封装版本。
            C#自带的SubString函数可能导致越界异常，本函数在越界时自动截断或返回空串，而不会导致异常。
            </remarks>
        </member>
        <member name="M:SunLibrary.Sun.IpToString(System.Int64)">
            <summary>
            获取长整型IP地址的格式化文本
            </summary>
            <param name="Ip">IP地址</param>
            <returns>格式化文本</returns>
            <remarks>非紧缩模式</remarks>
        </member>
        <member name="M:SunLibrary.Sun.IpToString(System.Int64,System.Boolean)">
            <summary>
            获取长整型IP地址的格式化文本
            </summary>
            <param name="Ip">IP地址</param>
            <param name="Compact">true时采用紧缩模式；false为非紧缩模式（每段自动将0补足）</param>
            <returns>字符串形式的地址</returns>
        </member>
        <member name="M:SunLibrary.Sun.IpFromString(System.String)">
            <summary>
            将字符串形式的IP地址转换为长整型地址
            </summary>
            <param name="Ip">IP地址</param>
            <returns>长整型地址</returns>
        </member>
        <member name="M:SunLibrary.Sun.DateTimeGetSolarTerm(System.DateTime)">
            <summary>
            获取阳历日期的节气名称
            </summary>
            <param name="Day">阳历日期，只取年月日</param>
            <returns>是节气时，返回节气名称；否则，返回空串</returns>
        </member>
        <member name="M:SunLibrary.Sun.DateTimeGetSolarTerm(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取阳历日期的节气名称
            </summary>
            <param name="Year">年</param>
            <param name="Month">月</param>
            <param name="Day">日</param>
            <returns>是节气时，返回节气名称；否则，返回空串</returns>
        </member>
        <member name="M:SunLibrary.Sun.DateTimeFormatMS(System.Int64,System.Boolean)">
            <summary>
            将毫秒格式化为时分秒的格式
            </summary>
            <param name="ms">总毫秒长度</param>
            <param name="bIncludeMs">是否在结果中包括毫秒</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Sun.DateTimeFormatLongDate(System.DateTime)">
            <summary>
            将日期时间值统一格式化输出
            </summary>
            <param name="date">日期时间值</param>
            <returns>长日期的格式化串</returns>
        </member>
        <member name="M:SunLibrary.Sun.DateTimeFormatLongDateSimple(System.DateTime)">
            <summary>
            将日期时间值统一格式化输出
            </summary>
            <param name="date">日期时间值</param>
            <returns>长日期的格式化串</returns>
        </member>
        <member name="M:SunLibrary.Sun.DateTimeFormatLongTime(System.DateTime)">
            <summary>
            将日期时间值统一格式化输出
            </summary>
            <param name="time">日期时间值</param>
            <returns>长时间的格式化串</returns>
        </member>
        <member name="M:SunLibrary.Sun.DateTimeFormatLong(System.DateTime)">
            <summary>
            将日期时间值统一格式化输出
            </summary>
            <param name="time">日期时间值</param>
            <returns>长日期时间的格式化串</returns>
        </member>
        <member name="M:SunLibrary.Sun.DateTimeFormatLongSimple(System.DateTime)">
            <summary>
            将日期时间值统一格式化输出
            </summary>
            <param name="time">日期时间值</param>
            <returns>长日期时间的格式化串</returns>
        </member>
        <member name="M:SunLibrary.Sun.DateTimeFormatLongDate(System.String)">
            <summary>
            将日期时间值统一格式化输出
            </summary>
            <param name="date">日期时间值</param>
            <returns>长日期的格式化串</returns>
        </member>
        <member name="M:SunLibrary.Sun.DateTimeFormatLongTime(System.String)">
            <summary>
            将日期时间值统一格式化输出
            </summary>
            <param name="time">日期时间值</param>
            <returns>长时间的格式化串</returns>
        </member>
        <member name="M:SunLibrary.Sun.DateTimeFormatLong(System.String)">
            <summary>
            将日期时间值统一格式化输出
            </summary>
            <param name="time">日期时间值</param>
            <returns>长日期时间的格式化串</returns>
        </member>
        <member name="M:SunLibrary.Sun.DateTimeFormatLongSimple(System.String)">
            <summary>
            将日期时间值统一格式化输出
            </summary>
            <param name="time">日期时间值</param>
            <returns>长日期时间的格式化串</returns>
        </member>
        <member name="M:SunLibrary.Sun.DateTimeFormatLongDateSimple(System.String)">
            <summary>
            将日期时间值统一格式化输出
            </summary>
            <param name="date">日期时间值</param>
            <returns>长日期的格式化串</returns>
        </member>
        <member name="M:SunLibrary.Sun.WinAPI_ShellExecuteW(System.Int32,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            调用ShellExecuteW函数
            </summary>
            <param name="hWnd"></param>
            <param name="Operation"></param>
            <param name="File"></param>
            <param name="Parameters"></param>
            <param name="Directory"></param>
            <param name="ShowCmd"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Sun.FileSize(System.String,System.String)">
            <summary>
            得到文件的大小
            </summary>
            <param name="local_file">文件名</param>
            <param name="unit">大小单位，可选的有："K","B","M"</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Sun.FileGetEncoding(System.String)">
            <summary>
            获取文本文件的编码格式，支持Unicode、Ansi、utf8
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Sun.FileReadData(System.String,System.Byte[]@)">
            <summary>
            读写文件到内存缓冲区
            </summary>
            <param name="local_file"></param>
            <param name="Buffer"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Sun.FileWriteData(System.String,System.Byte[])">
            <summary>
            写缓冲区数据到本地文件
            </summary>
            <param name="local_file"></param>
            <param name="Buffer"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Sun.FileReadLine(System.String,System.String[]@,System.String@)">
            <summary>
            读取文本文件，并返回所有行的数组及编码格式
            </summary>
            <param name="local_file">文件名称</param>
            <param name="lines">接收所有文本行的数组</param>
            <param name="error">错误信息</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:SunLibrary.Sun.FileReadText(System.String)">
            <summary>
            读取文本文件内容
            </summary>
            <param name="local_file">文件名称</param>
            <returns>文件内容</returns>
        </member>
        <member name="M:SunLibrary.Sun.FileWriteText(System.String,System.String,System.Text.Encoding)">
            <summary>
            写入文本文件内容
            </summary>
            <param name="local_file">文件名称</param>
            <param name="text">文件内容</param>
            <param name="encoding">编码；为null时使用Default</param>
            <returns>文件内容</returns>
        </member>
        <member name="M:SunLibrary.Sun.DirectoryCopy(System.String,System.String)">
            <summary>
            复制源目录下的所有文件和子目录到目标目录
            </summary>
            <param name="sourcePath">源目录</param>
            <param name="destinationPath">目标目录</param>
        </member>
        <member name="M:SunLibrary.Sun.DirectoryClearAttr(System.String,System.IO.FileAttributes)">
            <summary>
            去掉文件或目录的指定属性
            </summary>
            <param name="sourcePath">源目录</param>
            <param name="attr">要去掉的属性</param>
        </member>
        <member name="M:SunLibrary.Sun.CompressGZip(System.String)">
            <summary>
            Gzip算法的字符串压缩
            </summary>
            <param name="uncompressedString"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Sun.CompressGZipU(System.String)">
            <summary>
            GZip算法的字符串解压缩
            </summary>
            <param name="compressedString"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Sun.CompressGZip(System.IO.Stream,System.IO.Stream)">
            <summary>
            GZip算法的流压缩
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:SunLibrary.Sun.CompressGZipU(System.IO.Stream,System.IO.Stream)">
            <summary>
            GZip算法的流解压缩
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:SunLibrary.Sun.StreamCopy(System.IO.Stream,System.IO.Stream)">
            <summary>
            在两个流之间复制数据
            </summary>
            <param name="from">源流</param>
            <param name="to">目的流</param>
        </member>
        <member name="M:SunLibrary.Sun.EncryptMD5(System.String)">
            <summary>
            用MD5加密，全大写
            </summary>
            <param name="source">待加密字符串</param>
            <returns>加密后字符串</returns>
        </member>
        <member name="M:SunLibrary.Sun.EncryptDES(System.String,System.String)">
            <summary>
            用指定的密钥给指定的字符串进行DES加密
            </summary>
            <param name="source">待加密字符串</param>
            <param name="key">密钥(为8位字符组成，区分大小写)</param>
            <returns>加密后字符串</returns>
        </member>
        <member name="M:SunLibrary.Sun.EncryptDESU(System.String,System.String)">
            <summary>
            用指定的密钥给指定的字符串进行DES解密
            </summary>
            <param name="source">加密后字符串</param>
            <param name="key">密钥(为8位字符组成，区分大小写)</param>
            <returns>解密后字符串</returns>
        </member>
        <member name="M:SunLibrary.Sun.EnumFillList(System.Type,System.Boolean,System.String,System.Web.UI.WebControls.ListControl[])">
            <summary>
            填充枚举的所有值到列表控件中
            </summary>
            <param name="enumType">枚举类型，如“typeof(enum)”</param>
            <param name="isChar">枚举是否字符型</param>
            <param name="AllItemText">是否填充“全部”选项</param>
            <param name="list">列表控件</param>
        </member>
        <member name="M:SunLibrary.Sun.EnumFillList(System.Type,System.Boolean,System.Web.UI.WebControls.ListControl[])">
            <summary>
            填充枚举的所有值到列表控件中
            </summary>
            <param name="enumType">枚举类型，如“typeof(enum)”</param>
            <param name="isChar">枚举是否字符型</param>
            <param name="list">列表控件</param>
        </member>
        <member name="M:SunLibrary.Sun.EnumFillList(System.Type,System.Web.UI.WebControls.ListControl[])">
            <summary>
            填充枚举的所有值到列表控件中
            </summary>
            <param name="enumType">枚举类型，如“typeof(enum)”</param>
            <param name="list">列表控件</param>
        </member>
        <member name="M:SunLibrary.Sun.EnumGetName(System.Type,System.String,System.Boolean)">
            <summary>
            根据枚举值得到枚举名称
            </summary>
            <param name="enumType">枚举类型，如“typeof(enum)”</param>
            <param name="theValue">枚举值</param>
            <param name="isChar">枚举是否字符型</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:SunLibrary.Sun.EnumGetName(System.Type,System.String)">
            <summary>
            根据枚举值得到枚举名称
            </summary>
            <param name="enumType">枚举类型，如“typeof(enum)”</param>
            <param name="theValue">枚举值</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:SunLibrary.Sun.EnumGetValue(System.Type,System.String,System.Boolean)">
            <summary>
            根据枚举名称得到枚举值
            </summary>
            <param name="enumType">枚举类型，如“typeof(enum)”</param>
            <param name="theName">枚举值</param>
            <param name="isChar">枚举是否字符型</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:SunLibrary.Sun.EnumGetValue(System.Type,System.String)">
            <summary>
            根据枚举名称得到枚举值
            </summary>
            <param name="enumType">枚举类型，如“typeof(enum)”</param>
            <param name="theName">枚举值</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:SunLibrary.Sun.EnumGetChar(System.String)">
            <summary>
            获取字符型枚举的字符串形式的值
            </summary>
            <param name="theValue">枚举值</param>
            <returns>字符串形式</returns>
        </member>
        <member name="M:SunLibrary.Sun.EnumGetChar(System.Int32)">
            <summary>
            获取字符型枚举的字符串形式的值
            </summary>
            <param name="theValue">枚举值</param>
            <returns>字符串形式</returns>
        </member>
        <member name="M:SunLibrary.Sun.SendMail(System.String,System.String,System.String,System.String,System.String,System.Net.Mail.MailPriority,System.String,System.String,System.String,System.Boolean,System.Net.Mail.Attachment[])">
            <summary>
            SMTP方式发送一封HTML格式的邮件
            </summary>
            <param name="from">发件人</param>
            <param name="to">收件人</param>
            <param name="cc">抄送人</param>
            <param name="subject">主题</param>
            <param name="content">邮件内容</param>
            <param name="priority">邮件优先级</param>
            <param name="smtpServer">邮件服务器地址</param>
            <param name="userName">认证用户名，为空时表示不需要验证</param>
            <param name="passwd">认证密码</param>
            <param name="isBodyHtml">邮件内容格式是否为HTML格式，默认值是false</param>
            <param name="attachments">邮件附件</param>
            <returns>失败返回错误信息，空字符串则表示成功</returns>
        </member>
        <member name="M:SunLibrary.Sun.SendMail(System.String,System.String,System.String,System.String,System.String,System.Net.Mail.MailPriority,System.String,System.Boolean,System.Net.Mail.Attachment[])">
            <summary>
            SMTP方式发送一封HTML格式的邮件（不需服务器验证）
            </summary>
            <param name="from">发件人</param>
            <param name="to">收件人</param>
            <param name="cc">抄送人</param>
            <param name="subject">主题</param>
            <param name="content">邮件内容</param>
            <param name="priority">邮件优先级</param>
            <param name="smtpServer">邮件服务器地址</param>
            <param name="isBodyHtml">邮件内容格式是否为HTML格式，默认值是false</param>
            <param name="attachments">邮件附件</param>
            <returns>失败返回错误信息，空字符串则表示成功</returns>
        </member>
        <member name="M:SunLibrary.Sun.SendEmailS(System.String,System.String,System.String,System.String)">
            <summary>
            简单文本邮件
            </summary>
            <param name="from"></param>
            <param name="mailto"></param>
            <param name="mailboby"></param>
            <param name="subject"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Sun.ListSelect(System.Web.UI.WebControls.ListControl,System.String)">
            <summary>
            安全（不引起异常）地设置一个列表控件的选中值
            </summary>
            <param name="List">列表控件</param>
            <param name="value">值</param>
            <returns>该值是否存在，不存在时默认选中第一项</returns>
        </member>
        <member name="M:SunLibrary.Sun.dsHasRows(System.Data.DataSet)">
            <summary>
            判断数据集是否为空（没有一条记录）
            </summary>
            <param name="ds">数据集</param>
            <returns>如果数据集没有包含记录，返回true；否则，返回false</returns>
        </member>
        <member name="M:SunLibrary.Sun.dsIndexOf(System.Data.DataTable,System.String,System.Object,System.Boolean)">
            <summary>
            在数据表中搜索指定记录，返回该记录位置
            </summary>
            <param name="table">数据表</param>
            <param name="fieldName">字段名</param>
            <param name="fieldValue">字段值</param>
            <param name="trim">是否需要去掉首尾空格</param>
            <returns>找到的记录位置，-1为不存在</returns>
        </member>
        <member name="M:SunLibrary.Sun.dsSetNullToZero(System.Data.DataTable,System.String[])">
            <summary>
            将数据集中的NULL数字字段，设置为0
            </summary>
            <param name="table">数据表</param>
            <param name="fields">字段</param>
        </member>
        <member name="M:SunLibrary.Sun.dsFill(System.Data.DataTable,System.String,System.String,System.String,System.Web.UI.WebControls.ListControl,System.String)">
            <summary>
            填充所有记录的指定字段到DropDownList控件
            </summary>
            <param name="table">数据表</param>
            <param name="valueField">值字段</param>
            <param name="textField">文字字段</param>
            <param name="textField2">文字字段2</param>
            <param name="Source">列表控件</param>
            <param name="AllItemText">是否包括“全部”项及其文字</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Sun.dsRecordSnap(System.Data.DataTable,System.Int32)">
            <summary>
            返回一条记录的快照
            </summary>
            <param name="table">数据表</param>
            <param name="row">记录号</param>
            <returns>记录快照</returns>
        </member>
        <member name="M:SunLibrary.Sun.dsRecordSnap(System.Data.DataSet)">
            <summary>
            返回第一个表第一条记录的快照
            </summary>
            <param name="ds">数据集</param>
            <returns>记录快照</returns>
        </member>
        <member name="M:SunLibrary.Sun.dsRecordSnapDiff(System.Data.DataTable,System.Int32,System.Data.DataTable,System.Int32)">
            <summary>
            返回两条记录之间的差异快照
            </summary>
            <param name="table1">数据表1</param>
            <param name="row1">记录号1</param>
            <param name="table2">数据表2</param>
            <param name="row2">记录号2</param>
            <returns>记录快照</returns>
        </member>
        <member name="M:SunLibrary.Sun.dsRecordSnapDiff(System.Data.DataSet,System.Data.DataSet)">
            <summary>
            返回两个数据集中第一个表第一条记录之间的差异快照
            </summary>
            <param name="ds1">数据表1</param>
            <param name="ds2">数据表2</param>
            <returns>记录快照</returns>
        </member>
        <member name="M:SunLibrary.Sun.dsBind(System.Data.DataTable,System.Web.UI.WebControls.DataGrid)">
            <summary>
            安全的把记录集绑定到DataGrid，而不会导致CurrentPageIndex越界异常
            </summary>
            <param name="Source">数据表</param>
            <param name="Grid">DataGrid</param>
        </member>
        <member name="M:SunLibrary.Sun.dsExportToCSV(System.Data.DataSet,System.Int32)">
            <summary>
            DataSet内容生成CSV格式文本
            </summary>
            <param name="ds">数据集</param>
            <param name="TableIdx">表索引</param>
            <returns>CSV格式文本</returns>
            <remarks>CSV格式文本各列用逗号分隔，列内容用双引号分隔，列内容内部有双引号的替换为两个双引号</remarks>
        </member>
        <member name="M:SunLibrary.Sun.ChangeDataType(System.Data.DataTable,System.String,System.Type)">
            <summary>
            改变表格中列的数据类型
            </summary>
            <param name="table">表格对象</param>
            <param name="colName">列名</param>
            <param name="newType">新的类型</param>
            <remarks>
            实现方法是将所有数据复制到新的列，然后将旧列删除，因此执行结束后会导致列的位置发生变化（移动到末尾）。
            </remarks>
        </member>
        <member name="M:SunLibrary.Sun.dsXmlWrite(System.Data.DataSet,System.String)">
            <summary>
            将数据集写入XML文件
            </summary>
            <param name="ds">数据集</param>
            <param name="xmlFilename">XML文件名</param>
        </member>
        <member name="M:SunLibrary.Sun.dsXmlRead(System.String)">
            <summary>
            从XML文件读入数据集
            </summary>
            <param name="xmlFilename">XML文件名</param>
            <returns>文件存在时，返回数据集；否则，返回null</returns>
        </member>
        <member name="M:SunLibrary.Sun.dsGenerateInsertSQL(System.Data.DataSet,System.String,System.Int32)">
            <summary>
            为指定记录生成Insert语句
            </summary>
            <param name="ds">数据集</param>
            <param name="TableName">表名</param>
            <param name="row">记录号</param>
            <returns>Insert语句</returns>
        </member>
        <member name="T:SunLibrary.Sun.WinAPI_ShellExecuteWError">
            <summary>
            调用ShellExecuteW函数的错误代码定义
            </summary>
        </member>
        <member name="F:SunLibrary.Sun.WinAPI_ShellExecuteWError.找不到指定的文件">
            <summary>
            找不到指定的文件
            </summary>
        </member>
        <member name="F:SunLibrary.Sun.WinAPI_ShellExecuteWError.找不到指定的目录">
            <summary>
            找不到指定的目录
            </summary>
        </member>
        <member name="F:SunLibrary.Sun.WinAPI_ShellExecuteWError.对指定文件的访问被拒绝">
            <summary>
            对指定文件的访问被拒绝
            </summary>
        </member>
        <member name="F:SunLibrary.Sun.WinAPI_ShellExecuteWError.操作系统内存不够">
            <summary>
            操作系统内存不够
            </summary>
        </member>
        <member name="F:SunLibrary.Sun.WinAPI_ShellExecuteWError.找不到动态链接库">
            <summary>
            找不到动态链接库
            </summary>
        </member>
        <member name="F:SunLibrary.Sun.WinAPI_ShellExecuteWError.发生共享冲突">
            <summary>
            发生共享冲突
            </summary>
        </member>
        <member name="F:SunLibrary.Sun.WinAPI_ShellExecuteWError.指定的文件名不完整或无效">
            <summary>
            指定的文件名不完整或无效
            </summary>
        </member>
        <member name="F:SunLibrary.Sun.WinAPI_ShellExecuteWError.DDE事务因超时而无法完成">
            <summary>
            DDE事务因超时而无法完成
            </summary>
        </member>
        <member name="F:SunLibrary.Sun.WinAPI_ShellExecuteWError.DDE事务失败">
            <summary>
            DDE事务失败
            </summary>
        </member>
        <member name="F:SunLibrary.Sun.WinAPI_ShellExecuteWError.DDE事务因忙而无法完成">
            <summary>
            DDE事务因忙而无法完成
            </summary>
        </member>
        <member name="F:SunLibrary.Sun.WinAPI_ShellExecuteWError.指定扩展名没有关联的应用程序">
            <summary>
            指定扩展名没有关联的应用程序
            </summary>
        </member>
        <member name="F:SunLibrary.Sun.WinAPI_ShellExecuteWError.指定的文件不是有效的Win32可执行文件">
            <summary>
            指定的文件不是有效的Win32可执行文件
            </summary>
        </member>
        <member name="T:SunLibrary.Web.SunPage">
            <summary>
            封装Web页面常用函数，其他页面应从此类继承
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunPage.JS_BodyId">
            <summary>
            Body标签的统一ID。请将每个页面的body标签中增加： id="bodyId" runat="server"
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunPage.JS_FormId">
            <summary>
            Form标签的统一ID
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunPage.LastCheckError">
            <summary>
            其他
            </summary>
        </member>
        <member name="M:SunLibrary.Web.SunPage.SunInit">
            <summary>
            在PageLoad里第一个调用
            </summary>
        </member>
        <member name="M:SunLibrary.Web.SunPage.PageParam(System.String)">
            <summary>
            得到页面的QueryString参数值
            </summary>
            <param name="name">参数名称</param>
            <returns>参数值</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.PageParamInt32(System.String,System.Int32)">
            <summary>
            得到页面的QueryString参数值
            </summary>
            <param name="name">参数名称</param>
            <param name="defaultVal">默认值，当参数不存在时返回该值</param>
            <returns>参数值</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.PageParamInt64(System.String,System.Int64)">
            <summary>
            得到页面的QueryString参数值
            </summary>
            <param name="name">参数名称</param>
            <param name="defaultVal">默认值，当参数不存在时返回该值</param>
            <returns>参数值</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.PageParamDouble(System.String,System.Single)">
            <summary>
            得到页面的QueryString参数值
            </summary>
            <param name="name">参数名称</param>
            <param name="defaultVal">默认值，当参数不存在时返回该值</param>
            <returns>参数值</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.ScriptPopup(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            构造弹出窗口脚本
            </summary>
            <param name="Url">目标URL</param>
            <param name="Height">窗口高度</param>
            <param name="Width">窗口宽度</param>
            <param name="ShowScrollBar">是否显示滚动条</param>
        </member>
        <member name="M:SunLibrary.Web.SunPage.SetCaption(System.String)">
            <summary>
            动态设置页面的标题
            </summary>
        </member>
        <member name="M:SunLibrary.Web.SunPage.ClientScript(System.String,System.Boolean)">
            <summary>
            在页面中body标签的onload事件中加入一段客户端脚本
            </summary>
            <param name="Script">脚本的内容，为null时表示清空脚本</param>
            <param name="Rewrite">true为覆盖方式，false为追加方式</param>
        </member>
        <member name="M:SunLibrary.Web.SunPage.ClientAlert(System.String,System.Boolean)">
            <summary>
            在客户端弹出消息框并关闭窗口
            问题：请不要在消息字符串中包括换行符号“\n”，否则将不起作用
            </summary>
            <param name="msg">消息框的文字内容</param>
            <param name="close">显示消息框后是否自动关闭窗口</param>
        </member>
        <member name="M:SunLibrary.Web.SunPage.ClientAlert(System.String)">
            <summary>
            重载ClientAlert(msg,false)
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:SunLibrary.Web.SunPage.ClientAlertGo(System.String,System.String)">
            <summary>
            在客户端弹出消息框，等用户确定后重定向到其他页面
            </summary>
            <param name="msg">消息框的文字内容</param>
            <param name="url">重定向的页面url</param>
        </member>
        <member name="M:SunLibrary.Web.SunPage.ClientConfirmGo(System.String,System.String)">
            <summary>
            在客户端弹出消息框，用户如果Yes则重定向到其他页面，如果No则不跳转
            </summary>
            <param name="msg">消息框的文字内容</param>
            <param name="url">重定向的页面url</param>
        </member>
        <member name="M:SunLibrary.Web.SunPage.ClientAlertFocus(System.String,System.Web.UI.WebControls.TextBox)">
            <summary>
            在客户端弹出消息框，等用户确定后将输入焦点设置到指定控件上
            </summary>
            <param name="msg">消息框的文字内容，若为空串则不弹出消息</param>
            <param name="txtBox">要获取输入焦点的控件</param>
        </member>
        <member name="M:SunLibrary.Web.SunPage.ClientSubmitBind(System.Web.UI.WebControls.TextBox@,System.Web.UI.WebControls.Button)">
            <summary>
            为指定输入框绑定默认提交按钮，当焦点在该输入框内时，按下回车键将触发提交按钮的Click事件
            </summary>
            <param name="txtBox">要绑定的输入框</param>
            <param name="btnBindSubmit">要绑定的提交按钮，为null时将使回车键无效</param>
        </member>
        <member name="M:SunLibrary.Web.SunPage.SetAlert(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            用户按下按钮时，显示确认信息提示框后再执行
            </summary>
            <param name="control">要进行确认的按钮</param>
            <param name="msg">确认信息</param>
        </member>
        <member name="M:SunLibrary.Web.SunPage.SetIFrameSize(System.String,System.Boolean,System.Boolean)">
            <summary>
            自动调整IFrame大小，以适应IFrame内文档大小
            </summary>
            <param name="FrameName">IFrame名称</param>
            <param name="AutoHeight">是否自动调整高度</param>
            <param name="AutoWidth">是否自动调整宽度</param>
        </member>
        <member name="M:SunLibrary.Web.SunPage.RedirectTo(System.String)">
            <summary>
            由于系统采用了IFrame，因此需要在主页面和IFrame页面中重定向时均能够使生效于主页面
            </summary>
            <param name="url">要重定向到的URL</param>
        </member>
        <member name="M:SunLibrary.Web.SunPage.ClientDownload(System.String,System.String)">
            <summary>
            从服务器下载文件到客户端（客户端显示保存对话框）
            	如果执行成功，则后续的代码将不被再被执行，否则返回错误
            </summary>
            <param name="local_file">服务器文件的完整物理路径</param>
            <param name="save_as">在客户端要保存的文件名</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.ClientDownload(System.Data.DataSet,System.Int32,System.Boolean,System.String)">
            <summary>
            下载表格数据到客户端CSV文件（客户端显示保存对话框）
            </summary>
            <param name="ds">数据</param>
            <param name="TableIdx">表索引</param>
            <param name="ZipCompress">是否Zip压缩</param>
            <param name="save_as">保存文件名（不含扩展名）</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckUploadFile(System.Web.UI.HtmlControls.HtmlInputFile)">
            <summary>
            检查上载的文件是否存在
            </summary>
            <param name="iFile">上载控件</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckUploadFile(System.Web.UI.HtmlControls.HtmlInputFile,System.Int32,System.Int32)">
            <summary>
            检查上载文件是否在指定的大小范围内
            </summary>
            <param name="iFile">上载控件</param>
            <param name="SizeMin">最小字节数</param>
            <param name="SizeMax">最大字节数（小于0时忽略）</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckUploadFile(System.Web.UI.HtmlControls.HtmlInputFile,System.String[])">
            <summary>
            检查上载文件是否指定扩展名
            </summary>
            <param name="iFile">上载控件</param>
            <param name="ExtList">扩展名数据（如 new string[] {".html",".txt"}）</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckIsReferrer(System.String[])">
            <summary>
            检查前一个页面是否指定的页面
            </summary>
            <param name="FileName">要检查的页面名称数组</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.ShowProgress">
            <summary>
            在页面显示前在客户段显示进度信息
            </summary>
        </member>
        <member name="M:SunLibrary.Web.SunPage.ShowProgress(System.String)">
            <summary>
            在页面显示前在客户段显示进度信息（在某些机器上，会提示removeNode不被支持，目前尚未知原因）
            </summary>
            <param name="message">要提示的信息</param>
        </member>
        <member name="M:SunLibrary.Web.SunPage.ShowNoDataMessage(System.Web.UI.Control)">
            <summary>
            查询数据时，如果没有数据，可用本函数在页面中加入统一的提示信息
            </summary>
            <param name="PrevControl"></param>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckList(System.Web.UI.WebControls.ListControl,System.String)">
            <summary>
            检查列表框中是否有选择项，如果不是则弹出客户端提示
            </summary>
            <param name="list">列表框</param>
            <param name="name">内容的描述</param>
            <returns>是否已选</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckString(System.Web.UI.WebControls.TextBox,System.String,System.Boolean)">
            <summary>
            检查文本框中输入的是否非空字符串，如果不是则弹出客户端提示
            </summary>
            <param name="text">文本框</param>
            <param name="name">内容的描述</param>
            <param name="Required">是否必填</param>
            <returns>是否</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckString(System.Web.UI.WebControls.TextBox,System.String)">
            <summary>
            检查文本框中输入的是否非空字符串，如果不是则弹出客户端提示
            </summary>
            <param name="text">文本框</param>
            <param name="name">内容的描述</param>
            <returns>是否</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckInt32(System.Web.UI.WebControls.TextBox,System.String,System.Boolean)">
            <summary>
            检查文本框中输入的是否数字，如果不是则弹出客户端提示
            </summary>
            <param name="text">文本框</param>
            <param name="name">内容的描述</param>
            <param name="Required">是否必填</param>
            <returns>是否</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckInt32(System.Web.UI.WebControls.TextBox,System.String)">
            <summary>
            检查文本框中输入的是否数字，如果不是则弹出客户端提示
            </summary>
            <param name="text">文本框</param>
            <param name="name">内容的描述</param>
            <returns>是否</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckInt64(System.Web.UI.WebControls.TextBox,System.String,System.Boolean)">
            <summary>
            检查文本框中输入的是否数字，如果不是则弹出客户端提示
            </summary>
            <param name="text">文本框</param>
            <param name="name">内容的描述</param>
            <param name="Required">是否必填</param>
            <returns>是否</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckInt64(System.Web.UI.WebControls.TextBox,System.String)">
            <summary>
            检查文本框中输入的是否数字，如果不是则弹出客户端提示
            </summary>
            <param name="text">文本框</param>
            <param name="name">内容的描述</param>
            <returns>是否</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckMoney(System.Web.UI.WebControls.TextBox,System.String,System.Boolean)">
            <summary>
            检查文本框中输入的是否金额(元为单位)，如果不是则弹出客户端提示
            </summary>
            <param name="text">文本框</param>
            <param name="name">内容的描述</param>
            <param name="Required">是否必填</param>
            <returns>是否</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckMoney(System.Web.UI.WebControls.TextBox,System.String)">
            <summary>
            检查文本框中输入的是否金额(元为单位)，如果不是则弹出客户端提示
            </summary>
            <param name="text">文本框</param>
            <param name="name">内容的描述</param>
            <returns>是否</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckDateTime(System.Web.UI.WebControls.TextBox,System.String,System.Boolean)">
            <summary>
            检查文本框中输入的是否日期时间，如果不是则弹出客户端提示
            </summary>
            <param name="text">文本框</param>
            <param name="name">内容的描述</param>
            <param name="Required">是否必填</param>
            <returns>是否</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.CheckDateTime(System.Web.UI.WebControls.TextBox,System.String)">
            <summary>
            检查文本框中输入的是否日期时间，如果不是则弹出客户端提示
            </summary>
            <param name="text">文本框</param>
            <param name="name">内容的描述</param>
            <returns>是否</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.PageStateName(System.Web.UI.WebControls.WebControl)">
            <summary>
            得到控件状态的名称
            </summary>
            <param name="control">控件</param>
            <returns>名称</returns>
        </member>
        <member name="M:SunLibrary.Web.SunPage.PageStateSave(System.Web.UI.WebControls.WebControl)">
            <summary>
            保存控件状态
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:SunLibrary.Web.SunPage.PageStateRestore(System.Web.UI.WebControls.WebControl)">
            <summary>
            恢复控件状态
            </summary>
            <param name="control"></param>
        </member>
        <member name="P:SunLibrary.Web.SunPage.ApplicationRoot">
            <summary>
            以“/”结束的虚拟应用程序根路径
            </summary>
        </member>
        <member name="P:SunLibrary.Web.SunPage.InfoReferrerFile">
            <summary>
            上一个页面的文件名称（文件名＋扩展名）
            </summary>
        </member>
        <member name="T:SunLibrary.Web.SunService">
            <summary>
            SunService 的摘要说明。
            </summary>
        </member>
        <member name="M:SunLibrary.Web.SunService.CheckHeader(SunLibrary.Web.SunSoapHeader)">
            <summary>
            验证服务调用是否有正确的标头，若不正确抛出异常。本函数在每个WebMethod开始时调用
            </summary>
        </member>
        <member name="T:SunLibrary.Web.SunSoapExtensionConfig">
            <summary>
            Soap扩展的配置参数
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunSoapExtensionConfig.zipOutput">
            <summary>
            是否对输出进行zip压缩
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunSoapExtensionConfig.unzipInput">
            <summary>
            是否对输入进行zip解压缩
            </summary>
        </member>
        <member name="T:SunLibrary.Web.SunSoapExtension">
            <summary>
            提供Soap扩展的框架，派生类只需重载BeforeDeserialize/AfterDeserialize/BeforeSerialize/AfterSerialize函数完成特定处理
            </summary>
        </member>
        <member name="M:SunLibrary.Web.SunSoapExtension.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunSoapExtension.networkStream">
            <summary>
            定义输入输出流
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunSoapExtension.newStream">
            <summary>
            定义输入输出流
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunSoapExtension.config">
            <summary>
            保存配置属性
            </summary>
        </member>
        <member name="M:SunLibrary.Web.SunSoapExtension.ChainStream(System.IO.Stream)">
            <summary>
            访问包含 SOAP 请求或响应的内存缓冲区
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Web.SunSoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
            <summary>
            SOAP 扩展使用应用于 XML Web services 方法的属性来初始化特定于 XML Web services 方法的数据
            </summary>
            <param name="methodInfo"></param>
            <param name="attribute"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Web.SunSoapExtension.GetInitializer(System.Type)">
            <summary>
            SOAP 扩展初始化特定于实现 XML Web services 的类的数据。
            </summary>
            <param name="WebServiceType"></param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Web.SunSoapExtension.Initialize(System.Object)">
            <summary>
            SOAP 扩展使用缓存于 GetInitializer 方法中的数据初始化其自身
            </summary>
            <param name="initializer"></param>
        </member>
        <member name="M:SunLibrary.Web.SunSoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)">
            <summary>
            SOAP 扩展接收要在每个 SoapMessageStage 中处理的 SoapMessage，以实现加密解密、压缩解压缩等功能
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:SunLibrary.Web.SunSoapExtension.BeforeSerialize(System.Web.Services.Protocols.SoapMessage)">
            <summary>
            序列化 SOAP 消息 之前的处理函数
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:SunLibrary.Web.SunSoapExtension.AfterSerialize(System.Web.Services.Protocols.SoapMessage)">
            <summary>
            序列化 SOAP 消息 之后的处理函数，在这里压缩、加密
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:SunLibrary.Web.SunSoapExtension.BeforeDeserialize(System.Web.Services.Protocols.SoapMessage)">
            <summary>
            反序列化 SOAP 消息 之前的处理函数，在这里解压缩、解密
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:SunLibrary.Web.SunSoapExtension.AfterDeserialize(System.Web.Services.Protocols.SoapMessage)">
            <summary>
            反序列化 SOAP 消息 之后的处理函数
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:SunLibrary.Web.SunSoapExtensionAttribute">
            <summary>
            SOAP扩展的属性
            </summary>
        </member>
        <member name="P:SunLibrary.Web.SunSoapExtensionAttribute.ExtensionType">
            <summary>
            SOAP扩展的类型
            </summary>
        </member>
        <member name="P:SunLibrary.Web.SunSoapExtensionAttribute.Priority">
            <summary>
            SOAP扩展的优先级
            </summary>
        </member>
        <member name="P:SunLibrary.Web.SunSoapExtensionAttribute.ZipOutput">
            <summary>
            是否对输出进行压缩
            </summary>
        </member>
        <member name="P:SunLibrary.Web.SunSoapExtensionAttribute.UnzipInput">
            <summary>
            是否对输入进行解压缩
            </summary>
        </member>
        <member name="P:SunLibrary.Web.SunSoapExtensionAttribute.Config">
            <summary>
            返回SOAP扩展的配置参数
            </summary>
        </member>
        <member name="T:SunLibrary.Web.SunSoapHeader">
            <summary>
            自定义SOAP标头，可用于传递数据和验证调用方身份
            </summary>
        </member>
        <member name="M:SunLibrary.Web.SunSoapHeader.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunSoapHeader.Key">
            <summary>
            Service上配置的Key，要求调用方也必须提供相同的Key
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunSoapHeader.UserIP">
            <summary>
            客户端用户IP地址
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunSoapHeader.UserID">
            <summary>
            客户端用户账号
            </summary>
        </member>
        <member name="M:SunLibrary.Web.SunSoapHeader.KeyIsValid">
            <summary>
            检查当前Key是否和配置的值相同
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Web.SunSoapHeader.GetKey">
            <summary>
            获取配置文件中的Key值
            </summary>
            <returns></returns>
        </member>
        <member name="P:SunLibrary.Web.SunSoapHeader.KeyName">
            <summary>
            /配置文件中Key项名称
            </summary>
        </member>
        <member name="T:SunLibrary.Web.SunTableCellStyle">
            <summary>
            单元格风格
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunTableCellStyle.None">
            <summary>
            没有任何意义，可用于占位
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunTableCellStyle.BgColor">
            <summary>
            增加背景色
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunTableCellStyle.FontBold">
            <summary>
            字体加粗
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunTableCellStyle.Error">
            <summary>
            显示为错误信息风格
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunTableCellStyle.NoWrap">
            <summary>
            不允许折行
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunTableCellStyle.Pass">
            <summary>
            处理完成
            </summary>
        </member>
        <member name="F:SunLibrary.Web.SunTableCellStyle.Doing">
            <summary>
            处理中
            </summary>
        </member>
        <member name="T:SunLibrary.Web.SunTable">
            <summary>
            操作Table的函数库，主要用于用Table构建报表
            </summary>
        </member>
        <member name="M:SunLibrary.Web.SunTable.Init(System.Web.UI.WebControls.Table)">
            <summary>
            初始化
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:SunLibrary.Web.SunTable.CreateCell(System.String,System.Int32,System.Int32,System.Int32,System.Int32,SunLibrary.Web.SunTableCellStyle[])">
            <summary>
            创建一个TableCell
            </summary>
            <param name="text">文本</param>
            <param name="rowSpan">跨行数</param>
            <param name="colSpan">跨列数</param>
            <param name="hAlign">水平对齐</param>
            <param name="vAlign">垂直对齐</param>
            <param name="styles">风格</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Web.SunTable.CreateHyperCell(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,SunLibrary.Web.SunTableCellStyle[])">
            <summary>
            创建一个TableCell超链接
            </summary>
            <param name="text">文本</param>
            <param name="url">url</param>
            <param name="rowSpan">跨行数</param>
            <param name="colSpan">跨列数</param>
            <param name="hAlign">水平对齐</param>
            <param name="vAlign">垂直对齐</param>
            <param name="styles">风格</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Web.SunTable.CreatePageBreak(System.Int32)">
            <summary>
            创建一个带分页标志的行
            </summary>
            <param name="colCount">表格的列数</param>
            <returns></returns>
        </member>
        <member name="M:SunLibrary.Web.SunTable.CellMerge(System.Web.UI.WebControls.Table,System.Int32,System.Int32,System.Int32)">
            <summary>
            合并表格中指定的列，处理选定范围的行。
            </summary>
            <param name="table">表对象</param>
            <param name="colIndex">要合并的列号</param>
            <param name="fromRow">开始行</param>
            <param name="toRow">结束行</param>
        </member>
        <member name="M:SunLibrary.Web.SunTable.CellMerge(System.Web.UI.WebControls.Table,System.Int32)">
            <summary>
            合并表格中指定的列，处理所有的行。
            </summary>
            <param name="table">表对象</param>
            <param name="colIndex">要合并的列号</param>
        </member>
        <member name="T:SunLibrary.Web.SunUserControl">
            <summary>
            用户控件基类
            </summary>
        </member>
        <member name="M:SunLibrary.Web.SunUserControl.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:SunLibrary.Windows.FormProgress">
            <summary>
            提供一个通用的进度对话框
            </summary>
        </member>
        <member name="F:SunLibrary.Windows.FormProgress.CountSucc">
            <summary>
            用于每次执行成功与否的累计计数
            </summary>
        </member>
        <member name="F:SunLibrary.Windows.FormProgress.CountError">
            <summary>
            用于每次执行成功与否的累计计数
            </summary>
        </member>
        <member name="F:SunLibrary.Windows.FormProgress.CountPassed">
            <summary>
            用于每次执行成功与否的累计计数
            </summary>
        </member>
        <member name="F:SunLibrary.Windows.FormProgress.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:SunLibrary.Windows.FormProgress.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SunLibrary.Windows.FormProgress.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
        </member>
        <member name="M:SunLibrary.Windows.FormProgress.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要使用代码编辑器修改
            此方法的内容。
            </summary>
        </member>
        <member name="M:SunLibrary.Windows.FormProgress.ShowState">
            <summary>
            显示开始和结束点，以及目前位置和时间信息
            </summary>
        </member>
        <member name="M:SunLibrary.Windows.FormProgress.Start(System.Int32,System.String)">
            <summary>
            重载Start(iCount,sMessage,false,false)
            </summary>
            <param name="iCount">进度数</param>
            <param name="sMessage">提示信息</param>
        </member>
        <member name="M:SunLibrary.Windows.FormProgress.Start(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            开始显示进度
            </summary>
            <param name="iCount">进度数</param>
            <param name="sMessage">提示信息</param>
            <param name="bAllowCancel">“取消”按钮是否有效</param>
            <param name="bReportMode">是否打开详细报告模式</param>
        </member>
        <member name="M:SunLibrary.Windows.FormProgress.Stop">
            <summary>
            重载Stop(false)
            </summary>
        </member>
        <member name="M:SunLibrary.Windows.FormProgress.Stop(System.Boolean)">
            <summary>
            结束进度显示
            </summary>
            <param name="bUserConfirm">是否显示结果并等待用户按下确定按钮</param>
        </member>
        <member name="M:SunLibrary.Windows.FormProgress.Report(System.String)">
            <summary>
            重载Report(sReport,false);
            </summary>
            <param name="sReport">内容</param>
        </member>
        <member name="M:SunLibrary.Windows.FormProgress.Report(System.String,System.Boolean)">
            <summary>
            添加详细报告内容
            </summary>
            <param name="sReport">内容</param>
            <param name="bWithTime">是否加上当前时间作为前缀</param>
        </member>
        <member name="M:SunLibrary.Windows.FormProgress.ShowDemo">
            <summary>
            显示演示对话框
            </summary>
        </member>
        <member name="P:SunLibrary.Windows.FormProgress.Progress">
            <summary>
            得到一个全局的对话框对象
            </summary>
        </member>
        <member name="P:SunLibrary.Windows.FormProgress.Canceled">
            <summary>
            检查用户是否按下“取消”按钮
            </summary>
        </member>
        <member name="P:SunLibrary.Windows.FormProgress.Pos">
            <summary>
            当前进度的位置
            </summary>
        </member>
        <member name="P:SunLibrary.Windows.FormProgress.Status">
            <summary>
            当前提示信息
            </summary>
        </member>
    </members>
</doc>
