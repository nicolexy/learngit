//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ZWBatchPay_Service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BatchPay_ServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class BatchPay_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Finance_Header finance_HeaderValueField;
        
        private System.Threading.SendOrPostCallback SavePayInfoForRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundStateFromPayInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GQWSaveMoneyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GQWFetchMoneyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GQWRecoverOperOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZWDicValueByKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback FundDispatch_SumOperationCompleted;
        
        private System.Threading.SendOrPostCallback pospDispatch_SumOperationCompleted;
        
        private System.Threading.SendOrPostCallback FundPick_SumOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPayReturn_ReturnTask_10OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchBankIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FundIntCheckAndSupplementOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPayReturn_FundDispatchToAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FundDispatchToAccount_ErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPayReturn_pospDispatchToAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback pospDispatchToAccount_ErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFtrueNameByFspidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundDispatchToAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchFundBackDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateFRecordState_FundbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundbackStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatch_FundtaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundBackFnumOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateBankFum_FundbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadBatchRefundDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartBatchRefundCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBatchRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback queryDic_BPServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckVPNFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartSpecialTaskCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckVPNPayToCorporationFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankInforFromKJOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZCInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback POSCheck_InputFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCheckProgressOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGWQUserStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGWQFetchMoneyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanDoBatchRefundOperateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanDoBatchPayOperateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVipWhiteListOperationCompleted;
        
        private System.Threading.SendOrPostCallback VipWhiteListAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback VipWhiteListDelOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBatchRecord_RefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadRemitWaterFileForCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRemitWaterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundRefundStateFromPayInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePayInfoForFundRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPayReturn_ReturnTask_11OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchPayBankIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAllGH_9999OperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDirectAndCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback DirectRefundCheck_InputFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DirectRefundResult_RefundSuccOperationCompleted;
        
        private System.Threading.SendOrPostCallback DirectRefundResult_RefundFailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBank4BatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBank4BatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelPayMatchTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadRefundCompensationDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartRefundCompensationCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartKFCZmanualRefundCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRefundCompensationOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCheckAndReturnRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GiveBack_GetReturnTaskInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTwoRecord_payOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBatchRecord_payOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTwoRecord_AUTOOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGWQAdvanceFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryTaskDetail_New_DOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayTaskFileDetail_New_DOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdjustDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankAccountDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankFundProspectDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundProspectDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBankFundProspectDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBankFundProspectDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBankFundProspectDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFundProspectStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundProspectPlanByBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundProspectDataForBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundProspectDataDetailCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundProspectDataDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundProspectPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankfundProspectByFidOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRequestProspectOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestProspectForBatch_RefuseOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestProspectForBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDPBankfundprospecCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDPBankfundprospectOperationCompleted;
        
        private System.Threading.SendOrPostCallback FundprospectStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FundprospectCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoFundCollectInnerAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitFundCollectInnerAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback XinHuaSaveZWStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckXinHuaOffPayOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoCheckXinHuaOffPayOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoStartOutPayRefundCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback OutPayRefundCheck_InputFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundStartByRiskOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRefundMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRefundStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRefundState0OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendUnfinishRiskRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback RiskRefundNoticeMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchRefundSingleCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchRefundRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchRefundRejectOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchRefundStartCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GiveBack_ReturnDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustToFault_GiveBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustToSucc_GiveBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCanUpdateSumNewTask_ZJDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUpdateSumNewTask_ZJDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSumNewTask_ZJDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewTask_ZJDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewPayTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskAutoCheckStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTaskAutoCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewRefundOtherTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNoticeTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryTaskDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundCheckStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryTaskDetail_DOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasRight_DOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSQRefundFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayTaskFileDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayTaskFileFailRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanViewFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayTaskCheckDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayTaskCheckDetail_DOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectPayTaskDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectPayTaskDetailCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaskGoNextStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaskGoNextStatus_ZJDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback JsonBatchOpBindAppIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundInterestforwardDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GiveBackPayLike3014OperationCompleted;
        
        private System.Threading.SendOrPostCallback GiveBackReturnLike3014OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePayCheckOrResultFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditCardCheckBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundInterestforwardDataByFProspectIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaskGoBackStatus_ZJDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaskGoBackStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaskGoBackReturnStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaskGoNextStatus_DOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaskGoBackStatus_DOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchDirectPayOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaskCheckTotalInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EncodeFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateADirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DecodeFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaskCheckFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayTaskChartDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaskUploadResultFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaskResultFileInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankUserCheckDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchStateFromTaskIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistNHRefundTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartNHAutoRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnRefundStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback HangRefundFailToOtherOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthorizeRefundBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayRefundBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeRefundToFailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetBankUserCheckDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRefundBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback EffectRefundStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback EffectRefundStatus_newOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRefundPayInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRefundParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRefundParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback SQSLike3113BankTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanAdjustRefundRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchAdjustRefundRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanStartRefundOtherCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDataForUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadICBCParamDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadICBCPayInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartRefundOtherCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartRefundOtherCheckNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustRefundRecordProxyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustRefundRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustRefundRecord_newOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_Adjust_ICBC_TaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadFileCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownFileCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshBatchInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartDoTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMerchantPayMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback MerchantPayMemoAttAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback MerchantPayMemoModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback MerchantPayMemoDelOperationCompleted;
        
        private System.Threading.SendOrPostCallback Batch_ReturnTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXYKConnOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaskCheckFile_VPNOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadBatchTransferDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartBatchTransferCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBatchC2CTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadHONGBAODataOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartHONGBAOCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckHONGBAOOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRefundOtherMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRefundInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SumGiveBack4PayOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckReturnticketOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadReturnTicketFileForCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadBatchLogOnUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchLogOnUser_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_IsBatchCheckedOperationCompleted;
        
        private System.Threading.SendOrPostCallback XYK_IsBatchCheckedOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_IcbcCheckRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_CheckAllRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_UploadTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_QueryTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_CanCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback XYK_CanCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback Tplus0_CanCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback Payfund_CanCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_CanAdjustOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_CanUploadTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_CanQueryTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_Adjust2SuccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_CanPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback WS_ModifyRefuseOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_InitGridOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_InitGrid_BOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_InitGrid_VOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_InitGrid_OOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_InitGrid_XOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_InitGrid_FOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_InitGrid_POperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_InitGrid_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundOther_InitGrid_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CanVisibleOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CanVisible_BOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CanVisible_VOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CanVisible_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_GetErrorMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_SixCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CheckSnapFinishOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CheckTaskFinishOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CheckFinish11OperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CheckBankFinishOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CanReturnTask_SameCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPay_CanReturnTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPayReturn_ShowButtonOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPayReturn_ShowButton_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatetbatchpayasknewStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPayReturn_ShowDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPayReturn_ShowData_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundOther_ShowDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatPayReturn_CreateReturnTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileList_RefreshDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseAdjust_GetTdeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowDetail_GetCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnTicket_BindDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnTicket_BindData_FileOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartReturnTicket_FileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowDetail_BindDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankIO_GetFileListOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankIO_CreateAllFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankIO_CreateAllFile_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback BankRefundIO_CreateAllFile_OtherOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankIO_InputFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertHandleRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertHandleRecordXOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBatchStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrPhaseUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPhaseNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankRoll_UploadCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankRoll_UploadCancel_ChargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankFuncUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFuncAllBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFuncUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPhaseTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustToFaultOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustToFault_HangOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustToSuccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanStartAdjustOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanStartAdjust_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback CanStartTask_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSpmRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartCreateTask_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback CanStartHangDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHandleResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateToFinishOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTwoRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTwoRecord_SubaccOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpiltBankOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoCheckTwoRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoCheckTwoRecord_SubaccOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBatchRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowBatpayMainBtOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowBatpayMainBt_BOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowBatpayMainBt_VOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowBatpayMainBt_OOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowBatpayMainBt_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankIDFromBatchNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankIO_CreatePayTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankIO_CreatePayTask_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRefundTask_OtherOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankIO_InputFirstFinishOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankIO_InputSecondFinishOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankIO_PayTaskFinishOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanRollBackPayTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankIO_UploadCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankIO_PayTaskCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundOther_PayTaskCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankIO_HandleExceptionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnTicketDetail_BindDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayTaskDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback TokenHang_ReverseHandleOperationCompleted;
        
        private System.Threading.SendOrPostCallback HaoYe_UploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback HaoYe_CanStartCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback HaoYe_GetMondyOperationCompleted;
        
        private System.Threading.SendOrPostCallback HaoYe_GetBatchListOperationCompleted;
        
        private System.Threading.SendOrPostCallback HaoYe_GetAllBatchListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMedFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayState_ROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundState_OtherOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadReturnTicketFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayBankCountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageCountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankCountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPackageBankTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetBankBankTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GiveBack_GetBatchInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GiveBack_InputFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BatchPay_Service() {
            this.Url = global::Properties.Settings.Default.FINANCE_SERVICE_ZWBatchPay_Service_BatchPay_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Finance_Header Finance_HeaderValue {
            get {
                return this.finance_HeaderValueField;
            }
            set {
                this.finance_HeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SavePayInfoForRefundCompletedEventHandler SavePayInfoForRefundCompleted;
        
        /// <remarks/>
        public event GetRefundStateFromPayInfoCompletedEventHandler GetRefundStateFromPayInfoCompleted;
        
        /// <remarks/>
        public event GQWSaveMoneyCompletedEventHandler GQWSaveMoneyCompleted;
        
        /// <remarks/>
        public event GQWFetchMoneyCompletedEventHandler GQWFetchMoneyCompleted;
        
        /// <remarks/>
        public event GQWRecoverOperCompletedEventHandler GQWRecoverOperCompleted;
        
        /// <remarks/>
        public event GetZWDicValueByKeyCompletedEventHandler GetZWDicValueByKeyCompleted;
        
        /// <remarks/>
        public event QueryBankNameCompletedEventHandler QueryBankNameCompleted;
        
        /// <remarks/>
        public event FundDispatch_SumCompletedEventHandler FundDispatch_SumCompleted;
        
        /// <remarks/>
        public event pospDispatch_SumCompletedEventHandler pospDispatch_SumCompleted;
        
        /// <remarks/>
        public event FundPick_SumCompletedEventHandler FundPick_SumCompleted;
        
        /// <remarks/>
        public event BatPayReturn_ReturnTask_10CompletedEventHandler BatPayReturn_ReturnTask_10Completed;
        
        /// <remarks/>
        public event GetBatchBankIDCompletedEventHandler GetBatchBankIDCompleted;
        
        /// <remarks/>
        public event FundIntCheckAndSupplementCompletedEventHandler FundIntCheckAndSupplementCompleted;
        
        /// <remarks/>
        public event BatPayReturn_FundDispatchToAccountCompletedEventHandler BatPayReturn_FundDispatchToAccountCompleted;
        
        /// <remarks/>
        public event FundDispatchToAccount_ErrorCompletedEventHandler FundDispatchToAccount_ErrorCompleted;
        
        /// <remarks/>
        public event BatPayReturn_pospDispatchToAccountCompletedEventHandler BatPayReturn_pospDispatchToAccountCompleted;
        
        /// <remarks/>
        public event pospDispatchToAccount_ErrorCompletedEventHandler pospDispatchToAccount_ErrorCompleted;
        
        /// <remarks/>
        public event GetFtrueNameByFspidCompletedEventHandler GetFtrueNameByFspidCompleted;
        
        /// <remarks/>
        public event GetFundDispatchToAccountCompletedEventHandler GetFundDispatchToAccountCompleted;
        
        /// <remarks/>
        public event GetBatchFundBackDataCompletedEventHandler GetBatchFundBackDataCompleted;
        
        /// <remarks/>
        public event updateFRecordState_FundbackCompletedEventHandler updateFRecordState_FundbackCompleted;
        
        /// <remarks/>
        public event GetFundbackStateCompletedEventHandler GetFundbackStateCompleted;
        
        /// <remarks/>
        public event GetBatch_FundtaskCompletedEventHandler GetBatch_FundtaskCompleted;
        
        /// <remarks/>
        public event GetFundBackFnumCompletedEventHandler GetFundBackFnumCompleted;
        
        /// <remarks/>
        public event updateBankFum_FundbackCompletedEventHandler updateBankFum_FundbackCompleted;
        
        /// <remarks/>
        public event UploadBatchRefundDataCompletedEventHandler UploadBatchRefundDataCompleted;
        
        /// <remarks/>
        public event StartBatchRefundCheckCompletedEventHandler StartBatchRefundCheckCompleted;
        
        /// <remarks/>
        public event CheckBatchRefundCompletedEventHandler CheckBatchRefundCompleted;
        
        /// <remarks/>
        public event queryDic_BPServiceCompletedEventHandler queryDic_BPServiceCompleted;
        
        /// <remarks/>
        public event CheckVPNFileCompletedEventHandler CheckVPNFileCompleted;
        
        /// <remarks/>
        public event StartSpecialTaskCheckCompletedEventHandler StartSpecialTaskCheckCompleted;
        
        /// <remarks/>
        public event CheckVPNPayToCorporationFileCompletedEventHandler CheckVPNPayToCorporationFileCompleted;
        
        /// <remarks/>
        public event GetBankInforFromKJCompletedEventHandler GetBankInforFromKJCompleted;
        
        /// <remarks/>
        public event GetZCInfoCompletedEventHandler GetZCInfoCompleted;
        
        /// <remarks/>
        public event POSCheck_InputFileCompletedEventHandler POSCheck_InputFileCompleted;
        
        /// <remarks/>
        public event GetCheckProgressCompletedEventHandler GetCheckProgressCompleted;
        
        /// <remarks/>
        public event UpdateGWQUserStateCompletedEventHandler UpdateGWQUserStateCompleted;
        
        /// <remarks/>
        public event UpdateGWQFetchMoneyCompletedEventHandler UpdateGWQFetchMoneyCompleted;
        
        /// <remarks/>
        public event CanDoBatchRefundOperateCompletedEventHandler CanDoBatchRefundOperateCompleted;
        
        /// <remarks/>
        public event CanDoBatchPayOperateCompletedEventHandler CanDoBatchPayOperateCompleted;
        
        /// <remarks/>
        public event GetVipWhiteListCompletedEventHandler GetVipWhiteListCompleted;
        
        /// <remarks/>
        public event VipWhiteListAddCompletedEventHandler VipWhiteListAddCompleted;
        
        /// <remarks/>
        public event VipWhiteListDelCompletedEventHandler VipWhiteListDelCompleted;
        
        /// <remarks/>
        public event CheckBatchRecord_RefundCompletedEventHandler CheckBatchRecord_RefundCompleted;
        
        /// <remarks/>
        public event UploadRemitWaterFileForCheckCompletedEventHandler UploadRemitWaterFileForCheckCompleted;
        
        /// <remarks/>
        public event CheckRemitWaterCompletedEventHandler CheckRemitWaterCompleted;
        
        /// <remarks/>
        public event GetFundRefundStateFromPayInfoCompletedEventHandler GetFundRefundStateFromPayInfoCompleted;
        
        /// <remarks/>
        public event SavePayInfoForFundRefundCompletedEventHandler SavePayInfoForFundRefundCompleted;
        
        /// <remarks/>
        public event BatPayReturn_ReturnTask_11CompletedEventHandler BatPayReturn_ReturnTask_11Completed;
        
        /// <remarks/>
        public event GetBatchPayBankIdCompletedEventHandler GetBatchPayBankIdCompleted;
        
        /// <remarks/>
        public event IsAllGH_9999CompletedEventHandler IsAllGH_9999Completed;
        
        /// <remarks/>
        public event IsDirectAndCheckCompletedEventHandler IsDirectAndCheckCompleted;
        
        /// <remarks/>
        public event DirectRefundCheck_InputFileCompletedEventHandler DirectRefundCheck_InputFileCompleted;
        
        /// <remarks/>
        public event DirectRefundResult_RefundSuccCompletedEventHandler DirectRefundResult_RefundSuccCompleted;
        
        /// <remarks/>
        public event DirectRefundResult_RefundFailCompletedEventHandler DirectRefundResult_RefundFailCompleted;
        
        /// <remarks/>
        public event InsertBank4BatchCompletedEventHandler InsertBank4BatchCompleted;
        
        /// <remarks/>
        public event DeleteBank4BatchCompletedEventHandler DeleteBank4BatchCompleted;
        
        /// <remarks/>
        public event DelPayMatchTaskCompletedEventHandler DelPayMatchTaskCompleted;
        
        /// <remarks/>
        public event UploadRefundCompensationDataCompletedEventHandler UploadRefundCompensationDataCompleted;
        
        /// <remarks/>
        public event StartRefundCompensationCheckCompletedEventHandler StartRefundCompensationCheckCompleted;
        
        /// <remarks/>
        public event StartKFCZmanualRefundCheckCompletedEventHandler StartKFCZmanualRefundCheckCompleted;
        
        /// <remarks/>
        public event CheckRefundCompensationCompletedEventHandler CheckRefundCompensationCompleted;
        
        /// <remarks/>
        public event QueryCheckAndReturnRateCompletedEventHandler QueryCheckAndReturnRateCompleted;
        
        /// <remarks/>
        public event GiveBack_GetReturnTaskInfoCompletedEventHandler GiveBack_GetReturnTaskInfoCompleted;
        
        /// <remarks/>
        public event CheckTwoRecord_payCompletedEventHandler CheckTwoRecord_payCompleted;
        
        /// <remarks/>
        public event CheckBatchRecord_payCompletedEventHandler CheckBatchRecord_payCompleted;
        
        /// <remarks/>
        public event CheckTwoRecord_AUTOCompletedEventHandler CheckTwoRecord_AUTOCompleted;
        
        /// <remarks/>
        public event UpdateGWQAdvanceFlagCompletedEventHandler UpdateGWQAdvanceFlagCompleted;
        
        /// <remarks/>
        public event GetQueryTaskDetail_New_DCompletedEventHandler GetQueryTaskDetail_New_DCompleted;
        
        /// <remarks/>
        public event GetPayTaskFileDetail_New_DCompletedEventHandler GetPayTaskFileDetail_New_DCompleted;
        
        /// <remarks/>
        public event GetAdjustDetailCompletedEventHandler GetAdjustDetailCompleted;
        
        /// <remarks/>
        public event GetBankAccountDataCompletedEventHandler GetBankAccountDataCompleted;
        
        /// <remarks/>
        public event GetBankFundProspectDataCompletedEventHandler GetBankFundProspectDataCompleted;
        
        /// <remarks/>
        public event GetFundProspectDataCompletedEventHandler GetFundProspectDataCompleted;
        
        /// <remarks/>
        public event InsertBankFundProspectDataCompletedEventHandler InsertBankFundProspectDataCompleted;
        
        /// <remarks/>
        public event UpdateBankFundProspectDataCompletedEventHandler UpdateBankFundProspectDataCompleted;
        
        /// <remarks/>
        public event DeleteBankFundProspectDataCompletedEventHandler DeleteBankFundProspectDataCompleted;
        
        /// <remarks/>
        public event UpdateFundProspectStateCompletedEventHandler UpdateFundProspectStateCompleted;
        
        /// <remarks/>
        public event GetFundProspectPlanByBatchCompletedEventHandler GetFundProspectPlanByBatchCompleted;
        
        /// <remarks/>
        public event GetFundProspectDataForBatchCompletedEventHandler GetFundProspectDataForBatchCompleted;
        
        /// <remarks/>
        public event GetFundProspectDataDetailCountCompletedEventHandler GetFundProspectDataDetailCountCompleted;
        
        /// <remarks/>
        public event GetFundProspectDataDetailCompletedEventHandler GetFundProspectDataDetailCompleted;
        
        /// <remarks/>
        public event GetFundProspectPlanCompletedEventHandler GetFundProspectPlanCompleted;
        
        /// <remarks/>
        public event GetBankfundProspectByFidCompletedEventHandler GetBankfundProspectByFidCompleted;
        
        /// <remarks/>
        public event UpdateRequestProspectCompletedEventHandler UpdateRequestProspectCompleted;
        
        /// <remarks/>
        public event RequestProspectForBatch_RefuseCompletedEventHandler RequestProspectForBatch_RefuseCompleted;
        
        /// <remarks/>
        public event RequestProspectForBatchCompletedEventHandler RequestProspectForBatchCompleted;
        
        /// <remarks/>
        public event GetDPBankfundprospecCountCompletedEventHandler GetDPBankfundprospecCountCompleted;
        
        /// <remarks/>
        public event GetDPBankfundprospectCompletedEventHandler GetDPBankfundprospectCompleted;
        
        /// <remarks/>
        public event FundprospectStateCompletedEventHandler FundprospectStateCompleted;
        
        /// <remarks/>
        public event FundprospectCancelCompletedEventHandler FundprospectCancelCompleted;
        
        /// <remarks/>
        public event AutoFundCollectInnerAccountCompletedEventHandler AutoFundCollectInnerAccountCompleted;
        
        /// <remarks/>
        public event CommitFundCollectInnerAccountCompletedEventHandler CommitFundCollectInnerAccountCompleted;
        
        /// <remarks/>
        public event XinHuaSaveZWStateCompletedEventHandler XinHuaSaveZWStateCompleted;
        
        /// <remarks/>
        public event CheckXinHuaOffPayCompletedEventHandler CheckXinHuaOffPayCompleted;
        
        /// <remarks/>
        public event AutoCheckXinHuaOffPayCompletedEventHandler AutoCheckXinHuaOffPayCompleted;
        
        /// <remarks/>
        public event AutoStartOutPayRefundCheckCompletedEventHandler AutoStartOutPayRefundCheckCompleted;
        
        /// <remarks/>
        public event OutPayRefundCheck_InputFileCompletedEventHandler OutPayRefundCheck_InputFileCompleted;
        
        /// <remarks/>
        public event RefundStartByRiskCompletedEventHandler RefundStartByRiskCompleted;
        
        /// <remarks/>
        public event SendRefundMailCompletedEventHandler SendRefundMailCompleted;
        
        /// <remarks/>
        public event QueryRefundStateCompletedEventHandler QueryRefundStateCompleted;
        
        /// <remarks/>
        public event QueryRefundState0CompletedEventHandler QueryRefundState0Completed;
        
        /// <remarks/>
        public event SendUnfinishRiskRefundCompletedEventHandler SendUnfinishRiskRefundCompleted;
        
        /// <remarks/>
        public event RiskRefundNoticeMailCompletedEventHandler RiskRefundNoticeMailCompleted;
        
        /// <remarks/>
        public event BatchRefundSingleCheckCompletedEventHandler BatchRefundSingleCheckCompleted;
        
        /// <remarks/>
        public event BatchRefundRequestCompletedEventHandler BatchRefundRequestCompleted;
        
        /// <remarks/>
        public event BatchRefundRejectCompletedEventHandler BatchRefundRejectCompleted;
        
        /// <remarks/>
        public event BatchRefundStartCheckCompletedEventHandler BatchRefundStartCheckCompleted;
        
        /// <remarks/>
        public event GiveBack_ReturnDetailCompletedEventHandler GiveBack_ReturnDetailCompleted;
        
        /// <remarks/>
        public event AdjustToFault_GiveBackCompletedEventHandler AdjustToFault_GiveBackCompleted;
        
        /// <remarks/>
        public event AdjustToSucc_GiveBackCompletedEventHandler AdjustToSucc_GiveBackCompleted;
        
        /// <remarks/>
        public event IsCanUpdateSumNewTask_ZJDBCompletedEventHandler IsCanUpdateSumNewTask_ZJDBCompleted;
        
        /// <remarks/>
        public event IsUpdateSumNewTask_ZJDBCompletedEventHandler IsUpdateSumNewTask_ZJDBCompleted;
        
        /// <remarks/>
        public event UpdateSumNewTask_ZJDBCompletedEventHandler UpdateSumNewTask_ZJDBCompleted;
        
        /// <remarks/>
        public event CreateNewTask_ZJDBCompletedEventHandler CreateNewTask_ZJDBCompleted;
        
        /// <remarks/>
        public event CreateNewPayTaskCompletedEventHandler CreateNewPayTaskCompleted;
        
        /// <remarks/>
        public event GetTaskAutoCheckStateCompletedEventHandler GetTaskAutoCheckStateCompleted;
        
        /// <remarks/>
        public event InsertTaskAutoCheckCompletedEventHandler InsertTaskAutoCheckCompleted;
        
        /// <remarks/>
        public event CreateNewRefundOtherTaskCompletedEventHandler CreateNewRefundOtherTaskCompleted;
        
        /// <remarks/>
        public event GetNewTaskCompletedEventHandler GetNewTaskCompleted;
        
        /// <remarks/>
        public event GetNoticeTaskCompletedEventHandler GetNoticeTaskCompleted;
        
        /// <remarks/>
        public event GetQueryTaskCompletedEventHandler GetQueryTaskCompleted;
        
        /// <remarks/>
        public event GetQueryTaskDetailCompletedEventHandler GetQueryTaskDetailCompleted;
        
        /// <remarks/>
        public event GetRefundCheckStateCompletedEventHandler GetRefundCheckStateCompleted;
        
        /// <remarks/>
        public event GetQueryTaskDetail_DCompletedEventHandler GetQueryTaskDetail_DCompleted;
        
        /// <remarks/>
        public event HasRightCompletedEventHandler HasRightCompleted;
        
        /// <remarks/>
        public event HasRight_DCompletedEventHandler HasRight_DCompleted;
        
        /// <remarks/>
        public event SendSQRefundFileCompletedEventHandler SendSQRefundFileCompleted;
        
        /// <remarks/>
        public event GetPayTaskFileDetailCompletedEventHandler GetPayTaskFileDetailCompleted;
        
        /// <remarks/>
        public event GetPayTaskFileFailRateCompletedEventHandler GetPayTaskFileFailRateCompleted;
        
        /// <remarks/>
        public event CanViewFileCompletedEventHandler CanViewFileCompleted;
        
        /// <remarks/>
        public event GetPayTaskCheckDetailCompletedEventHandler GetPayTaskCheckDetailCompleted;
        
        /// <remarks/>
        public event GetPayTaskCheckDetail_DCompletedEventHandler GetPayTaskCheckDetail_DCompleted;
        
        /// <remarks/>
        public event GetDirectPayTaskDetailCompletedEventHandler GetDirectPayTaskDetailCompleted;
        
        /// <remarks/>
        public event GetDirectPayTaskDetailCountCompletedEventHandler GetDirectPayTaskDetailCountCompleted;
        
        /// <remarks/>
        public event TaskGoNextStatusCompletedEventHandler TaskGoNextStatusCompleted;
        
        /// <remarks/>
        public event TaskGoNextStatus_ZJDBCompletedEventHandler TaskGoNextStatus_ZJDBCompleted;
        
        /// <remarks/>
        public event JsonBatchOpBindAppIdCompletedEventHandler JsonBatchOpBindAppIdCompleted;
        
        /// <remarks/>
        public event GetFundInterestforwardDataCompletedEventHandler GetFundInterestforwardDataCompleted;
        
        /// <remarks/>
        public event GiveBackPayLike3014CompletedEventHandler GiveBackPayLike3014Completed;
        
        /// <remarks/>
        public event GiveBackReturnLike3014CompletedEventHandler GiveBackReturnLike3014Completed;
        
        /// <remarks/>
        public event CreatePayCheckOrResultFileCompletedEventHandler CreatePayCheckOrResultFileCompleted;
        
        /// <remarks/>
        public event GetCreditCardCheckBillCompletedEventHandler GetCreditCardCheckBillCompleted;
        
        /// <remarks/>
        public event GetFundInterestforwardDataByFProspectIdCompletedEventHandler GetFundInterestforwardDataByFProspectIdCompleted;
        
        /// <remarks/>
        public event TaskGoBackStatus_ZJDBCompletedEventHandler TaskGoBackStatus_ZJDBCompleted;
        
        /// <remarks/>
        public event TaskGoBackStatusCompletedEventHandler TaskGoBackStatusCompleted;
        
        /// <remarks/>
        public event TaskGoBackReturnStatusCompletedEventHandler TaskGoBackReturnStatusCompleted;
        
        /// <remarks/>
        public event TaskGoNextStatus_DCompletedEventHandler TaskGoNextStatus_DCompleted;
        
        /// <remarks/>
        public event TaskGoBackStatus_DCompletedEventHandler TaskGoBackStatus_DCompleted;
        
        /// <remarks/>
        public event BatchDirectPayCompletedEventHandler BatchDirectPayCompleted;
        
        /// <remarks/>
        public event TaskCheckTotalInfoCompletedEventHandler TaskCheckTotalInfoCompleted;
        
        /// <remarks/>
        public event EncodeFileCompletedEventHandler EncodeFileCompleted;
        
        /// <remarks/>
        public event CreateADirectoryCompletedEventHandler CreateADirectoryCompleted;
        
        /// <remarks/>
        public event DecodeFileCompletedEventHandler DecodeFileCompleted;
        
        /// <remarks/>
        public event TaskCheckFileInfoCompletedEventHandler TaskCheckFileInfoCompleted;
        
        /// <remarks/>
        public event GetPayTaskChartDetailCompletedEventHandler GetPayTaskChartDetailCompleted;
        
        /// <remarks/>
        public event TaskUploadResultFileCompletedEventHandler TaskUploadResultFileCompleted;
        
        /// <remarks/>
        public event TaskResultFileInsertCompletedEventHandler TaskResultFileInsertCompleted;
        
        /// <remarks/>
        public event GetBankUserCheckDetailCompletedEventHandler GetBankUserCheckDetailCompleted;
        
        /// <remarks/>
        public event GetBatchStateFromTaskIDCompletedEventHandler GetBatchStateFromTaskIDCompleted;
        
        /// <remarks/>
        public event ExistNHRefundTaskCompletedEventHandler ExistNHRefundTaskCompleted;
        
        /// <remarks/>
        public event StartNHAutoRefundCompletedEventHandler StartNHAutoRefundCompleted;
        
        /// <remarks/>
        public event ReturnRefundStateCompletedEventHandler ReturnRefundStateCompleted;
        
        /// <remarks/>
        public event HangRefundFailToOtherCompletedEventHandler HangRefundFailToOtherCompleted;
        
        /// <remarks/>
        public event AuthorizeRefundBankCompletedEventHandler AuthorizeRefundBankCompleted;
        
        /// <remarks/>
        public event PayRefundBankCompletedEventHandler PayRefundBankCompleted;
        
        /// <remarks/>
        public event ChangeRefundToFailCompletedEventHandler ChangeRefundToFailCompleted;
        
        /// <remarks/>
        public event SetBankUserCheckDetailCompletedEventHandler SetBankUserCheckDetailCompleted;
        
        /// <remarks/>
        public event GetAllRefundBankCompletedEventHandler GetAllRefundBankCompleted;
        
        /// <remarks/>
        public event EffectRefundStatusCompletedEventHandler EffectRefundStatusCompleted;
        
        /// <remarks/>
        public event EffectRefundStatus_newCompletedEventHandler EffectRefundStatus_newCompleted;
        
        /// <remarks/>
        public event SetRefundPayInfoCompletedEventHandler SetRefundPayInfoCompleted;
        
        /// <remarks/>
        public event SetRefundParamCompletedEventHandler SetRefundParamCompleted;
        
        /// <remarks/>
        public event SaveRefundParamCompletedEventHandler SaveRefundParamCompleted;
        
        /// <remarks/>
        public event SQSLike3113BankTypeCompletedEventHandler SQSLike3113BankTypeCompleted;
        
        /// <remarks/>
        public event CanAdjustRefundRecordCompletedEventHandler CanAdjustRefundRecordCompleted;
        
        /// <remarks/>
        public event BatchAdjustRefundRecordCompletedEventHandler BatchAdjustRefundRecordCompleted;
        
        /// <remarks/>
        public event CanStartRefundOtherCheckCompletedEventHandler CanStartRefundOtherCheckCompleted;
        
        /// <remarks/>
        public event CheckDataForUploadCompletedEventHandler CheckDataForUploadCompleted;
        
        /// <remarks/>
        public event UploadICBCParamDataCompletedEventHandler UploadICBCParamDataCompleted;
        
        /// <remarks/>
        public event UploadICBCPayInfoCompletedEventHandler UploadICBCPayInfoCompleted;
        
        /// <remarks/>
        public event StartRefundOtherCheckCompletedEventHandler StartRefundOtherCheckCompleted;
        
        /// <remarks/>
        public event StartRefundOtherCheckNewCompletedEventHandler StartRefundOtherCheckNewCompleted;
        
        /// <remarks/>
        public event AdjustRefundRecordProxyCompletedEventHandler AdjustRefundRecordProxyCompleted;
        
        /// <remarks/>
        public event AdjustRefundRecordCompletedEventHandler AdjustRefundRecordCompleted;
        
        /// <remarks/>
        public event AdjustRefundRecord_newCompletedEventHandler AdjustRefundRecord_newCompleted;
        
        /// <remarks/>
        public event WS_Adjust_ICBC_TaskCompletedEventHandler WS_Adjust_ICBC_TaskCompleted;
        
        /// <remarks/>
        public event UploadFileCountCompletedEventHandler UploadFileCountCompleted;
        
        /// <remarks/>
        public event ReadFileCountCompletedEventHandler ReadFileCountCompleted;
        
        /// <remarks/>
        public event DownFileCountCompletedEventHandler DownFileCountCompleted;
        
        /// <remarks/>
        public event RefreshBatchInfoCompletedEventHandler RefreshBatchInfoCompleted;
        
        /// <remarks/>
        public event StartDoTaskCompletedEventHandler StartDoTaskCompleted;
        
        /// <remarks/>
        public event GetMerchantPayMemoCompletedEventHandler GetMerchantPayMemoCompleted;
        
        /// <remarks/>
        public event MerchantPayMemoAttAddCompletedEventHandler MerchantPayMemoAttAddCompleted;
        
        /// <remarks/>
        public event MerchantPayMemoModifyCompletedEventHandler MerchantPayMemoModifyCompleted;
        
        /// <remarks/>
        public event MerchantPayMemoDelCompletedEventHandler MerchantPayMemoDelCompleted;
        
        /// <remarks/>
        public event Batch_ReturnTaskCompletedEventHandler Batch_ReturnTaskCompleted;
        
        /// <remarks/>
        public event GetXYKConnCompletedEventHandler GetXYKConnCompleted;
        
        /// <remarks/>
        public event TaskCheckFile_VPNCompletedEventHandler TaskCheckFile_VPNCompleted;
        
        /// <remarks/>
        public event UploadBatchTransferDataCompletedEventHandler UploadBatchTransferDataCompleted;
        
        /// <remarks/>
        public event StartBatchTransferCheckCompletedEventHandler StartBatchTransferCheckCompleted;
        
        /// <remarks/>
        public event CheckBatchC2CTransferCompletedEventHandler CheckBatchC2CTransferCompleted;
        
        /// <remarks/>
        public event UploadHONGBAODataCompletedEventHandler UploadHONGBAODataCompleted;
        
        /// <remarks/>
        public event StartHONGBAOCheckCompletedEventHandler StartHONGBAOCheckCompleted;
        
        /// <remarks/>
        public event CheckHONGBAOCompletedEventHandler CheckHONGBAOCompleted;
        
        /// <remarks/>
        public event UpdateRefundOtherMemoCompletedEventHandler UpdateRefundOtherMemoCompleted;
        
        /// <remarks/>
        public event UpdateRefundInfoCompletedEventHandler UpdateRefundInfoCompleted;
        
        /// <remarks/>
        public event SumGiveBack4PayCompletedEventHandler SumGiveBack4PayCompleted;
        
        /// <remarks/>
        public event CheckReturnticketCompletedEventHandler CheckReturnticketCompleted;
        
        /// <remarks/>
        public event UploadReturnTicketFileForCheckCompletedEventHandler UploadReturnTicketFileForCheckCompleted;
        
        /// <remarks/>
        public event UploadBatchLogOnUserCompletedEventHandler UploadBatchLogOnUserCompleted;
        
        /// <remarks/>
        public event BatchLogOnUser_DetailCompletedEventHandler BatchLogOnUser_DetailCompleted;
        
        /// <remarks/>
        public event WS_IsBatchCheckedCompletedEventHandler WS_IsBatchCheckedCompleted;
        
        /// <remarks/>
        public event XYK_IsBatchCheckedCompletedEventHandler XYK_IsBatchCheckedCompleted;
        
        /// <remarks/>
        public event WS_IcbcCheckRecCompletedEventHandler WS_IcbcCheckRecCompleted;
        
        /// <remarks/>
        public event WS_CheckAllRecCompletedEventHandler WS_CheckAllRecCompleted;
        
        /// <remarks/>
        public event WS_UploadTaskCompletedEventHandler WS_UploadTaskCompleted;
        
        /// <remarks/>
        public event WS_QueryTaskCompletedEventHandler WS_QueryTaskCompleted;
        
        /// <remarks/>
        public event WS_CanCheckCompletedEventHandler WS_CanCheckCompleted;
        
        /// <remarks/>
        public event XYK_CanCheckCompletedEventHandler XYK_CanCheckCompleted;
        
        /// <remarks/>
        public event Tplus0_CanCheckCompletedEventHandler Tplus0_CanCheckCompleted;
        
        /// <remarks/>
        public event Payfund_CanCheckCompletedEventHandler Payfund_CanCheckCompleted;
        
        /// <remarks/>
        public event WS_CanAdjustCompletedEventHandler WS_CanAdjustCompleted;
        
        /// <remarks/>
        public event WS_CanUploadTaskCompletedEventHandler WS_CanUploadTaskCompleted;
        
        /// <remarks/>
        public event WS_CanQueryTaskCompletedEventHandler WS_CanQueryTaskCompleted;
        
        /// <remarks/>
        public event WS_Adjust2SuccessCompletedEventHandler WS_Adjust2SuccessCompleted;
        
        /// <remarks/>
        public event WS_CanPassCompletedEventHandler WS_CanPassCompleted;
        
        /// <remarks/>
        public event WS_ModifyRefuseCompletedEventHandler WS_ModifyRefuseCompleted;
        
        /// <remarks/>
        public event BatPay_InitGridCompletedEventHandler BatPay_InitGridCompleted;
        
        /// <remarks/>
        public event BatPay_InitGrid_BCompletedEventHandler BatPay_InitGrid_BCompleted;
        
        /// <remarks/>
        public event BatPay_InitGrid_VCompletedEventHandler BatPay_InitGrid_VCompleted;
        
        /// <remarks/>
        public event BatPay_InitGrid_OCompletedEventHandler BatPay_InitGrid_OCompleted;
        
        /// <remarks/>
        public event BatPay_InitGrid_XCompletedEventHandler BatPay_InitGrid_XCompleted;
        
        /// <remarks/>
        public event BatPay_InitGrid_FCompletedEventHandler BatPay_InitGrid_FCompleted;
        
        /// <remarks/>
        public event BatPay_InitGrid_PCompletedEventHandler BatPay_InitGrid_PCompleted;
        
        /// <remarks/>
        public event BatPay_InitGrid_RCompletedEventHandler BatPay_InitGrid_RCompleted;
        
        /// <remarks/>
        public event RefundOther_InitGrid_RCompletedEventHandler RefundOther_InitGrid_RCompleted;
        
        /// <remarks/>
        public event BatPay_CanVisibleCompletedEventHandler BatPay_CanVisibleCompleted;
        
        /// <remarks/>
        public event BatPay_CanVisible_BCompletedEventHandler BatPay_CanVisible_BCompleted;
        
        /// <remarks/>
        public event BatPay_CanVisible_VCompletedEventHandler BatPay_CanVisible_VCompleted;
        
        /// <remarks/>
        public event BatPay_CanVisible_RCompletedEventHandler BatPay_CanVisible_RCompleted;
        
        /// <remarks/>
        public event BatPay_GetErrorMsgCompletedEventHandler BatPay_GetErrorMsgCompleted;
        
        /// <remarks/>
        public event BatPay_SixCheckCompletedEventHandler BatPay_SixCheckCompleted;
        
        /// <remarks/>
        public event BatPay_CheckSnapFinishCompletedEventHandler BatPay_CheckSnapFinishCompleted;
        
        /// <remarks/>
        public event BatPay_CheckTaskFinishCompletedEventHandler BatPay_CheckTaskFinishCompleted;
        
        /// <remarks/>
        public event BatPay_CheckFinish11CompletedEventHandler BatPay_CheckFinish11Completed;
        
        /// <remarks/>
        public event BatPay_CheckBankFinishCompletedEventHandler BatPay_CheckBankFinishCompleted;
        
        /// <remarks/>
        public event BatPay_CanReturnTask_SameCheckCompletedEventHandler BatPay_CanReturnTask_SameCheckCompleted;
        
        /// <remarks/>
        public event BatPay_CanReturnTaskCompletedEventHandler BatPay_CanReturnTaskCompleted;
        
        /// <remarks/>
        public event BatPayReturn_ShowButtonCompletedEventHandler BatPayReturn_ShowButtonCompleted;
        
        /// <remarks/>
        public event BatPayReturn_ShowButton_RCompletedEventHandler BatPayReturn_ShowButton_RCompleted;
        
        /// <remarks/>
        public event UpdatetbatchpayasknewStateCompletedEventHandler UpdatetbatchpayasknewStateCompleted;
        
        /// <remarks/>
        public event BatPayReturn_ShowDataCompletedEventHandler BatPayReturn_ShowDataCompleted;
        
        /// <remarks/>
        public event BatPayReturn_ShowData_RCompletedEventHandler BatPayReturn_ShowData_RCompleted;
        
        /// <remarks/>
        public event RefundOther_ShowDataCompletedEventHandler RefundOther_ShowDataCompleted;
        
        /// <remarks/>
        public event BatPayReturn_CreateReturnTaskCompletedEventHandler BatPayReturn_CreateReturnTaskCompleted;
        
        /// <remarks/>
        public event FileList_RefreshDataCompletedEventHandler FileList_RefreshDataCompleted;
        
        /// <remarks/>
        public event ReverseAdjust_GetTdeIDCompletedEventHandler ReverseAdjust_GetTdeIDCompleted;
        
        /// <remarks/>
        public event ShowDetail_GetCountCompletedEventHandler ShowDetail_GetCountCompleted;
        
        /// <remarks/>
        public event ReturnTicket_BindDataCompletedEventHandler ReturnTicket_BindDataCompleted;
        
        /// <remarks/>
        public event ReturnTicket_BindData_FileCompletedEventHandler ReturnTicket_BindData_FileCompleted;
        
        /// <remarks/>
        public event StartReturnTicket_FileCompletedEventHandler StartReturnTicket_FileCompleted;
        
        /// <remarks/>
        public event ShowDetail_BindDataCompletedEventHandler ShowDetail_BindDataCompleted;
        
        /// <remarks/>
        public event BankIO_GetFileListCompletedEventHandler BankIO_GetFileListCompleted;
        
        /// <remarks/>
        public event BankIO_CreateAllFileCompletedEventHandler BankIO_CreateAllFileCompleted;
        
        /// <remarks/>
        public event BankIO_CreateAllFile_RCompletedEventHandler BankIO_CreateAllFile_RCompleted;
        
        /// <remarks/>
        public event BankRefundIO_CreateAllFile_OtherCompletedEventHandler BankRefundIO_CreateAllFile_OtherCompleted;
        
        /// <remarks/>
        public event BankIO_InputFileCompletedEventHandler BankIO_InputFileCompleted;
        
        /// <remarks/>
        public event InsertHandleRecordCompletedEventHandler InsertHandleRecordCompleted;
        
        /// <remarks/>
        public event InsertHandleRecordXCompletedEventHandler InsertHandleRecordXCompleted;
        
        /// <remarks/>
        public event UpdateBatchStatusCompletedEventHandler UpdateBatchStatusCompleted;
        
        /// <remarks/>
        public event GetCurrPhaseUserCompletedEventHandler GetCurrPhaseUserCompleted;
        
        /// <remarks/>
        public event GetPhaseNameCompletedEventHandler GetPhaseNameCompleted;
        
        /// <remarks/>
        public event BankRoll_UploadCancelCompletedEventHandler BankRoll_UploadCancelCompleted;
        
        /// <remarks/>
        public event BankRoll_UploadCancel_ChargeCompletedEventHandler BankRoll_UploadCancel_ChargeCompleted;
        
        /// <remarks/>
        public event GetBankFuncUserCompletedEventHandler GetBankFuncUserCompleted;
        
        /// <remarks/>
        public event GetFuncAllBankCompletedEventHandler GetFuncAllBankCompleted;
        
        /// <remarks/>
        public event UpdateFuncUserCompletedEventHandler UpdateFuncUserCompleted;
        
        /// <remarks/>
        public event GetAllPhaseTypeCompletedEventHandler GetAllPhaseTypeCompleted;
        
        /// <remarks/>
        public event AdjustToFaultCompletedEventHandler AdjustToFaultCompleted;
        
        /// <remarks/>
        public event AdjustToFault_HangCompletedEventHandler AdjustToFault_HangCompleted;
        
        /// <remarks/>
        public event AdjustToSuccessCompletedEventHandler AdjustToSuccessCompleted;
        
        /// <remarks/>
        public event CanStartAdjustCompletedEventHandler CanStartAdjustCompleted;
        
        /// <remarks/>
        public event CanStartAdjust_RCompletedEventHandler CanStartAdjust_RCompleted;
        
        /// <remarks/>
        public event CanStartTask_RCompletedEventHandler CanStartTask_RCompleted;
        
        /// <remarks/>
        public event CheckSpmRefundCompletedEventHandler CheckSpmRefundCompleted;
        
        /// <remarks/>
        public event StartCreateTask_RCompletedEventHandler StartCreateTask_RCompleted;
        
        /// <remarks/>
        public event CanStartHangDataCompletedEventHandler CanStartHangDataCompleted;
        
        /// <remarks/>
        public event UpdateHandleResultCompletedEventHandler UpdateHandleResultCompleted;
        
        /// <remarks/>
        public event UpdateToFinishCompletedEventHandler UpdateToFinishCompleted;
        
        /// <remarks/>
        public event CheckTwoRecordCompletedEventHandler CheckTwoRecordCompleted;
        
        /// <remarks/>
        public event CheckTwoRecord_SubaccCompletedEventHandler CheckTwoRecord_SubaccCompleted;
        
        /// <remarks/>
        public event SpiltBankOrderCompletedEventHandler SpiltBankOrderCompleted;
        
        /// <remarks/>
        public event AutoCheckTwoRecordCompletedEventHandler AutoCheckTwoRecordCompleted;
        
        /// <remarks/>
        public event AutoCheckTwoRecord_SubaccCompletedEventHandler AutoCheckTwoRecord_SubaccCompleted;
        
        /// <remarks/>
        public event CheckBatchRecordCompletedEventHandler CheckBatchRecordCompleted;
        
        /// <remarks/>
        public event ShowBatpayMainBtCompletedEventHandler ShowBatpayMainBtCompleted;
        
        /// <remarks/>
        public event ShowBatpayMainBt_BCompletedEventHandler ShowBatpayMainBt_BCompleted;
        
        /// <remarks/>
        public event ShowBatpayMainBt_VCompletedEventHandler ShowBatpayMainBt_VCompleted;
        
        /// <remarks/>
        public event ShowBatpayMainBt_OCompletedEventHandler ShowBatpayMainBt_OCompleted;
        
        /// <remarks/>
        public event ShowBatpayMainBt_RCompletedEventHandler ShowBatpayMainBt_RCompleted;
        
        /// <remarks/>
        public event GetBankIDFromBatchNoCompletedEventHandler GetBankIDFromBatchNoCompleted;
        
        /// <remarks/>
        public event BankIO_CreatePayTaskCompletedEventHandler BankIO_CreatePayTaskCompleted;
        
        /// <remarks/>
        public event BankIO_CreatePayTask_RCompletedEventHandler BankIO_CreatePayTask_RCompleted;
        
        /// <remarks/>
        public event CreateRefundTask_OtherCompletedEventHandler CreateRefundTask_OtherCompleted;
        
        /// <remarks/>
        public event BankIO_InputFirstFinishCompletedEventHandler BankIO_InputFirstFinishCompleted;
        
        /// <remarks/>
        public event BankIO_InputSecondFinishCompletedEventHandler BankIO_InputSecondFinishCompleted;
        
        /// <remarks/>
        public event BankIO_PayTaskFinishCompletedEventHandler BankIO_PayTaskFinishCompleted;
        
        /// <remarks/>
        public event CanRollBackPayTaskCompletedEventHandler CanRollBackPayTaskCompleted;
        
        /// <remarks/>
        public event BankIO_UploadCancelCompletedEventHandler BankIO_UploadCancelCompleted;
        
        /// <remarks/>
        public event BankIO_PayTaskCancelCompletedEventHandler BankIO_PayTaskCancelCompleted;
        
        /// <remarks/>
        public event RefundOther_PayTaskCancelCompletedEventHandler RefundOther_PayTaskCancelCompleted;
        
        /// <remarks/>
        public event BankIO_HandleExceptionDataCompletedEventHandler BankIO_HandleExceptionDataCompleted;
        
        /// <remarks/>
        public event ReturnTicketDetail_BindDataCompletedEventHandler ReturnTicketDetail_BindDataCompleted;
        
        /// <remarks/>
        public event GetPayTaskDetailCompletedEventHandler GetPayTaskDetailCompleted;
        
        /// <remarks/>
        public event TokenHang_ReverseHandleCompletedEventHandler TokenHang_ReverseHandleCompleted;
        
        /// <remarks/>
        public event HaoYe_UploadFileCompletedEventHandler HaoYe_UploadFileCompleted;
        
        /// <remarks/>
        public event HaoYe_CanStartCheckCompletedEventHandler HaoYe_CanStartCheckCompleted;
        
        /// <remarks/>
        public event HaoYe_GetMondyCompletedEventHandler HaoYe_GetMondyCompleted;
        
        /// <remarks/>
        public event HaoYe_GetBatchListCompletedEventHandler HaoYe_GetBatchListCompleted;
        
        /// <remarks/>
        public event HaoYe_GetAllBatchListCompletedEventHandler HaoYe_GetAllBatchListCompleted;
        
        /// <remarks/>
        public event CreateMedFileCompletedEventHandler CreateMedFileCompleted;
        
        /// <remarks/>
        public event GetPayStateCompletedEventHandler GetPayStateCompleted;
        
        /// <remarks/>
        public event GetPayState_RCompletedEventHandler GetPayState_RCompleted;
        
        /// <remarks/>
        public event GetRefundState_OtherCompletedEventHandler GetRefundState_OtherCompleted;
        
        /// <remarks/>
        public event UploadReturnTicketFileCompletedEventHandler UploadReturnTicketFileCompleted;
        
        /// <remarks/>
        public event GetPayBankCountsCompletedEventHandler GetPayBankCountsCompleted;
        
        /// <remarks/>
        public event GetPackageCountsCompletedEventHandler GetPackageCountsCompleted;
        
        /// <remarks/>
        public event GetBankCountsCompletedEventHandler GetBankCountsCompleted;
        
        /// <remarks/>
        public event SetPackageBankTypeCompletedEventHandler SetPackageBankTypeCompleted;
        
        /// <remarks/>
        public event SetBankBankTypeCompletedEventHandler SetBankBankTypeCompleted;
        
        /// <remarks/>
        public event GiveBack_GetBatchInfoCompletedEventHandler GiveBack_GetBatchInfoCompleted;
        
        /// <remarks/>
        public event GiveBack_InputFileCompletedEventHandler GiveBack_InputFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePayInfoForRefund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SavePayInfoForRefund(string oldId, int payInfo_UserFlag, string payInfo_TrueName, int payInfo_BankType, int payInfo_CardType, string payInfo_area, string payInfo_city, string payInfo_BankName, string payInfo_BankaccNo, string payInfo_PayMemo, out string msg) {
            object[] results = this.Invoke("SavePayInfoForRefund", new object[] {
                        oldId,
                        payInfo_UserFlag,
                        payInfo_TrueName,
                        payInfo_BankType,
                        payInfo_CardType,
                        payInfo_area,
                        payInfo_city,
                        payInfo_BankName,
                        payInfo_BankaccNo,
                        payInfo_PayMemo});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SavePayInfoForRefundAsync(string oldId, int payInfo_UserFlag, string payInfo_TrueName, int payInfo_BankType, int payInfo_CardType, string payInfo_area, string payInfo_city, string payInfo_BankName, string payInfo_BankaccNo, string payInfo_PayMemo) {
            this.SavePayInfoForRefundAsync(oldId, payInfo_UserFlag, payInfo_TrueName, payInfo_BankType, payInfo_CardType, payInfo_area, payInfo_city, payInfo_BankName, payInfo_BankaccNo, payInfo_PayMemo, null);
        }
        
        /// <remarks/>
        public void SavePayInfoForRefundAsync(string oldId, int payInfo_UserFlag, string payInfo_TrueName, int payInfo_BankType, int payInfo_CardType, string payInfo_area, string payInfo_city, string payInfo_BankName, string payInfo_BankaccNo, string payInfo_PayMemo, object userState) {
            if ((this.SavePayInfoForRefundOperationCompleted == null)) {
                this.SavePayInfoForRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePayInfoForRefundOperationCompleted);
            }
            this.InvokeAsync("SavePayInfoForRefund", new object[] {
                        oldId,
                        payInfo_UserFlag,
                        payInfo_TrueName,
                        payInfo_BankType,
                        payInfo_CardType,
                        payInfo_area,
                        payInfo_city,
                        payInfo_BankName,
                        payInfo_BankaccNo,
                        payInfo_PayMemo}, this.SavePayInfoForRefundOperationCompleted, userState);
        }
        
        private void OnSavePayInfoForRefundOperationCompleted(object arg) {
            if ((this.SavePayInfoForRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePayInfoForRefundCompleted(this, new SavePayInfoForRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRefundStateFromPayInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetRefundStateFromPayInfo(string batchid, string oldIds, int refundCounts, out string ErrMsg, out string DoMsg) {
            object[] results = this.Invoke("GetRefundStateFromPayInfo", new object[] {
                        batchid,
                        oldIds,
                        refundCounts});
            ErrMsg = ((string)(results[1]));
            DoMsg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundStateFromPayInfoAsync(string batchid, string oldIds, int refundCounts) {
            this.GetRefundStateFromPayInfoAsync(batchid, oldIds, refundCounts, null);
        }
        
        /// <remarks/>
        public void GetRefundStateFromPayInfoAsync(string batchid, string oldIds, int refundCounts, object userState) {
            if ((this.GetRefundStateFromPayInfoOperationCompleted == null)) {
                this.GetRefundStateFromPayInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundStateFromPayInfoOperationCompleted);
            }
            this.InvokeAsync("GetRefundStateFromPayInfo", new object[] {
                        batchid,
                        oldIds,
                        refundCounts}, this.GetRefundStateFromPayInfoOperationCompleted, userState);
        }
        
        private void OnGetRefundStateFromPayInfoOperationCompleted(object arg) {
            if ((this.GetRefundStateFromPayInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundStateFromPayInfoCompleted(this, new GetRefundStateFromPayInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GQWSaveMoney", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GQWSaveMoney(string fid, out string ErrMsg) {
            object[] results = this.Invoke("GQWSaveMoney", new object[] {
                        fid});
            ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GQWSaveMoneyAsync(string fid) {
            this.GQWSaveMoneyAsync(fid, null);
        }
        
        /// <remarks/>
        public void GQWSaveMoneyAsync(string fid, object userState) {
            if ((this.GQWSaveMoneyOperationCompleted == null)) {
                this.GQWSaveMoneyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGQWSaveMoneyOperationCompleted);
            }
            this.InvokeAsync("GQWSaveMoney", new object[] {
                        fid}, this.GQWSaveMoneyOperationCompleted, userState);
        }
        
        private void OnGQWSaveMoneyOperationCompleted(object arg) {
            if ((this.GQWSaveMoneyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GQWSaveMoneyCompleted(this, new GQWSaveMoneyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GQWFetchMoney", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GQWFetchMoney(string fid, out string ErrMsg) {
            object[] results = this.Invoke("GQWFetchMoney", new object[] {
                        fid});
            ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GQWFetchMoneyAsync(string fid) {
            this.GQWFetchMoneyAsync(fid, null);
        }
        
        /// <remarks/>
        public void GQWFetchMoneyAsync(string fid, object userState) {
            if ((this.GQWFetchMoneyOperationCompleted == null)) {
                this.GQWFetchMoneyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGQWFetchMoneyOperationCompleted);
            }
            this.InvokeAsync("GQWFetchMoney", new object[] {
                        fid}, this.GQWFetchMoneyOperationCompleted, userState);
        }
        
        private void OnGQWFetchMoneyOperationCompleted(object arg) {
            if ((this.GQWFetchMoneyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GQWFetchMoneyCompleted(this, new GQWFetchMoneyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GQWRecoverOper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GQWRecoverOper(string fid, string MKT_No, out string ErrMsg) {
            object[] results = this.Invoke("GQWRecoverOper", new object[] {
                        fid,
                        MKT_No});
            ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GQWRecoverOperAsync(string fid, string MKT_No) {
            this.GQWRecoverOperAsync(fid, MKT_No, null);
        }
        
        /// <remarks/>
        public void GQWRecoverOperAsync(string fid, string MKT_No, object userState) {
            if ((this.GQWRecoverOperOperationCompleted == null)) {
                this.GQWRecoverOperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGQWRecoverOperOperationCompleted);
            }
            this.InvokeAsync("GQWRecoverOper", new object[] {
                        fid,
                        MKT_No}, this.GQWRecoverOperOperationCompleted, userState);
        }
        
        private void OnGQWRecoverOperOperationCompleted(object arg) {
            if ((this.GQWRecoverOperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GQWRecoverOperCompleted(this, new GQWRecoverOperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetZWDicValueByKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetZWDicValueByKey(string key) {
            object[] results = this.Invoke("GetZWDicValueByKey", new object[] {
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetZWDicValueByKeyAsync(string key) {
            this.GetZWDicValueByKeyAsync(key, null);
        }
        
        /// <remarks/>
        public void GetZWDicValueByKeyAsync(string key, object userState) {
            if ((this.GetZWDicValueByKeyOperationCompleted == null)) {
                this.GetZWDicValueByKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZWDicValueByKeyOperationCompleted);
            }
            this.InvokeAsync("GetZWDicValueByKey", new object[] {
                        key}, this.GetZWDicValueByKeyOperationCompleted, userState);
        }
        
        private void OnGetZWDicValueByKeyOperationCompleted(object arg) {
            if ((this.GetZWDicValueByKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZWDicValueByKeyCompleted(this, new GetZWDicValueByKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryBankName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryBankName(string bankType) {
            object[] results = this.Invoke("QueryBankName", new object[] {
                        bankType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankNameAsync(string bankType) {
            this.QueryBankNameAsync(bankType, null);
        }
        
        /// <remarks/>
        public void QueryBankNameAsync(string bankType, object userState) {
            if ((this.QueryBankNameOperationCompleted == null)) {
                this.QueryBankNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankNameOperationCompleted);
            }
            this.InvokeAsync("QueryBankName", new object[] {
                        bankType}, this.QueryBankNameOperationCompleted, userState);
        }
        
        private void OnQueryBankNameOperationCompleted(object arg) {
            if ((this.QueryBankNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankNameCompleted(this, new QueryBankNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FundDispatch_Sum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FundDispatch_Sum(object[] idlist, out string errMsg) {
            object[] results = this.Invoke("FundDispatch_Sum", new object[] {
                        idlist});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FundDispatch_SumAsync(object[] idlist) {
            this.FundDispatch_SumAsync(idlist, null);
        }
        
        /// <remarks/>
        public void FundDispatch_SumAsync(object[] idlist, object userState) {
            if ((this.FundDispatch_SumOperationCompleted == null)) {
                this.FundDispatch_SumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFundDispatch_SumOperationCompleted);
            }
            this.InvokeAsync("FundDispatch_Sum", new object[] {
                        idlist}, this.FundDispatch_SumOperationCompleted, userState);
        }
        
        private void OnFundDispatch_SumOperationCompleted(object arg) {
            if ((this.FundDispatch_SumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FundDispatch_SumCompleted(this, new FundDispatch_SumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/pospDispatch_Sum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool pospDispatch_Sum(object[] idlist, out string errMsg) {
            object[] results = this.Invoke("pospDispatch_Sum", new object[] {
                        idlist});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void pospDispatch_SumAsync(object[] idlist) {
            this.pospDispatch_SumAsync(idlist, null);
        }
        
        /// <remarks/>
        public void pospDispatch_SumAsync(object[] idlist, object userState) {
            if ((this.pospDispatch_SumOperationCompleted == null)) {
                this.pospDispatch_SumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpospDispatch_SumOperationCompleted);
            }
            this.InvokeAsync("pospDispatch_Sum", new object[] {
                        idlist}, this.pospDispatch_SumOperationCompleted, userState);
        }
        
        private void OnpospDispatch_SumOperationCompleted(object arg) {
            if ((this.pospDispatch_SumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pospDispatch_SumCompleted(this, new pospDispatch_SumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FundPick_Sum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FundPick_Sum(object[] idlist, out string errMsg) {
            object[] results = this.Invoke("FundPick_Sum", new object[] {
                        idlist});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FundPick_SumAsync(object[] idlist) {
            this.FundPick_SumAsync(idlist, null);
        }
        
        /// <remarks/>
        public void FundPick_SumAsync(object[] idlist, object userState) {
            if ((this.FundPick_SumOperationCompleted == null)) {
                this.FundPick_SumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFundPick_SumOperationCompleted);
            }
            this.InvokeAsync("FundPick_Sum", new object[] {
                        idlist}, this.FundPick_SumOperationCompleted, userState);
        }
        
        private void OnFundPick_SumOperationCompleted(object arg) {
            if ((this.FundPick_SumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FundPick_SumCompleted(this, new FundPick_SumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPayReturn_ReturnTask_10", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BatPayReturn_ReturnTask_10(string fbatchid, out string errMsg) {
            object[] results = this.Invoke("BatPayReturn_ReturnTask_10", new object[] {
                        fbatchid});
            errMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BatPayReturn_ReturnTask_10Async(string fbatchid) {
            this.BatPayReturn_ReturnTask_10Async(fbatchid, null);
        }
        
        /// <remarks/>
        public void BatPayReturn_ReturnTask_10Async(string fbatchid, object userState) {
            if ((this.BatPayReturn_ReturnTask_10OperationCompleted == null)) {
                this.BatPayReturn_ReturnTask_10OperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPayReturn_ReturnTask_10OperationCompleted);
            }
            this.InvokeAsync("BatPayReturn_ReturnTask_10", new object[] {
                        fbatchid}, this.BatPayReturn_ReturnTask_10OperationCompleted, userState);
        }
        
        private void OnBatPayReturn_ReturnTask_10OperationCompleted(object arg) {
            if ((this.BatPayReturn_ReturnTask_10Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPayReturn_ReturnTask_10Completed(this, new BatPayReturn_ReturnTask_10CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBatchBankID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBatchBankID(string fbatchid) {
            object[] results = this.Invoke("GetBatchBankID", new object[] {
                        fbatchid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchBankIDAsync(string fbatchid) {
            this.GetBatchBankIDAsync(fbatchid, null);
        }
        
        /// <remarks/>
        public void GetBatchBankIDAsync(string fbatchid, object userState) {
            if ((this.GetBatchBankIDOperationCompleted == null)) {
                this.GetBatchBankIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchBankIDOperationCompleted);
            }
            this.InvokeAsync("GetBatchBankID", new object[] {
                        fbatchid}, this.GetBatchBankIDOperationCompleted, userState);
        }
        
        private void OnGetBatchBankIDOperationCompleted(object arg) {
            if ((this.GetBatchBankIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchBankIDCompleted(this, new GetBatchBankIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FundIntCheckAndSupplement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FundIntCheckAndSupplement(string inttotalsum, string intsubsum, string impactbalance, string intquarter, string userid, out string errMsg) {
            object[] results = this.Invoke("FundIntCheckAndSupplement", new object[] {
                        inttotalsum,
                        intsubsum,
                        impactbalance,
                        intquarter,
                        userid});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FundIntCheckAndSupplementAsync(string inttotalsum, string intsubsum, string impactbalance, string intquarter, string userid) {
            this.FundIntCheckAndSupplementAsync(inttotalsum, intsubsum, impactbalance, intquarter, userid, null);
        }
        
        /// <remarks/>
        public void FundIntCheckAndSupplementAsync(string inttotalsum, string intsubsum, string impactbalance, string intquarter, string userid, object userState) {
            if ((this.FundIntCheckAndSupplementOperationCompleted == null)) {
                this.FundIntCheckAndSupplementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFundIntCheckAndSupplementOperationCompleted);
            }
            this.InvokeAsync("FundIntCheckAndSupplement", new object[] {
                        inttotalsum,
                        intsubsum,
                        impactbalance,
                        intquarter,
                        userid}, this.FundIntCheckAndSupplementOperationCompleted, userState);
        }
        
        private void OnFundIntCheckAndSupplementOperationCompleted(object arg) {
            if ((this.FundIntCheckAndSupplementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FundIntCheckAndSupplementCompleted(this, new FundIntCheckAndSupplementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPayReturn_FundDispatchToAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPayReturn_FundDispatchToAccount(string fid, string bankfum, string banktype, string frombanktype, out string errMsg) {
            object[] results = this.Invoke("BatPayReturn_FundDispatchToAccount", new object[] {
                        fid,
                        bankfum,
                        banktype,
                        frombanktype});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPayReturn_FundDispatchToAccountAsync(string fid, string bankfum, string banktype, string frombanktype) {
            this.BatPayReturn_FundDispatchToAccountAsync(fid, bankfum, banktype, frombanktype, null);
        }
        
        /// <remarks/>
        public void BatPayReturn_FundDispatchToAccountAsync(string fid, string bankfum, string banktype, string frombanktype, object userState) {
            if ((this.BatPayReturn_FundDispatchToAccountOperationCompleted == null)) {
                this.BatPayReturn_FundDispatchToAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPayReturn_FundDispatchToAccountOperationCompleted);
            }
            this.InvokeAsync("BatPayReturn_FundDispatchToAccount", new object[] {
                        fid,
                        bankfum,
                        banktype,
                        frombanktype}, this.BatPayReturn_FundDispatchToAccountOperationCompleted, userState);
        }
        
        private void OnBatPayReturn_FundDispatchToAccountOperationCompleted(object arg) {
            if ((this.BatPayReturn_FundDispatchToAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPayReturn_FundDispatchToAccountCompleted(this, new BatPayReturn_FundDispatchToAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FundDispatchToAccount_Error", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FundDispatchToAccount_Error(string fid, string bankfum, string banktype, string frombanktype, out string errMsg) {
            object[] results = this.Invoke("FundDispatchToAccount_Error", new object[] {
                        fid,
                        bankfum,
                        banktype,
                        frombanktype});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FundDispatchToAccount_ErrorAsync(string fid, string bankfum, string banktype, string frombanktype) {
            this.FundDispatchToAccount_ErrorAsync(fid, bankfum, banktype, frombanktype, null);
        }
        
        /// <remarks/>
        public void FundDispatchToAccount_ErrorAsync(string fid, string bankfum, string banktype, string frombanktype, object userState) {
            if ((this.FundDispatchToAccount_ErrorOperationCompleted == null)) {
                this.FundDispatchToAccount_ErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFundDispatchToAccount_ErrorOperationCompleted);
            }
            this.InvokeAsync("FundDispatchToAccount_Error", new object[] {
                        fid,
                        bankfum,
                        banktype,
                        frombanktype}, this.FundDispatchToAccount_ErrorOperationCompleted, userState);
        }
        
        private void OnFundDispatchToAccount_ErrorOperationCompleted(object arg) {
            if ((this.FundDispatchToAccount_ErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FundDispatchToAccount_ErrorCompleted(this, new FundDispatchToAccount_ErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPayReturn_pospDispatchToAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPayReturn_pospDispatchToAccount(string bankfum, string banktype, out string errMsg) {
            object[] results = this.Invoke("BatPayReturn_pospDispatchToAccount", new object[] {
                        bankfum,
                        banktype});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPayReturn_pospDispatchToAccountAsync(string bankfum, string banktype) {
            this.BatPayReturn_pospDispatchToAccountAsync(bankfum, banktype, null);
        }
        
        /// <remarks/>
        public void BatPayReturn_pospDispatchToAccountAsync(string bankfum, string banktype, object userState) {
            if ((this.BatPayReturn_pospDispatchToAccountOperationCompleted == null)) {
                this.BatPayReturn_pospDispatchToAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPayReturn_pospDispatchToAccountOperationCompleted);
            }
            this.InvokeAsync("BatPayReturn_pospDispatchToAccount", new object[] {
                        bankfum,
                        banktype}, this.BatPayReturn_pospDispatchToAccountOperationCompleted, userState);
        }
        
        private void OnBatPayReturn_pospDispatchToAccountOperationCompleted(object arg) {
            if ((this.BatPayReturn_pospDispatchToAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPayReturn_pospDispatchToAccountCompleted(this, new BatPayReturn_pospDispatchToAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/pospDispatchToAccount_Error", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool pospDispatchToAccount_Error(string bankfum, string banktype, out string errMsg) {
            object[] results = this.Invoke("pospDispatchToAccount_Error", new object[] {
                        bankfum,
                        banktype});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void pospDispatchToAccount_ErrorAsync(string bankfum, string banktype) {
            this.pospDispatchToAccount_ErrorAsync(bankfum, banktype, null);
        }
        
        /// <remarks/>
        public void pospDispatchToAccount_ErrorAsync(string bankfum, string banktype, object userState) {
            if ((this.pospDispatchToAccount_ErrorOperationCompleted == null)) {
                this.pospDispatchToAccount_ErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpospDispatchToAccount_ErrorOperationCompleted);
            }
            this.InvokeAsync("pospDispatchToAccount_Error", new object[] {
                        bankfum,
                        banktype}, this.pospDispatchToAccount_ErrorOperationCompleted, userState);
        }
        
        private void OnpospDispatchToAccount_ErrorOperationCompleted(object arg) {
            if ((this.pospDispatchToAccount_ErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pospDispatchToAccount_ErrorCompleted(this, new pospDispatchToAccount_ErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFtrueNameByFspid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFtrueNameByFspid(string fspid) {
            object[] results = this.Invoke("GetFtrueNameByFspid", new object[] {
                        fspid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFtrueNameByFspidAsync(string fspid) {
            this.GetFtrueNameByFspidAsync(fspid, null);
        }
        
        /// <remarks/>
        public void GetFtrueNameByFspidAsync(string fspid, object userState) {
            if ((this.GetFtrueNameByFspidOperationCompleted == null)) {
                this.GetFtrueNameByFspidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFtrueNameByFspidOperationCompleted);
            }
            this.InvokeAsync("GetFtrueNameByFspid", new object[] {
                        fspid}, this.GetFtrueNameByFspidOperationCompleted, userState);
        }
        
        private void OnGetFtrueNameByFspidOperationCompleted(object arg) {
            if ((this.GetFtrueNameByFspidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFtrueNameByFspidCompleted(this, new GetFtrueNameByFspidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundDispatchToAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundDispatchToAccount(string accountdate, string bankfum, string banktype, string frombanktype) {
            object[] results = this.Invoke("GetFundDispatchToAccount", new object[] {
                        accountdate,
                        bankfum,
                        banktype,
                        frombanktype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundDispatchToAccountAsync(string accountdate, string bankfum, string banktype, string frombanktype) {
            this.GetFundDispatchToAccountAsync(accountdate, bankfum, banktype, frombanktype, null);
        }
        
        /// <remarks/>
        public void GetFundDispatchToAccountAsync(string accountdate, string bankfum, string banktype, string frombanktype, object userState) {
            if ((this.GetFundDispatchToAccountOperationCompleted == null)) {
                this.GetFundDispatchToAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundDispatchToAccountOperationCompleted);
            }
            this.InvokeAsync("GetFundDispatchToAccount", new object[] {
                        accountdate,
                        bankfum,
                        banktype,
                        frombanktype}, this.GetFundDispatchToAccountOperationCompleted, userState);
        }
        
        private void OnGetFundDispatchToAccountOperationCompleted(object arg) {
            if ((this.GetFundDispatchToAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundDispatchToAccountCompleted(this, new GetFundDispatchToAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBatchFundBackData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBatchFundBackData(string fspid, string trandate) {
            object[] results = this.Invoke("GetBatchFundBackData", new object[] {
                        fspid,
                        trandate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchFundBackDataAsync(string fspid, string trandate) {
            this.GetBatchFundBackDataAsync(fspid, trandate, null);
        }
        
        /// <remarks/>
        public void GetBatchFundBackDataAsync(string fspid, string trandate, object userState) {
            if ((this.GetBatchFundBackDataOperationCompleted == null)) {
                this.GetBatchFundBackDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchFundBackDataOperationCompleted);
            }
            this.InvokeAsync("GetBatchFundBackData", new object[] {
                        fspid,
                        trandate}, this.GetBatchFundBackDataOperationCompleted, userState);
        }
        
        private void OnGetBatchFundBackDataOperationCompleted(object arg) {
            if ((this.GetBatchFundBackDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchFundBackDataCompleted(this, new GetBatchFundBackDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateFRecordState_Fundback", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateFRecordState_Fundback(string fspid, string faccountdate, string fid, out string Msg) {
            object[] results = this.Invoke("updateFRecordState_Fundback", new object[] {
                        fspid,
                        faccountdate,
                        fid});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateFRecordState_FundbackAsync(string fspid, string faccountdate, string fid) {
            this.updateFRecordState_FundbackAsync(fspid, faccountdate, fid, null);
        }
        
        /// <remarks/>
        public void updateFRecordState_FundbackAsync(string fspid, string faccountdate, string fid, object userState) {
            if ((this.updateFRecordState_FundbackOperationCompleted == null)) {
                this.updateFRecordState_FundbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateFRecordState_FundbackOperationCompleted);
            }
            this.InvokeAsync("updateFRecordState_Fundback", new object[] {
                        fspid,
                        faccountdate,
                        fid}, this.updateFRecordState_FundbackOperationCompleted, userState);
        }
        
        private void OnupdateFRecordState_FundbackOperationCompleted(object arg) {
            if ((this.updateFRecordState_FundbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateFRecordState_FundbackCompleted(this, new updateFRecordState_FundbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundbackState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundbackState(string fspid, string faccountdate) {
            object[] results = this.Invoke("GetFundbackState", new object[] {
                        fspid,
                        faccountdate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundbackStateAsync(string fspid, string faccountdate) {
            this.GetFundbackStateAsync(fspid, faccountdate, null);
        }
        
        /// <remarks/>
        public void GetFundbackStateAsync(string fspid, string faccountdate, object userState) {
            if ((this.GetFundbackStateOperationCompleted == null)) {
                this.GetFundbackStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundbackStateOperationCompleted);
            }
            this.InvokeAsync("GetFundbackState", new object[] {
                        fspid,
                        faccountdate}, this.GetFundbackStateOperationCompleted, userState);
        }
        
        private void OnGetFundbackStateOperationCompleted(object arg) {
            if ((this.GetFundbackStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundbackStateCompleted(this, new GetFundbackStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBatch_Fundtask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBatch_Fundtask(string fspid, string trandate, string fsum) {
            object[] results = this.Invoke("GetBatch_Fundtask", new object[] {
                        fspid,
                        trandate,
                        fsum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatch_FundtaskAsync(string fspid, string trandate, string fsum) {
            this.GetBatch_FundtaskAsync(fspid, trandate, fsum, null);
        }
        
        /// <remarks/>
        public void GetBatch_FundtaskAsync(string fspid, string trandate, string fsum, object userState) {
            if ((this.GetBatch_FundtaskOperationCompleted == null)) {
                this.GetBatch_FundtaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatch_FundtaskOperationCompleted);
            }
            this.InvokeAsync("GetBatch_Fundtask", new object[] {
                        fspid,
                        trandate,
                        fsum}, this.GetBatch_FundtaskOperationCompleted, userState);
        }
        
        private void OnGetBatch_FundtaskOperationCompleted(object arg) {
            if ((this.GetBatch_FundtaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatch_FundtaskCompleted(this, new GetBatch_FundtaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundBackFnum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetFundBackFnum(string fspid, string trandate, string fsum, out string mesg, out string truefsum) {
            object[] results = this.Invoke("GetFundBackFnum", new object[] {
                        fspid,
                        trandate,
                        fsum});
            mesg = ((string)(results[1]));
            truefsum = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundBackFnumAsync(string fspid, string trandate, string fsum) {
            this.GetFundBackFnumAsync(fspid, trandate, fsum, null);
        }
        
        /// <remarks/>
        public void GetFundBackFnumAsync(string fspid, string trandate, string fsum, object userState) {
            if ((this.GetFundBackFnumOperationCompleted == null)) {
                this.GetFundBackFnumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundBackFnumOperationCompleted);
            }
            this.InvokeAsync("GetFundBackFnum", new object[] {
                        fspid,
                        trandate,
                        fsum}, this.GetFundBackFnumOperationCompleted, userState);
        }
        
        private void OnGetFundBackFnumOperationCompleted(object arg) {
            if ((this.GetFundBackFnumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundBackFnumCompleted(this, new GetFundBackFnumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateBankFum_Fundback", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateBankFum_Fundback(string fspid, string faccountdate, string bankfum, int fstate, int frecordstate) {
            object[] results = this.Invoke("updateBankFum_Fundback", new object[] {
                        fspid,
                        faccountdate,
                        bankfum,
                        fstate,
                        frecordstate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateBankFum_FundbackAsync(string fspid, string faccountdate, string bankfum, int fstate, int frecordstate) {
            this.updateBankFum_FundbackAsync(fspid, faccountdate, bankfum, fstate, frecordstate, null);
        }
        
        /// <remarks/>
        public void updateBankFum_FundbackAsync(string fspid, string faccountdate, string bankfum, int fstate, int frecordstate, object userState) {
            if ((this.updateBankFum_FundbackOperationCompleted == null)) {
                this.updateBankFum_FundbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateBankFum_FundbackOperationCompleted);
            }
            this.InvokeAsync("updateBankFum_Fundback", new object[] {
                        fspid,
                        faccountdate,
                        bankfum,
                        fstate,
                        frecordstate}, this.updateBankFum_FundbackOperationCompleted, userState);
        }
        
        private void OnupdateBankFum_FundbackOperationCompleted(object arg) {
            if ((this.updateBankFum_FundbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateBankFum_FundbackCompleted(this, new updateBankFum_FundbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadBatchRefundData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadBatchRefundData(string fileName, long totalAmt, int totalCount, string checkBatchid, string refundtype, out string msg, out string batchid) {
            object[] results = this.Invoke("UploadBatchRefundData", new object[] {
                        fileName,
                        totalAmt,
                        totalCount,
                        checkBatchid,
                        refundtype});
            msg = ((string)(results[1]));
            batchid = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadBatchRefundDataAsync(string fileName, long totalAmt, int totalCount, string checkBatchid, string refundtype) {
            this.UploadBatchRefundDataAsync(fileName, totalAmt, totalCount, checkBatchid, refundtype, null);
        }
        
        /// <remarks/>
        public void UploadBatchRefundDataAsync(string fileName, long totalAmt, int totalCount, string checkBatchid, string refundtype, object userState) {
            if ((this.UploadBatchRefundDataOperationCompleted == null)) {
                this.UploadBatchRefundDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadBatchRefundDataOperationCompleted);
            }
            this.InvokeAsync("UploadBatchRefundData", new object[] {
                        fileName,
                        totalAmt,
                        totalCount,
                        checkBatchid,
                        refundtype}, this.UploadBatchRefundDataOperationCompleted, userState);
        }
        
        private void OnUploadBatchRefundDataOperationCompleted(object arg) {
            if ((this.UploadBatchRefundDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadBatchRefundDataCompleted(this, new UploadBatchRefundDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartBatchRefundCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartBatchRefundCheck(string batchid, long totalAmt, int totalCount, string payRefund, out string msg) {
            object[] results = this.Invoke("StartBatchRefundCheck", new object[] {
                        batchid,
                        totalAmt,
                        totalCount,
                        payRefund});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartBatchRefundCheckAsync(string batchid, long totalAmt, int totalCount, string payRefund) {
            this.StartBatchRefundCheckAsync(batchid, totalAmt, totalCount, payRefund, null);
        }
        
        /// <remarks/>
        public void StartBatchRefundCheckAsync(string batchid, long totalAmt, int totalCount, string payRefund, object userState) {
            if ((this.StartBatchRefundCheckOperationCompleted == null)) {
                this.StartBatchRefundCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartBatchRefundCheckOperationCompleted);
            }
            this.InvokeAsync("StartBatchRefundCheck", new object[] {
                        batchid,
                        totalAmt,
                        totalCount,
                        payRefund}, this.StartBatchRefundCheckOperationCompleted, userState);
        }
        
        private void OnStartBatchRefundCheckOperationCompleted(object arg) {
            if ((this.StartBatchRefundCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartBatchRefundCheckCompleted(this, new StartBatchRefundCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckBatchRefund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckBatchRefund(string batchid, out string msg) {
            object[] results = this.Invoke("CheckBatchRefund", new object[] {
                        batchid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBatchRefundAsync(string batchid) {
            this.CheckBatchRefundAsync(batchid, null);
        }
        
        /// <remarks/>
        public void CheckBatchRefundAsync(string batchid, object userState) {
            if ((this.CheckBatchRefundOperationCompleted == null)) {
                this.CheckBatchRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBatchRefundOperationCompleted);
            }
            this.InvokeAsync("CheckBatchRefund", new object[] {
                        batchid}, this.CheckBatchRefundOperationCompleted, userState);
        }
        
        private void OnCheckBatchRefundOperationCompleted(object arg) {
            if ((this.CheckBatchRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBatchRefundCompleted(this, new CheckBatchRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/queryDic_BPService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet queryDic_BPService(string type, out string Msg) {
            object[] results = this.Invoke("queryDic_BPService", new object[] {
                        type});
            Msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void queryDic_BPServiceAsync(string type) {
            this.queryDic_BPServiceAsync(type, null);
        }
        
        /// <remarks/>
        public void queryDic_BPServiceAsync(string type, object userState) {
            if ((this.queryDic_BPServiceOperationCompleted == null)) {
                this.queryDic_BPServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryDic_BPServiceOperationCompleted);
            }
            this.InvokeAsync("queryDic_BPService", new object[] {
                        type}, this.queryDic_BPServiceOperationCompleted, userState);
        }
        
        private void OnqueryDic_BPServiceOperationCompleted(object arg) {
            if ((this.queryDic_BPServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.queryDic_BPServiceCompleted(this, new queryDic_BPServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckVPNFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckVPNFile(string taskid, out string errMsg) {
            object[] results = this.Invoke("CheckVPNFile", new object[] {
                        taskid});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckVPNFileAsync(string taskid) {
            this.CheckVPNFileAsync(taskid, null);
        }
        
        /// <remarks/>
        public void CheckVPNFileAsync(string taskid, object userState) {
            if ((this.CheckVPNFileOperationCompleted == null)) {
                this.CheckVPNFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckVPNFileOperationCompleted);
            }
            this.InvokeAsync("CheckVPNFile", new object[] {
                        taskid}, this.CheckVPNFileOperationCompleted, userState);
        }
        
        private void OnCheckVPNFileOperationCompleted(object arg) {
            if ((this.CheckVPNFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckVPNFileCompleted(this, new CheckVPNFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartSpecialTaskCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartSpecialTaskCheck(string taskid, string strPathType, string fileidlist, string strMemo, out string errMsg) {
            object[] results = this.Invoke("StartSpecialTaskCheck", new object[] {
                        taskid,
                        strPathType,
                        fileidlist,
                        strMemo});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartSpecialTaskCheckAsync(string taskid, string strPathType, string fileidlist, string strMemo) {
            this.StartSpecialTaskCheckAsync(taskid, strPathType, fileidlist, strMemo, null);
        }
        
        /// <remarks/>
        public void StartSpecialTaskCheckAsync(string taskid, string strPathType, string fileidlist, string strMemo, object userState) {
            if ((this.StartSpecialTaskCheckOperationCompleted == null)) {
                this.StartSpecialTaskCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartSpecialTaskCheckOperationCompleted);
            }
            this.InvokeAsync("StartSpecialTaskCheck", new object[] {
                        taskid,
                        strPathType,
                        fileidlist,
                        strMemo}, this.StartSpecialTaskCheckOperationCompleted, userState);
        }
        
        private void OnStartSpecialTaskCheckOperationCompleted(object arg) {
            if ((this.StartSpecialTaskCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartSpecialTaskCheckCompleted(this, new StartSpecialTaskCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckVPNPayToCorporationFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckVPNPayToCorporationFile(string taskid, string filename, out string errMsg) {
            object[] results = this.Invoke("CheckVPNPayToCorporationFile", new object[] {
                        taskid,
                        filename});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckVPNPayToCorporationFileAsync(string taskid, string filename) {
            this.CheckVPNPayToCorporationFileAsync(taskid, filename, null);
        }
        
        /// <remarks/>
        public void CheckVPNPayToCorporationFileAsync(string taskid, string filename, object userState) {
            if ((this.CheckVPNPayToCorporationFileOperationCompleted == null)) {
                this.CheckVPNPayToCorporationFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckVPNPayToCorporationFileOperationCompleted);
            }
            this.InvokeAsync("CheckVPNPayToCorporationFile", new object[] {
                        taskid,
                        filename}, this.CheckVPNPayToCorporationFileOperationCompleted, userState);
        }
        
        private void OnCheckVPNPayToCorporationFileOperationCompleted(object arg) {
            if ((this.CheckVPNPayToCorporationFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckVPNPayToCorporationFileCompleted(this, new CheckVPNPayToCorporationFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankInforFromKJ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankInforFromKJ(string bankacc) {
            object[] results = this.Invoke("GetBankInforFromKJ", new object[] {
                        bankacc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankInforFromKJAsync(string bankacc) {
            this.GetBankInforFromKJAsync(bankacc, null);
        }
        
        /// <remarks/>
        public void GetBankInforFromKJAsync(string bankacc, object userState) {
            if ((this.GetBankInforFromKJOperationCompleted == null)) {
                this.GetBankInforFromKJOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankInforFromKJOperationCompleted);
            }
            this.InvokeAsync("GetBankInforFromKJ", new object[] {
                        bankacc}, this.GetBankInforFromKJOperationCompleted, userState);
        }
        
        private void OnGetBankInforFromKJOperationCompleted(object arg) {
            if ((this.GetBankInforFromKJCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankInforFromKJCompleted(this, new GetBankInforFromKJCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetZCInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetZCInfo(string batchid) {
            object[] results = this.Invoke("GetZCInfo", new object[] {
                        batchid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetZCInfoAsync(string batchid) {
            this.GetZCInfoAsync(batchid, null);
        }
        
        /// <remarks/>
        public void GetZCInfoAsync(string batchid, object userState) {
            if ((this.GetZCInfoOperationCompleted == null)) {
                this.GetZCInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZCInfoOperationCompleted);
            }
            this.InvokeAsync("GetZCInfo", new object[] {
                        batchid}, this.GetZCInfoOperationCompleted, userState);
        }
        
        private void OnGetZCInfoOperationCompleted(object arg) {
            if ((this.GetZCInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZCInfoCompleted(this, new GetZCInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSCheck_InputFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool POSCheck_InputFile(string strBatchID, string filename, string filepath, string url, string checkType, out string msg) {
            object[] results = this.Invoke("POSCheck_InputFile", new object[] {
                        strBatchID,
                        filename,
                        filepath,
                        url,
                        checkType});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void POSCheck_InputFileAsync(string strBatchID, string filename, string filepath, string url, string checkType) {
            this.POSCheck_InputFileAsync(strBatchID, filename, filepath, url, checkType, null);
        }
        
        /// <remarks/>
        public void POSCheck_InputFileAsync(string strBatchID, string filename, string filepath, string url, string checkType, object userState) {
            if ((this.POSCheck_InputFileOperationCompleted == null)) {
                this.POSCheck_InputFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPOSCheck_InputFileOperationCompleted);
            }
            this.InvokeAsync("POSCheck_InputFile", new object[] {
                        strBatchID,
                        filename,
                        filepath,
                        url,
                        checkType}, this.POSCheck_InputFileOperationCompleted, userState);
        }
        
        private void OnPOSCheck_InputFileOperationCompleted(object arg) {
            if ((this.POSCheck_InputFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.POSCheck_InputFileCompleted(this, new POSCheck_InputFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCheckProgress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCheckProgress(string taskid) {
            object[] results = this.Invoke("GetCheckProgress", new object[] {
                        taskid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCheckProgressAsync(string taskid) {
            this.GetCheckProgressAsync(taskid, null);
        }
        
        /// <remarks/>
        public void GetCheckProgressAsync(string taskid, object userState) {
            if ((this.GetCheckProgressOperationCompleted == null)) {
                this.GetCheckProgressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCheckProgressOperationCompleted);
            }
            this.InvokeAsync("GetCheckProgress", new object[] {
                        taskid}, this.GetCheckProgressOperationCompleted, userState);
        }
        
        private void OnGetCheckProgressOperationCompleted(object arg) {
            if ((this.GetCheckProgressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCheckProgressCompleted(this, new GetCheckProgressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGWQUserState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateGWQUserState(string fid, string tde_id, string orgState, string state, out string msg) {
            object[] results = this.Invoke("UpdateGWQUserState", new object[] {
                        fid,
                        tde_id,
                        orgState,
                        state});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGWQUserStateAsync(string fid, string tde_id, string orgState, string state) {
            this.UpdateGWQUserStateAsync(fid, tde_id, orgState, state, null);
        }
        
        /// <remarks/>
        public void UpdateGWQUserStateAsync(string fid, string tde_id, string orgState, string state, object userState) {
            if ((this.UpdateGWQUserStateOperationCompleted == null)) {
                this.UpdateGWQUserStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGWQUserStateOperationCompleted);
            }
            this.InvokeAsync("UpdateGWQUserState", new object[] {
                        fid,
                        tde_id,
                        orgState,
                        state}, this.UpdateGWQUserStateOperationCompleted, userState);
        }
        
        private void OnUpdateGWQUserStateOperationCompleted(object arg) {
            if ((this.UpdateGWQUserStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGWQUserStateCompleted(this, new UpdateGWQUserStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGWQFetchMoney", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateGWQFetchMoney(string fid, int fetchMoney, out string msg) {
            object[] results = this.Invoke("UpdateGWQFetchMoney", new object[] {
                        fid,
                        fetchMoney});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGWQFetchMoneyAsync(string fid, int fetchMoney) {
            this.UpdateGWQFetchMoneyAsync(fid, fetchMoney, null);
        }
        
        /// <remarks/>
        public void UpdateGWQFetchMoneyAsync(string fid, int fetchMoney, object userState) {
            if ((this.UpdateGWQFetchMoneyOperationCompleted == null)) {
                this.UpdateGWQFetchMoneyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGWQFetchMoneyOperationCompleted);
            }
            this.InvokeAsync("UpdateGWQFetchMoney", new object[] {
                        fid,
                        fetchMoney}, this.UpdateGWQFetchMoneyOperationCompleted, userState);
        }
        
        private void OnUpdateGWQFetchMoneyOperationCompleted(object arg) {
            if ((this.UpdateGWQFetchMoneyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGWQFetchMoneyCompleted(this, new UpdateGWQFetchMoneyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CanDoBatchRefundOperate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanDoBatchRefundOperate(string workType, string batchids, int count, bool queryObjCheck, out string msg) {
            object[] results = this.Invoke("CanDoBatchRefundOperate", new object[] {
                        workType,
                        batchids,
                        count,
                        queryObjCheck});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanDoBatchRefundOperateAsync(string workType, string batchids, int count, bool queryObjCheck) {
            this.CanDoBatchRefundOperateAsync(workType, batchids, count, queryObjCheck, null);
        }
        
        /// <remarks/>
        public void CanDoBatchRefundOperateAsync(string workType, string batchids, int count, bool queryObjCheck, object userState) {
            if ((this.CanDoBatchRefundOperateOperationCompleted == null)) {
                this.CanDoBatchRefundOperateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanDoBatchRefundOperateOperationCompleted);
            }
            this.InvokeAsync("CanDoBatchRefundOperate", new object[] {
                        workType,
                        batchids,
                        count,
                        queryObjCheck}, this.CanDoBatchRefundOperateOperationCompleted, userState);
        }
        
        private void OnCanDoBatchRefundOperateOperationCompleted(object arg) {
            if ((this.CanDoBatchRefundOperateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanDoBatchRefundOperateCompleted(this, new CanDoBatchRefundOperateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CanDoBatchPayOperate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanDoBatchPayOperate(string workType, string batchids, int count, bool queryObjCheck, out string msg) {
            object[] results = this.Invoke("CanDoBatchPayOperate", new object[] {
                        workType,
                        batchids,
                        count,
                        queryObjCheck});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanDoBatchPayOperateAsync(string workType, string batchids, int count, bool queryObjCheck) {
            this.CanDoBatchPayOperateAsync(workType, batchids, count, queryObjCheck, null);
        }
        
        /// <remarks/>
        public void CanDoBatchPayOperateAsync(string workType, string batchids, int count, bool queryObjCheck, object userState) {
            if ((this.CanDoBatchPayOperateOperationCompleted == null)) {
                this.CanDoBatchPayOperateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanDoBatchPayOperateOperationCompleted);
            }
            this.InvokeAsync("CanDoBatchPayOperate", new object[] {
                        workType,
                        batchids,
                        count,
                        queryObjCheck}, this.CanDoBatchPayOperateOperationCompleted, userState);
        }
        
        private void OnCanDoBatchPayOperateOperationCompleted(object arg) {
            if ((this.CanDoBatchPayOperateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanDoBatchPayOperateCompleted(this, new CanDoBatchPayOperateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVipWhiteList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVipWhiteList(string fqqid, int start, int max) {
            object[] results = this.Invoke("GetVipWhiteList", new object[] {
                        fqqid,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVipWhiteListAsync(string fqqid, int start, int max) {
            this.GetVipWhiteListAsync(fqqid, start, max, null);
        }
        
        /// <remarks/>
        public void GetVipWhiteListAsync(string fqqid, int start, int max, object userState) {
            if ((this.GetVipWhiteListOperationCompleted == null)) {
                this.GetVipWhiteListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVipWhiteListOperationCompleted);
            }
            this.InvokeAsync("GetVipWhiteList", new object[] {
                        fqqid,
                        start,
                        max}, this.GetVipWhiteListOperationCompleted, userState);
        }
        
        private void OnGetVipWhiteListOperationCompleted(object arg) {
            if ((this.GetVipWhiteListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVipWhiteListCompleted(this, new GetVipWhiteListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VipWhiteListAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VipWhiteListAdd(string fqqid, string fuserid, out string Msg) {
            object[] results = this.Invoke("VipWhiteListAdd", new object[] {
                        fqqid,
                        fuserid});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VipWhiteListAddAsync(string fqqid, string fuserid) {
            this.VipWhiteListAddAsync(fqqid, fuserid, null);
        }
        
        /// <remarks/>
        public void VipWhiteListAddAsync(string fqqid, string fuserid, object userState) {
            if ((this.VipWhiteListAddOperationCompleted == null)) {
                this.VipWhiteListAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVipWhiteListAddOperationCompleted);
            }
            this.InvokeAsync("VipWhiteListAdd", new object[] {
                        fqqid,
                        fuserid}, this.VipWhiteListAddOperationCompleted, userState);
        }
        
        private void OnVipWhiteListAddOperationCompleted(object arg) {
            if ((this.VipWhiteListAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VipWhiteListAddCompleted(this, new VipWhiteListAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VipWhiteListDel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VipWhiteListDel(string fid, out string Msg) {
            object[] results = this.Invoke("VipWhiteListDel", new object[] {
                        fid});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VipWhiteListDelAsync(string fid) {
            this.VipWhiteListDelAsync(fid, null);
        }
        
        /// <remarks/>
        public void VipWhiteListDelAsync(string fid, object userState) {
            if ((this.VipWhiteListDelOperationCompleted == null)) {
                this.VipWhiteListDelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVipWhiteListDelOperationCompleted);
            }
            this.InvokeAsync("VipWhiteListDel", new object[] {
                        fid}, this.VipWhiteListDelOperationCompleted, userState);
        }
        
        private void OnVipWhiteListDelOperationCompleted(object arg) {
            if ((this.VipWhiteListDelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VipWhiteListDelCompleted(this, new VipWhiteListDelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckBatchRecord_Refund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckBatchRecord_Refund(object[] al, string reason, int result, string outid, string type, string payFrontTime) {
            this.Invoke("CheckBatchRecord_Refund", new object[] {
                        al,
                        reason,
                        result,
                        outid,
                        type,
                        payFrontTime});
        }
        
        /// <remarks/>
        public void CheckBatchRecord_RefundAsync(object[] al, string reason, int result, string outid, string type, string payFrontTime) {
            this.CheckBatchRecord_RefundAsync(al, reason, result, outid, type, payFrontTime, null);
        }
        
        /// <remarks/>
        public void CheckBatchRecord_RefundAsync(object[] al, string reason, int result, string outid, string type, string payFrontTime, object userState) {
            if ((this.CheckBatchRecord_RefundOperationCompleted == null)) {
                this.CheckBatchRecord_RefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBatchRecord_RefundOperationCompleted);
            }
            this.InvokeAsync("CheckBatchRecord_Refund", new object[] {
                        al,
                        reason,
                        result,
                        outid,
                        type,
                        payFrontTime}, this.CheckBatchRecord_RefundOperationCompleted, userState);
        }
        
        private void OnCheckBatchRecord_RefundOperationCompleted(object arg) {
            if ((this.CheckBatchRecord_RefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBatchRecord_RefundCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadRemitWaterFileForCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadRemitWaterFileForCheck(long inputAmt, long inputRemitFee, string filePath, string batchid, string checkid, out string msg) {
            object[] results = this.Invoke("UploadRemitWaterFileForCheck", new object[] {
                        inputAmt,
                        inputRemitFee,
                        filePath,
                        batchid,
                        checkid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadRemitWaterFileForCheckAsync(long inputAmt, long inputRemitFee, string filePath, string batchid, string checkid) {
            this.UploadRemitWaterFileForCheckAsync(inputAmt, inputRemitFee, filePath, batchid, checkid, null);
        }
        
        /// <remarks/>
        public void UploadRemitWaterFileForCheckAsync(long inputAmt, long inputRemitFee, string filePath, string batchid, string checkid, object userState) {
            if ((this.UploadRemitWaterFileForCheckOperationCompleted == null)) {
                this.UploadRemitWaterFileForCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadRemitWaterFileForCheckOperationCompleted);
            }
            this.InvokeAsync("UploadRemitWaterFileForCheck", new object[] {
                        inputAmt,
                        inputRemitFee,
                        filePath,
                        batchid,
                        checkid}, this.UploadRemitWaterFileForCheckOperationCompleted, userState);
        }
        
        private void OnUploadRemitWaterFileForCheckOperationCompleted(object arg) {
            if ((this.UploadRemitWaterFileForCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadRemitWaterFileForCheckCompleted(this, new UploadRemitWaterFileForCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckRemitWater", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckRemitWater(string objId, out string msg) {
            object[] results = this.Invoke("CheckRemitWater", new object[] {
                        objId});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckRemitWaterAsync(string objId) {
            this.CheckRemitWaterAsync(objId, null);
        }
        
        /// <remarks/>
        public void CheckRemitWaterAsync(string objId, object userState) {
            if ((this.CheckRemitWaterOperationCompleted == null)) {
                this.CheckRemitWaterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRemitWaterOperationCompleted);
            }
            this.InvokeAsync("CheckRemitWater", new object[] {
                        objId}, this.CheckRemitWaterOperationCompleted, userState);
        }
        
        private void OnCheckRemitWaterOperationCompleted(object arg) {
            if ((this.CheckRemitWaterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRemitWaterCompleted(this, new CheckRemitWaterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundRefundStateFromPayInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetFundRefundStateFromPayInfo(string batchid, string errIds, out string ErrMsg, out string DoMsg) {
            object[] results = this.Invoke("GetFundRefundStateFromPayInfo", new object[] {
                        batchid,
                        errIds});
            ErrMsg = ((string)(results[1]));
            DoMsg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundRefundStateFromPayInfoAsync(string batchid, string errIds) {
            this.GetFundRefundStateFromPayInfoAsync(batchid, errIds, null);
        }
        
        /// <remarks/>
        public void GetFundRefundStateFromPayInfoAsync(string batchid, string errIds, object userState) {
            if ((this.GetFundRefundStateFromPayInfoOperationCompleted == null)) {
                this.GetFundRefundStateFromPayInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundRefundStateFromPayInfoOperationCompleted);
            }
            this.InvokeAsync("GetFundRefundStateFromPayInfo", new object[] {
                        batchid,
                        errIds}, this.GetFundRefundStateFromPayInfoOperationCompleted, userState);
        }
        
        private void OnGetFundRefundStateFromPayInfoOperationCompleted(object arg) {
            if ((this.GetFundRefundStateFromPayInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundRefundStateFromPayInfoCompleted(this, new GetFundRefundStateFromPayInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePayInfoForFundRefund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SavePayInfoForFundRefund(string errId, int payInfo_UserFlag, string payInfo_TrueName, int payInfo_BankType, string payInfo_area, string payInfo_city, string payInfo_BankName, string payInfo_BankaccNo, string payInfo_PayMemo, out string msg) {
            object[] results = this.Invoke("SavePayInfoForFundRefund", new object[] {
                        errId,
                        payInfo_UserFlag,
                        payInfo_TrueName,
                        payInfo_BankType,
                        payInfo_area,
                        payInfo_city,
                        payInfo_BankName,
                        payInfo_BankaccNo,
                        payInfo_PayMemo});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SavePayInfoForFundRefundAsync(string errId, int payInfo_UserFlag, string payInfo_TrueName, int payInfo_BankType, string payInfo_area, string payInfo_city, string payInfo_BankName, string payInfo_BankaccNo, string payInfo_PayMemo) {
            this.SavePayInfoForFundRefundAsync(errId, payInfo_UserFlag, payInfo_TrueName, payInfo_BankType, payInfo_area, payInfo_city, payInfo_BankName, payInfo_BankaccNo, payInfo_PayMemo, null);
        }
        
        /// <remarks/>
        public void SavePayInfoForFundRefundAsync(string errId, int payInfo_UserFlag, string payInfo_TrueName, int payInfo_BankType, string payInfo_area, string payInfo_city, string payInfo_BankName, string payInfo_BankaccNo, string payInfo_PayMemo, object userState) {
            if ((this.SavePayInfoForFundRefundOperationCompleted == null)) {
                this.SavePayInfoForFundRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePayInfoForFundRefundOperationCompleted);
            }
            this.InvokeAsync("SavePayInfoForFundRefund", new object[] {
                        errId,
                        payInfo_UserFlag,
                        payInfo_TrueName,
                        payInfo_BankType,
                        payInfo_area,
                        payInfo_city,
                        payInfo_BankName,
                        payInfo_BankaccNo,
                        payInfo_PayMemo}, this.SavePayInfoForFundRefundOperationCompleted, userState);
        }
        
        private void OnSavePayInfoForFundRefundOperationCompleted(object arg) {
            if ((this.SavePayInfoForFundRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePayInfoForFundRefundCompleted(this, new SavePayInfoForFundRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPayReturn_ReturnTask_11", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BatPayReturn_ReturnTask_11(string fbatchid, out string errMsg) {
            object[] results = this.Invoke("BatPayReturn_ReturnTask_11", new object[] {
                        fbatchid});
            errMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BatPayReturn_ReturnTask_11Async(string fbatchid) {
            this.BatPayReturn_ReturnTask_11Async(fbatchid, null);
        }
        
        /// <remarks/>
        public void BatPayReturn_ReturnTask_11Async(string fbatchid, object userState) {
            if ((this.BatPayReturn_ReturnTask_11OperationCompleted == null)) {
                this.BatPayReturn_ReturnTask_11OperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPayReturn_ReturnTask_11OperationCompleted);
            }
            this.InvokeAsync("BatPayReturn_ReturnTask_11", new object[] {
                        fbatchid}, this.BatPayReturn_ReturnTask_11OperationCompleted, userState);
        }
        
        private void OnBatPayReturn_ReturnTask_11OperationCompleted(object arg) {
            if ((this.BatPayReturn_ReturnTask_11Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPayReturn_ReturnTask_11Completed(this, new BatPayReturn_ReturnTask_11CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBatchPayBankId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBatchPayBankId(string batchid) {
            object[] results = this.Invoke("GetBatchPayBankId", new object[] {
                        batchid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchPayBankIdAsync(string batchid) {
            this.GetBatchPayBankIdAsync(batchid, null);
        }
        
        /// <remarks/>
        public void GetBatchPayBankIdAsync(string batchid, object userState) {
            if ((this.GetBatchPayBankIdOperationCompleted == null)) {
                this.GetBatchPayBankIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchPayBankIdOperationCompleted);
            }
            this.InvokeAsync("GetBatchPayBankId", new object[] {
                        batchid}, this.GetBatchPayBankIdOperationCompleted, userState);
        }
        
        private void OnGetBatchPayBankIdOperationCompleted(object arg) {
            if ((this.GetBatchPayBankIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchPayBankIdCompleted(this, new GetBatchPayBankIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsAllGH_9999", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsAllGH_9999(string taskid) {
            object[] results = this.Invoke("IsAllGH_9999", new object[] {
                        taskid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsAllGH_9999Async(string taskid) {
            this.IsAllGH_9999Async(taskid, null);
        }
        
        /// <remarks/>
        public void IsAllGH_9999Async(string taskid, object userState) {
            if ((this.IsAllGH_9999OperationCompleted == null)) {
                this.IsAllGH_9999OperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAllGH_9999OperationCompleted);
            }
            this.InvokeAsync("IsAllGH_9999", new object[] {
                        taskid}, this.IsAllGH_9999OperationCompleted, userState);
        }
        
        private void OnIsAllGH_9999OperationCompleted(object arg) {
            if ((this.IsAllGH_9999Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAllGH_9999Completed(this, new IsAllGH_9999CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsDirectAndCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDirectAndCheck(string fbatchid) {
            object[] results = this.Invoke("IsDirectAndCheck", new object[] {
                        fbatchid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDirectAndCheckAsync(string fbatchid) {
            this.IsDirectAndCheckAsync(fbatchid, null);
        }
        
        /// <remarks/>
        public void IsDirectAndCheckAsync(string fbatchid, object userState) {
            if ((this.IsDirectAndCheckOperationCompleted == null)) {
                this.IsDirectAndCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDirectAndCheckOperationCompleted);
            }
            this.InvokeAsync("IsDirectAndCheck", new object[] {
                        fbatchid}, this.IsDirectAndCheckOperationCompleted, userState);
        }
        
        private void OnIsDirectAndCheckOperationCompleted(object arg) {
            if ((this.IsDirectAndCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDirectAndCheckCompleted(this, new IsDirectAndCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DirectRefundCheck_InputFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DirectRefundCheck_InputFile(string strBatchID, string filename, string filepath, string url, out string msg) {
            object[] results = this.Invoke("DirectRefundCheck_InputFile", new object[] {
                        strBatchID,
                        filename,
                        filepath,
                        url});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DirectRefundCheck_InputFileAsync(string strBatchID, string filename, string filepath, string url) {
            this.DirectRefundCheck_InputFileAsync(strBatchID, filename, filepath, url, null);
        }
        
        /// <remarks/>
        public void DirectRefundCheck_InputFileAsync(string strBatchID, string filename, string filepath, string url, object userState) {
            if ((this.DirectRefundCheck_InputFileOperationCompleted == null)) {
                this.DirectRefundCheck_InputFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDirectRefundCheck_InputFileOperationCompleted);
            }
            this.InvokeAsync("DirectRefundCheck_InputFile", new object[] {
                        strBatchID,
                        filename,
                        filepath,
                        url}, this.DirectRefundCheck_InputFileOperationCompleted, userState);
        }
        
        private void OnDirectRefundCheck_InputFileOperationCompleted(object arg) {
            if ((this.DirectRefundCheck_InputFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DirectRefundCheck_InputFileCompleted(this, new DirectRefundCheck_InputFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DirectRefundResult_RefundSucc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DirectRefundResult_RefundSucc(string drawIds, string userName, long sumReturnAmt, int refundCounts, out string msg) {
            object[] results = this.Invoke("DirectRefundResult_RefundSucc", new object[] {
                        drawIds,
                        userName,
                        sumReturnAmt,
                        refundCounts});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DirectRefundResult_RefundSuccAsync(string drawIds, string userName, long sumReturnAmt, int refundCounts) {
            this.DirectRefundResult_RefundSuccAsync(drawIds, userName, sumReturnAmt, refundCounts, null);
        }
        
        /// <remarks/>
        public void DirectRefundResult_RefundSuccAsync(string drawIds, string userName, long sumReturnAmt, int refundCounts, object userState) {
            if ((this.DirectRefundResult_RefundSuccOperationCompleted == null)) {
                this.DirectRefundResult_RefundSuccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDirectRefundResult_RefundSuccOperationCompleted);
            }
            this.InvokeAsync("DirectRefundResult_RefundSucc", new object[] {
                        drawIds,
                        userName,
                        sumReturnAmt,
                        refundCounts}, this.DirectRefundResult_RefundSuccOperationCompleted, userState);
        }
        
        private void OnDirectRefundResult_RefundSuccOperationCompleted(object arg) {
            if ((this.DirectRefundResult_RefundSuccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DirectRefundResult_RefundSuccCompleted(this, new DirectRefundResult_RefundSuccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DirectRefundResult_RefundFail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DirectRefundResult_RefundFail(string drawIds, string userName, long sumReturnAmt, int refundCounts, string bankType, string date, out string msg) {
            object[] results = this.Invoke("DirectRefundResult_RefundFail", new object[] {
                        drawIds,
                        userName,
                        sumReturnAmt,
                        refundCounts,
                        bankType,
                        date});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DirectRefundResult_RefundFailAsync(string drawIds, string userName, long sumReturnAmt, int refundCounts, string bankType, string date) {
            this.DirectRefundResult_RefundFailAsync(drawIds, userName, sumReturnAmt, refundCounts, bankType, date, null);
        }
        
        /// <remarks/>
        public void DirectRefundResult_RefundFailAsync(string drawIds, string userName, long sumReturnAmt, int refundCounts, string bankType, string date, object userState) {
            if ((this.DirectRefundResult_RefundFailOperationCompleted == null)) {
                this.DirectRefundResult_RefundFailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDirectRefundResult_RefundFailOperationCompleted);
            }
            this.InvokeAsync("DirectRefundResult_RefundFail", new object[] {
                        drawIds,
                        userName,
                        sumReturnAmt,
                        refundCounts,
                        bankType,
                        date}, this.DirectRefundResult_RefundFailOperationCompleted, userState);
        }
        
        private void OnDirectRefundResult_RefundFailOperationCompleted(object arg) {
            if ((this.DirectRefundResult_RefundFailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DirectRefundResult_RefundFailCompleted(this, new DirectRefundResult_RefundFailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBank4Batch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertBank4Batch(string bankaccno, int banktype, string paytype, string payrange, out string Msg) {
            object[] results = this.Invoke("InsertBank4Batch", new object[] {
                        bankaccno,
                        banktype,
                        paytype,
                        payrange});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBank4BatchAsync(string bankaccno, int banktype, string paytype, string payrange) {
            this.InsertBank4BatchAsync(bankaccno, banktype, paytype, payrange, null);
        }
        
        /// <remarks/>
        public void InsertBank4BatchAsync(string bankaccno, int banktype, string paytype, string payrange, object userState) {
            if ((this.InsertBank4BatchOperationCompleted == null)) {
                this.InsertBank4BatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBank4BatchOperationCompleted);
            }
            this.InvokeAsync("InsertBank4Batch", new object[] {
                        bankaccno,
                        banktype,
                        paytype,
                        payrange}, this.InsertBank4BatchOperationCompleted, userState);
        }
        
        private void OnInsertBank4BatchOperationCompleted(object arg) {
            if ((this.InsertBank4BatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBank4BatchCompleted(this, new InsertBank4BatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteBank4Batch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteBank4Batch(string bindid, out string Msg) {
            object[] results = this.Invoke("DeleteBank4Batch", new object[] {
                        bindid});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBank4BatchAsync(string bindid) {
            this.DeleteBank4BatchAsync(bindid, null);
        }
        
        /// <remarks/>
        public void DeleteBank4BatchAsync(string bindid, object userState) {
            if ((this.DeleteBank4BatchOperationCompleted == null)) {
                this.DeleteBank4BatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBank4BatchOperationCompleted);
            }
            this.InvokeAsync("DeleteBank4Batch", new object[] {
                        bindid}, this.DeleteBank4BatchOperationCompleted, userState);
        }
        
        private void OnDeleteBank4BatchOperationCompleted(object arg) {
            if ((this.DeleteBank4BatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBank4BatchCompleted(this, new DeleteBank4BatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelPayMatchTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelPayMatchTask(string bankaccno, string date, string reason, out string errMsg) {
            object[] results = this.Invoke("DelPayMatchTask", new object[] {
                        bankaccno,
                        date,
                        reason});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelPayMatchTaskAsync(string bankaccno, string date, string reason) {
            this.DelPayMatchTaskAsync(bankaccno, date, reason, null);
        }
        
        /// <remarks/>
        public void DelPayMatchTaskAsync(string bankaccno, string date, string reason, object userState) {
            if ((this.DelPayMatchTaskOperationCompleted == null)) {
                this.DelPayMatchTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelPayMatchTaskOperationCompleted);
            }
            this.InvokeAsync("DelPayMatchTask", new object[] {
                        bankaccno,
                        date,
                        reason}, this.DelPayMatchTaskOperationCompleted, userState);
        }
        
        private void OnDelPayMatchTaskOperationCompleted(object arg) {
            if ((this.DelPayMatchTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelPayMatchTaskCompleted(this, new DelPayMatchTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadRefundCompensationData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadRefundCompensationData(string fileName, long totalAmt, int totalCount, string checkBatchid, string refundtype, out string msg, out string batchid) {
            object[] results = this.Invoke("UploadRefundCompensationData", new object[] {
                        fileName,
                        totalAmt,
                        totalCount,
                        checkBatchid,
                        refundtype});
            msg = ((string)(results[1]));
            batchid = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadRefundCompensationDataAsync(string fileName, long totalAmt, int totalCount, string checkBatchid, string refundtype) {
            this.UploadRefundCompensationDataAsync(fileName, totalAmt, totalCount, checkBatchid, refundtype, null);
        }
        
        /// <remarks/>
        public void UploadRefundCompensationDataAsync(string fileName, long totalAmt, int totalCount, string checkBatchid, string refundtype, object userState) {
            if ((this.UploadRefundCompensationDataOperationCompleted == null)) {
                this.UploadRefundCompensationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadRefundCompensationDataOperationCompleted);
            }
            this.InvokeAsync("UploadRefundCompensationData", new object[] {
                        fileName,
                        totalAmt,
                        totalCount,
                        checkBatchid,
                        refundtype}, this.UploadRefundCompensationDataOperationCompleted, userState);
        }
        
        private void OnUploadRefundCompensationDataOperationCompleted(object arg) {
            if ((this.UploadRefundCompensationDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadRefundCompensationDataCompleted(this, new UploadRefundCompensationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartRefundCompensationCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartRefundCompensationCheck(string batchid, long totalAmt, int totalCount, out string msg) {
            object[] results = this.Invoke("StartRefundCompensationCheck", new object[] {
                        batchid,
                        totalAmt,
                        totalCount});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartRefundCompensationCheckAsync(string batchid, long totalAmt, int totalCount) {
            this.StartRefundCompensationCheckAsync(batchid, totalAmt, totalCount, null);
        }
        
        /// <remarks/>
        public void StartRefundCompensationCheckAsync(string batchid, long totalAmt, int totalCount, object userState) {
            if ((this.StartRefundCompensationCheckOperationCompleted == null)) {
                this.StartRefundCompensationCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartRefundCompensationCheckOperationCompleted);
            }
            this.InvokeAsync("StartRefundCompensationCheck", new object[] {
                        batchid,
                        totalAmt,
                        totalCount}, this.StartRefundCompensationCheckOperationCompleted, userState);
        }
        
        private void OnStartRefundCompensationCheckOperationCompleted(object arg) {
            if ((this.StartRefundCompensationCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartRefundCompensationCheckCompleted(this, new StartRefundCompensationCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartKFCZmanualRefundCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartKFCZmanualRefundCheck(string Flistid, string Fpayfronttime, string Fbanklist, long lFamt, long lFrefundNum, string Fbanktype, string FReson, string Fbankorder, string FtcPayAccount, string fileName, out string msg) {
            object[] results = this.Invoke("StartKFCZmanualRefundCheck", new object[] {
                        Flistid,
                        Fpayfronttime,
                        Fbanklist,
                        lFamt,
                        lFrefundNum,
                        Fbanktype,
                        FReson,
                        Fbankorder,
                        FtcPayAccount,
                        fileName});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartKFCZmanualRefundCheckAsync(string Flistid, string Fpayfronttime, string Fbanklist, long lFamt, long lFrefundNum, string Fbanktype, string FReson, string Fbankorder, string FtcPayAccount, string fileName) {
            this.StartKFCZmanualRefundCheckAsync(Flistid, Fpayfronttime, Fbanklist, lFamt, lFrefundNum, Fbanktype, FReson, Fbankorder, FtcPayAccount, fileName, null);
        }
        
        /// <remarks/>
        public void StartKFCZmanualRefundCheckAsync(string Flistid, string Fpayfronttime, string Fbanklist, long lFamt, long lFrefundNum, string Fbanktype, string FReson, string Fbankorder, string FtcPayAccount, string fileName, object userState) {
            if ((this.StartKFCZmanualRefundCheckOperationCompleted == null)) {
                this.StartKFCZmanualRefundCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartKFCZmanualRefundCheckOperationCompleted);
            }
            this.InvokeAsync("StartKFCZmanualRefundCheck", new object[] {
                        Flistid,
                        Fpayfronttime,
                        Fbanklist,
                        lFamt,
                        lFrefundNum,
                        Fbanktype,
                        FReson,
                        Fbankorder,
                        FtcPayAccount,
                        fileName}, this.StartKFCZmanualRefundCheckOperationCompleted, userState);
        }
        
        private void OnStartKFCZmanualRefundCheckOperationCompleted(object arg) {
            if ((this.StartKFCZmanualRefundCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartKFCZmanualRefundCheckCompleted(this, new StartKFCZmanualRefundCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckRefundCompensation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckRefundCompensation(string batchid, out string msg) {
            object[] results = this.Invoke("CheckRefundCompensation", new object[] {
                        batchid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckRefundCompensationAsync(string batchid) {
            this.CheckRefundCompensationAsync(batchid, null);
        }
        
        /// <remarks/>
        public void CheckRefundCompensationAsync(string batchid, object userState) {
            if ((this.CheckRefundCompensationOperationCompleted == null)) {
                this.CheckRefundCompensationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRefundCompensationOperationCompleted);
            }
            this.InvokeAsync("CheckRefundCompensation", new object[] {
                        batchid}, this.CheckRefundCompensationOperationCompleted, userState);
        }
        
        private void OnCheckRefundCompensationOperationCompleted(object arg) {
            if ((this.CheckRefundCompensationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRefundCompensationCompleted(this, new CheckRefundCompensationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryCheckAndReturnRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCheckAndReturnRate(string taskid) {
            object[] results = this.Invoke("QueryCheckAndReturnRate", new object[] {
                        taskid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCheckAndReturnRateAsync(string taskid) {
            this.QueryCheckAndReturnRateAsync(taskid, null);
        }
        
        /// <remarks/>
        public void QueryCheckAndReturnRateAsync(string taskid, object userState) {
            if ((this.QueryCheckAndReturnRateOperationCompleted == null)) {
                this.QueryCheckAndReturnRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCheckAndReturnRateOperationCompleted);
            }
            this.InvokeAsync("QueryCheckAndReturnRate", new object[] {
                        taskid}, this.QueryCheckAndReturnRateOperationCompleted, userState);
        }
        
        private void OnQueryCheckAndReturnRateOperationCompleted(object arg) {
            if ((this.QueryCheckAndReturnRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCheckAndReturnRateCompleted(this, new QueryCheckAndReturnRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GiveBack_GetReturnTaskInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GiveBack_GetReturnTaskInfo(string bankType, string checkDate, out string msg) {
            object[] results = this.Invoke("GiveBack_GetReturnTaskInfo", new object[] {
                        bankType,
                        checkDate});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GiveBack_GetReturnTaskInfoAsync(string bankType, string checkDate) {
            this.GiveBack_GetReturnTaskInfoAsync(bankType, checkDate, null);
        }
        
        /// <remarks/>
        public void GiveBack_GetReturnTaskInfoAsync(string bankType, string checkDate, object userState) {
            if ((this.GiveBack_GetReturnTaskInfoOperationCompleted == null)) {
                this.GiveBack_GetReturnTaskInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGiveBack_GetReturnTaskInfoOperationCompleted);
            }
            this.InvokeAsync("GiveBack_GetReturnTaskInfo", new object[] {
                        bankType,
                        checkDate}, this.GiveBack_GetReturnTaskInfoOperationCompleted, userState);
        }
        
        private void OnGiveBack_GetReturnTaskInfoOperationCompleted(object arg) {
            if ((this.GiveBack_GetReturnTaskInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GiveBack_GetReturnTaskInfoCompleted(this, new GiveBack_GetReturnTaskInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckTwoRecord_pay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckTwoRecord_pay(object[] al, string reason, out string Msg) {
            object[] results = this.Invoke("CheckTwoRecord_pay", new object[] {
                        al,
                        reason});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTwoRecord_payAsync(object[] al, string reason) {
            this.CheckTwoRecord_payAsync(al, reason, null);
        }
        
        /// <remarks/>
        public void CheckTwoRecord_payAsync(object[] al, string reason, object userState) {
            if ((this.CheckTwoRecord_payOperationCompleted == null)) {
                this.CheckTwoRecord_payOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTwoRecord_payOperationCompleted);
            }
            this.InvokeAsync("CheckTwoRecord_pay", new object[] {
                        al,
                        reason}, this.CheckTwoRecord_payOperationCompleted, userState);
        }
        
        private void OnCheckTwoRecord_payOperationCompleted(object arg) {
            if ((this.CheckTwoRecord_payCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTwoRecord_payCompleted(this, new CheckTwoRecord_payCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckBatchRecord_pay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckBatchRecord_pay(object[] al, string reason, out string Msg) {
            object[] results = this.Invoke("CheckBatchRecord_pay", new object[] {
                        al,
                        reason});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBatchRecord_payAsync(object[] al, string reason) {
            this.CheckBatchRecord_payAsync(al, reason, null);
        }
        
        /// <remarks/>
        public void CheckBatchRecord_payAsync(object[] al, string reason, object userState) {
            if ((this.CheckBatchRecord_payOperationCompleted == null)) {
                this.CheckBatchRecord_payOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBatchRecord_payOperationCompleted);
            }
            this.InvokeAsync("CheckBatchRecord_pay", new object[] {
                        al,
                        reason}, this.CheckBatchRecord_payOperationCompleted, userState);
        }
        
        private void OnCheckBatchRecord_payOperationCompleted(object arg) {
            if ((this.CheckBatchRecord_payCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBatchRecord_payCompleted(this, new CheckBatchRecord_payCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckTwoRecord_AUTO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckTwoRecord_AUTO(string datestart, string dateend, out int recordcount, out string Msg) {
            object[] results = this.Invoke("CheckTwoRecord_AUTO", new object[] {
                        datestart,
                        dateend});
            recordcount = ((int)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTwoRecord_AUTOAsync(string datestart, string dateend) {
            this.CheckTwoRecord_AUTOAsync(datestart, dateend, null);
        }
        
        /// <remarks/>
        public void CheckTwoRecord_AUTOAsync(string datestart, string dateend, object userState) {
            if ((this.CheckTwoRecord_AUTOOperationCompleted == null)) {
                this.CheckTwoRecord_AUTOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTwoRecord_AUTOOperationCompleted);
            }
            this.InvokeAsync("CheckTwoRecord_AUTO", new object[] {
                        datestart,
                        dateend}, this.CheckTwoRecord_AUTOOperationCompleted, userState);
        }
        
        private void OnCheckTwoRecord_AUTOOperationCompleted(object arg) {
            if ((this.CheckTwoRecord_AUTOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTwoRecord_AUTOCompleted(this, new CheckTwoRecord_AUTOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGWQAdvanceFlag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateGWQAdvanceFlag(string fid, bool advanceFlag, out string msg) {
            object[] results = this.Invoke("UpdateGWQAdvanceFlag", new object[] {
                        fid,
                        advanceFlag});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGWQAdvanceFlagAsync(string fid, bool advanceFlag) {
            this.UpdateGWQAdvanceFlagAsync(fid, advanceFlag, null);
        }
        
        /// <remarks/>
        public void UpdateGWQAdvanceFlagAsync(string fid, bool advanceFlag, object userState) {
            if ((this.UpdateGWQAdvanceFlagOperationCompleted == null)) {
                this.UpdateGWQAdvanceFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGWQAdvanceFlagOperationCompleted);
            }
            this.InvokeAsync("UpdateGWQAdvanceFlag", new object[] {
                        fid,
                        advanceFlag}, this.UpdateGWQAdvanceFlagOperationCompleted, userState);
        }
        
        private void OnUpdateGWQAdvanceFlagOperationCompleted(object arg) {
            if ((this.UpdateGWQAdvanceFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGWQAdvanceFlagCompleted(this, new UpdateGWQAdvanceFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQueryTaskDetail_New_D", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQueryTaskDetail_New_D(string taskid) {
            object[] results = this.Invoke("GetQueryTaskDetail_New_D", new object[] {
                        taskid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryTaskDetail_New_DAsync(string taskid) {
            this.GetQueryTaskDetail_New_DAsync(taskid, null);
        }
        
        /// <remarks/>
        public void GetQueryTaskDetail_New_DAsync(string taskid, object userState) {
            if ((this.GetQueryTaskDetail_New_DOperationCompleted == null)) {
                this.GetQueryTaskDetail_New_DOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryTaskDetail_New_DOperationCompleted);
            }
            this.InvokeAsync("GetQueryTaskDetail_New_D", new object[] {
                        taskid}, this.GetQueryTaskDetail_New_DOperationCompleted, userState);
        }
        
        private void OnGetQueryTaskDetail_New_DOperationCompleted(object arg) {
            if ((this.GetQueryTaskDetail_New_DCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryTaskDetail_New_DCompleted(this, new GetQueryTaskDetail_New_DCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPayTaskFileDetail_New_D", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayTaskFileDetail_New_D(string taskid, string filetype, string strwhere) {
            object[] results = this.Invoke("GetPayTaskFileDetail_New_D", new object[] {
                        taskid,
                        filetype,
                        strwhere});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayTaskFileDetail_New_DAsync(string taskid, string filetype, string strwhere) {
            this.GetPayTaskFileDetail_New_DAsync(taskid, filetype, strwhere, null);
        }
        
        /// <remarks/>
        public void GetPayTaskFileDetail_New_DAsync(string taskid, string filetype, string strwhere, object userState) {
            if ((this.GetPayTaskFileDetail_New_DOperationCompleted == null)) {
                this.GetPayTaskFileDetail_New_DOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayTaskFileDetail_New_DOperationCompleted);
            }
            this.InvokeAsync("GetPayTaskFileDetail_New_D", new object[] {
                        taskid,
                        filetype,
                        strwhere}, this.GetPayTaskFileDetail_New_DOperationCompleted, userState);
        }
        
        private void OnGetPayTaskFileDetail_New_DOperationCompleted(object arg) {
            if ((this.GetPayTaskFileDetail_New_DCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayTaskFileDetail_New_DCompleted(this, new GetPayTaskFileDetail_New_DCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdjustDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAdjustDetail(string batchid, string sequence) {
            object[] results = this.Invoke("GetAdjustDetail", new object[] {
                        batchid,
                        sequence});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdjustDetailAsync(string batchid, string sequence) {
            this.GetAdjustDetailAsync(batchid, sequence, null);
        }
        
        /// <remarks/>
        public void GetAdjustDetailAsync(string batchid, string sequence, object userState) {
            if ((this.GetAdjustDetailOperationCompleted == null)) {
                this.GetAdjustDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdjustDetailOperationCompleted);
            }
            this.InvokeAsync("GetAdjustDetail", new object[] {
                        batchid,
                        sequence}, this.GetAdjustDetailOperationCompleted, userState);
        }
        
        private void OnGetAdjustDetailOperationCompleted(object arg) {
            if ((this.GetAdjustDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdjustDetailCompleted(this, new GetAdjustDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankAccountData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankAccountData(string fbankacctype) {
            object[] results = this.Invoke("GetBankAccountData", new object[] {
                        fbankacctype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankAccountDataAsync(string fbankacctype) {
            this.GetBankAccountDataAsync(fbankacctype, null);
        }
        
        /// <remarks/>
        public void GetBankAccountDataAsync(string fbankacctype, object userState) {
            if ((this.GetBankAccountDataOperationCompleted == null)) {
                this.GetBankAccountDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankAccountDataOperationCompleted);
            }
            this.InvokeAsync("GetBankAccountData", new object[] {
                        fbankacctype}, this.GetBankAccountDataOperationCompleted, userState);
        }
        
        private void OnGetBankAccountDataOperationCompleted(object arg) {
            if ((this.GetBankAccountDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankAccountDataCompleted(this, new GetBankAccountDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankFundProspectData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankFundProspectData(System.DateTime startdt, System.DateTime endddt, out string chukuandate1, out string chukuandate2, out string endpaydate, out string message) {
            object[] results = this.Invoke("GetBankFundProspectData", new object[] {
                        startdt,
                        endddt});
            chukuandate1 = ((string)(results[1]));
            chukuandate2 = ((string)(results[2]));
            endpaydate = ((string)(results[3]));
            message = ((string)(results[4]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankFundProspectDataAsync(System.DateTime startdt, System.DateTime endddt) {
            this.GetBankFundProspectDataAsync(startdt, endddt, null);
        }
        
        /// <remarks/>
        public void GetBankFundProspectDataAsync(System.DateTime startdt, System.DateTime endddt, object userState) {
            if ((this.GetBankFundProspectDataOperationCompleted == null)) {
                this.GetBankFundProspectDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankFundProspectDataOperationCompleted);
            }
            this.InvokeAsync("GetBankFundProspectData", new object[] {
                        startdt,
                        endddt}, this.GetBankFundProspectDataOperationCompleted, userState);
        }
        
        private void OnGetBankFundProspectDataOperationCompleted(object arg) {
            if ((this.GetBankFundProspectDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankFundProspectDataCompleted(this, new GetBankFundProspectDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundProspectData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundProspectData(System.DateTime startdt, System.DateTime endddt, string fid) {
            object[] results = this.Invoke("GetFundProspectData", new object[] {
                        startdt,
                        endddt,
                        fid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundProspectDataAsync(System.DateTime startdt, System.DateTime endddt, string fid) {
            this.GetFundProspectDataAsync(startdt, endddt, fid, null);
        }
        
        /// <remarks/>
        public void GetFundProspectDataAsync(System.DateTime startdt, System.DateTime endddt, string fid, object userState) {
            if ((this.GetFundProspectDataOperationCompleted == null)) {
                this.GetFundProspectDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundProspectDataOperationCompleted);
            }
            this.InvokeAsync("GetFundProspectData", new object[] {
                        startdt,
                        endddt,
                        fid}, this.GetFundProspectDataOperationCompleted, userState);
        }
        
        private void OnGetFundProspectDataOperationCompleted(object arg) {
            if ((this.GetFundProspectDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundProspectDataCompleted(this, new GetFundProspectDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBankFundProspectData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertBankFundProspectData(string fstartdate, string fenddate, string fpaybanktype, string fgatherbanktype, string fdate, string famt, string fmemo, string fuser, string fbatch, string fprotype, string fPayMethod, string fPayType, string famtInterval, out string mesg) {
            object[] results = this.Invoke("InsertBankFundProspectData", new object[] {
                        fstartdate,
                        fenddate,
                        fpaybanktype,
                        fgatherbanktype,
                        fdate,
                        famt,
                        fmemo,
                        fuser,
                        fbatch,
                        fprotype,
                        fPayMethod,
                        fPayType,
                        famtInterval});
            mesg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBankFundProspectDataAsync(string fstartdate, string fenddate, string fpaybanktype, string fgatherbanktype, string fdate, string famt, string fmemo, string fuser, string fbatch, string fprotype, string fPayMethod, string fPayType, string famtInterval) {
            this.InsertBankFundProspectDataAsync(fstartdate, fenddate, fpaybanktype, fgatherbanktype, fdate, famt, fmemo, fuser, fbatch, fprotype, fPayMethod, fPayType, famtInterval, null);
        }
        
        /// <remarks/>
        public void InsertBankFundProspectDataAsync(string fstartdate, string fenddate, string fpaybanktype, string fgatherbanktype, string fdate, string famt, string fmemo, string fuser, string fbatch, string fprotype, string fPayMethod, string fPayType, string famtInterval, object userState) {
            if ((this.InsertBankFundProspectDataOperationCompleted == null)) {
                this.InsertBankFundProspectDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBankFundProspectDataOperationCompleted);
            }
            this.InvokeAsync("InsertBankFundProspectData", new object[] {
                        fstartdate,
                        fenddate,
                        fpaybanktype,
                        fgatherbanktype,
                        fdate,
                        famt,
                        fmemo,
                        fuser,
                        fbatch,
                        fprotype,
                        fPayMethod,
                        fPayType,
                        famtInterval}, this.InsertBankFundProspectDataOperationCompleted, userState);
        }
        
        private void OnInsertBankFundProspectDataOperationCompleted(object arg) {
            if ((this.InsertBankFundProspectDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBankFundProspectDataCompleted(this, new InsertBankFundProspectDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBankFundProspectData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateBankFundProspectData(string fid, string fdate, string famt, string fmemo, string fuser, string fPayMethod, string fPayType, out string msg) {
            object[] results = this.Invoke("UpdateBankFundProspectData", new object[] {
                        fid,
                        fdate,
                        famt,
                        fmemo,
                        fuser,
                        fPayMethod,
                        fPayType});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBankFundProspectDataAsync(string fid, string fdate, string famt, string fmemo, string fuser, string fPayMethod, string fPayType) {
            this.UpdateBankFundProspectDataAsync(fid, fdate, famt, fmemo, fuser, fPayMethod, fPayType, null);
        }
        
        /// <remarks/>
        public void UpdateBankFundProspectDataAsync(string fid, string fdate, string famt, string fmemo, string fuser, string fPayMethod, string fPayType, object userState) {
            if ((this.UpdateBankFundProspectDataOperationCompleted == null)) {
                this.UpdateBankFundProspectDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBankFundProspectDataOperationCompleted);
            }
            this.InvokeAsync("UpdateBankFundProspectData", new object[] {
                        fid,
                        fdate,
                        famt,
                        fmemo,
                        fuser,
                        fPayMethod,
                        fPayType}, this.UpdateBankFundProspectDataOperationCompleted, userState);
        }
        
        private void OnUpdateBankFundProspectDataOperationCompleted(object arg) {
            if ((this.UpdateBankFundProspectDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBankFundProspectDataCompleted(this, new UpdateBankFundProspectDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteBankFundProspectData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteBankFundProspectData(string fid, out string message) {
            object[] results = this.Invoke("DeleteBankFundProspectData", new object[] {
                        fid});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBankFundProspectDataAsync(string fid) {
            this.DeleteBankFundProspectDataAsync(fid, null);
        }
        
        /// <remarks/>
        public void DeleteBankFundProspectDataAsync(string fid, object userState) {
            if ((this.DeleteBankFundProspectDataOperationCompleted == null)) {
                this.DeleteBankFundProspectDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBankFundProspectDataOperationCompleted);
            }
            this.InvokeAsync("DeleteBankFundProspectData", new object[] {
                        fid}, this.DeleteBankFundProspectDataOperationCompleted, userState);
        }
        
        private void OnDeleteBankFundProspectDataOperationCompleted(object arg) {
            if ((this.DeleteBankFundProspectDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBankFundProspectDataCompleted(this, new DeleteBankFundProspectDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFundProspectState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFundProspectState(string fid, string fstate, string userid, out string message) {
            object[] results = this.Invoke("UpdateFundProspectState", new object[] {
                        fid,
                        fstate,
                        userid});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFundProspectStateAsync(string fid, string fstate, string userid) {
            this.UpdateFundProspectStateAsync(fid, fstate, userid, null);
        }
        
        /// <remarks/>
        public void UpdateFundProspectStateAsync(string fid, string fstate, string userid, object userState) {
            if ((this.UpdateFundProspectStateOperationCompleted == null)) {
                this.UpdateFundProspectStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFundProspectStateOperationCompleted);
            }
            this.InvokeAsync("UpdateFundProspectState", new object[] {
                        fid,
                        fstate,
                        userid}, this.UpdateFundProspectStateOperationCompleted, userState);
        }
        
        private void OnUpdateFundProspectStateOperationCompleted(object arg) {
            if ((this.UpdateFundProspectStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFundProspectStateCompleted(this, new UpdateFundProspectStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundProspectPlanByBatch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundProspectPlanByBatch(string fstartdate, string fenddate, string fbatch, string xuqiubanktype) {
            object[] results = this.Invoke("GetFundProspectPlanByBatch", new object[] {
                        fstartdate,
                        fenddate,
                        fbatch,
                        xuqiubanktype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundProspectPlanByBatchAsync(string fstartdate, string fenddate, string fbatch, string xuqiubanktype) {
            this.GetFundProspectPlanByBatchAsync(fstartdate, fenddate, fbatch, xuqiubanktype, null);
        }
        
        /// <remarks/>
        public void GetFundProspectPlanByBatchAsync(string fstartdate, string fenddate, string fbatch, string xuqiubanktype, object userState) {
            if ((this.GetFundProspectPlanByBatchOperationCompleted == null)) {
                this.GetFundProspectPlanByBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundProspectPlanByBatchOperationCompleted);
            }
            this.InvokeAsync("GetFundProspectPlanByBatch", new object[] {
                        fstartdate,
                        fenddate,
                        fbatch,
                        xuqiubanktype}, this.GetFundProspectPlanByBatchOperationCompleted, userState);
        }
        
        private void OnGetFundProspectPlanByBatchOperationCompleted(object arg) {
            if ((this.GetFundProspectPlanByBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundProspectPlanByBatchCompleted(this, new GetFundProspectPlanByBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundProspectDataForBatch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundProspectDataForBatch(string fbegindate, string fenddate, string fdate, string xuqiubanktype, string chukuanbanktype, string fqbatch, string fpatch, string ffstate, bool istoaccout) {
            object[] results = this.Invoke("GetFundProspectDataForBatch", new object[] {
                        fbegindate,
                        fenddate,
                        fdate,
                        xuqiubanktype,
                        chukuanbanktype,
                        fqbatch,
                        fpatch,
                        ffstate,
                        istoaccout});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundProspectDataForBatchAsync(string fbegindate, string fenddate, string fdate, string xuqiubanktype, string chukuanbanktype, string fqbatch, string fpatch, string ffstate, bool istoaccout) {
            this.GetFundProspectDataForBatchAsync(fbegindate, fenddate, fdate, xuqiubanktype, chukuanbanktype, fqbatch, fpatch, ffstate, istoaccout, null);
        }
        
        /// <remarks/>
        public void GetFundProspectDataForBatchAsync(string fbegindate, string fenddate, string fdate, string xuqiubanktype, string chukuanbanktype, string fqbatch, string fpatch, string ffstate, bool istoaccout, object userState) {
            if ((this.GetFundProspectDataForBatchOperationCompleted == null)) {
                this.GetFundProspectDataForBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundProspectDataForBatchOperationCompleted);
            }
            this.InvokeAsync("GetFundProspectDataForBatch", new object[] {
                        fbegindate,
                        fenddate,
                        fdate,
                        xuqiubanktype,
                        chukuanbanktype,
                        fqbatch,
                        fpatch,
                        ffstate,
                        istoaccout}, this.GetFundProspectDataForBatchOperationCompleted, userState);
        }
        
        private void OnGetFundProspectDataForBatchOperationCompleted(object arg) {
            if ((this.GetFundProspectDataForBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundProspectDataForBatchCompleted(this, new GetFundProspectDataForBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundProspectDataDetailCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFundProspectDataDetailCount(string fdate, string xuqiubanktype, string fchukuanbanktype, string fstate, string fbatch, string fstandby1) {
            object[] results = this.Invoke("GetFundProspectDataDetailCount", new object[] {
                        fdate,
                        xuqiubanktype,
                        fchukuanbanktype,
                        fstate,
                        fbatch,
                        fstandby1});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundProspectDataDetailCountAsync(string fdate, string xuqiubanktype, string fchukuanbanktype, string fstate, string fbatch, string fstandby1) {
            this.GetFundProspectDataDetailCountAsync(fdate, xuqiubanktype, fchukuanbanktype, fstate, fbatch, fstandby1, null);
        }
        
        /// <remarks/>
        public void GetFundProspectDataDetailCountAsync(string fdate, string xuqiubanktype, string fchukuanbanktype, string fstate, string fbatch, string fstandby1, object userState) {
            if ((this.GetFundProspectDataDetailCountOperationCompleted == null)) {
                this.GetFundProspectDataDetailCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundProspectDataDetailCountOperationCompleted);
            }
            this.InvokeAsync("GetFundProspectDataDetailCount", new object[] {
                        fdate,
                        xuqiubanktype,
                        fchukuanbanktype,
                        fstate,
                        fbatch,
                        fstandby1}, this.GetFundProspectDataDetailCountOperationCompleted, userState);
        }
        
        private void OnGetFundProspectDataDetailCountOperationCompleted(object arg) {
            if ((this.GetFundProspectDataDetailCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundProspectDataDetailCountCompleted(this, new GetFundProspectDataDetailCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundProspectDataDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundProspectDataDetail(string fdate, string xuqiubanktype, string fchukuanbanktype, string fstate, string fbatch, string fstandby1, int start, int max, out double totalsum) {
            object[] results = this.Invoke("GetFundProspectDataDetail", new object[] {
                        fdate,
                        xuqiubanktype,
                        fchukuanbanktype,
                        fstate,
                        fbatch,
                        fstandby1,
                        start,
                        max});
            totalsum = ((double)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundProspectDataDetailAsync(string fdate, string xuqiubanktype, string fchukuanbanktype, string fstate, string fbatch, string fstandby1, int start, int max) {
            this.GetFundProspectDataDetailAsync(fdate, xuqiubanktype, fchukuanbanktype, fstate, fbatch, fstandby1, start, max, null);
        }
        
        /// <remarks/>
        public void GetFundProspectDataDetailAsync(string fdate, string xuqiubanktype, string fchukuanbanktype, string fstate, string fbatch, string fstandby1, int start, int max, object userState) {
            if ((this.GetFundProspectDataDetailOperationCompleted == null)) {
                this.GetFundProspectDataDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundProspectDataDetailOperationCompleted);
            }
            this.InvokeAsync("GetFundProspectDataDetail", new object[] {
                        fdate,
                        xuqiubanktype,
                        fchukuanbanktype,
                        fstate,
                        fbatch,
                        fstandby1,
                        start,
                        max}, this.GetFundProspectDataDetailOperationCompleted, userState);
        }
        
        private void OnGetFundProspectDataDetailOperationCompleted(object arg) {
            if ((this.GetFundProspectDataDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundProspectDataDetailCompleted(this, new GetFundProspectDataDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundProspectPlan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundProspectPlan(string fstartdate, string fenddate, string xuqiubanktype) {
            object[] results = this.Invoke("GetFundProspectPlan", new object[] {
                        fstartdate,
                        fenddate,
                        xuqiubanktype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundProspectPlanAsync(string fstartdate, string fenddate, string xuqiubanktype) {
            this.GetFundProspectPlanAsync(fstartdate, fenddate, xuqiubanktype, null);
        }
        
        /// <remarks/>
        public void GetFundProspectPlanAsync(string fstartdate, string fenddate, string xuqiubanktype, object userState) {
            if ((this.GetFundProspectPlanOperationCompleted == null)) {
                this.GetFundProspectPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundProspectPlanOperationCompleted);
            }
            this.InvokeAsync("GetFundProspectPlan", new object[] {
                        fstartdate,
                        fenddate,
                        xuqiubanktype}, this.GetFundProspectPlanOperationCompleted, userState);
        }
        
        private void OnGetFundProspectPlanOperationCompleted(object arg) {
            if ((this.GetFundProspectPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundProspectPlanCompleted(this, new GetFundProspectPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankfundProspectByFid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankfundProspectByFid(string fid) {
            object[] results = this.Invoke("GetBankfundProspectByFid", new object[] {
                        fid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankfundProspectByFidAsync(string fid) {
            this.GetBankfundProspectByFidAsync(fid, null);
        }
        
        /// <remarks/>
        public void GetBankfundProspectByFidAsync(string fid, object userState) {
            if ((this.GetBankfundProspectByFidOperationCompleted == null)) {
                this.GetBankfundProspectByFidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankfundProspectByFidOperationCompleted);
            }
            this.InvokeAsync("GetBankfundProspectByFid", new object[] {
                        fid}, this.GetBankfundProspectByFidOperationCompleted, userState);
        }
        
        private void OnGetBankfundProspectByFidOperationCompleted(object arg) {
            if ((this.GetBankfundProspectByFidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankfundProspectByFidCompleted(this, new GetBankfundProspectByFidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRequestProspect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateRequestProspect(object[] fids, string fuser, out string mesg) {
            object[] results = this.Invoke("UpdateRequestProspect", new object[] {
                        fids,
                        fuser});
            mesg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRequestProspectAsync(object[] fids, string fuser) {
            this.UpdateRequestProspectAsync(fids, fuser, null);
        }
        
        /// <remarks/>
        public void UpdateRequestProspectAsync(object[] fids, string fuser, object userState) {
            if ((this.UpdateRequestProspectOperationCompleted == null)) {
                this.UpdateRequestProspectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRequestProspectOperationCompleted);
            }
            this.InvokeAsync("UpdateRequestProspect", new object[] {
                        fids,
                        fuser}, this.UpdateRequestProspectOperationCompleted, userState);
        }
        
        private void OnUpdateRequestProspectOperationCompleted(object arg) {
            if ((this.UpdateRequestProspectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRequestProspectCompleted(this, new UpdateRequestProspectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RequestProspectForBatch_Refuse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RequestProspectForBatch_Refuse(string fdate, string xuqiubanktype, string chukuanbanktype, string fstandy1, string fbatch, string fuser, out string mesg) {
            object[] results = this.Invoke("RequestProspectForBatch_Refuse", new object[] {
                        fdate,
                        xuqiubanktype,
                        chukuanbanktype,
                        fstandy1,
                        fbatch,
                        fuser});
            mesg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RequestProspectForBatch_RefuseAsync(string fdate, string xuqiubanktype, string chukuanbanktype, string fstandy1, string fbatch, string fuser) {
            this.RequestProspectForBatch_RefuseAsync(fdate, xuqiubanktype, chukuanbanktype, fstandy1, fbatch, fuser, null);
        }
        
        /// <remarks/>
        public void RequestProspectForBatch_RefuseAsync(string fdate, string xuqiubanktype, string chukuanbanktype, string fstandy1, string fbatch, string fuser, object userState) {
            if ((this.RequestProspectForBatch_RefuseOperationCompleted == null)) {
                this.RequestProspectForBatch_RefuseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestProspectForBatch_RefuseOperationCompleted);
            }
            this.InvokeAsync("RequestProspectForBatch_Refuse", new object[] {
                        fdate,
                        xuqiubanktype,
                        chukuanbanktype,
                        fstandy1,
                        fbatch,
                        fuser}, this.RequestProspectForBatch_RefuseOperationCompleted, userState);
        }
        
        private void OnRequestProspectForBatch_RefuseOperationCompleted(object arg) {
            if ((this.RequestProspectForBatch_RefuseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestProspectForBatch_RefuseCompleted(this, new RequestProspectForBatch_RefuseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RequestProspectForBatch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RequestProspectForBatch(string fdate, string xuqiubanktype, string chukuanbanktype, string fstandy1, string fbatch, string fuser, out string mesg) {
            object[] results = this.Invoke("RequestProspectForBatch", new object[] {
                        fdate,
                        xuqiubanktype,
                        chukuanbanktype,
                        fstandy1,
                        fbatch,
                        fuser});
            mesg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RequestProspectForBatchAsync(string fdate, string xuqiubanktype, string chukuanbanktype, string fstandy1, string fbatch, string fuser) {
            this.RequestProspectForBatchAsync(fdate, xuqiubanktype, chukuanbanktype, fstandy1, fbatch, fuser, null);
        }
        
        /// <remarks/>
        public void RequestProspectForBatchAsync(string fdate, string xuqiubanktype, string chukuanbanktype, string fstandy1, string fbatch, string fuser, object userState) {
            if ((this.RequestProspectForBatchOperationCompleted == null)) {
                this.RequestProspectForBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestProspectForBatchOperationCompleted);
            }
            this.InvokeAsync("RequestProspectForBatch", new object[] {
                        fdate,
                        xuqiubanktype,
                        chukuanbanktype,
                        fstandy1,
                        fbatch,
                        fuser}, this.RequestProspectForBatchOperationCompleted, userState);
        }
        
        private void OnRequestProspectForBatchOperationCompleted(object arg) {
            if ((this.RequestProspectForBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestProspectForBatchCompleted(this, new RequestProspectForBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDPBankfundprospecCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDPBankfundprospecCount(string fstartdate, string fenddate, string chukuanbanktype, string xuqiubanktype, string fstate, string patch) {
            object[] results = this.Invoke("GetDPBankfundprospecCount", new object[] {
                        fstartdate,
                        fenddate,
                        chukuanbanktype,
                        xuqiubanktype,
                        fstate,
                        patch});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDPBankfundprospecCountAsync(string fstartdate, string fenddate, string chukuanbanktype, string xuqiubanktype, string fstate, string patch) {
            this.GetDPBankfundprospecCountAsync(fstartdate, fenddate, chukuanbanktype, xuqiubanktype, fstate, patch, null);
        }
        
        /// <remarks/>
        public void GetDPBankfundprospecCountAsync(string fstartdate, string fenddate, string chukuanbanktype, string xuqiubanktype, string fstate, string patch, object userState) {
            if ((this.GetDPBankfundprospecCountOperationCompleted == null)) {
                this.GetDPBankfundprospecCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDPBankfundprospecCountOperationCompleted);
            }
            this.InvokeAsync("GetDPBankfundprospecCount", new object[] {
                        fstartdate,
                        fenddate,
                        chukuanbanktype,
                        xuqiubanktype,
                        fstate,
                        patch}, this.GetDPBankfundprospecCountOperationCompleted, userState);
        }
        
        private void OnGetDPBankfundprospecCountOperationCompleted(object arg) {
            if ((this.GetDPBankfundprospecCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDPBankfundprospecCountCompleted(this, new GetDPBankfundprospecCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDPBankfundprospect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDPBankfundprospect(string fstartdate, string fenddate, string fstate, string chukuanbanktype, string xuqiubanktype, string patch, int start, int max) {
            object[] results = this.Invoke("GetDPBankfundprospect", new object[] {
                        fstartdate,
                        fenddate,
                        fstate,
                        chukuanbanktype,
                        xuqiubanktype,
                        patch,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDPBankfundprospectAsync(string fstartdate, string fenddate, string fstate, string chukuanbanktype, string xuqiubanktype, string patch, int start, int max) {
            this.GetDPBankfundprospectAsync(fstartdate, fenddate, fstate, chukuanbanktype, xuqiubanktype, patch, start, max, null);
        }
        
        /// <remarks/>
        public void GetDPBankfundprospectAsync(string fstartdate, string fenddate, string fstate, string chukuanbanktype, string xuqiubanktype, string patch, int start, int max, object userState) {
            if ((this.GetDPBankfundprospectOperationCompleted == null)) {
                this.GetDPBankfundprospectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDPBankfundprospectOperationCompleted);
            }
            this.InvokeAsync("GetDPBankfundprospect", new object[] {
                        fstartdate,
                        fenddate,
                        fstate,
                        chukuanbanktype,
                        xuqiubanktype,
                        patch,
                        start,
                        max}, this.GetDPBankfundprospectOperationCompleted, userState);
        }
        
        private void OnGetDPBankfundprospectOperationCompleted(object arg) {
            if ((this.GetDPBankfundprospectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDPBankfundprospectCompleted(this, new GetDPBankfundprospectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FundprospectState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FundprospectState(string fid, string ffetchid, int fstate, string userid, string toacctime, out string msg) {
            object[] results = this.Invoke("FundprospectState", new object[] {
                        fid,
                        ffetchid,
                        fstate,
                        userid,
                        toacctime});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FundprospectStateAsync(string fid, string ffetchid, int fstate, string userid, string toacctime) {
            this.FundprospectStateAsync(fid, ffetchid, fstate, userid, toacctime, null);
        }
        
        /// <remarks/>
        public void FundprospectStateAsync(string fid, string ffetchid, int fstate, string userid, string toacctime, object userState) {
            if ((this.FundprospectStateOperationCompleted == null)) {
                this.FundprospectStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFundprospectStateOperationCompleted);
            }
            this.InvokeAsync("FundprospectState", new object[] {
                        fid,
                        ffetchid,
                        fstate,
                        userid,
                        toacctime}, this.FundprospectStateOperationCompleted, userState);
        }
        
        private void OnFundprospectStateOperationCompleted(object arg) {
            if ((this.FundprospectStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FundprospectStateCompleted(this, new FundprospectStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FundprospectCancel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FundprospectCancel(string fid, out string msg) {
            object[] results = this.Invoke("FundprospectCancel", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FundprospectCancelAsync(string fid) {
            this.FundprospectCancelAsync(fid, null);
        }
        
        /// <remarks/>
        public void FundprospectCancelAsync(string fid, object userState) {
            if ((this.FundprospectCancelOperationCompleted == null)) {
                this.FundprospectCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFundprospectCancelOperationCompleted);
            }
            this.InvokeAsync("FundprospectCancel", new object[] {
                        fid}, this.FundprospectCancelOperationCompleted, userState);
        }
        
        private void OnFundprospectCancelOperationCompleted(object arg) {
            if ((this.FundprospectCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FundprospectCancelCompleted(this, new FundprospectCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoFundCollectInnerAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AutoFundCollectInnerAccount(string yearMonth, string userid, out string msg) {
            object[] results = this.Invoke("AutoFundCollectInnerAccount", new object[] {
                        yearMonth,
                        userid});
            msg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AutoFundCollectInnerAccountAsync(string yearMonth, string userid) {
            this.AutoFundCollectInnerAccountAsync(yearMonth, userid, null);
        }
        
        /// <remarks/>
        public void AutoFundCollectInnerAccountAsync(string yearMonth, string userid, object userState) {
            if ((this.AutoFundCollectInnerAccountOperationCompleted == null)) {
                this.AutoFundCollectInnerAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoFundCollectInnerAccountOperationCompleted);
            }
            this.InvokeAsync("AutoFundCollectInnerAccount", new object[] {
                        yearMonth,
                        userid}, this.AutoFundCollectInnerAccountOperationCompleted, userState);
        }
        
        private void OnAutoFundCollectInnerAccountOperationCompleted(object arg) {
            if ((this.AutoFundCollectInnerAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoFundCollectInnerAccountCompleted(this, new AutoFundCollectInnerAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommitFundCollectInnerAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CommitFundCollectInnerAccount(object[] fids, Finance_Header fh) {
            this.Invoke("CommitFundCollectInnerAccount", new object[] {
                        fids,
                        fh});
        }
        
        /// <remarks/>
        public void CommitFundCollectInnerAccountAsync(object[] fids, Finance_Header fh) {
            this.CommitFundCollectInnerAccountAsync(fids, fh, null);
        }
        
        /// <remarks/>
        public void CommitFundCollectInnerAccountAsync(object[] fids, Finance_Header fh, object userState) {
            if ((this.CommitFundCollectInnerAccountOperationCompleted == null)) {
                this.CommitFundCollectInnerAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitFundCollectInnerAccountOperationCompleted);
            }
            this.InvokeAsync("CommitFundCollectInnerAccount", new object[] {
                        fids,
                        fh}, this.CommitFundCollectInnerAccountOperationCompleted, userState);
        }
        
        private void OnCommitFundCollectInnerAccountOperationCompleted(object arg) {
            if ((this.CommitFundCollectInnerAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitFundCollectInnerAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XinHuaSaveZWState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool XinHuaSaveZWState(string objid, string chargeid, int zwState, long amount, out string msg) {
            object[] results = this.Invoke("XinHuaSaveZWState", new object[] {
                        objid,
                        chargeid,
                        zwState,
                        amount});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void XinHuaSaveZWStateAsync(string objid, string chargeid, int zwState, long amount) {
            this.XinHuaSaveZWStateAsync(objid, chargeid, zwState, amount, null);
        }
        
        /// <remarks/>
        public void XinHuaSaveZWStateAsync(string objid, string chargeid, int zwState, long amount, object userState) {
            if ((this.XinHuaSaveZWStateOperationCompleted == null)) {
                this.XinHuaSaveZWStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXinHuaSaveZWStateOperationCompleted);
            }
            this.InvokeAsync("XinHuaSaveZWState", new object[] {
                        objid,
                        chargeid,
                        zwState,
                        amount}, this.XinHuaSaveZWStateOperationCompleted, userState);
        }
        
        private void OnXinHuaSaveZWStateOperationCompleted(object arg) {
            if ((this.XinHuaSaveZWStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XinHuaSaveZWStateCompleted(this, new XinHuaSaveZWStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckXinHuaOffPay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckXinHuaOffPay(string objid, out string msg) {
            object[] results = this.Invoke("CheckXinHuaOffPay", new object[] {
                        objid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckXinHuaOffPayAsync(string objid) {
            this.CheckXinHuaOffPayAsync(objid, null);
        }
        
        /// <remarks/>
        public void CheckXinHuaOffPayAsync(string objid, object userState) {
            if ((this.CheckXinHuaOffPayOperationCompleted == null)) {
                this.CheckXinHuaOffPayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckXinHuaOffPayOperationCompleted);
            }
            this.InvokeAsync("CheckXinHuaOffPay", new object[] {
                        objid}, this.CheckXinHuaOffPayOperationCompleted, userState);
        }
        
        private void OnCheckXinHuaOffPayOperationCompleted(object arg) {
            if ((this.CheckXinHuaOffPayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckXinHuaOffPayCompleted(this, new CheckXinHuaOffPayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoCheckXinHuaOffPay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AutoCheckXinHuaOffPay(string user, out string msg) {
            object[] results = this.Invoke("AutoCheckXinHuaOffPay", new object[] {
                        user});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AutoCheckXinHuaOffPayAsync(string user) {
            this.AutoCheckXinHuaOffPayAsync(user, null);
        }
        
        /// <remarks/>
        public void AutoCheckXinHuaOffPayAsync(string user, object userState) {
            if ((this.AutoCheckXinHuaOffPayOperationCompleted == null)) {
                this.AutoCheckXinHuaOffPayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoCheckXinHuaOffPayOperationCompleted);
            }
            this.InvokeAsync("AutoCheckXinHuaOffPay", new object[] {
                        user}, this.AutoCheckXinHuaOffPayOperationCompleted, userState);
        }
        
        private void OnAutoCheckXinHuaOffPayOperationCompleted(object arg) {
            if ((this.AutoCheckXinHuaOffPayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoCheckXinHuaOffPayCompleted(this, new AutoCheckXinHuaOffPayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoStartOutPayRefundCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AutoStartOutPayRefundCheck(string user, string date, out string msg) {
            object[] results = this.Invoke("AutoStartOutPayRefundCheck", new object[] {
                        user,
                        date});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AutoStartOutPayRefundCheckAsync(string user, string date) {
            this.AutoStartOutPayRefundCheckAsync(user, date, null);
        }
        
        /// <remarks/>
        public void AutoStartOutPayRefundCheckAsync(string user, string date, object userState) {
            if ((this.AutoStartOutPayRefundCheckOperationCompleted == null)) {
                this.AutoStartOutPayRefundCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoStartOutPayRefundCheckOperationCompleted);
            }
            this.InvokeAsync("AutoStartOutPayRefundCheck", new object[] {
                        user,
                        date}, this.AutoStartOutPayRefundCheckOperationCompleted, userState);
        }
        
        private void OnAutoStartOutPayRefundCheckOperationCompleted(object arg) {
            if ((this.AutoStartOutPayRefundCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoStartOutPayRefundCheckCompleted(this, new AutoStartOutPayRefundCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OutPayRefundCheck_InputFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool OutPayRefundCheck_InputFile(string strBatchID, string filename, string filepath, string url, out string msg) {
            object[] results = this.Invoke("OutPayRefundCheck_InputFile", new object[] {
                        strBatchID,
                        filename,
                        filepath,
                        url});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void OutPayRefundCheck_InputFileAsync(string strBatchID, string filename, string filepath, string url) {
            this.OutPayRefundCheck_InputFileAsync(strBatchID, filename, filepath, url, null);
        }
        
        /// <remarks/>
        public void OutPayRefundCheck_InputFileAsync(string strBatchID, string filename, string filepath, string url, object userState) {
            if ((this.OutPayRefundCheck_InputFileOperationCompleted == null)) {
                this.OutPayRefundCheck_InputFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOutPayRefundCheck_InputFileOperationCompleted);
            }
            this.InvokeAsync("OutPayRefundCheck_InputFile", new object[] {
                        strBatchID,
                        filename,
                        filepath,
                        url}, this.OutPayRefundCheck_InputFileOperationCompleted, userState);
        }
        
        private void OnOutPayRefundCheck_InputFileOperationCompleted(object arg) {
            if ((this.OutPayRefundCheck_InputFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OutPayRefundCheck_InputFileCompleted(this, new OutPayRefundCheck_InputFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RefundStartByRisk", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RefundStartByRisk(string RiskRefundID, string PayTrueName, string RiskAttn, string AdjunctUrl, int HaveQB, long TotalLoss, long PeifuMoney, long Intercept, System.Data.DataSet RefundDetail, out string ErrMsg) {
            object[] results = this.Invoke("RefundStartByRisk", new object[] {
                        RiskRefundID,
                        PayTrueName,
                        RiskAttn,
                        AdjunctUrl,
                        HaveQB,
                        TotalLoss,
                        PeifuMoney,
                        Intercept,
                        RefundDetail});
            ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RefundStartByRiskAsync(string RiskRefundID, string PayTrueName, string RiskAttn, string AdjunctUrl, int HaveQB, long TotalLoss, long PeifuMoney, long Intercept, System.Data.DataSet RefundDetail) {
            this.RefundStartByRiskAsync(RiskRefundID, PayTrueName, RiskAttn, AdjunctUrl, HaveQB, TotalLoss, PeifuMoney, Intercept, RefundDetail, null);
        }
        
        /// <remarks/>
        public void RefundStartByRiskAsync(string RiskRefundID, string PayTrueName, string RiskAttn, string AdjunctUrl, int HaveQB, long TotalLoss, long PeifuMoney, long Intercept, System.Data.DataSet RefundDetail, object userState) {
            if ((this.RefundStartByRiskOperationCompleted == null)) {
                this.RefundStartByRiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundStartByRiskOperationCompleted);
            }
            this.InvokeAsync("RefundStartByRisk", new object[] {
                        RiskRefundID,
                        PayTrueName,
                        RiskAttn,
                        AdjunctUrl,
                        HaveQB,
                        TotalLoss,
                        PeifuMoney,
                        Intercept,
                        RefundDetail}, this.RefundStartByRiskOperationCompleted, userState);
        }
        
        private void OnRefundStartByRiskOperationCompleted(object arg) {
            if ((this.RefundStartByRiskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundStartByRiskCompleted(this, new RefundStartByRiskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendRefundMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendRefundMail(string mailToStr, string mailFromStr, string subject, string content, string type, out string Msg) {
            object[] results = this.Invoke("SendRefundMail", new object[] {
                        mailToStr,
                        mailFromStr,
                        subject,
                        content,
                        type});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendRefundMailAsync(string mailToStr, string mailFromStr, string subject, string content, string type) {
            this.SendRefundMailAsync(mailToStr, mailFromStr, subject, content, type, null);
        }
        
        /// <remarks/>
        public void SendRefundMailAsync(string mailToStr, string mailFromStr, string subject, string content, string type, object userState) {
            if ((this.SendRefundMailOperationCompleted == null)) {
                this.SendRefundMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRefundMailOperationCompleted);
            }
            this.InvokeAsync("SendRefundMail", new object[] {
                        mailToStr,
                        mailFromStr,
                        subject,
                        content,
                        type}, this.SendRefundMailOperationCompleted, userState);
        }
        
        private void OnSendRefundMailOperationCompleted(object arg) {
            if ((this.SendRefundMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRefundMailCompleted(this, new SendRefundMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryRefundState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryRefundState(long CompensationKey, int refundType, out string Msg) {
            object[] results = this.Invoke("QueryRefundState", new object[] {
                        CompensationKey,
                        refundType});
            Msg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryRefundStateAsync(long CompensationKey, int refundType) {
            this.QueryRefundStateAsync(CompensationKey, refundType, null);
        }
        
        /// <remarks/>
        public void QueryRefundStateAsync(long CompensationKey, int refundType, object userState) {
            if ((this.QueryRefundStateOperationCompleted == null)) {
                this.QueryRefundStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRefundStateOperationCompleted);
            }
            this.InvokeAsync("QueryRefundState", new object[] {
                        CompensationKey,
                        refundType}, this.QueryRefundStateOperationCompleted, userState);
        }
        
        private void OnQueryRefundStateOperationCompleted(object arg) {
            if ((this.QueryRefundStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRefundStateCompleted(this, new QueryRefundStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryRefundState0", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryRefundState0(string batchID, string listid, string fetchQQID, int refundType, out string Msg) {
            object[] results = this.Invoke("QueryRefundState0", new object[] {
                        batchID,
                        listid,
                        fetchQQID,
                        refundType});
            Msg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryRefundState0Async(string batchID, string listid, string fetchQQID, int refundType) {
            this.QueryRefundState0Async(batchID, listid, fetchQQID, refundType, null);
        }
        
        /// <remarks/>
        public void QueryRefundState0Async(string batchID, string listid, string fetchQQID, int refundType, object userState) {
            if ((this.QueryRefundState0OperationCompleted == null)) {
                this.QueryRefundState0OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRefundState0OperationCompleted);
            }
            this.InvokeAsync("QueryRefundState0", new object[] {
                        batchID,
                        listid,
                        fetchQQID,
                        refundType}, this.QueryRefundState0OperationCompleted, userState);
        }
        
        private void OnQueryRefundState0OperationCompleted(object arg) {
            if ((this.QueryRefundState0Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRefundState0Completed(this, new QueryRefundState0CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendUnfinishRiskRefund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendUnfinishRiskRefund() {
            object[] results = this.Invoke("SendUnfinishRiskRefund", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendUnfinishRiskRefundAsync() {
            this.SendUnfinishRiskRefundAsync(null);
        }
        
        /// <remarks/>
        public void SendUnfinishRiskRefundAsync(object userState) {
            if ((this.SendUnfinishRiskRefundOperationCompleted == null)) {
                this.SendUnfinishRiskRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendUnfinishRiskRefundOperationCompleted);
            }
            this.InvokeAsync("SendUnfinishRiskRefund", new object[0], this.SendUnfinishRiskRefundOperationCompleted, userState);
        }
        
        private void OnSendUnfinishRiskRefundOperationCompleted(object arg) {
            if ((this.SendUnfinishRiskRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendUnfinishRiskRefundCompleted(this, new SendUnfinishRiskRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RiskRefundNoticeMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RiskRefundNoticeMail(string displayName, string subject, string content) {
            object[] results = this.Invoke("RiskRefundNoticeMail", new object[] {
                        displayName,
                        subject,
                        content});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RiskRefundNoticeMailAsync(string displayName, string subject, string content) {
            this.RiskRefundNoticeMailAsync(displayName, subject, content, null);
        }
        
        /// <remarks/>
        public void RiskRefundNoticeMailAsync(string displayName, string subject, string content, object userState) {
            if ((this.RiskRefundNoticeMailOperationCompleted == null)) {
                this.RiskRefundNoticeMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRiskRefundNoticeMailOperationCompleted);
            }
            this.InvokeAsync("RiskRefundNoticeMail", new object[] {
                        displayName,
                        subject,
                        content}, this.RiskRefundNoticeMailOperationCompleted, userState);
        }
        
        private void OnRiskRefundNoticeMailOperationCompleted(object arg) {
            if ((this.RiskRefundNoticeMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RiskRefundNoticeMailCompleted(this, new RiskRefundNoticeMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchRefundSingleCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatchRefundSingleCheck(string listID, int refundType, long refundAmt, out string Msg) {
            object[] results = this.Invoke("BatchRefundSingleCheck", new object[] {
                        listID,
                        refundType,
                        refundAmt});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatchRefundSingleCheckAsync(string listID, int refundType, long refundAmt) {
            this.BatchRefundSingleCheckAsync(listID, refundType, refundAmt, null);
        }
        
        /// <remarks/>
        public void BatchRefundSingleCheckAsync(string listID, int refundType, long refundAmt, object userState) {
            if ((this.BatchRefundSingleCheckOperationCompleted == null)) {
                this.BatchRefundSingleCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchRefundSingleCheckOperationCompleted);
            }
            this.InvokeAsync("BatchRefundSingleCheck", new object[] {
                        listID,
                        refundType,
                        refundAmt}, this.BatchRefundSingleCheckOperationCompleted, userState);
        }
        
        private void OnBatchRefundSingleCheckOperationCompleted(object arg) {
            if ((this.BatchRefundSingleCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchRefundSingleCheckCompleted(this, new BatchRefundSingleCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchRefundRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatchRefundRequest(string batchID, int batchRefundType, bool usePayRefund, string requestFrom, int totalCount, long totalAmt, string fileUrl, string md5, out string Msg) {
            object[] results = this.Invoke("BatchRefundRequest", new object[] {
                        batchID,
                        batchRefundType,
                        usePayRefund,
                        requestFrom,
                        totalCount,
                        totalAmt,
                        fileUrl,
                        md5});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatchRefundRequestAsync(string batchID, int batchRefundType, bool usePayRefund, string requestFrom, int totalCount, long totalAmt, string fileUrl, string md5) {
            this.BatchRefundRequestAsync(batchID, batchRefundType, usePayRefund, requestFrom, totalCount, totalAmt, fileUrl, md5, null);
        }
        
        /// <remarks/>
        public void BatchRefundRequestAsync(string batchID, int batchRefundType, bool usePayRefund, string requestFrom, int totalCount, long totalAmt, string fileUrl, string md5, object userState) {
            if ((this.BatchRefundRequestOperationCompleted == null)) {
                this.BatchRefundRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchRefundRequestOperationCompleted);
            }
            this.InvokeAsync("BatchRefundRequest", new object[] {
                        batchID,
                        batchRefundType,
                        usePayRefund,
                        requestFrom,
                        totalCount,
                        totalAmt,
                        fileUrl,
                        md5}, this.BatchRefundRequestOperationCompleted, userState);
        }
        
        private void OnBatchRefundRequestOperationCompleted(object arg) {
            if ((this.BatchRefundRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchRefundRequestCompleted(this, new BatchRefundRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchRefundReject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatchRefundReject(string batchID, string checkUser) {
            object[] results = this.Invoke("BatchRefundReject", new object[] {
                        batchID,
                        checkUser});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatchRefundRejectAsync(string batchID, string checkUser) {
            this.BatchRefundRejectAsync(batchID, checkUser, null);
        }
        
        /// <remarks/>
        public void BatchRefundRejectAsync(string batchID, string checkUser, object userState) {
            if ((this.BatchRefundRejectOperationCompleted == null)) {
                this.BatchRefundRejectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchRefundRejectOperationCompleted);
            }
            this.InvokeAsync("BatchRefundReject", new object[] {
                        batchID,
                        checkUser}, this.BatchRefundRejectOperationCompleted, userState);
        }
        
        private void OnBatchRefundRejectOperationCompleted(object arg) {
            if ((this.BatchRefundRejectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchRefundRejectCompleted(this, new BatchRefundRejectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchRefundStartCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatchRefundStartCheck(string batchID, string checkUser, out string Msg) {
            object[] results = this.Invoke("BatchRefundStartCheck", new object[] {
                        batchID,
                        checkUser});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatchRefundStartCheckAsync(string batchID, string checkUser) {
            this.BatchRefundStartCheckAsync(batchID, checkUser, null);
        }
        
        /// <remarks/>
        public void BatchRefundStartCheckAsync(string batchID, string checkUser, object userState) {
            if ((this.BatchRefundStartCheckOperationCompleted == null)) {
                this.BatchRefundStartCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchRefundStartCheckOperationCompleted);
            }
            this.InvokeAsync("BatchRefundStartCheck", new object[] {
                        batchID,
                        checkUser}, this.BatchRefundStartCheckOperationCompleted, userState);
        }
        
        private void OnBatchRefundStartCheckOperationCompleted(object arg) {
            if ((this.BatchRefundStartCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchRefundStartCheckCompleted(this, new BatchRefundStartCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GiveBack_ReturnDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GiveBack_ReturnDetail(string strBatchID, out string msg) {
            object[] results = this.Invoke("GiveBack_ReturnDetail", new object[] {
                        strBatchID});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GiveBack_ReturnDetailAsync(string strBatchID) {
            this.GiveBack_ReturnDetailAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void GiveBack_ReturnDetailAsync(string strBatchID, object userState) {
            if ((this.GiveBack_ReturnDetailOperationCompleted == null)) {
                this.GiveBack_ReturnDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGiveBack_ReturnDetailOperationCompleted);
            }
            this.InvokeAsync("GiveBack_ReturnDetail", new object[] {
                        strBatchID}, this.GiveBack_ReturnDetailOperationCompleted, userState);
        }
        
        private void OnGiveBack_ReturnDetailOperationCompleted(object arg) {
            if ((this.GiveBack_ReturnDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GiveBack_ReturnDetailCompleted(this, new GiveBack_ReturnDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustToFault_GiveBack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AdjustToFault_GiveBack(string strBatchID, object[] tdeidlist, out string msg) {
            object[] results = this.Invoke("AdjustToFault_GiveBack", new object[] {
                        strBatchID,
                        tdeidlist});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustToFault_GiveBackAsync(string strBatchID, object[] tdeidlist) {
            this.AdjustToFault_GiveBackAsync(strBatchID, tdeidlist, null);
        }
        
        /// <remarks/>
        public void AdjustToFault_GiveBackAsync(string strBatchID, object[] tdeidlist, object userState) {
            if ((this.AdjustToFault_GiveBackOperationCompleted == null)) {
                this.AdjustToFault_GiveBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustToFault_GiveBackOperationCompleted);
            }
            this.InvokeAsync("AdjustToFault_GiveBack", new object[] {
                        strBatchID,
                        tdeidlist}, this.AdjustToFault_GiveBackOperationCompleted, userState);
        }
        
        private void OnAdjustToFault_GiveBackOperationCompleted(object arg) {
            if ((this.AdjustToFault_GiveBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustToFault_GiveBackCompleted(this, new AdjustToFault_GiveBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustToSucc_GiveBack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AdjustToSucc_GiveBack(string strBatchID, object[] tdeidlist, out string msg) {
            object[] results = this.Invoke("AdjustToSucc_GiveBack", new object[] {
                        strBatchID,
                        tdeidlist});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustToSucc_GiveBackAsync(string strBatchID, object[] tdeidlist) {
            this.AdjustToSucc_GiveBackAsync(strBatchID, tdeidlist, null);
        }
        
        /// <remarks/>
        public void AdjustToSucc_GiveBackAsync(string strBatchID, object[] tdeidlist, object userState) {
            if ((this.AdjustToSucc_GiveBackOperationCompleted == null)) {
                this.AdjustToSucc_GiveBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustToSucc_GiveBackOperationCompleted);
            }
            this.InvokeAsync("AdjustToSucc_GiveBack", new object[] {
                        strBatchID,
                        tdeidlist}, this.AdjustToSucc_GiveBackOperationCompleted, userState);
        }
        
        private void OnAdjustToSucc_GiveBackOperationCompleted(object arg) {
            if ((this.AdjustToSucc_GiveBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustToSucc_GiveBackCompleted(this, new AdjustToSucc_GiveBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsCanUpdateSumNewTask_ZJDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCanUpdateSumNewTask_ZJDB(string taskid, int nowstate, out string updatesumreson) {
            object[] results = this.Invoke("IsCanUpdateSumNewTask_ZJDB", new object[] {
                        taskid,
                        nowstate});
            updatesumreson = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCanUpdateSumNewTask_ZJDBAsync(string taskid, int nowstate) {
            this.IsCanUpdateSumNewTask_ZJDBAsync(taskid, nowstate, null);
        }
        
        /// <remarks/>
        public void IsCanUpdateSumNewTask_ZJDBAsync(string taskid, int nowstate, object userState) {
            if ((this.IsCanUpdateSumNewTask_ZJDBOperationCompleted == null)) {
                this.IsCanUpdateSumNewTask_ZJDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCanUpdateSumNewTask_ZJDBOperationCompleted);
            }
            this.InvokeAsync("IsCanUpdateSumNewTask_ZJDB", new object[] {
                        taskid,
                        nowstate}, this.IsCanUpdateSumNewTask_ZJDBOperationCompleted, userState);
        }
        
        private void OnIsCanUpdateSumNewTask_ZJDBOperationCompleted(object arg) {
            if ((this.IsCanUpdateSumNewTask_ZJDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCanUpdateSumNewTask_ZJDBCompleted(this, new IsCanUpdateSumNewTask_ZJDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUpdateSumNewTask_ZJDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUpdateSumNewTask_ZJDB(string taskid, int nowstate, out string updatesumreson) {
            object[] results = this.Invoke("IsUpdateSumNewTask_ZJDB", new object[] {
                        taskid,
                        nowstate});
            updatesumreson = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUpdateSumNewTask_ZJDBAsync(string taskid, int nowstate) {
            this.IsUpdateSumNewTask_ZJDBAsync(taskid, nowstate, null);
        }
        
        /// <remarks/>
        public void IsUpdateSumNewTask_ZJDBAsync(string taskid, int nowstate, object userState) {
            if ((this.IsUpdateSumNewTask_ZJDBOperationCompleted == null)) {
                this.IsUpdateSumNewTask_ZJDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUpdateSumNewTask_ZJDBOperationCompleted);
            }
            this.InvokeAsync("IsUpdateSumNewTask_ZJDB", new object[] {
                        taskid,
                        nowstate}, this.IsUpdateSumNewTask_ZJDBOperationCompleted, userState);
        }
        
        private void OnIsUpdateSumNewTask_ZJDBOperationCompleted(object arg) {
            if ((this.IsUpdateSumNewTask_ZJDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUpdateSumNewTask_ZJDBCompleted(this, new IsUpdateSumNewTask_ZJDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSumNewTask_ZJDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateSumNewTask_ZJDB(string taskid, int nowstatus, string oldfum, string fpaysum, string upatereason, string userid, out string msg) {
            object[] results = this.Invoke("UpdateSumNewTask_ZJDB", new object[] {
                        taskid,
                        nowstatus,
                        oldfum,
                        fpaysum,
                        upatereason,
                        userid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSumNewTask_ZJDBAsync(string taskid, int nowstatus, string oldfum, string fpaysum, string upatereason, string userid) {
            this.UpdateSumNewTask_ZJDBAsync(taskid, nowstatus, oldfum, fpaysum, upatereason, userid, null);
        }
        
        /// <remarks/>
        public void UpdateSumNewTask_ZJDBAsync(string taskid, int nowstatus, string oldfum, string fpaysum, string upatereason, string userid, object userState) {
            if ((this.UpdateSumNewTask_ZJDBOperationCompleted == null)) {
                this.UpdateSumNewTask_ZJDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSumNewTask_ZJDBOperationCompleted);
            }
            this.InvokeAsync("UpdateSumNewTask_ZJDB", new object[] {
                        taskid,
                        nowstatus,
                        oldfum,
                        fpaysum,
                        upatereason,
                        userid}, this.UpdateSumNewTask_ZJDBOperationCompleted, userState);
        }
        
        private void OnUpdateSumNewTask_ZJDBOperationCompleted(object arg) {
            if ((this.UpdateSumNewTask_ZJDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSumNewTask_ZJDBCompleted(this, new UpdateSumNewTask_ZJDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateNewTask_ZJDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateNewTask_ZJDB(string batchid, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Param[] myParams, string startuser, out string msg) {
            object[] results = this.Invoke("CreateNewTask_ZJDB", new object[] {
                        batchid,
                        myParams,
                        startuser});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewTask_ZJDBAsync(string batchid, Param[] myParams, string startuser) {
            this.CreateNewTask_ZJDBAsync(batchid, myParams, startuser, null);
        }
        
        /// <remarks/>
        public void CreateNewTask_ZJDBAsync(string batchid, Param[] myParams, string startuser, object userState) {
            if ((this.CreateNewTask_ZJDBOperationCompleted == null)) {
                this.CreateNewTask_ZJDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewTask_ZJDBOperationCompleted);
            }
            this.InvokeAsync("CreateNewTask_ZJDB", new object[] {
                        batchid,
                        myParams,
                        startuser}, this.CreateNewTask_ZJDBOperationCompleted, userState);
        }
        
        private void OnCreateNewTask_ZJDBOperationCompleted(object arg) {
            if ((this.CreateNewTask_ZJDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewTask_ZJDBCompleted(this, new CreateNewTask_ZJDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateNewPayTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateNewPayTask(string batchid, string startuser, out string msg) {
            object[] results = this.Invoke("CreateNewPayTask", new object[] {
                        batchid,
                        startuser});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewPayTaskAsync(string batchid, string startuser) {
            this.CreateNewPayTaskAsync(batchid, startuser, null);
        }
        
        /// <remarks/>
        public void CreateNewPayTaskAsync(string batchid, string startuser, object userState) {
            if ((this.CreateNewPayTaskOperationCompleted == null)) {
                this.CreateNewPayTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewPayTaskOperationCompleted);
            }
            this.InvokeAsync("CreateNewPayTask", new object[] {
                        batchid,
                        startuser}, this.CreateNewPayTaskOperationCompleted, userState);
        }
        
        private void OnCreateNewPayTaskOperationCompleted(object arg) {
            if ((this.CreateNewPayTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewPayTaskCompleted(this, new CreateNewPayTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskAutoCheckState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTaskAutoCheckState(string checkdate, string banktype) {
            object[] results = this.Invoke("GetTaskAutoCheckState", new object[] {
                        checkdate,
                        banktype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskAutoCheckStateAsync(string checkdate, string banktype) {
            this.GetTaskAutoCheckStateAsync(checkdate, banktype, null);
        }
        
        /// <remarks/>
        public void GetTaskAutoCheckStateAsync(string checkdate, string banktype, object userState) {
            if ((this.GetTaskAutoCheckStateOperationCompleted == null)) {
                this.GetTaskAutoCheckStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskAutoCheckStateOperationCompleted);
            }
            this.InvokeAsync("GetTaskAutoCheckState", new object[] {
                        checkdate,
                        banktype}, this.GetTaskAutoCheckStateOperationCompleted, userState);
        }
        
        private void OnGetTaskAutoCheckStateOperationCompleted(object arg) {
            if ((this.GetTaskAutoCheckStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskAutoCheckStateCompleted(this, new GetTaskAutoCheckStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTaskAutoCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertTaskAutoCheck(string checkdate, string banktype, string userid, out string errMsg) {
            object[] results = this.Invoke("InsertTaskAutoCheck", new object[] {
                        checkdate,
                        banktype,
                        userid});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTaskAutoCheckAsync(string checkdate, string banktype, string userid) {
            this.InsertTaskAutoCheckAsync(checkdate, banktype, userid, null);
        }
        
        /// <remarks/>
        public void InsertTaskAutoCheckAsync(string checkdate, string banktype, string userid, object userState) {
            if ((this.InsertTaskAutoCheckOperationCompleted == null)) {
                this.InsertTaskAutoCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTaskAutoCheckOperationCompleted);
            }
            this.InvokeAsync("InsertTaskAutoCheck", new object[] {
                        checkdate,
                        banktype,
                        userid}, this.InsertTaskAutoCheckOperationCompleted, userState);
        }
        
        private void OnInsertTaskAutoCheckOperationCompleted(object arg) {
            if ((this.InsertTaskAutoCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTaskAutoCheckCompleted(this, new InsertTaskAutoCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateNewRefundOtherTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateNewRefundOtherTask(string batchid, string startuser, out string msg) {
            object[] results = this.Invoke("CreateNewRefundOtherTask", new object[] {
                        batchid,
                        startuser});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewRefundOtherTaskAsync(string batchid, string startuser) {
            this.CreateNewRefundOtherTaskAsync(batchid, startuser, null);
        }
        
        /// <remarks/>
        public void CreateNewRefundOtherTaskAsync(string batchid, string startuser, object userState) {
            if ((this.CreateNewRefundOtherTaskOperationCompleted == null)) {
                this.CreateNewRefundOtherTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewRefundOtherTaskOperationCompleted);
            }
            this.InvokeAsync("CreateNewRefundOtherTask", new object[] {
                        batchid,
                        startuser}, this.CreateNewRefundOtherTaskOperationCompleted, userState);
        }
        
        private void OnCreateNewRefundOtherTaskOperationCompleted(object arg) {
            if ((this.CreateNewRefundOtherTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewRefundOtherTaskCompleted(this, new CreateNewRefundOtherTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNewTask(string userid, int func_type, int statetype, int banktype) {
            object[] results = this.Invoke("GetNewTask", new object[] {
                        userid,
                        func_type,
                        statetype,
                        banktype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewTaskAsync(string userid, int func_type, int statetype, int banktype) {
            this.GetNewTaskAsync(userid, func_type, statetype, banktype, null);
        }
        
        /// <remarks/>
        public void GetNewTaskAsync(string userid, int func_type, int statetype, int banktype, object userState) {
            if ((this.GetNewTaskOperationCompleted == null)) {
                this.GetNewTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewTaskOperationCompleted);
            }
            this.InvokeAsync("GetNewTask", new object[] {
                        userid,
                        func_type,
                        statetype,
                        banktype}, this.GetNewTaskOperationCompleted, userState);
        }
        
        private void OnGetNewTaskOperationCompleted(object arg) {
            if ((this.GetNewTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewTaskCompleted(this, new GetNewTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNoticeTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNoticeTask(string userid) {
            object[] results = this.Invoke("GetNoticeTask", new object[] {
                        userid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNoticeTaskAsync(string userid) {
            this.GetNoticeTaskAsync(userid, null);
        }
        
        /// <remarks/>
        public void GetNoticeTaskAsync(string userid, object userState) {
            if ((this.GetNoticeTaskOperationCompleted == null)) {
                this.GetNoticeTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoticeTaskOperationCompleted);
            }
            this.InvokeAsync("GetNoticeTask", new object[] {
                        userid}, this.GetNoticeTaskOperationCompleted, userState);
        }
        
        private void OnGetNoticeTaskOperationCompleted(object arg) {
            if ((this.GetNoticeTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoticeTaskCompleted(this, new GetNoticeTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQueryTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQueryTask(string startdate, string enddate, int statetype, int banktype, int funtype) {
            object[] results = this.Invoke("GetQueryTask", new object[] {
                        startdate,
                        enddate,
                        statetype,
                        banktype,
                        funtype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryTaskAsync(string startdate, string enddate, int statetype, int banktype, int funtype) {
            this.GetQueryTaskAsync(startdate, enddate, statetype, banktype, funtype, null);
        }
        
        /// <remarks/>
        public void GetQueryTaskAsync(string startdate, string enddate, int statetype, int banktype, int funtype, object userState) {
            if ((this.GetQueryTaskOperationCompleted == null)) {
                this.GetQueryTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryTaskOperationCompleted);
            }
            this.InvokeAsync("GetQueryTask", new object[] {
                        startdate,
                        enddate,
                        statetype,
                        banktype,
                        funtype}, this.GetQueryTaskOperationCompleted, userState);
        }
        
        private void OnGetQueryTaskOperationCompleted(object arg) {
            if ((this.GetQueryTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryTaskCompleted(this, new GetQueryTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQueryTaskDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQueryTaskDetail(string taskid) {
            object[] results = this.Invoke("GetQueryTaskDetail", new object[] {
                        taskid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryTaskDetailAsync(string taskid) {
            this.GetQueryTaskDetailAsync(taskid, null);
        }
        
        /// <remarks/>
        public void GetQueryTaskDetailAsync(string taskid, object userState) {
            if ((this.GetQueryTaskDetailOperationCompleted == null)) {
                this.GetQueryTaskDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryTaskDetailOperationCompleted);
            }
            this.InvokeAsync("GetQueryTaskDetail", new object[] {
                        taskid}, this.GetQueryTaskDetailOperationCompleted, userState);
        }
        
        private void OnGetQueryTaskDetailOperationCompleted(object arg) {
            if ((this.GetQueryTaskDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryTaskDetailCompleted(this, new GetQueryTaskDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRefundCheckState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetRefundCheckState(string batchid) {
            object[] results = this.Invoke("GetRefundCheckState", new object[] {
                        batchid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundCheckStateAsync(string batchid) {
            this.GetRefundCheckStateAsync(batchid, null);
        }
        
        /// <remarks/>
        public void GetRefundCheckStateAsync(string batchid, object userState) {
            if ((this.GetRefundCheckStateOperationCompleted == null)) {
                this.GetRefundCheckStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundCheckStateOperationCompleted);
            }
            this.InvokeAsync("GetRefundCheckState", new object[] {
                        batchid}, this.GetRefundCheckStateOperationCompleted, userState);
        }
        
        private void OnGetRefundCheckStateOperationCompleted(object arg) {
            if ((this.GetRefundCheckStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundCheckStateCompleted(this, new GetRefundCheckStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQueryTaskDetail_D", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQueryTaskDetail_D(string taskid) {
            object[] results = this.Invoke("GetQueryTaskDetail_D", new object[] {
                        taskid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryTaskDetail_DAsync(string taskid) {
            this.GetQueryTaskDetail_DAsync(taskid, null);
        }
        
        /// <remarks/>
        public void GetQueryTaskDetail_DAsync(string taskid, object userState) {
            if ((this.GetQueryTaskDetail_DOperationCompleted == null)) {
                this.GetQueryTaskDetail_DOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryTaskDetail_DOperationCompleted);
            }
            this.InvokeAsync("GetQueryTaskDetail_D", new object[] {
                        taskid}, this.GetQueryTaskDetail_DOperationCompleted, userState);
        }
        
        private void OnGetQueryTaskDetail_DOperationCompleted(object arg) {
            if ((this.GetQueryTaskDetail_DCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryTaskDetail_DCompleted(this, new GetQueryTaskDetail_DCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HasRight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasRight(string userid, int rightid, string taskid, int ffunc_type) {
            object[] results = this.Invoke("HasRight", new object[] {
                        userid,
                        rightid,
                        taskid,
                        ffunc_type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasRightAsync(string userid, int rightid, string taskid, int ffunc_type) {
            this.HasRightAsync(userid, rightid, taskid, ffunc_type, null);
        }
        
        /// <remarks/>
        public void HasRightAsync(string userid, int rightid, string taskid, int ffunc_type, object userState) {
            if ((this.HasRightOperationCompleted == null)) {
                this.HasRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasRightOperationCompleted);
            }
            this.InvokeAsync("HasRight", new object[] {
                        userid,
                        rightid,
                        taskid,
                        ffunc_type}, this.HasRightOperationCompleted, userState);
        }
        
        private void OnHasRightOperationCompleted(object arg) {
            if ((this.HasRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasRightCompleted(this, new HasRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HasRight_D", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasRight_D(string userid, int rightid) {
            object[] results = this.Invoke("HasRight_D", new object[] {
                        userid,
                        rightid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasRight_DAsync(string userid, int rightid) {
            this.HasRight_DAsync(userid, rightid, null);
        }
        
        /// <remarks/>
        public void HasRight_DAsync(string userid, int rightid, object userState) {
            if ((this.HasRight_DOperationCompleted == null)) {
                this.HasRight_DOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasRight_DOperationCompleted);
            }
            this.InvokeAsync("HasRight_D", new object[] {
                        userid,
                        rightid}, this.HasRight_DOperationCompleted, userState);
        }
        
        private void OnHasRight_DOperationCompleted(object arg) {
            if ((this.HasRight_DCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasRight_DCompleted(this, new HasRight_DCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSQRefundFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendSQRefundFile(string taskid, string userId, out string msg) {
            object[] results = this.Invoke("SendSQRefundFile", new object[] {
                        taskid,
                        userId});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendSQRefundFileAsync(string taskid, string userId) {
            this.SendSQRefundFileAsync(taskid, userId, null);
        }
        
        /// <remarks/>
        public void SendSQRefundFileAsync(string taskid, string userId, object userState) {
            if ((this.SendSQRefundFileOperationCompleted == null)) {
                this.SendSQRefundFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSQRefundFileOperationCompleted);
            }
            this.InvokeAsync("SendSQRefundFile", new object[] {
                        taskid,
                        userId}, this.SendSQRefundFileOperationCompleted, userState);
        }
        
        private void OnSendSQRefundFileOperationCompleted(object arg) {
            if ((this.SendSQRefundFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSQRefundFileCompleted(this, new SendSQRefundFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPayTaskFileDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayTaskFileDetail(string taskid, string filetype, string strwhere) {
            object[] results = this.Invoke("GetPayTaskFileDetail", new object[] {
                        taskid,
                        filetype,
                        strwhere});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayTaskFileDetailAsync(string taskid, string filetype, string strwhere) {
            this.GetPayTaskFileDetailAsync(taskid, filetype, strwhere, null);
        }
        
        /// <remarks/>
        public void GetPayTaskFileDetailAsync(string taskid, string filetype, string strwhere, object userState) {
            if ((this.GetPayTaskFileDetailOperationCompleted == null)) {
                this.GetPayTaskFileDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayTaskFileDetailOperationCompleted);
            }
            this.InvokeAsync("GetPayTaskFileDetail", new object[] {
                        taskid,
                        filetype,
                        strwhere}, this.GetPayTaskFileDetailOperationCompleted, userState);
        }
        
        private void OnGetPayTaskFileDetailOperationCompleted(object arg) {
            if ((this.GetPayTaskFileDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayTaskFileDetailCompleted(this, new GetPayTaskFileDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPayTaskFileFailRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPayTaskFileFailRate(string taskid, string fileid) {
            object[] results = this.Invoke("GetPayTaskFileFailRate", new object[] {
                        taskid,
                        fileid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayTaskFileFailRateAsync(string taskid, string fileid) {
            this.GetPayTaskFileFailRateAsync(taskid, fileid, null);
        }
        
        /// <remarks/>
        public void GetPayTaskFileFailRateAsync(string taskid, string fileid, object userState) {
            if ((this.GetPayTaskFileFailRateOperationCompleted == null)) {
                this.GetPayTaskFileFailRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayTaskFileFailRateOperationCompleted);
            }
            this.InvokeAsync("GetPayTaskFileFailRate", new object[] {
                        taskid,
                        fileid}, this.GetPayTaskFileFailRateOperationCompleted, userState);
        }
        
        private void OnGetPayTaskFileFailRateOperationCompleted(object arg) {
            if ((this.GetPayTaskFileFailRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayTaskFileFailRateCompleted(this, new GetPayTaskFileFailRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CanViewFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanViewFile(int fid, string batchid, int nowstatus, int statustype) {
            object[] results = this.Invoke("CanViewFile", new object[] {
                        fid,
                        batchid,
                        nowstatus,
                        statustype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanViewFileAsync(int fid, string batchid, int nowstatus, int statustype) {
            this.CanViewFileAsync(fid, batchid, nowstatus, statustype, null);
        }
        
        /// <remarks/>
        public void CanViewFileAsync(int fid, string batchid, int nowstatus, int statustype, object userState) {
            if ((this.CanViewFileOperationCompleted == null)) {
                this.CanViewFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanViewFileOperationCompleted);
            }
            this.InvokeAsync("CanViewFile", new object[] {
                        fid,
                        batchid,
                        nowstatus,
                        statustype}, this.CanViewFileOperationCompleted, userState);
        }
        
        private void OnCanViewFileOperationCompleted(object arg) {
            if ((this.CanViewFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanViewFileCompleted(this, new CanViewFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPayTaskCheckDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayTaskCheckDetail(string taskid) {
            object[] results = this.Invoke("GetPayTaskCheckDetail", new object[] {
                        taskid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayTaskCheckDetailAsync(string taskid) {
            this.GetPayTaskCheckDetailAsync(taskid, null);
        }
        
        /// <remarks/>
        public void GetPayTaskCheckDetailAsync(string taskid, object userState) {
            if ((this.GetPayTaskCheckDetailOperationCompleted == null)) {
                this.GetPayTaskCheckDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayTaskCheckDetailOperationCompleted);
            }
            this.InvokeAsync("GetPayTaskCheckDetail", new object[] {
                        taskid}, this.GetPayTaskCheckDetailOperationCompleted, userState);
        }
        
        private void OnGetPayTaskCheckDetailOperationCompleted(object arg) {
            if ((this.GetPayTaskCheckDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayTaskCheckDetailCompleted(this, new GetPayTaskCheckDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPayTaskCheckDetail_D", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayTaskCheckDetail_D(string taskid) {
            object[] results = this.Invoke("GetPayTaskCheckDetail_D", new object[] {
                        taskid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayTaskCheckDetail_DAsync(string taskid) {
            this.GetPayTaskCheckDetail_DAsync(taskid, null);
        }
        
        /// <remarks/>
        public void GetPayTaskCheckDetail_DAsync(string taskid, object userState) {
            if ((this.GetPayTaskCheckDetail_DOperationCompleted == null)) {
                this.GetPayTaskCheckDetail_DOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayTaskCheckDetail_DOperationCompleted);
            }
            this.InvokeAsync("GetPayTaskCheckDetail_D", new object[] {
                        taskid}, this.GetPayTaskCheckDetail_DOperationCompleted, userState);
        }
        
        private void OnGetPayTaskCheckDetail_DOperationCompleted(object arg) {
            if ((this.GetPayTaskCheckDetail_DCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayTaskCheckDetail_DCompleted(this, new GetPayTaskCheckDetail_DCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDirectPayTaskDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDirectPayTaskDetail(string taskid, int start, int max) {
            object[] results = this.Invoke("GetDirectPayTaskDetail", new object[] {
                        taskid,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectPayTaskDetailAsync(string taskid, int start, int max) {
            this.GetDirectPayTaskDetailAsync(taskid, start, max, null);
        }
        
        /// <remarks/>
        public void GetDirectPayTaskDetailAsync(string taskid, int start, int max, object userState) {
            if ((this.GetDirectPayTaskDetailOperationCompleted == null)) {
                this.GetDirectPayTaskDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectPayTaskDetailOperationCompleted);
            }
            this.InvokeAsync("GetDirectPayTaskDetail", new object[] {
                        taskid,
                        start,
                        max}, this.GetDirectPayTaskDetailOperationCompleted, userState);
        }
        
        private void OnGetDirectPayTaskDetailOperationCompleted(object arg) {
            if ((this.GetDirectPayTaskDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectPayTaskDetailCompleted(this, new GetDirectPayTaskDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDirectPayTaskDetailCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDirectPayTaskDetailCount(string taskid) {
            object[] results = this.Invoke("GetDirectPayTaskDetailCount", new object[] {
                        taskid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectPayTaskDetailCountAsync(string taskid) {
            this.GetDirectPayTaskDetailCountAsync(taskid, null);
        }
        
        /// <remarks/>
        public void GetDirectPayTaskDetailCountAsync(string taskid, object userState) {
            if ((this.GetDirectPayTaskDetailCountOperationCompleted == null)) {
                this.GetDirectPayTaskDetailCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectPayTaskDetailCountOperationCompleted);
            }
            this.InvokeAsync("GetDirectPayTaskDetailCount", new object[] {
                        taskid}, this.GetDirectPayTaskDetailCountOperationCompleted, userState);
        }
        
        private void OnGetDirectPayTaskDetailCountOperationCompleted(object arg) {
            if ((this.GetDirectPayTaskDetailCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectPayTaskDetailCountCompleted(this, new GetDirectPayTaskDetailCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaskGoNextStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TaskGoNextStatus(string taskid, string userid, int nowstate, out string msg) {
            object[] results = this.Invoke("TaskGoNextStatus", new object[] {
                        taskid,
                        userid,
                        nowstate});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TaskGoNextStatusAsync(string taskid, string userid, int nowstate) {
            this.TaskGoNextStatusAsync(taskid, userid, nowstate, null);
        }
        
        /// <remarks/>
        public void TaskGoNextStatusAsync(string taskid, string userid, int nowstate, object userState) {
            if ((this.TaskGoNextStatusOperationCompleted == null)) {
                this.TaskGoNextStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaskGoNextStatusOperationCompleted);
            }
            this.InvokeAsync("TaskGoNextStatus", new object[] {
                        taskid,
                        userid,
                        nowstate}, this.TaskGoNextStatusOperationCompleted, userState);
        }
        
        private void OnTaskGoNextStatusOperationCompleted(object arg) {
            if ((this.TaskGoNextStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaskGoNextStatusCompleted(this, new TaskGoNextStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaskGoNextStatus_ZJDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TaskGoNextStatus_ZJDB(string taskid, string userid, int nowstate, string toacctime, out string msg) {
            object[] results = this.Invoke("TaskGoNextStatus_ZJDB", new object[] {
                        taskid,
                        userid,
                        nowstate,
                        toacctime});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TaskGoNextStatus_ZJDBAsync(string taskid, string userid, int nowstate, string toacctime) {
            this.TaskGoNextStatus_ZJDBAsync(taskid, userid, nowstate, toacctime, null);
        }
        
        /// <remarks/>
        public void TaskGoNextStatus_ZJDBAsync(string taskid, string userid, int nowstate, string toacctime, object userState) {
            if ((this.TaskGoNextStatus_ZJDBOperationCompleted == null)) {
                this.TaskGoNextStatus_ZJDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaskGoNextStatus_ZJDBOperationCompleted);
            }
            this.InvokeAsync("TaskGoNextStatus_ZJDB", new object[] {
                        taskid,
                        userid,
                        nowstate,
                        toacctime}, this.TaskGoNextStatus_ZJDBOperationCompleted, userState);
        }
        
        private void OnTaskGoNextStatus_ZJDBOperationCompleted(object arg) {
            if ((this.TaskGoNextStatus_ZJDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaskGoNextStatus_ZJDBCompleted(this, new TaskGoNextStatus_ZJDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/JsonBatchOpBindAppId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool JsonBatchOpBindAppId(string taskid, string famt, string userid, int type, out string messg) {
            object[] results = this.Invoke("JsonBatchOpBindAppId", new object[] {
                        taskid,
                        famt,
                        userid,
                        type});
            messg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void JsonBatchOpBindAppIdAsync(string taskid, string famt, string userid, int type) {
            this.JsonBatchOpBindAppIdAsync(taskid, famt, userid, type, null);
        }
        
        /// <remarks/>
        public void JsonBatchOpBindAppIdAsync(string taskid, string famt, string userid, int type, object userState) {
            if ((this.JsonBatchOpBindAppIdOperationCompleted == null)) {
                this.JsonBatchOpBindAppIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJsonBatchOpBindAppIdOperationCompleted);
            }
            this.InvokeAsync("JsonBatchOpBindAppId", new object[] {
                        taskid,
                        famt,
                        userid,
                        type}, this.JsonBatchOpBindAppIdOperationCompleted, userState);
        }
        
        private void OnJsonBatchOpBindAppIdOperationCompleted(object arg) {
            if ((this.JsonBatchOpBindAppIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JsonBatchOpBindAppIdCompleted(this, new JsonBatchOpBindAppIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundInterestforwardData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundInterestforwardData(string fpaytaskid) {
            object[] results = this.Invoke("GetFundInterestforwardData", new object[] {
                        fpaytaskid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundInterestforwardDataAsync(string fpaytaskid) {
            this.GetFundInterestforwardDataAsync(fpaytaskid, null);
        }
        
        /// <remarks/>
        public void GetFundInterestforwardDataAsync(string fpaytaskid, object userState) {
            if ((this.GetFundInterestforwardDataOperationCompleted == null)) {
                this.GetFundInterestforwardDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundInterestforwardDataOperationCompleted);
            }
            this.InvokeAsync("GetFundInterestforwardData", new object[] {
                        fpaytaskid}, this.GetFundInterestforwardDataOperationCompleted, userState);
        }
        
        private void OnGetFundInterestforwardDataOperationCompleted(object arg) {
            if ((this.GetFundInterestforwardDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundInterestforwardDataCompleted(this, new GetFundInterestforwardDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GiveBackPayLike3014", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GiveBackPayLike3014(string bankType, bool isPayBank) {
            object[] results = this.Invoke("GiveBackPayLike3014", new object[] {
                        bankType,
                        isPayBank});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GiveBackPayLike3014Async(string bankType, bool isPayBank) {
            this.GiveBackPayLike3014Async(bankType, isPayBank, null);
        }
        
        /// <remarks/>
        public void GiveBackPayLike3014Async(string bankType, bool isPayBank, object userState) {
            if ((this.GiveBackPayLike3014OperationCompleted == null)) {
                this.GiveBackPayLike3014OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGiveBackPayLike3014OperationCompleted);
            }
            this.InvokeAsync("GiveBackPayLike3014", new object[] {
                        bankType,
                        isPayBank}, this.GiveBackPayLike3014OperationCompleted, userState);
        }
        
        private void OnGiveBackPayLike3014OperationCompleted(object arg) {
            if ((this.GiveBackPayLike3014Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GiveBackPayLike3014Completed(this, new GiveBackPayLike3014CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GiveBackReturnLike3014", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GiveBackReturnLike3014(string bankType) {
            object[] results = this.Invoke("GiveBackReturnLike3014", new object[] {
                        bankType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GiveBackReturnLike3014Async(string bankType) {
            this.GiveBackReturnLike3014Async(bankType, null);
        }
        
        /// <remarks/>
        public void GiveBackReturnLike3014Async(string bankType, object userState) {
            if ((this.GiveBackReturnLike3014OperationCompleted == null)) {
                this.GiveBackReturnLike3014OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGiveBackReturnLike3014OperationCompleted);
            }
            this.InvokeAsync("GiveBackReturnLike3014", new object[] {
                        bankType}, this.GiveBackReturnLike3014OperationCompleted, userState);
        }
        
        private void OnGiveBackReturnLike3014OperationCompleted(object arg) {
            if ((this.GiveBackReturnLike3014Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GiveBackReturnLike3014Completed(this, new GiveBackReturnLike3014CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreatePayCheckOrResultFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreatePayCheckOrResultFile(string id, string UserID, int nowstate, int banktype, int filetype, int createType, string result, string filePath, out string msg) {
            object[] results = this.Invoke("CreatePayCheckOrResultFile", new object[] {
                        id,
                        UserID,
                        nowstate,
                        banktype,
                        filetype,
                        createType,
                        result,
                        filePath});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePayCheckOrResultFileAsync(string id, string UserID, int nowstate, int banktype, int filetype, int createType, string result, string filePath) {
            this.CreatePayCheckOrResultFileAsync(id, UserID, nowstate, banktype, filetype, createType, result, filePath, null);
        }
        
        /// <remarks/>
        public void CreatePayCheckOrResultFileAsync(string id, string UserID, int nowstate, int banktype, int filetype, int createType, string result, string filePath, object userState) {
            if ((this.CreatePayCheckOrResultFileOperationCompleted == null)) {
                this.CreatePayCheckOrResultFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePayCheckOrResultFileOperationCompleted);
            }
            this.InvokeAsync("CreatePayCheckOrResultFile", new object[] {
                        id,
                        UserID,
                        nowstate,
                        banktype,
                        filetype,
                        createType,
                        result,
                        filePath}, this.CreatePayCheckOrResultFileOperationCompleted, userState);
        }
        
        private void OnCreatePayCheckOrResultFileOperationCompleted(object arg) {
            if ((this.CreatePayCheckOrResultFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePayCheckOrResultFileCompleted(this, new CreatePayCheckOrResultFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCreditCardCheckBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCreditCardCheckBill(string id) {
            object[] results = this.Invoke("GetCreditCardCheckBill", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditCardCheckBillAsync(string id) {
            this.GetCreditCardCheckBillAsync(id, null);
        }
        
        /// <remarks/>
        public void GetCreditCardCheckBillAsync(string id, object userState) {
            if ((this.GetCreditCardCheckBillOperationCompleted == null)) {
                this.GetCreditCardCheckBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditCardCheckBillOperationCompleted);
            }
            this.InvokeAsync("GetCreditCardCheckBill", new object[] {
                        id}, this.GetCreditCardCheckBillOperationCompleted, userState);
        }
        
        private void OnGetCreditCardCheckBillOperationCompleted(object arg) {
            if ((this.GetCreditCardCheckBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCardCheckBillCompleted(this, new GetCreditCardCheckBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundInterestforwardDataByFProspectId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundInterestforwardDataByFProspectId(string fProspectId) {
            object[] results = this.Invoke("GetFundInterestforwardDataByFProspectId", new object[] {
                        fProspectId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundInterestforwardDataByFProspectIdAsync(string fProspectId) {
            this.GetFundInterestforwardDataByFProspectIdAsync(fProspectId, null);
        }
        
        /// <remarks/>
        public void GetFundInterestforwardDataByFProspectIdAsync(string fProspectId, object userState) {
            if ((this.GetFundInterestforwardDataByFProspectIdOperationCompleted == null)) {
                this.GetFundInterestforwardDataByFProspectIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundInterestforwardDataByFProspectIdOperationCompleted);
            }
            this.InvokeAsync("GetFundInterestforwardDataByFProspectId", new object[] {
                        fProspectId}, this.GetFundInterestforwardDataByFProspectIdOperationCompleted, userState);
        }
        
        private void OnGetFundInterestforwardDataByFProspectIdOperationCompleted(object arg) {
            if ((this.GetFundInterestforwardDataByFProspectIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundInterestforwardDataByFProspectIdCompleted(this, new GetFundInterestforwardDataByFProspectIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaskGoBackStatus_ZJDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TaskGoBackStatus_ZJDB(string taskid, string userid, int nowstate, string errmsg, out string msg) {
            object[] results = this.Invoke("TaskGoBackStatus_ZJDB", new object[] {
                        taskid,
                        userid,
                        nowstate,
                        errmsg});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TaskGoBackStatus_ZJDBAsync(string taskid, string userid, int nowstate, string errmsg) {
            this.TaskGoBackStatus_ZJDBAsync(taskid, userid, nowstate, errmsg, null);
        }
        
        /// <remarks/>
        public void TaskGoBackStatus_ZJDBAsync(string taskid, string userid, int nowstate, string errmsg, object userState) {
            if ((this.TaskGoBackStatus_ZJDBOperationCompleted == null)) {
                this.TaskGoBackStatus_ZJDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaskGoBackStatus_ZJDBOperationCompleted);
            }
            this.InvokeAsync("TaskGoBackStatus_ZJDB", new object[] {
                        taskid,
                        userid,
                        nowstate,
                        errmsg}, this.TaskGoBackStatus_ZJDBOperationCompleted, userState);
        }
        
        private void OnTaskGoBackStatus_ZJDBOperationCompleted(object arg) {
            if ((this.TaskGoBackStatus_ZJDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaskGoBackStatus_ZJDBCompleted(this, new TaskGoBackStatus_ZJDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaskGoBackStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TaskGoBackStatus(string taskid, string userid, int nowstate, string errmsg, out string msg) {
            object[] results = this.Invoke("TaskGoBackStatus", new object[] {
                        taskid,
                        userid,
                        nowstate,
                        errmsg});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TaskGoBackStatusAsync(string taskid, string userid, int nowstate, string errmsg) {
            this.TaskGoBackStatusAsync(taskid, userid, nowstate, errmsg, null);
        }
        
        /// <remarks/>
        public void TaskGoBackStatusAsync(string taskid, string userid, int nowstate, string errmsg, object userState) {
            if ((this.TaskGoBackStatusOperationCompleted == null)) {
                this.TaskGoBackStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaskGoBackStatusOperationCompleted);
            }
            this.InvokeAsync("TaskGoBackStatus", new object[] {
                        taskid,
                        userid,
                        nowstate,
                        errmsg}, this.TaskGoBackStatusOperationCompleted, userState);
        }
        
        private void OnTaskGoBackStatusOperationCompleted(object arg) {
            if ((this.TaskGoBackStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaskGoBackStatusCompleted(this, new TaskGoBackStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaskGoBackReturnStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TaskGoBackReturnStatus(string taskid, string userid, string errmsg, out string msg) {
            object[] results = this.Invoke("TaskGoBackReturnStatus", new object[] {
                        taskid,
                        userid,
                        errmsg});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TaskGoBackReturnStatusAsync(string taskid, string userid, string errmsg) {
            this.TaskGoBackReturnStatusAsync(taskid, userid, errmsg, null);
        }
        
        /// <remarks/>
        public void TaskGoBackReturnStatusAsync(string taskid, string userid, string errmsg, object userState) {
            if ((this.TaskGoBackReturnStatusOperationCompleted == null)) {
                this.TaskGoBackReturnStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaskGoBackReturnStatusOperationCompleted);
            }
            this.InvokeAsync("TaskGoBackReturnStatus", new object[] {
                        taskid,
                        userid,
                        errmsg}, this.TaskGoBackReturnStatusOperationCompleted, userState);
        }
        
        private void OnTaskGoBackReturnStatusOperationCompleted(object arg) {
            if ((this.TaskGoBackReturnStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaskGoBackReturnStatusCompleted(this, new TaskGoBackReturnStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaskGoNextStatus_D", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TaskGoNextStatus_D(string taskid, string userid, int nowstate, out string msg) {
            object[] results = this.Invoke("TaskGoNextStatus_D", new object[] {
                        taskid,
                        userid,
                        nowstate});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TaskGoNextStatus_DAsync(string taskid, string userid, int nowstate) {
            this.TaskGoNextStatus_DAsync(taskid, userid, nowstate, null);
        }
        
        /// <remarks/>
        public void TaskGoNextStatus_DAsync(string taskid, string userid, int nowstate, object userState) {
            if ((this.TaskGoNextStatus_DOperationCompleted == null)) {
                this.TaskGoNextStatus_DOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaskGoNextStatus_DOperationCompleted);
            }
            this.InvokeAsync("TaskGoNextStatus_D", new object[] {
                        taskid,
                        userid,
                        nowstate}, this.TaskGoNextStatus_DOperationCompleted, userState);
        }
        
        private void OnTaskGoNextStatus_DOperationCompleted(object arg) {
            if ((this.TaskGoNextStatus_DCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaskGoNextStatus_DCompleted(this, new TaskGoNextStatus_DCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaskGoBackStatus_D", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TaskGoBackStatus_D(string taskid, string userid, int nowstate, string errmsg, out string msg) {
            object[] results = this.Invoke("TaskGoBackStatus_D", new object[] {
                        taskid,
                        userid,
                        nowstate,
                        errmsg});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TaskGoBackStatus_DAsync(string taskid, string userid, int nowstate, string errmsg) {
            this.TaskGoBackStatus_DAsync(taskid, userid, nowstate, errmsg, null);
        }
        
        /// <remarks/>
        public void TaskGoBackStatus_DAsync(string taskid, string userid, int nowstate, string errmsg, object userState) {
            if ((this.TaskGoBackStatus_DOperationCompleted == null)) {
                this.TaskGoBackStatus_DOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaskGoBackStatus_DOperationCompleted);
            }
            this.InvokeAsync("TaskGoBackStatus_D", new object[] {
                        taskid,
                        userid,
                        nowstate,
                        errmsg}, this.TaskGoBackStatus_DOperationCompleted, userState);
        }
        
        private void OnTaskGoBackStatus_DOperationCompleted(object arg) {
            if ((this.TaskGoBackStatus_DCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaskGoBackStatus_DCompleted(this, new TaskGoBackStatus_DCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchDirectPay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatchDirectPay(string taskid, out string msg) {
            object[] results = this.Invoke("BatchDirectPay", new object[] {
                        taskid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatchDirectPayAsync(string taskid) {
            this.BatchDirectPayAsync(taskid, null);
        }
        
        /// <remarks/>
        public void BatchDirectPayAsync(string taskid, object userState) {
            if ((this.BatchDirectPayOperationCompleted == null)) {
                this.BatchDirectPayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchDirectPayOperationCompleted);
            }
            this.InvokeAsync("BatchDirectPay", new object[] {
                        taskid}, this.BatchDirectPayOperationCompleted, userState);
        }
        
        private void OnBatchDirectPayOperationCompleted(object arg) {
            if ((this.BatchDirectPayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchDirectPayCompleted(this, new BatchDirectPayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaskCheckTotalInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TaskCheckTotalInfo(string taskid, string userid, int nowstate, int filetype, int count, long sum, out string msg) {
            object[] results = this.Invoke("TaskCheckTotalInfo", new object[] {
                        taskid,
                        userid,
                        nowstate,
                        filetype,
                        count,
                        sum});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TaskCheckTotalInfoAsync(string taskid, string userid, int nowstate, int filetype, int count, long sum) {
            this.TaskCheckTotalInfoAsync(taskid, userid, nowstate, filetype, count, sum, null);
        }
        
        /// <remarks/>
        public void TaskCheckTotalInfoAsync(string taskid, string userid, int nowstate, int filetype, int count, long sum, object userState) {
            if ((this.TaskCheckTotalInfoOperationCompleted == null)) {
                this.TaskCheckTotalInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaskCheckTotalInfoOperationCompleted);
            }
            this.InvokeAsync("TaskCheckTotalInfo", new object[] {
                        taskid,
                        userid,
                        nowstate,
                        filetype,
                        count,
                        sum}, this.TaskCheckTotalInfoOperationCompleted, userState);
        }
        
        private void OnTaskCheckTotalInfoOperationCompleted(object arg) {
            if ((this.TaskCheckTotalInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaskCheckTotalInfoCompleted(this, new TaskCheckTotalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EncodeFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EncodeFile([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ba, string path) {
            object[] results = this.Invoke("EncodeFile", new object[] {
                        ba,
                        path});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EncodeFileAsync(byte[] ba, string path) {
            this.EncodeFileAsync(ba, path, null);
        }
        
        /// <remarks/>
        public void EncodeFileAsync(byte[] ba, string path, object userState) {
            if ((this.EncodeFileOperationCompleted == null)) {
                this.EncodeFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncodeFileOperationCompleted);
            }
            this.InvokeAsync("EncodeFile", new object[] {
                        ba,
                        path}, this.EncodeFileOperationCompleted, userState);
        }
        
        private void OnEncodeFileOperationCompleted(object arg) {
            if ((this.EncodeFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncodeFileCompleted(this, new EncodeFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateADirectory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateADirectory(string path) {
            object[] results = this.Invoke("CreateADirectory", new object[] {
                        path});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateADirectoryAsync(string path) {
            this.CreateADirectoryAsync(path, null);
        }
        
        /// <remarks/>
        public void CreateADirectoryAsync(string path, object userState) {
            if ((this.CreateADirectoryOperationCompleted == null)) {
                this.CreateADirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateADirectoryOperationCompleted);
            }
            this.InvokeAsync("CreateADirectory", new object[] {
                        path}, this.CreateADirectoryOperationCompleted, userState);
        }
        
        private void OnCreateADirectoryOperationCompleted(object arg) {
            if ((this.CreateADirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateADirectoryCompleted(this, new CreateADirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DecodeFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DecodeFile(string path) {
            object[] results = this.Invoke("DecodeFile", new object[] {
                        path});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DecodeFileAsync(string path) {
            this.DecodeFileAsync(path, null);
        }
        
        /// <remarks/>
        public void DecodeFileAsync(string path, object userState) {
            if ((this.DecodeFileOperationCompleted == null)) {
                this.DecodeFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDecodeFileOperationCompleted);
            }
            this.InvokeAsync("DecodeFile", new object[] {
                        path}, this.DecodeFileOperationCompleted, userState);
        }
        
        private void OnDecodeFileOperationCompleted(object arg) {
            if ((this.DecodeFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DecodeFileCompleted(this, new DecodeFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaskCheckFileInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TaskCheckFileInfo(string taskid, string userid, int nowstate, int banktype, int filetype, string filepath, string url, out string msg) {
            object[] results = this.Invoke("TaskCheckFileInfo", new object[] {
                        taskid,
                        userid,
                        nowstate,
                        banktype,
                        filetype,
                        filepath,
                        url});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TaskCheckFileInfoAsync(string taskid, string userid, int nowstate, int banktype, int filetype, string filepath, string url) {
            this.TaskCheckFileInfoAsync(taskid, userid, nowstate, banktype, filetype, filepath, url, null);
        }
        
        /// <remarks/>
        public void TaskCheckFileInfoAsync(string taskid, string userid, int nowstate, int banktype, int filetype, string filepath, string url, object userState) {
            if ((this.TaskCheckFileInfoOperationCompleted == null)) {
                this.TaskCheckFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaskCheckFileInfoOperationCompleted);
            }
            this.InvokeAsync("TaskCheckFileInfo", new object[] {
                        taskid,
                        userid,
                        nowstate,
                        banktype,
                        filetype,
                        filepath,
                        url}, this.TaskCheckFileInfoOperationCompleted, userState);
        }
        
        private void OnTaskCheckFileInfoOperationCompleted(object arg) {
            if ((this.TaskCheckFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaskCheckFileInfoCompleted(this, new TaskCheckFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPayTaskChartDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayTaskChartDetail(string taskid) {
            object[] results = this.Invoke("GetPayTaskChartDetail", new object[] {
                        taskid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayTaskChartDetailAsync(string taskid) {
            this.GetPayTaskChartDetailAsync(taskid, null);
        }
        
        /// <remarks/>
        public void GetPayTaskChartDetailAsync(string taskid, object userState) {
            if ((this.GetPayTaskChartDetailOperationCompleted == null)) {
                this.GetPayTaskChartDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayTaskChartDetailOperationCompleted);
            }
            this.InvokeAsync("GetPayTaskChartDetail", new object[] {
                        taskid}, this.GetPayTaskChartDetailOperationCompleted, userState);
        }
        
        private void OnGetPayTaskChartDetailOperationCompleted(object arg) {
            if ((this.GetPayTaskChartDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayTaskChartDetailCompleted(this, new GetPayTaskChartDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaskUploadResultFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TaskUploadResultFile(string taskid, string userid, int banktype, int filetype, string filepath, string url, out string msg) {
            object[] results = this.Invoke("TaskUploadResultFile", new object[] {
                        taskid,
                        userid,
                        banktype,
                        filetype,
                        filepath,
                        url});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TaskUploadResultFileAsync(string taskid, string userid, int banktype, int filetype, string filepath, string url) {
            this.TaskUploadResultFileAsync(taskid, userid, banktype, filetype, filepath, url, null);
        }
        
        /// <remarks/>
        public void TaskUploadResultFileAsync(string taskid, string userid, int banktype, int filetype, string filepath, string url, object userState) {
            if ((this.TaskUploadResultFileOperationCompleted == null)) {
                this.TaskUploadResultFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaskUploadResultFileOperationCompleted);
            }
            this.InvokeAsync("TaskUploadResultFile", new object[] {
                        taskid,
                        userid,
                        banktype,
                        filetype,
                        filepath,
                        url}, this.TaskUploadResultFileOperationCompleted, userState);
        }
        
        private void OnTaskUploadResultFileOperationCompleted(object arg) {
            if ((this.TaskUploadResultFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaskUploadResultFileCompleted(this, new TaskUploadResultFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaskResultFileInsert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TaskResultFileInsert(string taskid, string userid, string fileid, out string msg) {
            object[] results = this.Invoke("TaskResultFileInsert", new object[] {
                        taskid,
                        userid,
                        fileid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TaskResultFileInsertAsync(string taskid, string userid, string fileid) {
            this.TaskResultFileInsertAsync(taskid, userid, fileid, null);
        }
        
        /// <remarks/>
        public void TaskResultFileInsertAsync(string taskid, string userid, string fileid, object userState) {
            if ((this.TaskResultFileInsertOperationCompleted == null)) {
                this.TaskResultFileInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaskResultFileInsertOperationCompleted);
            }
            this.InvokeAsync("TaskResultFileInsert", new object[] {
                        taskid,
                        userid,
                        fileid}, this.TaskResultFileInsertOperationCompleted, userState);
        }
        
        private void OnTaskResultFileInsertOperationCompleted(object arg) {
            if ((this.TaskResultFileInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaskResultFileInsertCompleted(this, new TaskResultFileInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankUserCheckDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankUserCheckDetail(string statusid, string FBankType, int fstatustype, int gsFlag) {
            object[] results = this.Invoke("GetBankUserCheckDetail", new object[] {
                        statusid,
                        FBankType,
                        fstatustype,
                        gsFlag});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankUserCheckDetailAsync(string statusid, string FBankType, int fstatustype, int gsFlag) {
            this.GetBankUserCheckDetailAsync(statusid, FBankType, fstatustype, gsFlag, null);
        }
        
        /// <remarks/>
        public void GetBankUserCheckDetailAsync(string statusid, string FBankType, int fstatustype, int gsFlag, object userState) {
            if ((this.GetBankUserCheckDetailOperationCompleted == null)) {
                this.GetBankUserCheckDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankUserCheckDetailOperationCompleted);
            }
            this.InvokeAsync("GetBankUserCheckDetail", new object[] {
                        statusid,
                        FBankType,
                        fstatustype,
                        gsFlag}, this.GetBankUserCheckDetailOperationCompleted, userState);
        }
        
        private void OnGetBankUserCheckDetailOperationCompleted(object arg) {
            if ((this.GetBankUserCheckDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankUserCheckDetailCompleted(this, new GetBankUserCheckDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBatchStateFromTaskID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBatchStateFromTaskID(string taskid) {
            object[] results = this.Invoke("GetBatchStateFromTaskID", new object[] {
                        taskid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchStateFromTaskIDAsync(string taskid) {
            this.GetBatchStateFromTaskIDAsync(taskid, null);
        }
        
        /// <remarks/>
        public void GetBatchStateFromTaskIDAsync(string taskid, object userState) {
            if ((this.GetBatchStateFromTaskIDOperationCompleted == null)) {
                this.GetBatchStateFromTaskIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchStateFromTaskIDOperationCompleted);
            }
            this.InvokeAsync("GetBatchStateFromTaskID", new object[] {
                        taskid}, this.GetBatchStateFromTaskIDOperationCompleted, userState);
        }
        
        private void OnGetBatchStateFromTaskIDOperationCompleted(object arg) {
            if ((this.GetBatchStateFromTaskIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchStateFromTaskIDCompleted(this, new GetBatchStateFromTaskIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExistNHRefundTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistNHRefundTask(string taskid) {
            object[] results = this.Invoke("ExistNHRefundTask", new object[] {
                        taskid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistNHRefundTaskAsync(string taskid) {
            this.ExistNHRefundTaskAsync(taskid, null);
        }
        
        /// <remarks/>
        public void ExistNHRefundTaskAsync(string taskid, object userState) {
            if ((this.ExistNHRefundTaskOperationCompleted == null)) {
                this.ExistNHRefundTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistNHRefundTaskOperationCompleted);
            }
            this.InvokeAsync("ExistNHRefundTask", new object[] {
                        taskid}, this.ExistNHRefundTaskOperationCompleted, userState);
        }
        
        private void OnExistNHRefundTaskOperationCompleted(object arg) {
            if ((this.ExistNHRefundTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistNHRefundTaskCompleted(this, new ExistNHRefundTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartNHAutoRefund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartNHAutoRefund(string taskid, out string msg) {
            object[] results = this.Invoke("StartNHAutoRefund", new object[] {
                        taskid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartNHAutoRefundAsync(string taskid) {
            this.StartNHAutoRefundAsync(taskid, null);
        }
        
        /// <remarks/>
        public void StartNHAutoRefundAsync(string taskid, object userState) {
            if ((this.StartNHAutoRefundOperationCompleted == null)) {
                this.StartNHAutoRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartNHAutoRefundOperationCompleted);
            }
            this.InvokeAsync("StartNHAutoRefund", new object[] {
                        taskid}, this.StartNHAutoRefundOperationCompleted, userState);
        }
        
        private void OnStartNHAutoRefundOperationCompleted(object arg) {
            if ((this.StartNHAutoRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartNHAutoRefundCompleted(this, new StartNHAutoRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnRefundState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReturnRefundState(string strBatchID, out string msg) {
            object[] results = this.Invoke("ReturnRefundState", new object[] {
                        strBatchID});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnRefundStateAsync(string strBatchID) {
            this.ReturnRefundStateAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void ReturnRefundStateAsync(string strBatchID, object userState) {
            if ((this.ReturnRefundStateOperationCompleted == null)) {
                this.ReturnRefundStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnRefundStateOperationCompleted);
            }
            this.InvokeAsync("ReturnRefundState", new object[] {
                        strBatchID}, this.ReturnRefundStateOperationCompleted, userState);
        }
        
        private void OnReturnRefundStateOperationCompleted(object arg) {
            if ((this.ReturnRefundStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnRefundStateCompleted(this, new ReturnRefundStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HangRefundFailToOther", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HangRefundFailToOther(string strBatchID, string errMsg, string oldIds, bool createTaskFlag, out string msg, out string insertMemo) {
            object[] results = this.Invoke("HangRefundFailToOther", new object[] {
                        strBatchID,
                        errMsg,
                        oldIds,
                        createTaskFlag});
            msg = ((string)(results[1]));
            insertMemo = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HangRefundFailToOtherAsync(string strBatchID, string errMsg, string oldIds, bool createTaskFlag) {
            this.HangRefundFailToOtherAsync(strBatchID, errMsg, oldIds, createTaskFlag, null);
        }
        
        /// <remarks/>
        public void HangRefundFailToOtherAsync(string strBatchID, string errMsg, string oldIds, bool createTaskFlag, object userState) {
            if ((this.HangRefundFailToOtherOperationCompleted == null)) {
                this.HangRefundFailToOtherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHangRefundFailToOtherOperationCompleted);
            }
            this.InvokeAsync("HangRefundFailToOther", new object[] {
                        strBatchID,
                        errMsg,
                        oldIds,
                        createTaskFlag}, this.HangRefundFailToOtherOperationCompleted, userState);
        }
        
        private void OnHangRefundFailToOtherOperationCompleted(object arg) {
            if ((this.HangRefundFailToOtherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HangRefundFailToOtherCompleted(this, new HangRefundFailToOtherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthorizeRefundBank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AuthorizeRefundBank(string bankType, out string msg) {
            object[] results = this.Invoke("AuthorizeRefundBank", new object[] {
                        bankType});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AuthorizeRefundBankAsync(string bankType) {
            this.AuthorizeRefundBankAsync(bankType, null);
        }
        
        /// <remarks/>
        public void AuthorizeRefundBankAsync(string bankType, object userState) {
            if ((this.AuthorizeRefundBankOperationCompleted == null)) {
                this.AuthorizeRefundBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthorizeRefundBankOperationCompleted);
            }
            this.InvokeAsync("AuthorizeRefundBank", new object[] {
                        bankType}, this.AuthorizeRefundBankOperationCompleted, userState);
        }
        
        private void OnAuthorizeRefundBankOperationCompleted(object arg) {
            if ((this.AuthorizeRefundBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthorizeRefundBankCompleted(this, new AuthorizeRefundBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PayRefundBank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PayRefundBank(string bankType, out string msg) {
            object[] results = this.Invoke("PayRefundBank", new object[] {
                        bankType});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PayRefundBankAsync(string bankType) {
            this.PayRefundBankAsync(bankType, null);
        }
        
        /// <remarks/>
        public void PayRefundBankAsync(string bankType, object userState) {
            if ((this.PayRefundBankOperationCompleted == null)) {
                this.PayRefundBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayRefundBankOperationCompleted);
            }
            this.InvokeAsync("PayRefundBank", new object[] {
                        bankType}, this.PayRefundBankOperationCompleted, userState);
        }
        
        private void OnPayRefundBankOperationCompleted(object arg) {
            if ((this.PayRefundBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayRefundBankCompleted(this, new PayRefundBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeRefundToFail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeRefundToFail(string strBatchID, string bankType, out string msg) {
            object[] results = this.Invoke("ChangeRefundToFail", new object[] {
                        strBatchID,
                        bankType});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeRefundToFailAsync(string strBatchID, string bankType) {
            this.ChangeRefundToFailAsync(strBatchID, bankType, null);
        }
        
        /// <remarks/>
        public void ChangeRefundToFailAsync(string strBatchID, string bankType, object userState) {
            if ((this.ChangeRefundToFailOperationCompleted == null)) {
                this.ChangeRefundToFailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeRefundToFailOperationCompleted);
            }
            this.InvokeAsync("ChangeRefundToFail", new object[] {
                        strBatchID,
                        bankType}, this.ChangeRefundToFailOperationCompleted, userState);
        }
        
        private void OnChangeRefundToFailOperationCompleted(object arg) {
            if ((this.ChangeRefundToFailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeRefundToFailCompleted(this, new ChangeRefundToFailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetBankUserCheckDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetBankUserCheckDetail(string statusid, string strlimit, string FBankType, int ftype, int gsFlag, string fstatusName) {
            this.Invoke("SetBankUserCheckDetail", new object[] {
                        statusid,
                        strlimit,
                        FBankType,
                        ftype,
                        gsFlag,
                        fstatusName});
        }
        
        /// <remarks/>
        public void SetBankUserCheckDetailAsync(string statusid, string strlimit, string FBankType, int ftype, int gsFlag, string fstatusName) {
            this.SetBankUserCheckDetailAsync(statusid, strlimit, FBankType, ftype, gsFlag, fstatusName, null);
        }
        
        /// <remarks/>
        public void SetBankUserCheckDetailAsync(string statusid, string strlimit, string FBankType, int ftype, int gsFlag, string fstatusName, object userState) {
            if ((this.SetBankUserCheckDetailOperationCompleted == null)) {
                this.SetBankUserCheckDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetBankUserCheckDetailOperationCompleted);
            }
            this.InvokeAsync("SetBankUserCheckDetail", new object[] {
                        statusid,
                        strlimit,
                        FBankType,
                        ftype,
                        gsFlag,
                        fstatusName}, this.SetBankUserCheckDetailOperationCompleted, userState);
        }
        
        private void OnSetBankUserCheckDetailOperationCompleted(object arg) {
            if ((this.SetBankUserCheckDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetBankUserCheckDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRefundBank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetAllRefundBank() {
            object[] results = this.Invoke("GetAllRefundBank", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRefundBankAsync() {
            this.GetAllRefundBankAsync(null);
        }
        
        /// <remarks/>
        public void GetAllRefundBankAsync(object userState) {
            if ((this.GetAllRefundBankOperationCompleted == null)) {
                this.GetAllRefundBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRefundBankOperationCompleted);
            }
            this.InvokeAsync("GetAllRefundBank", new object[0], this.GetAllRefundBankOperationCompleted, userState);
        }
        
        private void OnGetAllRefundBankOperationCompleted(object arg) {
            if ((this.GetAllRefundBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRefundBankCompleted(this, new GetAllRefundBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EffectRefundStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EffectRefundStatus(string batchid, string refundid, out string msg) {
            object[] results = this.Invoke("EffectRefundStatus", new object[] {
                        batchid,
                        refundid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EffectRefundStatusAsync(string batchid, string refundid) {
            this.EffectRefundStatusAsync(batchid, refundid, null);
        }
        
        /// <remarks/>
        public void EffectRefundStatusAsync(string batchid, string refundid, object userState) {
            if ((this.EffectRefundStatusOperationCompleted == null)) {
                this.EffectRefundStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEffectRefundStatusOperationCompleted);
            }
            this.InvokeAsync("EffectRefundStatus", new object[] {
                        batchid,
                        refundid}, this.EffectRefundStatusOperationCompleted, userState);
        }
        
        private void OnEffectRefundStatusOperationCompleted(object arg) {
            if ((this.EffectRefundStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EffectRefundStatusCompleted(this, new EffectRefundStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EffectRefundStatus_new", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EffectRefundStatus_new(string batchid, string oldIds, int refundState, string userName, string sumAmt, int refundCounts, out string msg) {
            object[] results = this.Invoke("EffectRefundStatus_new", new object[] {
                        batchid,
                        oldIds,
                        refundState,
                        userName,
                        sumAmt,
                        refundCounts});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EffectRefundStatus_newAsync(string batchid, string oldIds, int refundState, string userName, string sumAmt, int refundCounts) {
            this.EffectRefundStatus_newAsync(batchid, oldIds, refundState, userName, sumAmt, refundCounts, null);
        }
        
        /// <remarks/>
        public void EffectRefundStatus_newAsync(string batchid, string oldIds, int refundState, string userName, string sumAmt, int refundCounts, object userState) {
            if ((this.EffectRefundStatus_newOperationCompleted == null)) {
                this.EffectRefundStatus_newOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEffectRefundStatus_newOperationCompleted);
            }
            this.InvokeAsync("EffectRefundStatus_new", new object[] {
                        batchid,
                        oldIds,
                        refundState,
                        userName,
                        sumAmt,
                        refundCounts}, this.EffectRefundStatus_newOperationCompleted, userState);
        }
        
        private void OnEffectRefundStatus_newOperationCompleted(object arg) {
            if ((this.EffectRefundStatus_newCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EffectRefundStatus_newCompleted(this, new EffectRefundStatus_newCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetRefundPayInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetRefundPayInfo(string oldIds, int refundCounts, out string msg, out string updateMemo) {
            object[] results = this.Invoke("SetRefundPayInfo", new object[] {
                        oldIds,
                        refundCounts});
            msg = ((string)(results[1]));
            updateMemo = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetRefundPayInfoAsync(string oldIds, int refundCounts) {
            this.SetRefundPayInfoAsync(oldIds, refundCounts, null);
        }
        
        /// <remarks/>
        public void SetRefundPayInfoAsync(string oldIds, int refundCounts, object userState) {
            if ((this.SetRefundPayInfoOperationCompleted == null)) {
                this.SetRefundPayInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRefundPayInfoOperationCompleted);
            }
            this.InvokeAsync("SetRefundPayInfo", new object[] {
                        oldIds,
                        refundCounts}, this.SetRefundPayInfoOperationCompleted, userState);
        }
        
        private void OnSetRefundPayInfoOperationCompleted(object arg) {
            if ((this.SetRefundPayInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRefundPayInfoCompleted(this, new SetRefundPayInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetRefundParam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetRefundParam(string oldIds, int refundCounts, out string msg, out string updateMemo) {
            object[] results = this.Invoke("SetRefundParam", new object[] {
                        oldIds,
                        refundCounts});
            msg = ((string)(results[1]));
            updateMemo = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetRefundParamAsync(string oldIds, int refundCounts) {
            this.SetRefundParamAsync(oldIds, refundCounts, null);
        }
        
        /// <remarks/>
        public void SetRefundParamAsync(string oldIds, int refundCounts, object userState) {
            if ((this.SetRefundParamOperationCompleted == null)) {
                this.SetRefundParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRefundParamOperationCompleted);
            }
            this.InvokeAsync("SetRefundParam", new object[] {
                        oldIds,
                        refundCounts}, this.SetRefundParamOperationCompleted, userState);
        }
        
        private void OnSetRefundParamOperationCompleted(object arg) {
            if ((this.SetRefundParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRefundParamCompleted(this, new SetRefundParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveRefundParam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveRefundParam(string oldId, string[] param, string bankType, int userMake, out string msg, out string updateMemo) {
            object[] results = this.Invoke("SaveRefundParam", new object[] {
                        oldId,
                        param,
                        bankType,
                        userMake});
            msg = ((string)(results[1]));
            updateMemo = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveRefundParamAsync(string oldId, string[] param, string bankType, int userMake) {
            this.SaveRefundParamAsync(oldId, param, bankType, userMake, null);
        }
        
        /// <remarks/>
        public void SaveRefundParamAsync(string oldId, string[] param, string bankType, int userMake, object userState) {
            if ((this.SaveRefundParamOperationCompleted == null)) {
                this.SaveRefundParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRefundParamOperationCompleted);
            }
            this.InvokeAsync("SaveRefundParam", new object[] {
                        oldId,
                        param,
                        bankType,
                        userMake}, this.SaveRefundParamOperationCompleted, userState);
        }
        
        private void OnSaveRefundParamOperationCompleted(object arg) {
            if ((this.SaveRefundParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRefundParamCompleted(this, new SaveRefundParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SQSLike3113BankType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SQSLike3113BankType(string bankType) {
            object[] results = this.Invoke("SQSLike3113BankType", new object[] {
                        bankType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SQSLike3113BankTypeAsync(string bankType) {
            this.SQSLike3113BankTypeAsync(bankType, null);
        }
        
        /// <remarks/>
        public void SQSLike3113BankTypeAsync(string bankType, object userState) {
            if ((this.SQSLike3113BankTypeOperationCompleted == null)) {
                this.SQSLike3113BankTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSQSLike3113BankTypeOperationCompleted);
            }
            this.InvokeAsync("SQSLike3113BankType", new object[] {
                        bankType}, this.SQSLike3113BankTypeOperationCompleted, userState);
        }
        
        private void OnSQSLike3113BankTypeOperationCompleted(object arg) {
            if ((this.SQSLike3113BankTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SQSLike3113BankTypeCompleted(this, new SQSLike3113BankTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CanAdjustRefundRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanAdjustRefundRecord(string batchid, string refundids, string commandtype, int refundCounts, out string msg) {
            object[] results = this.Invoke("CanAdjustRefundRecord", new object[] {
                        batchid,
                        refundids,
                        commandtype,
                        refundCounts});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanAdjustRefundRecordAsync(string batchid, string refundids, string commandtype, int refundCounts) {
            this.CanAdjustRefundRecordAsync(batchid, refundids, commandtype, refundCounts, null);
        }
        
        /// <remarks/>
        public void CanAdjustRefundRecordAsync(string batchid, string refundids, string commandtype, int refundCounts, object userState) {
            if ((this.CanAdjustRefundRecordOperationCompleted == null)) {
                this.CanAdjustRefundRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanAdjustRefundRecordOperationCompleted);
            }
            this.InvokeAsync("CanAdjustRefundRecord", new object[] {
                        batchid,
                        refundids,
                        commandtype,
                        refundCounts}, this.CanAdjustRefundRecordOperationCompleted, userState);
        }
        
        private void OnCanAdjustRefundRecordOperationCompleted(object arg) {
            if ((this.CanAdjustRefundRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanAdjustRefundRecordCompleted(this, new CanAdjustRefundRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchAdjustRefundRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatchAdjustRefundRecord(string batchid, string refundIds, string commandtype, string returnamt, int refundCounts, out string msg) {
            object[] results = this.Invoke("BatchAdjustRefundRecord", new object[] {
                        batchid,
                        refundIds,
                        commandtype,
                        returnamt,
                        refundCounts});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatchAdjustRefundRecordAsync(string batchid, string refundIds, string commandtype, string returnamt, int refundCounts) {
            this.BatchAdjustRefundRecordAsync(batchid, refundIds, commandtype, returnamt, refundCounts, null);
        }
        
        /// <remarks/>
        public void BatchAdjustRefundRecordAsync(string batchid, string refundIds, string commandtype, string returnamt, int refundCounts, object userState) {
            if ((this.BatchAdjustRefundRecordOperationCompleted == null)) {
                this.BatchAdjustRefundRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchAdjustRefundRecordOperationCompleted);
            }
            this.InvokeAsync("BatchAdjustRefundRecord", new object[] {
                        batchid,
                        refundIds,
                        commandtype,
                        returnamt,
                        refundCounts}, this.BatchAdjustRefundRecordOperationCompleted, userState);
        }
        
        private void OnBatchAdjustRefundRecordOperationCompleted(object arg) {
            if ((this.BatchAdjustRefundRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchAdjustRefundRecordCompleted(this, new BatchAdjustRefundRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CanStartRefundOtherCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanStartRefundOtherCheck(string oldIds, string commandtype, int refundCounts, out string msg, out string bankType) {
            object[] results = this.Invoke("CanStartRefundOtherCheck", new object[] {
                        oldIds,
                        commandtype,
                        refundCounts});
            msg = ((string)(results[1]));
            bankType = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanStartRefundOtherCheckAsync(string oldIds, string commandtype, int refundCounts) {
            this.CanStartRefundOtherCheckAsync(oldIds, commandtype, refundCounts, null);
        }
        
        /// <remarks/>
        public void CanStartRefundOtherCheckAsync(string oldIds, string commandtype, int refundCounts, object userState) {
            if ((this.CanStartRefundOtherCheckOperationCompleted == null)) {
                this.CanStartRefundOtherCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanStartRefundOtherCheckOperationCompleted);
            }
            this.InvokeAsync("CanStartRefundOtherCheck", new object[] {
                        oldIds,
                        commandtype,
                        refundCounts}, this.CanStartRefundOtherCheckOperationCompleted, userState);
        }
        
        private void OnCanStartRefundOtherCheckOperationCompleted(object arg) {
            if ((this.CanStartRefundOtherCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanStartRefundOtherCheckCompleted(this, new CanStartRefundOtherCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDataForUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckDataForUpload(string oldIds, int itemCounts, out string bankType, out string msg) {
            object[] results = this.Invoke("CheckDataForUpload", new object[] {
                        oldIds,
                        itemCounts});
            bankType = ((string)(results[1]));
            msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDataForUploadAsync(string oldIds, int itemCounts) {
            this.CheckDataForUploadAsync(oldIds, itemCounts, null);
        }
        
        /// <remarks/>
        public void CheckDataForUploadAsync(string oldIds, int itemCounts, object userState) {
            if ((this.CheckDataForUploadOperationCompleted == null)) {
                this.CheckDataForUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDataForUploadOperationCompleted);
            }
            this.InvokeAsync("CheckDataForUpload", new object[] {
                        oldIds,
                        itemCounts}, this.CheckDataForUploadOperationCompleted, userState);
        }
        
        private void OnCheckDataForUploadOperationCompleted(object arg) {
            if ((this.CheckDataForUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDataForUploadCompleted(this, new CheckDataForUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadICBCParamData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadICBCParamData(string fileName, string oldIds, int itemCounts, string bankType, int userMake, out string msg, out string operMsg) {
            object[] results = this.Invoke("UploadICBCParamData", new object[] {
                        fileName,
                        oldIds,
                        itemCounts,
                        bankType,
                        userMake});
            msg = ((string)(results[1]));
            operMsg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadICBCParamDataAsync(string fileName, string oldIds, int itemCounts, string bankType, int userMake) {
            this.UploadICBCParamDataAsync(fileName, oldIds, itemCounts, bankType, userMake, null);
        }
        
        /// <remarks/>
        public void UploadICBCParamDataAsync(string fileName, string oldIds, int itemCounts, string bankType, int userMake, object userState) {
            if ((this.UploadICBCParamDataOperationCompleted == null)) {
                this.UploadICBCParamDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadICBCParamDataOperationCompleted);
            }
            this.InvokeAsync("UploadICBCParamData", new object[] {
                        fileName,
                        oldIds,
                        itemCounts,
                        bankType,
                        userMake}, this.UploadICBCParamDataOperationCompleted, userState);
        }
        
        private void OnUploadICBCParamDataOperationCompleted(object arg) {
            if ((this.UploadICBCParamDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadICBCParamDataCompleted(this, new UploadICBCParamDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadICBCPayInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadICBCPayInfo(string fileName, string oldIds, int itemCounts, string bankType, int userMake, out string msg, out string operMsg) {
            object[] results = this.Invoke("UploadICBCPayInfo", new object[] {
                        fileName,
                        oldIds,
                        itemCounts,
                        bankType,
                        userMake});
            msg = ((string)(results[1]));
            operMsg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadICBCPayInfoAsync(string fileName, string oldIds, int itemCounts, string bankType, int userMake) {
            this.UploadICBCPayInfoAsync(fileName, oldIds, itemCounts, bankType, userMake, null);
        }
        
        /// <remarks/>
        public void UploadICBCPayInfoAsync(string fileName, string oldIds, int itemCounts, string bankType, int userMake, object userState) {
            if ((this.UploadICBCPayInfoOperationCompleted == null)) {
                this.UploadICBCPayInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadICBCPayInfoOperationCompleted);
            }
            this.InvokeAsync("UploadICBCPayInfo", new object[] {
                        fileName,
                        oldIds,
                        itemCounts,
                        bankType,
                        userMake}, this.UploadICBCPayInfoOperationCompleted, userState);
        }
        
        private void OnUploadICBCPayInfoOperationCompleted(object arg) {
            if ((this.UploadICBCPayInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadICBCPayInfoCompleted(this, new UploadICBCPayInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartRefundOtherCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartRefundOtherCheck(string oldIds, string commandtype, string returnamt, int refundCounts, out string msg) {
            object[] results = this.Invoke("StartRefundOtherCheck", new object[] {
                        oldIds,
                        commandtype,
                        returnamt,
                        refundCounts});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartRefundOtherCheckAsync(string oldIds, string commandtype, string returnamt, int refundCounts) {
            this.StartRefundOtherCheckAsync(oldIds, commandtype, returnamt, refundCounts, null);
        }
        
        /// <remarks/>
        public void StartRefundOtherCheckAsync(string oldIds, string commandtype, string returnamt, int refundCounts, object userState) {
            if ((this.StartRefundOtherCheckOperationCompleted == null)) {
                this.StartRefundOtherCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartRefundOtherCheckOperationCompleted);
            }
            this.InvokeAsync("StartRefundOtherCheck", new object[] {
                        oldIds,
                        commandtype,
                        returnamt,
                        refundCounts}, this.StartRefundOtherCheckOperationCompleted, userState);
        }
        
        private void OnStartRefundOtherCheckOperationCompleted(object arg) {
            if ((this.StartRefundOtherCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartRefundOtherCheckCompleted(this, new StartRefundOtherCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartRefundOtherCheckNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartRefundOtherCheckNew(string oldIds, string commandtype, string returnamt, int refundCounts, out string msg) {
            object[] results = this.Invoke("StartRefundOtherCheckNew", new object[] {
                        oldIds,
                        commandtype,
                        returnamt,
                        refundCounts});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartRefundOtherCheckNewAsync(string oldIds, string commandtype, string returnamt, int refundCounts) {
            this.StartRefundOtherCheckNewAsync(oldIds, commandtype, returnamt, refundCounts, null);
        }
        
        /// <remarks/>
        public void StartRefundOtherCheckNewAsync(string oldIds, string commandtype, string returnamt, int refundCounts, object userState) {
            if ((this.StartRefundOtherCheckNewOperationCompleted == null)) {
                this.StartRefundOtherCheckNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartRefundOtherCheckNewOperationCompleted);
            }
            this.InvokeAsync("StartRefundOtherCheckNew", new object[] {
                        oldIds,
                        commandtype,
                        returnamt,
                        refundCounts}, this.StartRefundOtherCheckNewOperationCompleted, userState);
        }
        
        private void OnStartRefundOtherCheckNewOperationCompleted(object arg) {
            if ((this.StartRefundOtherCheckNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartRefundOtherCheckNewCompleted(this, new StartRefundOtherCheckNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustRefundRecordProxy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AdjustRefundRecordProxy(string listid, string refundid, string commandtype, out string msg) {
            object[] results = this.Invoke("AdjustRefundRecordProxy", new object[] {
                        listid,
                        refundid,
                        commandtype});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustRefundRecordProxyAsync(string listid, string refundid, string commandtype) {
            this.AdjustRefundRecordProxyAsync(listid, refundid, commandtype, null);
        }
        
        /// <remarks/>
        public void AdjustRefundRecordProxyAsync(string listid, string refundid, string commandtype, object userState) {
            if ((this.AdjustRefundRecordProxyOperationCompleted == null)) {
                this.AdjustRefundRecordProxyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustRefundRecordProxyOperationCompleted);
            }
            this.InvokeAsync("AdjustRefundRecordProxy", new object[] {
                        listid,
                        refundid,
                        commandtype}, this.AdjustRefundRecordProxyOperationCompleted, userState);
        }
        
        private void OnAdjustRefundRecordProxyOperationCompleted(object arg) {
            if ((this.AdjustRefundRecordProxyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustRefundRecordProxyCompleted(this, new AdjustRefundRecordProxyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustRefundRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AdjustRefundRecord(string batchid, string listid, string refundid, string commandtype, out string msg) {
            object[] results = this.Invoke("AdjustRefundRecord", new object[] {
                        batchid,
                        listid,
                        refundid,
                        commandtype});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustRefundRecordAsync(string batchid, string listid, string refundid, string commandtype) {
            this.AdjustRefundRecordAsync(batchid, listid, refundid, commandtype, null);
        }
        
        /// <remarks/>
        public void AdjustRefundRecordAsync(string batchid, string listid, string refundid, string commandtype, object userState) {
            if ((this.AdjustRefundRecordOperationCompleted == null)) {
                this.AdjustRefundRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustRefundRecordOperationCompleted);
            }
            this.InvokeAsync("AdjustRefundRecord", new object[] {
                        batchid,
                        listid,
                        refundid,
                        commandtype}, this.AdjustRefundRecordOperationCompleted, userState);
        }
        
        private void OnAdjustRefundRecordOperationCompleted(object arg) {
            if ((this.AdjustRefundRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustRefundRecordCompleted(this, new AdjustRefundRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustRefundRecord_new", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AdjustRefundRecord_new(string batchid, string oldIds, string commandtype, int itemCounts, out string msg) {
            object[] results = this.Invoke("AdjustRefundRecord_new", new object[] {
                        batchid,
                        oldIds,
                        commandtype,
                        itemCounts});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustRefundRecord_newAsync(string batchid, string oldIds, string commandtype, int itemCounts) {
            this.AdjustRefundRecord_newAsync(batchid, oldIds, commandtype, itemCounts, null);
        }
        
        /// <remarks/>
        public void AdjustRefundRecord_newAsync(string batchid, string oldIds, string commandtype, int itemCounts, object userState) {
            if ((this.AdjustRefundRecord_newOperationCompleted == null)) {
                this.AdjustRefundRecord_newOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustRefundRecord_newOperationCompleted);
            }
            this.InvokeAsync("AdjustRefundRecord_new", new object[] {
                        batchid,
                        oldIds,
                        commandtype,
                        itemCounts}, this.AdjustRefundRecord_newOperationCompleted, userState);
        }
        
        private void OnAdjustRefundRecord_newOperationCompleted(object arg) {
            if ((this.AdjustRefundRecord_newCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustRefundRecord_newCompleted(this, new AdjustRefundRecord_newCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_Adjust_ICBC_Task", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WS_Adjust_ICBC_Task(string sTaskId, out string msg) {
            object[] results = this.Invoke("WS_Adjust_ICBC_Task", new object[] {
                        sTaskId});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WS_Adjust_ICBC_TaskAsync(string sTaskId) {
            this.WS_Adjust_ICBC_TaskAsync(sTaskId, null);
        }
        
        /// <remarks/>
        public void WS_Adjust_ICBC_TaskAsync(string sTaskId, object userState) {
            if ((this.WS_Adjust_ICBC_TaskOperationCompleted == null)) {
                this.WS_Adjust_ICBC_TaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_Adjust_ICBC_TaskOperationCompleted);
            }
            this.InvokeAsync("WS_Adjust_ICBC_Task", new object[] {
                        sTaskId}, this.WS_Adjust_ICBC_TaskOperationCompleted, userState);
        }
        
        private void OnWS_Adjust_ICBC_TaskOperationCompleted(object arg) {
            if ((this.WS_Adjust_ICBC_TaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_Adjust_ICBC_TaskCompleted(this, new WS_Adjust_ICBC_TaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFileCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadFileCount(string filename) {
            this.Invoke("UploadFileCount", new object[] {
                        filename});
        }
        
        /// <remarks/>
        public void UploadFileCountAsync(string filename) {
            this.UploadFileCountAsync(filename, null);
        }
        
        /// <remarks/>
        public void UploadFileCountAsync(string filename, object userState) {
            if ((this.UploadFileCountOperationCompleted == null)) {
                this.UploadFileCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileCountOperationCompleted);
            }
            this.InvokeAsync("UploadFileCount", new object[] {
                        filename}, this.UploadFileCountOperationCompleted, userState);
        }
        
        private void OnUploadFileCountOperationCompleted(object arg) {
            if ((this.UploadFileCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadFileCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReadFileCount(string filename, int ftype) {
            object[] results = this.Invoke("ReadFileCount", new object[] {
                        filename,
                        ftype});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReadFileCountAsync(string filename, int ftype) {
            this.ReadFileCountAsync(filename, ftype, null);
        }
        
        /// <remarks/>
        public void ReadFileCountAsync(string filename, int ftype, object userState) {
            if ((this.ReadFileCountOperationCompleted == null)) {
                this.ReadFileCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadFileCountOperationCompleted);
            }
            this.InvokeAsync("ReadFileCount", new object[] {
                        filename,
                        ftype}, this.ReadFileCountOperationCompleted, userState);
        }
        
        private void OnReadFileCountOperationCompleted(object arg) {
            if ((this.ReadFileCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadFileCountCompleted(this, new ReadFileCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownFileCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DownFileCount(string filename) {
            object[] results = this.Invoke("DownFileCount", new object[] {
                        filename});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DownFileCountAsync(string filename) {
            this.DownFileCountAsync(filename, null);
        }
        
        /// <remarks/>
        public void DownFileCountAsync(string filename, object userState) {
            if ((this.DownFileCountOperationCompleted == null)) {
                this.DownFileCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownFileCountOperationCompleted);
            }
            this.InvokeAsync("DownFileCount", new object[] {
                        filename}, this.DownFileCountOperationCompleted, userState);
        }
        
        private void OnDownFileCountOperationCompleted(object arg) {
            if ((this.DownFileCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownFileCountCompleted(this, new DownFileCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RefreshBatchInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RefreshBatchInfo(string Fbatchid) {
            this.Invoke("RefreshBatchInfo", new object[] {
                        Fbatchid});
        }
        
        /// <remarks/>
        public void RefreshBatchInfoAsync(string Fbatchid) {
            this.RefreshBatchInfoAsync(Fbatchid, null);
        }
        
        /// <remarks/>
        public void RefreshBatchInfoAsync(string Fbatchid, object userState) {
            if ((this.RefreshBatchInfoOperationCompleted == null)) {
                this.RefreshBatchInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshBatchInfoOperationCompleted);
            }
            this.InvokeAsync("RefreshBatchInfo", new object[] {
                        Fbatchid}, this.RefreshBatchInfoOperationCompleted, userState);
        }
        
        private void OnRefreshBatchInfoOperationCompleted(object arg) {
            if ((this.RefreshBatchInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshBatchInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartDoTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StartDoTask(string taskName, string taskId, string[] parm) {
            this.Invoke("StartDoTask", new object[] {
                        taskName,
                        taskId,
                        parm});
        }
        
        /// <remarks/>
        public void StartDoTaskAsync(string taskName, string taskId, string[] parm) {
            this.StartDoTaskAsync(taskName, taskId, parm, null);
        }
        
        /// <remarks/>
        public void StartDoTaskAsync(string taskName, string taskId, string[] parm, object userState) {
            if ((this.StartDoTaskOperationCompleted == null)) {
                this.StartDoTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartDoTaskOperationCompleted);
            }
            this.InvokeAsync("StartDoTask", new object[] {
                        taskName,
                        taskId,
                        parm}, this.StartDoTaskOperationCompleted, userState);
        }
        
        private void OnStartDoTaskOperationCompleted(object arg) {
            if ((this.StartDoTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartDoTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMerchantPayMemo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMerchantPayMemo(string fqqid, int start, int max) {
            object[] results = this.Invoke("GetMerchantPayMemo", new object[] {
                        fqqid,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMerchantPayMemoAsync(string fqqid, int start, int max) {
            this.GetMerchantPayMemoAsync(fqqid, start, max, null);
        }
        
        /// <remarks/>
        public void GetMerchantPayMemoAsync(string fqqid, int start, int max, object userState) {
            if ((this.GetMerchantPayMemoOperationCompleted == null)) {
                this.GetMerchantPayMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMerchantPayMemoOperationCompleted);
            }
            this.InvokeAsync("GetMerchantPayMemo", new object[] {
                        fqqid,
                        start,
                        max}, this.GetMerchantPayMemoOperationCompleted, userState);
        }
        
        private void OnGetMerchantPayMemoOperationCompleted(object arg) {
            if ((this.GetMerchantPayMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMerchantPayMemoCompleted(this, new GetMerchantPayMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MerchantPayMemoAttAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MerchantPayMemoAttAdd(string fqqid, string bankaccno, string fusr, string fbanktype, string memo, out string Msg) {
            object[] results = this.Invoke("MerchantPayMemoAttAdd", new object[] {
                        fqqid,
                        bankaccno,
                        fusr,
                        fbanktype,
                        memo});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MerchantPayMemoAttAddAsync(string fqqid, string bankaccno, string fusr, string fbanktype, string memo) {
            this.MerchantPayMemoAttAddAsync(fqqid, bankaccno, fusr, fbanktype, memo, null);
        }
        
        /// <remarks/>
        public void MerchantPayMemoAttAddAsync(string fqqid, string bankaccno, string fusr, string fbanktype, string memo, object userState) {
            if ((this.MerchantPayMemoAttAddOperationCompleted == null)) {
                this.MerchantPayMemoAttAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMerchantPayMemoAttAddOperationCompleted);
            }
            this.InvokeAsync("MerchantPayMemoAttAdd", new object[] {
                        fqqid,
                        bankaccno,
                        fusr,
                        fbanktype,
                        memo}, this.MerchantPayMemoAttAddOperationCompleted, userState);
        }
        
        private void OnMerchantPayMemoAttAddOperationCompleted(object arg) {
            if ((this.MerchantPayMemoAttAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MerchantPayMemoAttAddCompleted(this, new MerchantPayMemoAttAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MerchantPayMemoModify", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MerchantPayMemoModify(string fid, string fqqid, string bankaccno, string fusr, string fbanktype, string memo, out string Msg) {
            object[] results = this.Invoke("MerchantPayMemoModify", new object[] {
                        fid,
                        fqqid,
                        bankaccno,
                        fusr,
                        fbanktype,
                        memo});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MerchantPayMemoModifyAsync(string fid, string fqqid, string bankaccno, string fusr, string fbanktype, string memo) {
            this.MerchantPayMemoModifyAsync(fid, fqqid, bankaccno, fusr, fbanktype, memo, null);
        }
        
        /// <remarks/>
        public void MerchantPayMemoModifyAsync(string fid, string fqqid, string bankaccno, string fusr, string fbanktype, string memo, object userState) {
            if ((this.MerchantPayMemoModifyOperationCompleted == null)) {
                this.MerchantPayMemoModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMerchantPayMemoModifyOperationCompleted);
            }
            this.InvokeAsync("MerchantPayMemoModify", new object[] {
                        fid,
                        fqqid,
                        bankaccno,
                        fusr,
                        fbanktype,
                        memo}, this.MerchantPayMemoModifyOperationCompleted, userState);
        }
        
        private void OnMerchantPayMemoModifyOperationCompleted(object arg) {
            if ((this.MerchantPayMemoModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MerchantPayMemoModifyCompleted(this, new MerchantPayMemoModifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MerchantPayMemoDel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MerchantPayMemoDel(string fid, out string Msg) {
            object[] results = this.Invoke("MerchantPayMemoDel", new object[] {
                        fid});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MerchantPayMemoDelAsync(string fid) {
            this.MerchantPayMemoDelAsync(fid, null);
        }
        
        /// <remarks/>
        public void MerchantPayMemoDelAsync(string fid, object userState) {
            if ((this.MerchantPayMemoDelOperationCompleted == null)) {
                this.MerchantPayMemoDelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMerchantPayMemoDelOperationCompleted);
            }
            this.InvokeAsync("MerchantPayMemoDel", new object[] {
                        fid}, this.MerchantPayMemoDelOperationCompleted, userState);
        }
        
        private void OnMerchantPayMemoDelOperationCompleted(object arg) {
            if ((this.MerchantPayMemoDelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MerchantPayMemoDelCompleted(this, new MerchantPayMemoDelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Batch_ReturnTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Batch_ReturnTask(string strbatchid) {
            this.Invoke("Batch_ReturnTask", new object[] {
                        strbatchid});
        }
        
        /// <remarks/>
        public void Batch_ReturnTaskAsync(string strbatchid) {
            this.Batch_ReturnTaskAsync(strbatchid, null);
        }
        
        /// <remarks/>
        public void Batch_ReturnTaskAsync(string strbatchid, object userState) {
            if ((this.Batch_ReturnTaskOperationCompleted == null)) {
                this.Batch_ReturnTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatch_ReturnTaskOperationCompleted);
            }
            this.InvokeAsync("Batch_ReturnTask", new object[] {
                        strbatchid}, this.Batch_ReturnTaskOperationCompleted, userState);
        }
        
        private void OnBatch_ReturnTaskOperationCompleted(object arg) {
            if ((this.Batch_ReturnTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Batch_ReturnTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetXYKConn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetXYKConn() {
            object[] results = this.Invoke("GetXYKConn", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetXYKConnAsync() {
            this.GetXYKConnAsync(null);
        }
        
        /// <remarks/>
        public void GetXYKConnAsync(object userState) {
            if ((this.GetXYKConnOperationCompleted == null)) {
                this.GetXYKConnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXYKConnOperationCompleted);
            }
            this.InvokeAsync("GetXYKConn", new object[0], this.GetXYKConnOperationCompleted, userState);
        }
        
        private void OnGetXYKConnOperationCompleted(object arg) {
            if ((this.GetXYKConnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXYKConnCompleted(this, new GetXYKConnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaskCheckFile_VPN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TaskCheckFile_VPN(string fbatchid, out string errMsg) {
            object[] results = this.Invoke("TaskCheckFile_VPN", new object[] {
                        fbatchid});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TaskCheckFile_VPNAsync(string fbatchid) {
            this.TaskCheckFile_VPNAsync(fbatchid, null);
        }
        
        /// <remarks/>
        public void TaskCheckFile_VPNAsync(string fbatchid, object userState) {
            if ((this.TaskCheckFile_VPNOperationCompleted == null)) {
                this.TaskCheckFile_VPNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaskCheckFile_VPNOperationCompleted);
            }
            this.InvokeAsync("TaskCheckFile_VPN", new object[] {
                        fbatchid}, this.TaskCheckFile_VPNOperationCompleted, userState);
        }
        
        private void OnTaskCheckFile_VPNOperationCompleted(object arg) {
            if ((this.TaskCheckFile_VPNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaskCheckFile_VPNCompleted(this, new TaskCheckFile_VPNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadBatchTransferData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadBatchTransferData(string fileName, long totalAmt, int totalCount, string checkBatchid, int transferType, string save_type, out string msg, out string batchid) {
            object[] results = this.Invoke("UploadBatchTransferData", new object[] {
                        fileName,
                        totalAmt,
                        totalCount,
                        checkBatchid,
                        transferType,
                        save_type});
            msg = ((string)(results[1]));
            batchid = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadBatchTransferDataAsync(string fileName, long totalAmt, int totalCount, string checkBatchid, int transferType, string save_type) {
            this.UploadBatchTransferDataAsync(fileName, totalAmt, totalCount, checkBatchid, transferType, save_type, null);
        }
        
        /// <remarks/>
        public void UploadBatchTransferDataAsync(string fileName, long totalAmt, int totalCount, string checkBatchid, int transferType, string save_type, object userState) {
            if ((this.UploadBatchTransferDataOperationCompleted == null)) {
                this.UploadBatchTransferDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadBatchTransferDataOperationCompleted);
            }
            this.InvokeAsync("UploadBatchTransferData", new object[] {
                        fileName,
                        totalAmt,
                        totalCount,
                        checkBatchid,
                        transferType,
                        save_type}, this.UploadBatchTransferDataOperationCompleted, userState);
        }
        
        private void OnUploadBatchTransferDataOperationCompleted(object arg) {
            if ((this.UploadBatchTransferDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadBatchTransferDataCompleted(this, new UploadBatchTransferDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartBatchTransferCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartBatchTransferCheck(string batchid, long totalAmt, int totalCount, string saveType, out string msg) {
            object[] results = this.Invoke("StartBatchTransferCheck", new object[] {
                        batchid,
                        totalAmt,
                        totalCount,
                        saveType});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartBatchTransferCheckAsync(string batchid, long totalAmt, int totalCount, string saveType) {
            this.StartBatchTransferCheckAsync(batchid, totalAmt, totalCount, saveType, null);
        }
        
        /// <remarks/>
        public void StartBatchTransferCheckAsync(string batchid, long totalAmt, int totalCount, string saveType, object userState) {
            if ((this.StartBatchTransferCheckOperationCompleted == null)) {
                this.StartBatchTransferCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartBatchTransferCheckOperationCompleted);
            }
            this.InvokeAsync("StartBatchTransferCheck", new object[] {
                        batchid,
                        totalAmt,
                        totalCount,
                        saveType}, this.StartBatchTransferCheckOperationCompleted, userState);
        }
        
        private void OnStartBatchTransferCheckOperationCompleted(object arg) {
            if ((this.StartBatchTransferCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartBatchTransferCheckCompleted(this, new StartBatchTransferCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckBatchC2CTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckBatchC2CTransfer(string batchid, out string msg) {
            object[] results = this.Invoke("CheckBatchC2CTransfer", new object[] {
                        batchid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBatchC2CTransferAsync(string batchid) {
            this.CheckBatchC2CTransferAsync(batchid, null);
        }
        
        /// <remarks/>
        public void CheckBatchC2CTransferAsync(string batchid, object userState) {
            if ((this.CheckBatchC2CTransferOperationCompleted == null)) {
                this.CheckBatchC2CTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBatchC2CTransferOperationCompleted);
            }
            this.InvokeAsync("CheckBatchC2CTransfer", new object[] {
                        batchid}, this.CheckBatchC2CTransferOperationCompleted, userState);
        }
        
        private void OnCheckBatchC2CTransferOperationCompleted(object arg) {
            if ((this.CheckBatchC2CTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBatchC2CTransferCompleted(this, new CheckBatchC2CTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadHONGBAOData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadHONGBAOData(string fileName, long totalAmt, int totalCount, string checkBatchid, string fqqid, string fpassword, string fhbtype, string chistips, string hbtitle, string fmewishes, string fuserid, out string msg, out string batchid) {
            object[] results = this.Invoke("UploadHONGBAOData", new object[] {
                        fileName,
                        totalAmt,
                        totalCount,
                        checkBatchid,
                        fqqid,
                        fpassword,
                        fhbtype,
                        chistips,
                        hbtitle,
                        fmewishes,
                        fuserid});
            msg = ((string)(results[1]));
            batchid = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadHONGBAODataAsync(string fileName, long totalAmt, int totalCount, string checkBatchid, string fqqid, string fpassword, string fhbtype, string chistips, string hbtitle, string fmewishes, string fuserid) {
            this.UploadHONGBAODataAsync(fileName, totalAmt, totalCount, checkBatchid, fqqid, fpassword, fhbtype, chistips, hbtitle, fmewishes, fuserid, null);
        }
        
        /// <remarks/>
        public void UploadHONGBAODataAsync(string fileName, long totalAmt, int totalCount, string checkBatchid, string fqqid, string fpassword, string fhbtype, string chistips, string hbtitle, string fmewishes, string fuserid, object userState) {
            if ((this.UploadHONGBAODataOperationCompleted == null)) {
                this.UploadHONGBAODataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadHONGBAODataOperationCompleted);
            }
            this.InvokeAsync("UploadHONGBAOData", new object[] {
                        fileName,
                        totalAmt,
                        totalCount,
                        checkBatchid,
                        fqqid,
                        fpassword,
                        fhbtype,
                        chistips,
                        hbtitle,
                        fmewishes,
                        fuserid}, this.UploadHONGBAODataOperationCompleted, userState);
        }
        
        private void OnUploadHONGBAODataOperationCompleted(object arg) {
            if ((this.UploadHONGBAODataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadHONGBAODataCompleted(this, new UploadHONGBAODataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartHONGBAOCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartHONGBAOCheck(string batchid, long totalAmt, int totalCount, out string msg) {
            object[] results = this.Invoke("StartHONGBAOCheck", new object[] {
                        batchid,
                        totalAmt,
                        totalCount});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartHONGBAOCheckAsync(string batchid, long totalAmt, int totalCount) {
            this.StartHONGBAOCheckAsync(batchid, totalAmt, totalCount, null);
        }
        
        /// <remarks/>
        public void StartHONGBAOCheckAsync(string batchid, long totalAmt, int totalCount, object userState) {
            if ((this.StartHONGBAOCheckOperationCompleted == null)) {
                this.StartHONGBAOCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartHONGBAOCheckOperationCompleted);
            }
            this.InvokeAsync("StartHONGBAOCheck", new object[] {
                        batchid,
                        totalAmt,
                        totalCount}, this.StartHONGBAOCheckOperationCompleted, userState);
        }
        
        private void OnStartHONGBAOCheckOperationCompleted(object arg) {
            if ((this.StartHONGBAOCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartHONGBAOCheckCompleted(this, new StartHONGBAOCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckHONGBAO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckHONGBAO(string batchid, out string msg) {
            object[] results = this.Invoke("CheckHONGBAO", new object[] {
                        batchid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckHONGBAOAsync(string batchid) {
            this.CheckHONGBAOAsync(batchid, null);
        }
        
        /// <remarks/>
        public void CheckHONGBAOAsync(string batchid, object userState) {
            if ((this.CheckHONGBAOOperationCompleted == null)) {
                this.CheckHONGBAOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckHONGBAOOperationCompleted);
            }
            this.InvokeAsync("CheckHONGBAO", new object[] {
                        batchid}, this.CheckHONGBAOOperationCompleted, userState);
        }
        
        private void OnCheckHONGBAOOperationCompleted(object arg) {
            if ((this.CheckHONGBAOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckHONGBAOCompleted(this, new CheckHONGBAOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRefundOtherMemo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateRefundOtherMemo(string oldid, string fmemo, out string msg) {
            object[] results = this.Invoke("UpdateRefundOtherMemo", new object[] {
                        oldid,
                        fmemo});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRefundOtherMemoAsync(string oldid, string fmemo) {
            this.UpdateRefundOtherMemoAsync(oldid, fmemo, null);
        }
        
        /// <remarks/>
        public void UpdateRefundOtherMemoAsync(string oldid, string fmemo, object userState) {
            if ((this.UpdateRefundOtherMemoOperationCompleted == null)) {
                this.UpdateRefundOtherMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRefundOtherMemoOperationCompleted);
            }
            this.InvokeAsync("UpdateRefundOtherMemo", new object[] {
                        oldid,
                        fmemo}, this.UpdateRefundOtherMemoOperationCompleted, userState);
        }
        
        private void OnUpdateRefundOtherMemoOperationCompleted(object arg) {
            if ((this.UpdateRefundOtherMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRefundOtherMemoCompleted(this, new UpdateRefundOtherMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRefundInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateRefundInfo(string oldid, string payFrontTime, string payTime, string bankBack, out string msg) {
            object[] results = this.Invoke("UpdateRefundInfo", new object[] {
                        oldid,
                        payFrontTime,
                        payTime,
                        bankBack});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRefundInfoAsync(string oldid, string payFrontTime, string payTime, string bankBack) {
            this.UpdateRefundInfoAsync(oldid, payFrontTime, payTime, bankBack, null);
        }
        
        /// <remarks/>
        public void UpdateRefundInfoAsync(string oldid, string payFrontTime, string payTime, string bankBack, object userState) {
            if ((this.UpdateRefundInfoOperationCompleted == null)) {
                this.UpdateRefundInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRefundInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateRefundInfo", new object[] {
                        oldid,
                        payFrontTime,
                        payTime,
                        bankBack}, this.UpdateRefundInfoOperationCompleted, userState);
        }
        
        private void OnUpdateRefundInfoOperationCompleted(object arg) {
            if ((this.UpdateRefundInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRefundInfoCompleted(this, new UpdateRefundInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SumGiveBack4Pay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SumGiveBack4Pay(string fbatchid, out string errMsg) {
            object[] results = this.Invoke("SumGiveBack4Pay", new object[] {
                        fbatchid});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SumGiveBack4PayAsync(string fbatchid) {
            this.SumGiveBack4PayAsync(fbatchid, null);
        }
        
        /// <remarks/>
        public void SumGiveBack4PayAsync(string fbatchid, object userState) {
            if ((this.SumGiveBack4PayOperationCompleted == null)) {
                this.SumGiveBack4PayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSumGiveBack4PayOperationCompleted);
            }
            this.InvokeAsync("SumGiveBack4Pay", new object[] {
                        fbatchid}, this.SumGiveBack4PayOperationCompleted, userState);
        }
        
        private void OnSumGiveBack4PayOperationCompleted(object arg) {
            if ((this.SumGiveBack4PayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SumGiveBack4PayCompleted(this, new SumGiveBack4PayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckReturnticket", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckReturnticket(string objId, out string msg) {
            object[] results = this.Invoke("CheckReturnticket", new object[] {
                        objId});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckReturnticketAsync(string objId) {
            this.CheckReturnticketAsync(objId, null);
        }
        
        /// <remarks/>
        public void CheckReturnticketAsync(string objId, object userState) {
            if ((this.CheckReturnticketOperationCompleted == null)) {
                this.CheckReturnticketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckReturnticketOperationCompleted);
            }
            this.InvokeAsync("CheckReturnticket", new object[] {
                        objId}, this.CheckReturnticketOperationCompleted, userState);
        }
        
        private void OnCheckReturnticketOperationCompleted(object arg) {
            if ((this.CheckReturnticketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckReturnticketCompleted(this, new CheckReturnticketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadReturnTicketFileForCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadReturnTicketFileForCheck(int count, long sum, string banktype, string file, string checkBatchid, out string msg) {
            object[] results = this.Invoke("UploadReturnTicketFileForCheck", new object[] {
                        count,
                        sum,
                        banktype,
                        file,
                        checkBatchid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadReturnTicketFileForCheckAsync(int count, long sum, string banktype, string file, string checkBatchid) {
            this.UploadReturnTicketFileForCheckAsync(count, sum, banktype, file, checkBatchid, null);
        }
        
        /// <remarks/>
        public void UploadReturnTicketFileForCheckAsync(int count, long sum, string banktype, string file, string checkBatchid, object userState) {
            if ((this.UploadReturnTicketFileForCheckOperationCompleted == null)) {
                this.UploadReturnTicketFileForCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadReturnTicketFileForCheckOperationCompleted);
            }
            this.InvokeAsync("UploadReturnTicketFileForCheck", new object[] {
                        count,
                        sum,
                        banktype,
                        file,
                        checkBatchid}, this.UploadReturnTicketFileForCheckOperationCompleted, userState);
        }
        
        private void OnUploadReturnTicketFileForCheckOperationCompleted(object arg) {
            if ((this.UploadReturnTicketFileForCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadReturnTicketFileForCheckCompleted(this, new UploadReturnTicketFileForCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadBatchLogOnUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadBatchLogOnUser(string fileName, out string msg, out string operMsg) {
            object[] results = this.Invoke("UploadBatchLogOnUser", new object[] {
                        fileName});
            msg = ((string)(results[1]));
            operMsg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadBatchLogOnUserAsync(string fileName) {
            this.UploadBatchLogOnUserAsync(fileName, null);
        }
        
        /// <remarks/>
        public void UploadBatchLogOnUserAsync(string fileName, object userState) {
            if ((this.UploadBatchLogOnUserOperationCompleted == null)) {
                this.UploadBatchLogOnUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadBatchLogOnUserOperationCompleted);
            }
            this.InvokeAsync("UploadBatchLogOnUser", new object[] {
                        fileName}, this.UploadBatchLogOnUserOperationCompleted, userState);
        }
        
        private void OnUploadBatchLogOnUserOperationCompleted(object arg) {
            if ((this.UploadBatchLogOnUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadBatchLogOnUserCompleted(this, new UploadBatchLogOnUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchLogOnUser_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatchLogOnUser_Detail(string objid, out string msg) {
            object[] results = this.Invoke("BatchLogOnUser_Detail", new object[] {
                        objid});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatchLogOnUser_DetailAsync(string objid) {
            this.BatchLogOnUser_DetailAsync(objid, null);
        }
        
        /// <remarks/>
        public void BatchLogOnUser_DetailAsync(string objid, object userState) {
            if ((this.BatchLogOnUser_DetailOperationCompleted == null)) {
                this.BatchLogOnUser_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchLogOnUser_DetailOperationCompleted);
            }
            this.InvokeAsync("BatchLogOnUser_Detail", new object[] {
                        objid}, this.BatchLogOnUser_DetailOperationCompleted, userState);
        }
        
        private void OnBatchLogOnUser_DetailOperationCompleted(object arg) {
            if ((this.BatchLogOnUser_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchLogOnUser_DetailCompleted(this, new BatchLogOnUser_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_IsBatchChecked", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WS_IsBatchChecked(string sBatchId) {
            object[] results = this.Invoke("WS_IsBatchChecked", new object[] {
                        sBatchId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WS_IsBatchCheckedAsync(string sBatchId) {
            this.WS_IsBatchCheckedAsync(sBatchId, null);
        }
        
        /// <remarks/>
        public void WS_IsBatchCheckedAsync(string sBatchId, object userState) {
            if ((this.WS_IsBatchCheckedOperationCompleted == null)) {
                this.WS_IsBatchCheckedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_IsBatchCheckedOperationCompleted);
            }
            this.InvokeAsync("WS_IsBatchChecked", new object[] {
                        sBatchId}, this.WS_IsBatchCheckedOperationCompleted, userState);
        }
        
        private void OnWS_IsBatchCheckedOperationCompleted(object arg) {
            if ((this.WS_IsBatchCheckedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_IsBatchCheckedCompleted(this, new WS_IsBatchCheckedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XYK_IsBatchChecked", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool XYK_IsBatchChecked(string sBatchId) {
            object[] results = this.Invoke("XYK_IsBatchChecked", new object[] {
                        sBatchId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void XYK_IsBatchCheckedAsync(string sBatchId) {
            this.XYK_IsBatchCheckedAsync(sBatchId, null);
        }
        
        /// <remarks/>
        public void XYK_IsBatchCheckedAsync(string sBatchId, object userState) {
            if ((this.XYK_IsBatchCheckedOperationCompleted == null)) {
                this.XYK_IsBatchCheckedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXYK_IsBatchCheckedOperationCompleted);
            }
            this.InvokeAsync("XYK_IsBatchChecked", new object[] {
                        sBatchId}, this.XYK_IsBatchCheckedOperationCompleted, userState);
        }
        
        private void OnXYK_IsBatchCheckedOperationCompleted(object arg) {
            if ((this.XYK_IsBatchCheckedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XYK_IsBatchCheckedCompleted(this, new XYK_IsBatchCheckedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_IcbcCheckRec", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WS_IcbcCheckRec(string sBatchId, string sUser, out string sMsg) {
            object[] results = this.Invoke("WS_IcbcCheckRec", new object[] {
                        sBatchId,
                        sUser});
            sMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WS_IcbcCheckRecAsync(string sBatchId, string sUser) {
            this.WS_IcbcCheckRecAsync(sBatchId, sUser, null);
        }
        
        /// <remarks/>
        public void WS_IcbcCheckRecAsync(string sBatchId, string sUser, object userState) {
            if ((this.WS_IcbcCheckRecOperationCompleted == null)) {
                this.WS_IcbcCheckRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_IcbcCheckRecOperationCompleted);
            }
            this.InvokeAsync("WS_IcbcCheckRec", new object[] {
                        sBatchId,
                        sUser}, this.WS_IcbcCheckRecOperationCompleted, userState);
        }
        
        private void OnWS_IcbcCheckRecOperationCompleted(object arg) {
            if ((this.WS_IcbcCheckRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_IcbcCheckRecCompleted(this, new WS_IcbcCheckRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_CheckAllRec", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WS_CheckAllRec(string sBatchId, string sUser, out string sMsg) {
            object[] results = this.Invoke("WS_CheckAllRec", new object[] {
                        sBatchId,
                        sUser});
            sMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WS_CheckAllRecAsync(string sBatchId, string sUser) {
            this.WS_CheckAllRecAsync(sBatchId, sUser, null);
        }
        
        /// <remarks/>
        public void WS_CheckAllRecAsync(string sBatchId, string sUser, object userState) {
            if ((this.WS_CheckAllRecOperationCompleted == null)) {
                this.WS_CheckAllRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_CheckAllRecOperationCompleted);
            }
            this.InvokeAsync("WS_CheckAllRec", new object[] {
                        sBatchId,
                        sUser}, this.WS_CheckAllRecOperationCompleted, userState);
        }
        
        private void OnWS_CheckAllRecOperationCompleted(object arg) {
            if ((this.WS_CheckAllRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_CheckAllRecCompleted(this, new WS_CheckAllRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_UploadTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WS_UploadTask(string sTaskId, string sUser, out string sMsg) {
            object[] results = this.Invoke("WS_UploadTask", new object[] {
                        sTaskId,
                        sUser});
            sMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WS_UploadTaskAsync(string sTaskId, string sUser) {
            this.WS_UploadTaskAsync(sTaskId, sUser, null);
        }
        
        /// <remarks/>
        public void WS_UploadTaskAsync(string sTaskId, string sUser, object userState) {
            if ((this.WS_UploadTaskOperationCompleted == null)) {
                this.WS_UploadTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_UploadTaskOperationCompleted);
            }
            this.InvokeAsync("WS_UploadTask", new object[] {
                        sTaskId,
                        sUser}, this.WS_UploadTaskOperationCompleted, userState);
        }
        
        private void OnWS_UploadTaskOperationCompleted(object arg) {
            if ((this.WS_UploadTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_UploadTaskCompleted(this, new WS_UploadTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_QueryTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WS_QueryTask(string sTaskId, string sUser, out string sMsg) {
            object[] results = this.Invoke("WS_QueryTask", new object[] {
                        sTaskId,
                        sUser});
            sMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WS_QueryTaskAsync(string sTaskId, string sUser) {
            this.WS_QueryTaskAsync(sTaskId, sUser, null);
        }
        
        /// <remarks/>
        public void WS_QueryTaskAsync(string sTaskId, string sUser, object userState) {
            if ((this.WS_QueryTaskOperationCompleted == null)) {
                this.WS_QueryTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_QueryTaskOperationCompleted);
            }
            this.InvokeAsync("WS_QueryTask", new object[] {
                        sTaskId,
                        sUser}, this.WS_QueryTaskOperationCompleted, userState);
        }
        
        private void OnWS_QueryTaskOperationCompleted(object arg) {
            if ((this.WS_QueryTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_QueryTaskCompleted(this, new WS_QueryTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_CanCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WS_CanCheck(string sBatchId) {
            object[] results = this.Invoke("WS_CanCheck", new object[] {
                        sBatchId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WS_CanCheckAsync(string sBatchId) {
            this.WS_CanCheckAsync(sBatchId, null);
        }
        
        /// <remarks/>
        public void WS_CanCheckAsync(string sBatchId, object userState) {
            if ((this.WS_CanCheckOperationCompleted == null)) {
                this.WS_CanCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_CanCheckOperationCompleted);
            }
            this.InvokeAsync("WS_CanCheck", new object[] {
                        sBatchId}, this.WS_CanCheckOperationCompleted, userState);
        }
        
        private void OnWS_CanCheckOperationCompleted(object arg) {
            if ((this.WS_CanCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_CanCheckCompleted(this, new WS_CanCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XYK_CanCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool XYK_CanCheck(string sBatchId) {
            object[] results = this.Invoke("XYK_CanCheck", new object[] {
                        sBatchId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void XYK_CanCheckAsync(string sBatchId) {
            this.XYK_CanCheckAsync(sBatchId, null);
        }
        
        /// <remarks/>
        public void XYK_CanCheckAsync(string sBatchId, object userState) {
            if ((this.XYK_CanCheckOperationCompleted == null)) {
                this.XYK_CanCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXYK_CanCheckOperationCompleted);
            }
            this.InvokeAsync("XYK_CanCheck", new object[] {
                        sBatchId}, this.XYK_CanCheckOperationCompleted, userState);
        }
        
        private void OnXYK_CanCheckOperationCompleted(object arg) {
            if ((this.XYK_CanCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XYK_CanCheckCompleted(this, new XYK_CanCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Tplus0_CanCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Tplus0_CanCheck(string sBatchId) {
            object[] results = this.Invoke("Tplus0_CanCheck", new object[] {
                        sBatchId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Tplus0_CanCheckAsync(string sBatchId) {
            this.Tplus0_CanCheckAsync(sBatchId, null);
        }
        
        /// <remarks/>
        public void Tplus0_CanCheckAsync(string sBatchId, object userState) {
            if ((this.Tplus0_CanCheckOperationCompleted == null)) {
                this.Tplus0_CanCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTplus0_CanCheckOperationCompleted);
            }
            this.InvokeAsync("Tplus0_CanCheck", new object[] {
                        sBatchId}, this.Tplus0_CanCheckOperationCompleted, userState);
        }
        
        private void OnTplus0_CanCheckOperationCompleted(object arg) {
            if ((this.Tplus0_CanCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Tplus0_CanCheckCompleted(this, new Tplus0_CanCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Payfund_CanCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Payfund_CanCheck(string sBatchId) {
            object[] results = this.Invoke("Payfund_CanCheck", new object[] {
                        sBatchId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Payfund_CanCheckAsync(string sBatchId) {
            this.Payfund_CanCheckAsync(sBatchId, null);
        }
        
        /// <remarks/>
        public void Payfund_CanCheckAsync(string sBatchId, object userState) {
            if ((this.Payfund_CanCheckOperationCompleted == null)) {
                this.Payfund_CanCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayfund_CanCheckOperationCompleted);
            }
            this.InvokeAsync("Payfund_CanCheck", new object[] {
                        sBatchId}, this.Payfund_CanCheckOperationCompleted, userState);
        }
        
        private void OnPayfund_CanCheckOperationCompleted(object arg) {
            if ((this.Payfund_CanCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Payfund_CanCheckCompleted(this, new Payfund_CanCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_CanAdjust", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WS_CanAdjust(string sBatchId) {
            object[] results = this.Invoke("WS_CanAdjust", new object[] {
                        sBatchId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WS_CanAdjustAsync(string sBatchId) {
            this.WS_CanAdjustAsync(sBatchId, null);
        }
        
        /// <remarks/>
        public void WS_CanAdjustAsync(string sBatchId, object userState) {
            if ((this.WS_CanAdjustOperationCompleted == null)) {
                this.WS_CanAdjustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_CanAdjustOperationCompleted);
            }
            this.InvokeAsync("WS_CanAdjust", new object[] {
                        sBatchId}, this.WS_CanAdjustOperationCompleted, userState);
        }
        
        private void OnWS_CanAdjustOperationCompleted(object arg) {
            if ((this.WS_CanAdjustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_CanAdjustCompleted(this, new WS_CanAdjustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_CanUploadTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WS_CanUploadTask(string sTaskId) {
            object[] results = this.Invoke("WS_CanUploadTask", new object[] {
                        sTaskId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WS_CanUploadTaskAsync(string sTaskId) {
            this.WS_CanUploadTaskAsync(sTaskId, null);
        }
        
        /// <remarks/>
        public void WS_CanUploadTaskAsync(string sTaskId, object userState) {
            if ((this.WS_CanUploadTaskOperationCompleted == null)) {
                this.WS_CanUploadTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_CanUploadTaskOperationCompleted);
            }
            this.InvokeAsync("WS_CanUploadTask", new object[] {
                        sTaskId}, this.WS_CanUploadTaskOperationCompleted, userState);
        }
        
        private void OnWS_CanUploadTaskOperationCompleted(object arg) {
            if ((this.WS_CanUploadTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_CanUploadTaskCompleted(this, new WS_CanUploadTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_CanQueryTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WS_CanQueryTask(string sTaskId) {
            object[] results = this.Invoke("WS_CanQueryTask", new object[] {
                        sTaskId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WS_CanQueryTaskAsync(string sTaskId) {
            this.WS_CanQueryTaskAsync(sTaskId, null);
        }
        
        /// <remarks/>
        public void WS_CanQueryTaskAsync(string sTaskId, object userState) {
            if ((this.WS_CanQueryTaskOperationCompleted == null)) {
                this.WS_CanQueryTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_CanQueryTaskOperationCompleted);
            }
            this.InvokeAsync("WS_CanQueryTask", new object[] {
                        sTaskId}, this.WS_CanQueryTaskOperationCompleted, userState);
        }
        
        private void OnWS_CanQueryTaskOperationCompleted(object arg) {
            if ((this.WS_CanQueryTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_CanQueryTaskCompleted(this, new WS_CanQueryTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_Adjust2Success", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WS_Adjust2Success(string sBatchId, string sFSquence, string sReason, string sUser, out string sMsg) {
            object[] results = this.Invoke("WS_Adjust2Success", new object[] {
                        sBatchId,
                        sFSquence,
                        sReason,
                        sUser});
            sMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WS_Adjust2SuccessAsync(string sBatchId, string sFSquence, string sReason, string sUser) {
            this.WS_Adjust2SuccessAsync(sBatchId, sFSquence, sReason, sUser, null);
        }
        
        /// <remarks/>
        public void WS_Adjust2SuccessAsync(string sBatchId, string sFSquence, string sReason, string sUser, object userState) {
            if ((this.WS_Adjust2SuccessOperationCompleted == null)) {
                this.WS_Adjust2SuccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_Adjust2SuccessOperationCompleted);
            }
            this.InvokeAsync("WS_Adjust2Success", new object[] {
                        sBatchId,
                        sFSquence,
                        sReason,
                        sUser}, this.WS_Adjust2SuccessOperationCompleted, userState);
        }
        
        private void OnWS_Adjust2SuccessOperationCompleted(object arg) {
            if ((this.WS_Adjust2SuccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_Adjust2SuccessCompleted(this, new WS_Adjust2SuccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_CanPass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WS_CanPass(string sTaskId) {
            object[] results = this.Invoke("WS_CanPass", new object[] {
                        sTaskId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WS_CanPassAsync(string sTaskId) {
            this.WS_CanPassAsync(sTaskId, null);
        }
        
        /// <remarks/>
        public void WS_CanPassAsync(string sTaskId, object userState) {
            if ((this.WS_CanPassOperationCompleted == null)) {
                this.WS_CanPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_CanPassOperationCompleted);
            }
            this.InvokeAsync("WS_CanPass", new object[] {
                        sTaskId}, this.WS_CanPassOperationCompleted, userState);
        }
        
        private void OnWS_CanPassOperationCompleted(object arg) {
            if ((this.WS_CanPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_CanPassCompleted(this, new WS_CanPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_ModifyRefuse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WS_ModifyRefuse(string sTaskId) {
            this.Invoke("WS_ModifyRefuse", new object[] {
                        sTaskId});
        }
        
        /// <remarks/>
        public void WS_ModifyRefuseAsync(string sTaskId) {
            this.WS_ModifyRefuseAsync(sTaskId, null);
        }
        
        /// <remarks/>
        public void WS_ModifyRefuseAsync(string sTaskId, object userState) {
            if ((this.WS_ModifyRefuseOperationCompleted == null)) {
                this.WS_ModifyRefuseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWS_ModifyRefuseOperationCompleted);
            }
            this.InvokeAsync("WS_ModifyRefuse", new object[] {
                        sTaskId}, this.WS_ModifyRefuseOperationCompleted, userState);
        }
        
        private void OnWS_ModifyRefuseOperationCompleted(object arg) {
            if ((this.WS_ModifyRefuseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WS_ModifyRefuseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_InitGrid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatPay_InitGrid(string WeekIndex) {
            object[] results = this.Invoke("BatPay_InitGrid", new object[] {
                        WeekIndex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_InitGridAsync(string WeekIndex) {
            this.BatPay_InitGridAsync(WeekIndex, null);
        }
        
        /// <remarks/>
        public void BatPay_InitGridAsync(string WeekIndex, object userState) {
            if ((this.BatPay_InitGridOperationCompleted == null)) {
                this.BatPay_InitGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_InitGridOperationCompleted);
            }
            this.InvokeAsync("BatPay_InitGrid", new object[] {
                        WeekIndex}, this.BatPay_InitGridOperationCompleted, userState);
        }
        
        private void OnBatPay_InitGridOperationCompleted(object arg) {
            if ((this.BatPay_InitGridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_InitGridCompleted(this, new BatPay_InitGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_InitGrid_B", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatPay_InitGrid_B(string WeekIndex, string BatchOrder) {
            object[] results = this.Invoke("BatPay_InitGrid_B", new object[] {
                        WeekIndex,
                        BatchOrder});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_BAsync(string WeekIndex, string BatchOrder) {
            this.BatPay_InitGrid_BAsync(WeekIndex, BatchOrder, null);
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_BAsync(string WeekIndex, string BatchOrder, object userState) {
            if ((this.BatPay_InitGrid_BOperationCompleted == null)) {
                this.BatPay_InitGrid_BOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_InitGrid_BOperationCompleted);
            }
            this.InvokeAsync("BatPay_InitGrid_B", new object[] {
                        WeekIndex,
                        BatchOrder}, this.BatPay_InitGrid_BOperationCompleted, userState);
        }
        
        private void OnBatPay_InitGrid_BOperationCompleted(object arg) {
            if ((this.BatPay_InitGrid_BCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_InitGrid_BCompleted(this, new BatPay_InitGrid_BCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_InitGrid_V", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatPay_InitGrid_V(string WeekIndex, string BatchOrder) {
            object[] results = this.Invoke("BatPay_InitGrid_V", new object[] {
                        WeekIndex,
                        BatchOrder});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_VAsync(string WeekIndex, string BatchOrder) {
            this.BatPay_InitGrid_VAsync(WeekIndex, BatchOrder, null);
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_VAsync(string WeekIndex, string BatchOrder, object userState) {
            if ((this.BatPay_InitGrid_VOperationCompleted == null)) {
                this.BatPay_InitGrid_VOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_InitGrid_VOperationCompleted);
            }
            this.InvokeAsync("BatPay_InitGrid_V", new object[] {
                        WeekIndex,
                        BatchOrder}, this.BatPay_InitGrid_VOperationCompleted, userState);
        }
        
        private void OnBatPay_InitGrid_VOperationCompleted(object arg) {
            if ((this.BatPay_InitGrid_VCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_InitGrid_VCompleted(this, new BatPay_InitGrid_VCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_InitGrid_O", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatPay_InitGrid_O(string WeekIndex, string BatchOrder, string accountpaytype) {
            object[] results = this.Invoke("BatPay_InitGrid_O", new object[] {
                        WeekIndex,
                        BatchOrder,
                        accountpaytype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_OAsync(string WeekIndex, string BatchOrder, string accountpaytype) {
            this.BatPay_InitGrid_OAsync(WeekIndex, BatchOrder, accountpaytype, null);
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_OAsync(string WeekIndex, string BatchOrder, string accountpaytype, object userState) {
            if ((this.BatPay_InitGrid_OOperationCompleted == null)) {
                this.BatPay_InitGrid_OOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_InitGrid_OOperationCompleted);
            }
            this.InvokeAsync("BatPay_InitGrid_O", new object[] {
                        WeekIndex,
                        BatchOrder,
                        accountpaytype}, this.BatPay_InitGrid_OOperationCompleted, userState);
        }
        
        private void OnBatPay_InitGrid_OOperationCompleted(object arg) {
            if ((this.BatPay_InitGrid_OCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_InitGrid_OCompleted(this, new BatPay_InitGrid_OCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_InitGrid_X", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatPay_InitGrid_X(string WeekIndex, string BatchOrder) {
            object[] results = this.Invoke("BatPay_InitGrid_X", new object[] {
                        WeekIndex,
                        BatchOrder});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_XAsync(string WeekIndex, string BatchOrder) {
            this.BatPay_InitGrid_XAsync(WeekIndex, BatchOrder, null);
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_XAsync(string WeekIndex, string BatchOrder, object userState) {
            if ((this.BatPay_InitGrid_XOperationCompleted == null)) {
                this.BatPay_InitGrid_XOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_InitGrid_XOperationCompleted);
            }
            this.InvokeAsync("BatPay_InitGrid_X", new object[] {
                        WeekIndex,
                        BatchOrder}, this.BatPay_InitGrid_XOperationCompleted, userState);
        }
        
        private void OnBatPay_InitGrid_XOperationCompleted(object arg) {
            if ((this.BatPay_InitGrid_XCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_InitGrid_XCompleted(this, new BatPay_InitGrid_XCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_InitGrid_F", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatPay_InitGrid_F(string WeekIndex, string BatchOrder) {
            object[] results = this.Invoke("BatPay_InitGrid_F", new object[] {
                        WeekIndex,
                        BatchOrder});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_FAsync(string WeekIndex, string BatchOrder) {
            this.BatPay_InitGrid_FAsync(WeekIndex, BatchOrder, null);
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_FAsync(string WeekIndex, string BatchOrder, object userState) {
            if ((this.BatPay_InitGrid_FOperationCompleted == null)) {
                this.BatPay_InitGrid_FOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_InitGrid_FOperationCompleted);
            }
            this.InvokeAsync("BatPay_InitGrid_F", new object[] {
                        WeekIndex,
                        BatchOrder}, this.BatPay_InitGrid_FOperationCompleted, userState);
        }
        
        private void OnBatPay_InitGrid_FOperationCompleted(object arg) {
            if ((this.BatPay_InitGrid_FCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_InitGrid_FCompleted(this, new BatPay_InitGrid_FCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_InitGrid_P", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatPay_InitGrid_P(string WeekIndex, string BatchOrder) {
            object[] results = this.Invoke("BatPay_InitGrid_P", new object[] {
                        WeekIndex,
                        BatchOrder});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_PAsync(string WeekIndex, string BatchOrder) {
            this.BatPay_InitGrid_PAsync(WeekIndex, BatchOrder, null);
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_PAsync(string WeekIndex, string BatchOrder, object userState) {
            if ((this.BatPay_InitGrid_POperationCompleted == null)) {
                this.BatPay_InitGrid_POperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_InitGrid_POperationCompleted);
            }
            this.InvokeAsync("BatPay_InitGrid_P", new object[] {
                        WeekIndex,
                        BatchOrder}, this.BatPay_InitGrid_POperationCompleted, userState);
        }
        
        private void OnBatPay_InitGrid_POperationCompleted(object arg) {
            if ((this.BatPay_InitGrid_PCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_InitGrid_PCompleted(this, new BatPay_InitGrid_PCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_InitGrid_R", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatPay_InitGrid_R(string WeekIndex, string bankType) {
            object[] results = this.Invoke("BatPay_InitGrid_R", new object[] {
                        WeekIndex,
                        bankType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_RAsync(string WeekIndex, string bankType) {
            this.BatPay_InitGrid_RAsync(WeekIndex, bankType, null);
        }
        
        /// <remarks/>
        public void BatPay_InitGrid_RAsync(string WeekIndex, string bankType, object userState) {
            if ((this.BatPay_InitGrid_ROperationCompleted == null)) {
                this.BatPay_InitGrid_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_InitGrid_ROperationCompleted);
            }
            this.InvokeAsync("BatPay_InitGrid_R", new object[] {
                        WeekIndex,
                        bankType}, this.BatPay_InitGrid_ROperationCompleted, userState);
        }
        
        private void OnBatPay_InitGrid_ROperationCompleted(object arg) {
            if ((this.BatPay_InitGrid_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_InitGrid_RCompleted(this, new BatPay_InitGrid_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RefundOther_InitGrid_R", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RefundOther_InitGrid_R(string beginDate, string endDate, string banktype, int status, string proposer, string refundPath) {
            object[] results = this.Invoke("RefundOther_InitGrid_R", new object[] {
                        beginDate,
                        endDate,
                        banktype,
                        status,
                        proposer,
                        refundPath});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RefundOther_InitGrid_RAsync(string beginDate, string endDate, string banktype, int status, string proposer, string refundPath) {
            this.RefundOther_InitGrid_RAsync(beginDate, endDate, banktype, status, proposer, refundPath, null);
        }
        
        /// <remarks/>
        public void RefundOther_InitGrid_RAsync(string beginDate, string endDate, string banktype, int status, string proposer, string refundPath, object userState) {
            if ((this.RefundOther_InitGrid_ROperationCompleted == null)) {
                this.RefundOther_InitGrid_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundOther_InitGrid_ROperationCompleted);
            }
            this.InvokeAsync("RefundOther_InitGrid_R", new object[] {
                        beginDate,
                        endDate,
                        banktype,
                        status,
                        proposer,
                        refundPath}, this.RefundOther_InitGrid_ROperationCompleted, userState);
        }
        
        private void OnRefundOther_InitGrid_ROperationCompleted(object arg) {
            if ((this.RefundOther_InitGrid_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundOther_InitGrid_RCompleted(this, new RefundOther_InitGrid_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_CanVisible", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CanVisible(string strDate) {
            object[] results = this.Invoke("BatPay_CanVisible", new object[] {
                        strDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CanVisibleAsync(string strDate) {
            this.BatPay_CanVisibleAsync(strDate, null);
        }
        
        /// <remarks/>
        public void BatPay_CanVisibleAsync(string strDate, object userState) {
            if ((this.BatPay_CanVisibleOperationCompleted == null)) {
                this.BatPay_CanVisibleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CanVisibleOperationCompleted);
            }
            this.InvokeAsync("BatPay_CanVisible", new object[] {
                        strDate}, this.BatPay_CanVisibleOperationCompleted, userState);
        }
        
        private void OnBatPay_CanVisibleOperationCompleted(object arg) {
            if ((this.BatPay_CanVisibleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CanVisibleCompleted(this, new BatPay_CanVisibleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_CanVisible_B", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CanVisible_B(string strDate, string batchorder, string batchtype) {
            object[] results = this.Invoke("BatPay_CanVisible_B", new object[] {
                        strDate,
                        batchorder,
                        batchtype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CanVisible_BAsync(string strDate, string batchorder, string batchtype) {
            this.BatPay_CanVisible_BAsync(strDate, batchorder, batchtype, null);
        }
        
        /// <remarks/>
        public void BatPay_CanVisible_BAsync(string strDate, string batchorder, string batchtype, object userState) {
            if ((this.BatPay_CanVisible_BOperationCompleted == null)) {
                this.BatPay_CanVisible_BOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CanVisible_BOperationCompleted);
            }
            this.InvokeAsync("BatPay_CanVisible_B", new object[] {
                        strDate,
                        batchorder,
                        batchtype}, this.BatPay_CanVisible_BOperationCompleted, userState);
        }
        
        private void OnBatPay_CanVisible_BOperationCompleted(object arg) {
            if ((this.BatPay_CanVisible_BCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CanVisible_BCompleted(this, new BatPay_CanVisible_BCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_CanVisible_V", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CanVisible_V(string strDate, string batchorder, string batchtype) {
            object[] results = this.Invoke("BatPay_CanVisible_V", new object[] {
                        strDate,
                        batchorder,
                        batchtype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CanVisible_VAsync(string strDate, string batchorder, string batchtype) {
            this.BatPay_CanVisible_VAsync(strDate, batchorder, batchtype, null);
        }
        
        /// <remarks/>
        public void BatPay_CanVisible_VAsync(string strDate, string batchorder, string batchtype, object userState) {
            if ((this.BatPay_CanVisible_VOperationCompleted == null)) {
                this.BatPay_CanVisible_VOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CanVisible_VOperationCompleted);
            }
            this.InvokeAsync("BatPay_CanVisible_V", new object[] {
                        strDate,
                        batchorder,
                        batchtype}, this.BatPay_CanVisible_VOperationCompleted, userState);
        }
        
        private void OnBatPay_CanVisible_VOperationCompleted(object arg) {
            if ((this.BatPay_CanVisible_VCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CanVisible_VCompleted(this, new BatPay_CanVisible_VCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_CanVisible_R", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CanVisible_R(string strDate) {
            object[] results = this.Invoke("BatPay_CanVisible_R", new object[] {
                        strDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CanVisible_RAsync(string strDate) {
            this.BatPay_CanVisible_RAsync(strDate, null);
        }
        
        /// <remarks/>
        public void BatPay_CanVisible_RAsync(string strDate, object userState) {
            if ((this.BatPay_CanVisible_ROperationCompleted == null)) {
                this.BatPay_CanVisible_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CanVisible_ROperationCompleted);
            }
            this.InvokeAsync("BatPay_CanVisible_R", new object[] {
                        strDate}, this.BatPay_CanVisible_ROperationCompleted, userState);
        }
        
        private void OnBatPay_CanVisible_ROperationCompleted(object arg) {
            if ((this.BatPay_CanVisible_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CanVisible_RCompleted(this, new BatPay_CanVisible_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_GetErrorMsg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BatPay_GetErrorMsg(string strBatchID, int iStatus) {
            object[] results = this.Invoke("BatPay_GetErrorMsg", new object[] {
                        strBatchID,
                        iStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_GetErrorMsgAsync(string strBatchID, int iStatus) {
            this.BatPay_GetErrorMsgAsync(strBatchID, iStatus, null);
        }
        
        /// <remarks/>
        public void BatPay_GetErrorMsgAsync(string strBatchID, int iStatus, object userState) {
            if ((this.BatPay_GetErrorMsgOperationCompleted == null)) {
                this.BatPay_GetErrorMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_GetErrorMsgOperationCompleted);
            }
            this.InvokeAsync("BatPay_GetErrorMsg", new object[] {
                        strBatchID,
                        iStatus}, this.BatPay_GetErrorMsgOperationCompleted, userState);
        }
        
        private void OnBatPay_GetErrorMsgOperationCompleted(object arg) {
            if ((this.BatPay_GetErrorMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_GetErrorMsgCompleted(this, new BatPay_GetErrorMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_SixCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_SixCheck(string strBatchID) {
            object[] results = this.Invoke("BatPay_SixCheck", new object[] {
                        strBatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_SixCheckAsync(string strBatchID) {
            this.BatPay_SixCheckAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BatPay_SixCheckAsync(string strBatchID, object userState) {
            if ((this.BatPay_SixCheckOperationCompleted == null)) {
                this.BatPay_SixCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_SixCheckOperationCompleted);
            }
            this.InvokeAsync("BatPay_SixCheck", new object[] {
                        strBatchID}, this.BatPay_SixCheckOperationCompleted, userState);
        }
        
        private void OnBatPay_SixCheckOperationCompleted(object arg) {
            if ((this.BatPay_SixCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_SixCheckCompleted(this, new BatPay_SixCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_CheckSnapFinish", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CheckSnapFinish(string strBatchID) {
            object[] results = this.Invoke("BatPay_CheckSnapFinish", new object[] {
                        strBatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CheckSnapFinishAsync(string strBatchID) {
            this.BatPay_CheckSnapFinishAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BatPay_CheckSnapFinishAsync(string strBatchID, object userState) {
            if ((this.BatPay_CheckSnapFinishOperationCompleted == null)) {
                this.BatPay_CheckSnapFinishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CheckSnapFinishOperationCompleted);
            }
            this.InvokeAsync("BatPay_CheckSnapFinish", new object[] {
                        strBatchID}, this.BatPay_CheckSnapFinishOperationCompleted, userState);
        }
        
        private void OnBatPay_CheckSnapFinishOperationCompleted(object arg) {
            if ((this.BatPay_CheckSnapFinishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CheckSnapFinishCompleted(this, new BatPay_CheckSnapFinishCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_CheckTaskFinish", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CheckTaskFinish(string strBatchID, int iTaskID) {
            object[] results = this.Invoke("BatPay_CheckTaskFinish", new object[] {
                        strBatchID,
                        iTaskID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CheckTaskFinishAsync(string strBatchID, int iTaskID) {
            this.BatPay_CheckTaskFinishAsync(strBatchID, iTaskID, null);
        }
        
        /// <remarks/>
        public void BatPay_CheckTaskFinishAsync(string strBatchID, int iTaskID, object userState) {
            if ((this.BatPay_CheckTaskFinishOperationCompleted == null)) {
                this.BatPay_CheckTaskFinishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CheckTaskFinishOperationCompleted);
            }
            this.InvokeAsync("BatPay_CheckTaskFinish", new object[] {
                        strBatchID,
                        iTaskID}, this.BatPay_CheckTaskFinishOperationCompleted, userState);
        }
        
        private void OnBatPay_CheckTaskFinishOperationCompleted(object arg) {
            if ((this.BatPay_CheckTaskFinishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CheckTaskFinishCompleted(this, new BatPay_CheckTaskFinishCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_CheckFinish11", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CheckFinish11(string strBatchID) {
            object[] results = this.Invoke("BatPay_CheckFinish11", new object[] {
                        strBatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CheckFinish11Async(string strBatchID) {
            this.BatPay_CheckFinish11Async(strBatchID, null);
        }
        
        /// <remarks/>
        public void BatPay_CheckFinish11Async(string strBatchID, object userState) {
            if ((this.BatPay_CheckFinish11OperationCompleted == null)) {
                this.BatPay_CheckFinish11OperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CheckFinish11OperationCompleted);
            }
            this.InvokeAsync("BatPay_CheckFinish11", new object[] {
                        strBatchID}, this.BatPay_CheckFinish11OperationCompleted, userState);
        }
        
        private void OnBatPay_CheckFinish11OperationCompleted(object arg) {
            if ((this.BatPay_CheckFinish11Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CheckFinish11Completed(this, new BatPay_CheckFinish11CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_CheckBankFinish", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CheckBankFinish(string strBatchID, int iTaskID) {
            object[] results = this.Invoke("BatPay_CheckBankFinish", new object[] {
                        strBatchID,
                        iTaskID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CheckBankFinishAsync(string strBatchID, int iTaskID) {
            this.BatPay_CheckBankFinishAsync(strBatchID, iTaskID, null);
        }
        
        /// <remarks/>
        public void BatPay_CheckBankFinishAsync(string strBatchID, int iTaskID, object userState) {
            if ((this.BatPay_CheckBankFinishOperationCompleted == null)) {
                this.BatPay_CheckBankFinishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CheckBankFinishOperationCompleted);
            }
            this.InvokeAsync("BatPay_CheckBankFinish", new object[] {
                        strBatchID,
                        iTaskID}, this.BatPay_CheckBankFinishOperationCompleted, userState);
        }
        
        private void OnBatPay_CheckBankFinishOperationCompleted(object arg) {
            if ((this.BatPay_CheckBankFinishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CheckBankFinishCompleted(this, new BatPay_CheckBankFinishCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_CanReturnTask_SameCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CanReturnTask_SameCheck(string strBatchID) {
            object[] results = this.Invoke("BatPay_CanReturnTask_SameCheck", new object[] {
                        strBatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CanReturnTask_SameCheckAsync(string strBatchID) {
            this.BatPay_CanReturnTask_SameCheckAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BatPay_CanReturnTask_SameCheckAsync(string strBatchID, object userState) {
            if ((this.BatPay_CanReturnTask_SameCheckOperationCompleted == null)) {
                this.BatPay_CanReturnTask_SameCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CanReturnTask_SameCheckOperationCompleted);
            }
            this.InvokeAsync("BatPay_CanReturnTask_SameCheck", new object[] {
                        strBatchID}, this.BatPay_CanReturnTask_SameCheckOperationCompleted, userState);
        }
        
        private void OnBatPay_CanReturnTask_SameCheckOperationCompleted(object arg) {
            if ((this.BatPay_CanReturnTask_SameCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CanReturnTask_SameCheckCompleted(this, new BatPay_CanReturnTask_SameCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPay_CanReturnTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatPay_CanReturnTask(string strBatchID) {
            object[] results = this.Invoke("BatPay_CanReturnTask", new object[] {
                        strBatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatPay_CanReturnTaskAsync(string strBatchID) {
            this.BatPay_CanReturnTaskAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BatPay_CanReturnTaskAsync(string strBatchID, object userState) {
            if ((this.BatPay_CanReturnTaskOperationCompleted == null)) {
                this.BatPay_CanReturnTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPay_CanReturnTaskOperationCompleted);
            }
            this.InvokeAsync("BatPay_CanReturnTask", new object[] {
                        strBatchID}, this.BatPay_CanReturnTaskOperationCompleted, userState);
        }
        
        private void OnBatPay_CanReturnTaskOperationCompleted(object arg) {
            if ((this.BatPay_CanReturnTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPay_CanReturnTaskCompleted(this, new BatPay_CanReturnTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPayReturn_ShowButton", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BatPayReturn_ShowButton(string BatchID) {
            object[] results = this.Invoke("BatPayReturn_ShowButton", new object[] {
                        BatchID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BatPayReturn_ShowButtonAsync(string BatchID) {
            this.BatPayReturn_ShowButtonAsync(BatchID, null);
        }
        
        /// <remarks/>
        public void BatPayReturn_ShowButtonAsync(string BatchID, object userState) {
            if ((this.BatPayReturn_ShowButtonOperationCompleted == null)) {
                this.BatPayReturn_ShowButtonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPayReturn_ShowButtonOperationCompleted);
            }
            this.InvokeAsync("BatPayReturn_ShowButton", new object[] {
                        BatchID}, this.BatPayReturn_ShowButtonOperationCompleted, userState);
        }
        
        private void OnBatPayReturn_ShowButtonOperationCompleted(object arg) {
            if ((this.BatPayReturn_ShowButtonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPayReturn_ShowButtonCompleted(this, new BatPayReturn_ShowButtonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPayReturn_ShowButton_R", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BatPayReturn_ShowButton_R(string BatchID) {
            object[] results = this.Invoke("BatPayReturn_ShowButton_R", new object[] {
                        BatchID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BatPayReturn_ShowButton_RAsync(string BatchID) {
            this.BatPayReturn_ShowButton_RAsync(BatchID, null);
        }
        
        /// <remarks/>
        public void BatPayReturn_ShowButton_RAsync(string BatchID, object userState) {
            if ((this.BatPayReturn_ShowButton_ROperationCompleted == null)) {
                this.BatPayReturn_ShowButton_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPayReturn_ShowButton_ROperationCompleted);
            }
            this.InvokeAsync("BatPayReturn_ShowButton_R", new object[] {
                        BatchID}, this.BatPayReturn_ShowButton_ROperationCompleted, userState);
        }
        
        private void OnBatPayReturn_ShowButton_ROperationCompleted(object arg) {
            if ((this.BatPayReturn_ShowButton_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPayReturn_ShowButton_RCompleted(this, new BatPayReturn_ShowButton_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatetbatchpayasknewState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatetbatchpayasknewState(string strBatchID) {
            this.Invoke("UpdatetbatchpayasknewState", new object[] {
                        strBatchID});
        }
        
        /// <remarks/>
        public void UpdatetbatchpayasknewStateAsync(string strBatchID) {
            this.UpdatetbatchpayasknewStateAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void UpdatetbatchpayasknewStateAsync(string strBatchID, object userState) {
            if ((this.UpdatetbatchpayasknewStateOperationCompleted == null)) {
                this.UpdatetbatchpayasknewStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatetbatchpayasknewStateOperationCompleted);
            }
            this.InvokeAsync("UpdatetbatchpayasknewState", new object[] {
                        strBatchID}, this.UpdatetbatchpayasknewStateOperationCompleted, userState);
        }
        
        private void OnUpdatetbatchpayasknewStateOperationCompleted(object arg) {
            if ((this.UpdatetbatchpayasknewStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatetbatchpayasknewStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPayReturn_ShowData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatPayReturn_ShowData(string strBatchID) {
            object[] results = this.Invoke("BatPayReturn_ShowData", new object[] {
                        strBatchID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatPayReturn_ShowDataAsync(string strBatchID) {
            this.BatPayReturn_ShowDataAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BatPayReturn_ShowDataAsync(string strBatchID, object userState) {
            if ((this.BatPayReturn_ShowDataOperationCompleted == null)) {
                this.BatPayReturn_ShowDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPayReturn_ShowDataOperationCompleted);
            }
            this.InvokeAsync("BatPayReturn_ShowData", new object[] {
                        strBatchID}, this.BatPayReturn_ShowDataOperationCompleted, userState);
        }
        
        private void OnBatPayReturn_ShowDataOperationCompleted(object arg) {
            if ((this.BatPayReturn_ShowDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPayReturn_ShowDataCompleted(this, new BatPayReturn_ShowDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPayReturn_ShowData_R", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatPayReturn_ShowData_R(string strBatchID) {
            object[] results = this.Invoke("BatPayReturn_ShowData_R", new object[] {
                        strBatchID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatPayReturn_ShowData_RAsync(string strBatchID) {
            this.BatPayReturn_ShowData_RAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BatPayReturn_ShowData_RAsync(string strBatchID, object userState) {
            if ((this.BatPayReturn_ShowData_ROperationCompleted == null)) {
                this.BatPayReturn_ShowData_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPayReturn_ShowData_ROperationCompleted);
            }
            this.InvokeAsync("BatPayReturn_ShowData_R", new object[] {
                        strBatchID}, this.BatPayReturn_ShowData_ROperationCompleted, userState);
        }
        
        private void OnBatPayReturn_ShowData_ROperationCompleted(object arg) {
            if ((this.BatPayReturn_ShowData_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPayReturn_ShowData_RCompleted(this, new BatPayReturn_ShowData_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RefundOther_ShowData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RefundOther_ShowData(string strBatchID) {
            object[] results = this.Invoke("RefundOther_ShowData", new object[] {
                        strBatchID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RefundOther_ShowDataAsync(string strBatchID) {
            this.RefundOther_ShowDataAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void RefundOther_ShowDataAsync(string strBatchID, object userState) {
            if ((this.RefundOther_ShowDataOperationCompleted == null)) {
                this.RefundOther_ShowDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundOther_ShowDataOperationCompleted);
            }
            this.InvokeAsync("RefundOther_ShowData", new object[] {
                        strBatchID}, this.RefundOther_ShowDataOperationCompleted, userState);
        }
        
        private void OnRefundOther_ShowDataOperationCompleted(object arg) {
            if ((this.RefundOther_ShowDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundOther_ShowDataCompleted(this, new RefundOther_ShowDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatPayReturn_CreateReturnTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BatPayReturn_CreateReturnTask(string strBatchID, string uid) {
            this.Invoke("BatPayReturn_CreateReturnTask", new object[] {
                        strBatchID,
                        uid});
        }
        
        /// <remarks/>
        public void BatPayReturn_CreateReturnTaskAsync(string strBatchID, string uid) {
            this.BatPayReturn_CreateReturnTaskAsync(strBatchID, uid, null);
        }
        
        /// <remarks/>
        public void BatPayReturn_CreateReturnTaskAsync(string strBatchID, string uid, object userState) {
            if ((this.BatPayReturn_CreateReturnTaskOperationCompleted == null)) {
                this.BatPayReturn_CreateReturnTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatPayReturn_CreateReturnTaskOperationCompleted);
            }
            this.InvokeAsync("BatPayReturn_CreateReturnTask", new object[] {
                        strBatchID,
                        uid}, this.BatPayReturn_CreateReturnTaskOperationCompleted, userState);
        }
        
        private void OnBatPayReturn_CreateReturnTaskOperationCompleted(object arg) {
            if ((this.BatPayReturn_CreateReturnTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatPayReturn_CreateReturnTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FileList_RefreshData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FileList_RefreshData(string fBatchID) {
            object[] results = this.Invoke("FileList_RefreshData", new object[] {
                        fBatchID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FileList_RefreshDataAsync(string fBatchID) {
            this.FileList_RefreshDataAsync(fBatchID, null);
        }
        
        /// <remarks/>
        public void FileList_RefreshDataAsync(string fBatchID, object userState) {
            if ((this.FileList_RefreshDataOperationCompleted == null)) {
                this.FileList_RefreshDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileList_RefreshDataOperationCompleted);
            }
            this.InvokeAsync("FileList_RefreshData", new object[] {
                        fBatchID}, this.FileList_RefreshDataOperationCompleted, userState);
        }
        
        private void OnFileList_RefreshDataOperationCompleted(object arg) {
            if ((this.FileList_RefreshDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileList_RefreshDataCompleted(this, new FileList_RefreshDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReverseAdjust_GetTdeID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReverseAdjust_GetTdeID(string lstid, string lsttype) {
            object[] results = this.Invoke("ReverseAdjust_GetTdeID", new object[] {
                        lstid,
                        lsttype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReverseAdjust_GetTdeIDAsync(string lstid, string lsttype) {
            this.ReverseAdjust_GetTdeIDAsync(lstid, lsttype, null);
        }
        
        /// <remarks/>
        public void ReverseAdjust_GetTdeIDAsync(string lstid, string lsttype, object userState) {
            if ((this.ReverseAdjust_GetTdeIDOperationCompleted == null)) {
                this.ReverseAdjust_GetTdeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseAdjust_GetTdeIDOperationCompleted);
            }
            this.InvokeAsync("ReverseAdjust_GetTdeID", new object[] {
                        lstid,
                        lsttype}, this.ReverseAdjust_GetTdeIDOperationCompleted, userState);
        }
        
        private void OnReverseAdjust_GetTdeIDOperationCompleted(object arg) {
            if ((this.ReverseAdjust_GetTdeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseAdjust_GetTdeIDCompleted(this, new ReverseAdjust_GetTdeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShowDetail_GetCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ShowDetail_GetCount(string batchID, int state, string username, string bankacc, string count, string paybank) {
            object[] results = this.Invoke("ShowDetail_GetCount", new object[] {
                        batchID,
                        state,
                        username,
                        bankacc,
                        count,
                        paybank});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ShowDetail_GetCountAsync(string batchID, int state, string username, string bankacc, string count, string paybank) {
            this.ShowDetail_GetCountAsync(batchID, state, username, bankacc, count, paybank, null);
        }
        
        /// <remarks/>
        public void ShowDetail_GetCountAsync(string batchID, int state, string username, string bankacc, string count, string paybank, object userState) {
            if ((this.ShowDetail_GetCountOperationCompleted == null)) {
                this.ShowDetail_GetCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowDetail_GetCountOperationCompleted);
            }
            this.InvokeAsync("ShowDetail_GetCount", new object[] {
                        batchID,
                        state,
                        username,
                        bankacc,
                        count,
                        paybank}, this.ShowDetail_GetCountOperationCompleted, userState);
        }
        
        private void OnShowDetail_GetCountOperationCompleted(object arg) {
            if ((this.ShowDetail_GetCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowDetail_GetCountCompleted(this, new ShowDetail_GetCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnTicket_BindData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReturnTicket_BindData(string strdate, string bankid, string bankacc, long famt, string paytype, int order, int start, int max) {
            object[] results = this.Invoke("ReturnTicket_BindData", new object[] {
                        strdate,
                        bankid,
                        bankacc,
                        famt,
                        paytype,
                        order,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnTicket_BindDataAsync(string strdate, string bankid, string bankacc, long famt, string paytype, int order, int start, int max) {
            this.ReturnTicket_BindDataAsync(strdate, bankid, bankacc, famt, paytype, order, start, max, null);
        }
        
        /// <remarks/>
        public void ReturnTicket_BindDataAsync(string strdate, string bankid, string bankacc, long famt, string paytype, int order, int start, int max, object userState) {
            if ((this.ReturnTicket_BindDataOperationCompleted == null)) {
                this.ReturnTicket_BindDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnTicket_BindDataOperationCompleted);
            }
            this.InvokeAsync("ReturnTicket_BindData", new object[] {
                        strdate,
                        bankid,
                        bankacc,
                        famt,
                        paytype,
                        order,
                        start,
                        max}, this.ReturnTicket_BindDataOperationCompleted, userState);
        }
        
        private void OnReturnTicket_BindDataOperationCompleted(object arg) {
            if ((this.ReturnTicket_BindDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnTicket_BindDataCompleted(this, new ReturnTicket_BindDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnTicket_BindData_File", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReturnTicket_BindData_File(string strdate, string bankid, string batchid, string paytype, int order, int start, int max) {
            object[] results = this.Invoke("ReturnTicket_BindData_File", new object[] {
                        strdate,
                        bankid,
                        batchid,
                        paytype,
                        order,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnTicket_BindData_FileAsync(string strdate, string bankid, string batchid, string paytype, int order, int start, int max) {
            this.ReturnTicket_BindData_FileAsync(strdate, bankid, batchid, paytype, order, start, max, null);
        }
        
        /// <remarks/>
        public void ReturnTicket_BindData_FileAsync(string strdate, string bankid, string batchid, string paytype, int order, int start, int max, object userState) {
            if ((this.ReturnTicket_BindData_FileOperationCompleted == null)) {
                this.ReturnTicket_BindData_FileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnTicket_BindData_FileOperationCompleted);
            }
            this.InvokeAsync("ReturnTicket_BindData_File", new object[] {
                        strdate,
                        bankid,
                        batchid,
                        paytype,
                        order,
                        start,
                        max}, this.ReturnTicket_BindData_FileOperationCompleted, userState);
        }
        
        private void OnReturnTicket_BindData_FileOperationCompleted(object arg) {
            if ((this.ReturnTicket_BindData_FileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnTicket_BindData_FileCompleted(this, new ReturnTicket_BindData_FileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartReturnTicket_File", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartReturnTicket_File(string payBatchids, string bankid, string batchid, out string msg) {
            object[] results = this.Invoke("StartReturnTicket_File", new object[] {
                        payBatchids,
                        bankid,
                        batchid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartReturnTicket_FileAsync(string payBatchids, string bankid, string batchid) {
            this.StartReturnTicket_FileAsync(payBatchids, bankid, batchid, null);
        }
        
        /// <remarks/>
        public void StartReturnTicket_FileAsync(string payBatchids, string bankid, string batchid, object userState) {
            if ((this.StartReturnTicket_FileOperationCompleted == null)) {
                this.StartReturnTicket_FileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartReturnTicket_FileOperationCompleted);
            }
            this.InvokeAsync("StartReturnTicket_File", new object[] {
                        payBatchids,
                        bankid,
                        batchid}, this.StartReturnTicket_FileOperationCompleted, userState);
        }
        
        private void OnStartReturnTicket_FileOperationCompleted(object arg) {
            if ((this.StartReturnTicket_FileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartReturnTicket_FileCompleted(this, new StartReturnTicket_FileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShowDetail_BindData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ShowDetail_BindData(int max, int start, string BatchID, int state, string username, string bankacc, string count, string paybank) {
            object[] results = this.Invoke("ShowDetail_BindData", new object[] {
                        max,
                        start,
                        BatchID,
                        state,
                        username,
                        bankacc,
                        count,
                        paybank});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ShowDetail_BindDataAsync(int max, int start, string BatchID, int state, string username, string bankacc, string count, string paybank) {
            this.ShowDetail_BindDataAsync(max, start, BatchID, state, username, bankacc, count, paybank, null);
        }
        
        /// <remarks/>
        public void ShowDetail_BindDataAsync(int max, int start, string BatchID, int state, string username, string bankacc, string count, string paybank, object userState) {
            if ((this.ShowDetail_BindDataOperationCompleted == null)) {
                this.ShowDetail_BindDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowDetail_BindDataOperationCompleted);
            }
            this.InvokeAsync("ShowDetail_BindData", new object[] {
                        max,
                        start,
                        BatchID,
                        state,
                        username,
                        bankacc,
                        count,
                        paybank}, this.ShowDetail_BindDataOperationCompleted, userState);
        }
        
        private void OnShowDetail_BindDataOperationCompleted(object arg) {
            if ((this.ShowDetail_BindDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowDetail_BindDataCompleted(this, new ShowDetail_BindDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankIO_GetFileList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BankIO_GetFileList(string fBatchID) {
            object[] results = this.Invoke("BankIO_GetFileList", new object[] {
                        fBatchID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BankIO_GetFileListAsync(string fBatchID) {
            this.BankIO_GetFileListAsync(fBatchID, null);
        }
        
        /// <remarks/>
        public void BankIO_GetFileListAsync(string fBatchID, object userState) {
            if ((this.BankIO_GetFileListOperationCompleted == null)) {
                this.BankIO_GetFileListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankIO_GetFileListOperationCompleted);
            }
            this.InvokeAsync("BankIO_GetFileList", new object[] {
                        fBatchID}, this.BankIO_GetFileListOperationCompleted, userState);
        }
        
        private void OnBankIO_GetFileListOperationCompleted(object arg) {
            if ((this.BankIO_GetFileListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankIO_GetFileListCompleted(this, new BankIO_GetFileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankIO_CreateAllFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BankIO_CreateAllFile(string strBatchID) {
            object[] results = this.Invoke("BankIO_CreateAllFile", new object[] {
                        strBatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BankIO_CreateAllFileAsync(string strBatchID) {
            this.BankIO_CreateAllFileAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BankIO_CreateAllFileAsync(string strBatchID, object userState) {
            if ((this.BankIO_CreateAllFileOperationCompleted == null)) {
                this.BankIO_CreateAllFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankIO_CreateAllFileOperationCompleted);
            }
            this.InvokeAsync("BankIO_CreateAllFile", new object[] {
                        strBatchID}, this.BankIO_CreateAllFileOperationCompleted, userState);
        }
        
        private void OnBankIO_CreateAllFileOperationCompleted(object arg) {
            if ((this.BankIO_CreateAllFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankIO_CreateAllFileCompleted(this, new BankIO_CreateAllFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankIO_CreateAllFile_R", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BankIO_CreateAllFile_R(string strBatchID) {
            object[] results = this.Invoke("BankIO_CreateAllFile_R", new object[] {
                        strBatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BankIO_CreateAllFile_RAsync(string strBatchID) {
            this.BankIO_CreateAllFile_RAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BankIO_CreateAllFile_RAsync(string strBatchID, object userState) {
            if ((this.BankIO_CreateAllFile_ROperationCompleted == null)) {
                this.BankIO_CreateAllFile_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankIO_CreateAllFile_ROperationCompleted);
            }
            this.InvokeAsync("BankIO_CreateAllFile_R", new object[] {
                        strBatchID}, this.BankIO_CreateAllFile_ROperationCompleted, userState);
        }
        
        private void OnBankIO_CreateAllFile_ROperationCompleted(object arg) {
            if ((this.BankIO_CreateAllFile_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankIO_CreateAllFile_RCompleted(this, new BankIO_CreateAllFile_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankRefundIO_CreateAllFile_Other", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BankRefundIO_CreateAllFile_Other(string strBatchID) {
            object[] results = this.Invoke("BankRefundIO_CreateAllFile_Other", new object[] {
                        strBatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BankRefundIO_CreateAllFile_OtherAsync(string strBatchID) {
            this.BankRefundIO_CreateAllFile_OtherAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BankRefundIO_CreateAllFile_OtherAsync(string strBatchID, object userState) {
            if ((this.BankRefundIO_CreateAllFile_OtherOperationCompleted == null)) {
                this.BankRefundIO_CreateAllFile_OtherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankRefundIO_CreateAllFile_OtherOperationCompleted);
            }
            this.InvokeAsync("BankRefundIO_CreateAllFile_Other", new object[] {
                        strBatchID}, this.BankRefundIO_CreateAllFile_OtherOperationCompleted, userState);
        }
        
        private void OnBankRefundIO_CreateAllFile_OtherOperationCompleted(object arg) {
            if ((this.BankRefundIO_CreateAllFile_OtherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankRefundIO_CreateAllFile_OtherCompleted(this, new BankRefundIO_CreateAllFile_OtherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankIO_InputFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BankIO_InputFile(string strBatchID, string filename, string filepath, string url, int fileType, int order, string paybanktype) {
            object[] results = this.Invoke("BankIO_InputFile", new object[] {
                        strBatchID,
                        filename,
                        filepath,
                        url,
                        fileType,
                        order,
                        paybanktype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BankIO_InputFileAsync(string strBatchID, string filename, string filepath, string url, int fileType, int order, string paybanktype) {
            this.BankIO_InputFileAsync(strBatchID, filename, filepath, url, fileType, order, paybanktype, null);
        }
        
        /// <remarks/>
        public void BankIO_InputFileAsync(string strBatchID, string filename, string filepath, string url, int fileType, int order, string paybanktype, object userState) {
            if ((this.BankIO_InputFileOperationCompleted == null)) {
                this.BankIO_InputFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankIO_InputFileOperationCompleted);
            }
            this.InvokeAsync("BankIO_InputFile", new object[] {
                        strBatchID,
                        filename,
                        filepath,
                        url,
                        fileType,
                        order,
                        paybanktype}, this.BankIO_InputFileOperationCompleted, userState);
        }
        
        private void OnBankIO_InputFileOperationCompleted(object arg) {
            if ((this.BankIO_InputFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankIO_InputFileCompleted(this, new BankIO_InputFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertHandleRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertHandleRecord(string batchid, int statusid, string execuser, string objid, string url, string result) {
            this.Invoke("InsertHandleRecord", new object[] {
                        batchid,
                        statusid,
                        execuser,
                        objid,
                        url,
                        result});
        }
        
        /// <remarks/>
        public void InsertHandleRecordAsync(string batchid, int statusid, string execuser, string objid, string url, string result) {
            this.InsertHandleRecordAsync(batchid, statusid, execuser, objid, url, result, null);
        }
        
        /// <remarks/>
        public void InsertHandleRecordAsync(string batchid, int statusid, string execuser, string objid, string url, string result, object userState) {
            if ((this.InsertHandleRecordOperationCompleted == null)) {
                this.InsertHandleRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertHandleRecordOperationCompleted);
            }
            this.InvokeAsync("InsertHandleRecord", new object[] {
                        batchid,
                        statusid,
                        execuser,
                        objid,
                        url,
                        result}, this.InsertHandleRecordOperationCompleted, userState);
        }
        
        private void OnInsertHandleRecordOperationCompleted(object arg) {
            if ((this.InsertHandleRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertHandleRecordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertHandleRecordX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertHandleRecordX(string batchid, int statusid, string execuser, string objid, string url, string result, int state) {
            this.Invoke("InsertHandleRecordX", new object[] {
                        batchid,
                        statusid,
                        execuser,
                        objid,
                        url,
                        result,
                        state});
        }
        
        /// <remarks/>
        public void InsertHandleRecordXAsync(string batchid, int statusid, string execuser, string objid, string url, string result, int state) {
            this.InsertHandleRecordXAsync(batchid, statusid, execuser, objid, url, result, state, null);
        }
        
        /// <remarks/>
        public void InsertHandleRecordXAsync(string batchid, int statusid, string execuser, string objid, string url, string result, int state, object userState) {
            if ((this.InsertHandleRecordXOperationCompleted == null)) {
                this.InsertHandleRecordXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertHandleRecordXOperationCompleted);
            }
            this.InvokeAsync("InsertHandleRecordX", new object[] {
                        batchid,
                        statusid,
                        execuser,
                        objid,
                        url,
                        result,
                        state}, this.InsertHandleRecordXOperationCompleted, userState);
        }
        
        private void OnInsertHandleRecordXOperationCompleted(object arg) {
            if ((this.InsertHandleRecordXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertHandleRecordXCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBatchStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateBatchStatus(string batchid, int nextstatus, int batchtype) {
            object[] results = this.Invoke("UpdateBatchStatus", new object[] {
                        batchid,
                        nextstatus,
                        batchtype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBatchStatusAsync(string batchid, int nextstatus, int batchtype) {
            this.UpdateBatchStatusAsync(batchid, nextstatus, batchtype, null);
        }
        
        /// <remarks/>
        public void UpdateBatchStatusAsync(string batchid, int nextstatus, int batchtype, object userState) {
            if ((this.UpdateBatchStatusOperationCompleted == null)) {
                this.UpdateBatchStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBatchStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateBatchStatus", new object[] {
                        batchid,
                        nextstatus,
                        batchtype}, this.UpdateBatchStatusOperationCompleted, userState);
        }
        
        private void OnUpdateBatchStatusOperationCompleted(object arg) {
            if ((this.UpdateBatchStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBatchStatusCompleted(this, new UpdateBatchStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrPhaseUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrPhaseUser(int currPhaseID, int ffunc_type) {
            object[] results = this.Invoke("GetCurrPhaseUser", new object[] {
                        currPhaseID,
                        ffunc_type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrPhaseUserAsync(int currPhaseID, int ffunc_type) {
            this.GetCurrPhaseUserAsync(currPhaseID, ffunc_type, null);
        }
        
        /// <remarks/>
        public void GetCurrPhaseUserAsync(int currPhaseID, int ffunc_type, object userState) {
            if ((this.GetCurrPhaseUserOperationCompleted == null)) {
                this.GetCurrPhaseUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrPhaseUserOperationCompleted);
            }
            this.InvokeAsync("GetCurrPhaseUser", new object[] {
                        currPhaseID,
                        ffunc_type}, this.GetCurrPhaseUserOperationCompleted, userState);
        }
        
        private void OnGetCurrPhaseUserOperationCompleted(object arg) {
            if ((this.GetCurrPhaseUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrPhaseUserCompleted(this, new GetCurrPhaseUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPhaseName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPhaseName(int phaseid, int fstatustype) {
            object[] results = this.Invoke("GetPhaseName", new object[] {
                        phaseid,
                        fstatustype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPhaseNameAsync(int phaseid, int fstatustype) {
            this.GetPhaseNameAsync(phaseid, fstatustype, null);
        }
        
        /// <remarks/>
        public void GetPhaseNameAsync(int phaseid, int fstatustype, object userState) {
            if ((this.GetPhaseNameOperationCompleted == null)) {
                this.GetPhaseNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPhaseNameOperationCompleted);
            }
            this.InvokeAsync("GetPhaseName", new object[] {
                        phaseid,
                        fstatustype}, this.GetPhaseNameOperationCompleted, userState);
        }
        
        private void OnGetPhaseNameOperationCompleted(object arg) {
            if ((this.GetPhaseNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPhaseNameCompleted(this, new GetPhaseNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankRoll_UploadCancel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BankRoll_UploadCancel(string checkdate, string banktype, string checktype) {
            this.Invoke("BankRoll_UploadCancel", new object[] {
                        checkdate,
                        banktype,
                        checktype});
        }
        
        /// <remarks/>
        public void BankRoll_UploadCancelAsync(string checkdate, string banktype, string checktype) {
            this.BankRoll_UploadCancelAsync(checkdate, banktype, checktype, null);
        }
        
        /// <remarks/>
        public void BankRoll_UploadCancelAsync(string checkdate, string banktype, string checktype, object userState) {
            if ((this.BankRoll_UploadCancelOperationCompleted == null)) {
                this.BankRoll_UploadCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankRoll_UploadCancelOperationCompleted);
            }
            this.InvokeAsync("BankRoll_UploadCancel", new object[] {
                        checkdate,
                        banktype,
                        checktype}, this.BankRoll_UploadCancelOperationCompleted, userState);
        }
        
        private void OnBankRoll_UploadCancelOperationCompleted(object arg) {
            if ((this.BankRoll_UploadCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankRoll_UploadCancelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankRoll_UploadCancel_Charge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BankRoll_UploadCancel_Charge(string checkdate, string banktype, string fuser) {
            this.Invoke("BankRoll_UploadCancel_Charge", new object[] {
                        checkdate,
                        banktype,
                        fuser});
        }
        
        /// <remarks/>
        public void BankRoll_UploadCancel_ChargeAsync(string checkdate, string banktype, string fuser) {
            this.BankRoll_UploadCancel_ChargeAsync(checkdate, banktype, fuser, null);
        }
        
        /// <remarks/>
        public void BankRoll_UploadCancel_ChargeAsync(string checkdate, string banktype, string fuser, object userState) {
            if ((this.BankRoll_UploadCancel_ChargeOperationCompleted == null)) {
                this.BankRoll_UploadCancel_ChargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankRoll_UploadCancel_ChargeOperationCompleted);
            }
            this.InvokeAsync("BankRoll_UploadCancel_Charge", new object[] {
                        checkdate,
                        banktype,
                        fuser}, this.BankRoll_UploadCancel_ChargeOperationCompleted, userState);
        }
        
        private void OnBankRoll_UploadCancel_ChargeOperationCompleted(object arg) {
            if ((this.BankRoll_UploadCancel_ChargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankRoll_UploadCancel_ChargeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankFuncUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankFuncUser(string FBankType, int ftype) {
            object[] results = this.Invoke("GetBankFuncUser", new object[] {
                        FBankType,
                        ftype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankFuncUserAsync(string FBankType, int ftype) {
            this.GetBankFuncUserAsync(FBankType, ftype, null);
        }
        
        /// <remarks/>
        public void GetBankFuncUserAsync(string FBankType, int ftype, object userState) {
            if ((this.GetBankFuncUserOperationCompleted == null)) {
                this.GetBankFuncUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankFuncUserOperationCompleted);
            }
            this.InvokeAsync("GetBankFuncUser", new object[] {
                        FBankType,
                        ftype}, this.GetBankFuncUserOperationCompleted, userState);
        }
        
        private void OnGetBankFuncUserOperationCompleted(object arg) {
            if ((this.GetBankFuncUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankFuncUserCompleted(this, new GetBankFuncUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFuncAllBank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFuncAllBank(int ftype) {
            object[] results = this.Invoke("GetFuncAllBank", new object[] {
                        ftype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFuncAllBankAsync(int ftype) {
            this.GetFuncAllBankAsync(ftype, null);
        }
        
        /// <remarks/>
        public void GetFuncAllBankAsync(int ftype, object userState) {
            if ((this.GetFuncAllBankOperationCompleted == null)) {
                this.GetFuncAllBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFuncAllBankOperationCompleted);
            }
            this.InvokeAsync("GetFuncAllBank", new object[] {
                        ftype}, this.GetFuncAllBankOperationCompleted, userState);
        }
        
        private void OnGetFuncAllBankOperationCompleted(object arg) {
            if ((this.GetFuncAllBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFuncAllBankCompleted(this, new GetFuncAllBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFuncUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFuncUser(int index, string user, string FBankType, int ftype) {
            this.Invoke("UpdateFuncUser", new object[] {
                        index,
                        user,
                        FBankType,
                        ftype});
        }
        
        /// <remarks/>
        public void UpdateFuncUserAsync(int index, string user, string FBankType, int ftype) {
            this.UpdateFuncUserAsync(index, user, FBankType, ftype, null);
        }
        
        /// <remarks/>
        public void UpdateFuncUserAsync(int index, string user, string FBankType, int ftype, object userState) {
            if ((this.UpdateFuncUserOperationCompleted == null)) {
                this.UpdateFuncUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFuncUserOperationCompleted);
            }
            this.InvokeAsync("UpdateFuncUser", new object[] {
                        index,
                        user,
                        FBankType,
                        ftype}, this.UpdateFuncUserOperationCompleted, userState);
        }
        
        private void OnUpdateFuncUserOperationCompleted(object arg) {
            if ((this.UpdateFuncUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFuncUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPhaseType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPhaseType() {
            object[] results = this.Invoke("GetAllPhaseType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPhaseTypeAsync() {
            this.GetAllPhaseTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetAllPhaseTypeAsync(object userState) {
            if ((this.GetAllPhaseTypeOperationCompleted == null)) {
                this.GetAllPhaseTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPhaseTypeOperationCompleted);
            }
            this.InvokeAsync("GetAllPhaseType", new object[0], this.GetAllPhaseTypeOperationCompleted, userState);
        }
        
        private void OnGetAllPhaseTypeOperationCompleted(object arg) {
            if ((this.GetAllPhaseTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPhaseTypeCompleted(this, new GetAllPhaseTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustToFault", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AdjustToFault(string batchid, string FSequence, string user, string fmemo) {
            object[] results = this.Invoke("AdjustToFault", new object[] {
                        batchid,
                        FSequence,
                        user,
                        fmemo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustToFaultAsync(string batchid, string FSequence, string user, string fmemo) {
            this.AdjustToFaultAsync(batchid, FSequence, user, fmemo, null);
        }
        
        /// <remarks/>
        public void AdjustToFaultAsync(string batchid, string FSequence, string user, string fmemo, object userState) {
            if ((this.AdjustToFaultOperationCompleted == null)) {
                this.AdjustToFaultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustToFaultOperationCompleted);
            }
            this.InvokeAsync("AdjustToFault", new object[] {
                        batchid,
                        FSequence,
                        user,
                        fmemo}, this.AdjustToFaultOperationCompleted, userState);
        }
        
        private void OnAdjustToFaultOperationCompleted(object arg) {
            if ((this.AdjustToFaultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustToFaultCompleted(this, new AdjustToFaultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustToFault_Hang", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AdjustToFault_Hang(string batchid, string FSequence, string user) {
            this.Invoke("AdjustToFault_Hang", new object[] {
                        batchid,
                        FSequence,
                        user});
        }
        
        /// <remarks/>
        public void AdjustToFault_HangAsync(string batchid, string FSequence, string user) {
            this.AdjustToFault_HangAsync(batchid, FSequence, user, null);
        }
        
        /// <remarks/>
        public void AdjustToFault_HangAsync(string batchid, string FSequence, string user, object userState) {
            if ((this.AdjustToFault_HangOperationCompleted == null)) {
                this.AdjustToFault_HangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustToFault_HangOperationCompleted);
            }
            this.InvokeAsync("AdjustToFault_Hang", new object[] {
                        batchid,
                        FSequence,
                        user}, this.AdjustToFault_HangOperationCompleted, userState);
        }
        
        private void OnAdjustToFault_HangOperationCompleted(object arg) {
            if ((this.AdjustToFault_HangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustToFault_HangCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustToSuccess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AdjustToSuccess(string batchid, string FSequence, string user) {
            this.Invoke("AdjustToSuccess", new object[] {
                        batchid,
                        FSequence,
                        user});
        }
        
        /// <remarks/>
        public void AdjustToSuccessAsync(string batchid, string FSequence, string user) {
            this.AdjustToSuccessAsync(batchid, FSequence, user, null);
        }
        
        /// <remarks/>
        public void AdjustToSuccessAsync(string batchid, string FSequence, string user, object userState) {
            if ((this.AdjustToSuccessOperationCompleted == null)) {
                this.AdjustToSuccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustToSuccessOperationCompleted);
            }
            this.InvokeAsync("AdjustToSuccess", new object[] {
                        batchid,
                        FSequence,
                        user}, this.AdjustToSuccessOperationCompleted, userState);
        }
        
        private void OnAdjustToSuccessOperationCompleted(object arg) {
            if ((this.AdjustToSuccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustToSuccessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CanStartAdjust", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanStartAdjust(string batchid) {
            object[] results = this.Invoke("CanStartAdjust", new object[] {
                        batchid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanStartAdjustAsync(string batchid) {
            this.CanStartAdjustAsync(batchid, null);
        }
        
        /// <remarks/>
        public void CanStartAdjustAsync(string batchid, object userState) {
            if ((this.CanStartAdjustOperationCompleted == null)) {
                this.CanStartAdjustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanStartAdjustOperationCompleted);
            }
            this.InvokeAsync("CanStartAdjust", new object[] {
                        batchid}, this.CanStartAdjustOperationCompleted, userState);
        }
        
        private void OnCanStartAdjustOperationCompleted(object arg) {
            if ((this.CanStartAdjustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanStartAdjustCompleted(this, new CanStartAdjustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CanStartAdjust_R", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanStartAdjust_R(string batchid) {
            object[] results = this.Invoke("CanStartAdjust_R", new object[] {
                        batchid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanStartAdjust_RAsync(string batchid) {
            this.CanStartAdjust_RAsync(batchid, null);
        }
        
        /// <remarks/>
        public void CanStartAdjust_RAsync(string batchid, object userState) {
            if ((this.CanStartAdjust_ROperationCompleted == null)) {
                this.CanStartAdjust_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanStartAdjust_ROperationCompleted);
            }
            this.InvokeAsync("CanStartAdjust_R", new object[] {
                        batchid}, this.CanStartAdjust_ROperationCompleted, userState);
        }
        
        private void OnCanStartAdjust_ROperationCompleted(object arg) {
            if ((this.CanStartAdjust_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanStartAdjust_RCompleted(this, new CanStartAdjust_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CanStartTask_R", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanStartTask_R(string batchid) {
            object[] results = this.Invoke("CanStartTask_R", new object[] {
                        batchid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanStartTask_RAsync(string batchid) {
            this.CanStartTask_RAsync(batchid, null);
        }
        
        /// <remarks/>
        public void CanStartTask_RAsync(string batchid, object userState) {
            if ((this.CanStartTask_ROperationCompleted == null)) {
                this.CanStartTask_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanStartTask_ROperationCompleted);
            }
            this.InvokeAsync("CanStartTask_R", new object[] {
                        batchid}, this.CanStartTask_ROperationCompleted, userState);
        }
        
        private void OnCanStartTask_ROperationCompleted(object arg) {
            if ((this.CanStartTask_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanStartTask_RCompleted(this, new CanStartTask_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckSpmRefund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckSpmRefund(string checkDate, out string outmsg) {
            object[] results = this.Invoke("CheckSpmRefund", new object[] {
                        checkDate});
            outmsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSpmRefundAsync(string checkDate) {
            this.CheckSpmRefundAsync(checkDate, null);
        }
        
        /// <remarks/>
        public void CheckSpmRefundAsync(string checkDate, object userState) {
            if ((this.CheckSpmRefundOperationCompleted == null)) {
                this.CheckSpmRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSpmRefundOperationCompleted);
            }
            this.InvokeAsync("CheckSpmRefund", new object[] {
                        checkDate}, this.CheckSpmRefundOperationCompleted, userState);
        }
        
        private void OnCheckSpmRefundOperationCompleted(object arg) {
            if ((this.CheckSpmRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSpmRefundCompleted(this, new CheckSpmRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartCreateTask_R", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartCreateTask_R(string batchid, out string msg) {
            object[] results = this.Invoke("StartCreateTask_R", new object[] {
                        batchid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartCreateTask_RAsync(string batchid) {
            this.StartCreateTask_RAsync(batchid, null);
        }
        
        /// <remarks/>
        public void StartCreateTask_RAsync(string batchid, object userState) {
            if ((this.StartCreateTask_ROperationCompleted == null)) {
                this.StartCreateTask_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartCreateTask_ROperationCompleted);
            }
            this.InvokeAsync("StartCreateTask_R", new object[] {
                        batchid}, this.StartCreateTask_ROperationCompleted, userState);
        }
        
        private void OnStartCreateTask_ROperationCompleted(object arg) {
            if ((this.StartCreateTask_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartCreateTask_RCompleted(this, new StartCreateTask_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CanStartHangData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanStartHangData(string batchid) {
            object[] results = this.Invoke("CanStartHangData", new object[] {
                        batchid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanStartHangDataAsync(string batchid) {
            this.CanStartHangDataAsync(batchid, null);
        }
        
        /// <remarks/>
        public void CanStartHangDataAsync(string batchid, object userState) {
            if ((this.CanStartHangDataOperationCompleted == null)) {
                this.CanStartHangDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanStartHangDataOperationCompleted);
            }
            this.InvokeAsync("CanStartHangData", new object[] {
                        batchid}, this.CanStartHangDataOperationCompleted, userState);
        }
        
        private void OnCanStartHangDataOperationCompleted(object arg) {
            if ((this.CanStartHangDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanStartHangDataCompleted(this, new CanStartHangDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateHandleResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateHandleResult(string fid, string handlefunc, string handleresult, string handleuser) {
            this.Invoke("UpdateHandleResult", new object[] {
                        fid,
                        handlefunc,
                        handleresult,
                        handleuser});
        }
        
        /// <remarks/>
        public void UpdateHandleResultAsync(string fid, string handlefunc, string handleresult, string handleuser) {
            this.UpdateHandleResultAsync(fid, handlefunc, handleresult, handleuser, null);
        }
        
        /// <remarks/>
        public void UpdateHandleResultAsync(string fid, string handlefunc, string handleresult, string handleuser, object userState) {
            if ((this.UpdateHandleResultOperationCompleted == null)) {
                this.UpdateHandleResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHandleResultOperationCompleted);
            }
            this.InvokeAsync("UpdateHandleResult", new object[] {
                        fid,
                        handlefunc,
                        handleresult,
                        handleuser}, this.UpdateHandleResultOperationCompleted, userState);
        }
        
        private void OnUpdateHandleResultOperationCompleted(object arg) {
            if ((this.UpdateHandleResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHandleResultCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateToFinish", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateToFinish(object[] al, string memo, bool mailflag) {
            this.Invoke("UpdateToFinish", new object[] {
                        al,
                        memo,
                        mailflag});
        }
        
        /// <remarks/>
        public void UpdateToFinishAsync(object[] al, string memo, bool mailflag) {
            this.UpdateToFinishAsync(al, memo, mailflag, null);
        }
        
        /// <remarks/>
        public void UpdateToFinishAsync(object[] al, string memo, bool mailflag, object userState) {
            if ((this.UpdateToFinishOperationCompleted == null)) {
                this.UpdateToFinishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateToFinishOperationCompleted);
            }
            this.InvokeAsync("UpdateToFinish", new object[] {
                        al,
                        memo,
                        mailflag}, this.UpdateToFinishOperationCompleted, userState);
        }
        
        private void OnUpdateToFinishOperationCompleted(object arg) {
            if ((this.UpdateToFinishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateToFinishCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckTwoRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckTwoRecord(object[] al, string reason, int result, string outid) {
            this.Invoke("CheckTwoRecord", new object[] {
                        al,
                        reason,
                        result,
                        outid});
        }
        
        /// <remarks/>
        public void CheckTwoRecordAsync(object[] al, string reason, int result, string outid) {
            this.CheckTwoRecordAsync(al, reason, result, outid, null);
        }
        
        /// <remarks/>
        public void CheckTwoRecordAsync(object[] al, string reason, int result, string outid, object userState) {
            if ((this.CheckTwoRecordOperationCompleted == null)) {
                this.CheckTwoRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTwoRecordOperationCompleted);
            }
            this.InvokeAsync("CheckTwoRecord", new object[] {
                        al,
                        reason,
                        result,
                        outid}, this.CheckTwoRecordOperationCompleted, userState);
        }
        
        private void OnCheckTwoRecordOperationCompleted(object arg) {
            if ((this.CheckTwoRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTwoRecordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckTwoRecord_Subacc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckTwoRecord_Subacc(object[] al, string reason, int result, string outid) {
            this.Invoke("CheckTwoRecord_Subacc", new object[] {
                        al,
                        reason,
                        result,
                        outid});
        }
        
        /// <remarks/>
        public void CheckTwoRecord_SubaccAsync(object[] al, string reason, int result, string outid) {
            this.CheckTwoRecord_SubaccAsync(al, reason, result, outid, null);
        }
        
        /// <remarks/>
        public void CheckTwoRecord_SubaccAsync(object[] al, string reason, int result, string outid, object userState) {
            if ((this.CheckTwoRecord_SubaccOperationCompleted == null)) {
                this.CheckTwoRecord_SubaccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTwoRecord_SubaccOperationCompleted);
            }
            this.InvokeAsync("CheckTwoRecord_Subacc", new object[] {
                        al,
                        reason,
                        result,
                        outid}, this.CheckTwoRecord_SubaccOperationCompleted, userState);
        }
        
        private void OnCheckTwoRecord_SubaccOperationCompleted(object arg) {
            if ((this.CheckTwoRecord_SubaccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTwoRecord_SubaccCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SpiltBankOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SpiltBankOrder(string fid, string fuser, out string mesg) {
            object[] results = this.Invoke("SpiltBankOrder", new object[] {
                        fid,
                        fuser});
            mesg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SpiltBankOrderAsync(string fid, string fuser) {
            this.SpiltBankOrderAsync(fid, fuser, null);
        }
        
        /// <remarks/>
        public void SpiltBankOrderAsync(string fid, string fuser, object userState) {
            if ((this.SpiltBankOrderOperationCompleted == null)) {
                this.SpiltBankOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpiltBankOrderOperationCompleted);
            }
            this.InvokeAsync("SpiltBankOrder", new object[] {
                        fid,
                        fuser}, this.SpiltBankOrderOperationCompleted, userState);
        }
        
        private void OnSpiltBankOrderOperationCompleted(object arg) {
            if ((this.SpiltBankOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpiltBankOrderCompleted(this, new SpiltBankOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoCheckTwoRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AutoCheckTwoRecord(System.Data.DataSet ds, string date, string date2, string banktype, string outid) {
            object[] results = this.Invoke("AutoCheckTwoRecord", new object[] {
                        ds,
                        date,
                        date2,
                        banktype,
                        outid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AutoCheckTwoRecordAsync(System.Data.DataSet ds, string date, string date2, string banktype, string outid) {
            this.AutoCheckTwoRecordAsync(ds, date, date2, banktype, outid, null);
        }
        
        /// <remarks/>
        public void AutoCheckTwoRecordAsync(System.Data.DataSet ds, string date, string date2, string banktype, string outid, object userState) {
            if ((this.AutoCheckTwoRecordOperationCompleted == null)) {
                this.AutoCheckTwoRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoCheckTwoRecordOperationCompleted);
            }
            this.InvokeAsync("AutoCheckTwoRecord", new object[] {
                        ds,
                        date,
                        date2,
                        banktype,
                        outid}, this.AutoCheckTwoRecordOperationCompleted, userState);
        }
        
        private void OnAutoCheckTwoRecordOperationCompleted(object arg) {
            if ((this.AutoCheckTwoRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoCheckTwoRecordCompleted(this, new AutoCheckTwoRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoCheckTwoRecord_Subacc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AutoCheckTwoRecord_Subacc(string date, string date2, string userid) {
            object[] results = this.Invoke("AutoCheckTwoRecord_Subacc", new object[] {
                        date,
                        date2,
                        userid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AutoCheckTwoRecord_SubaccAsync(string date, string date2, string userid) {
            this.AutoCheckTwoRecord_SubaccAsync(date, date2, userid, null);
        }
        
        /// <remarks/>
        public void AutoCheckTwoRecord_SubaccAsync(string date, string date2, string userid, object userState) {
            if ((this.AutoCheckTwoRecord_SubaccOperationCompleted == null)) {
                this.AutoCheckTwoRecord_SubaccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoCheckTwoRecord_SubaccOperationCompleted);
            }
            this.InvokeAsync("AutoCheckTwoRecord_Subacc", new object[] {
                        date,
                        date2,
                        userid}, this.AutoCheckTwoRecord_SubaccOperationCompleted, userState);
        }
        
        private void OnAutoCheckTwoRecord_SubaccOperationCompleted(object arg) {
            if ((this.AutoCheckTwoRecord_SubaccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoCheckTwoRecord_SubaccCompleted(this, new AutoCheckTwoRecord_SubaccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckBatchRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckBatchRecord(object[] al, string reason, string strCheckType, int result, string outid, string type) {
            this.Invoke("CheckBatchRecord", new object[] {
                        al,
                        reason,
                        strCheckType,
                        result,
                        outid,
                        type});
        }
        
        /// <remarks/>
        public void CheckBatchRecordAsync(object[] al, string reason, string strCheckType, int result, string outid, string type) {
            this.CheckBatchRecordAsync(al, reason, strCheckType, result, outid, type, null);
        }
        
        /// <remarks/>
        public void CheckBatchRecordAsync(object[] al, string reason, string strCheckType, int result, string outid, string type, object userState) {
            if ((this.CheckBatchRecordOperationCompleted == null)) {
                this.CheckBatchRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBatchRecordOperationCompleted);
            }
            this.InvokeAsync("CheckBatchRecord", new object[] {
                        al,
                        reason,
                        strCheckType,
                        result,
                        outid,
                        type}, this.CheckBatchRecordOperationCompleted, userState);
        }
        
        private void OnCheckBatchRecordOperationCompleted(object arg) {
            if ((this.CheckBatchRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBatchRecordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShowBatpayMainBt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ShowBatpayMainBt(string date) {
            object[] results = this.Invoke("ShowBatpayMainBt", new object[] {
                        date});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ShowBatpayMainBtAsync(string date) {
            this.ShowBatpayMainBtAsync(date, null);
        }
        
        /// <remarks/>
        public void ShowBatpayMainBtAsync(string date, object userState) {
            if ((this.ShowBatpayMainBtOperationCompleted == null)) {
                this.ShowBatpayMainBtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowBatpayMainBtOperationCompleted);
            }
            this.InvokeAsync("ShowBatpayMainBt", new object[] {
                        date}, this.ShowBatpayMainBtOperationCompleted, userState);
        }
        
        private void OnShowBatpayMainBtOperationCompleted(object arg) {
            if ((this.ShowBatpayMainBtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowBatpayMainBtCompleted(this, new ShowBatpayMainBtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShowBatpayMainBt_B", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ShowBatpayMainBt_B(string date, string BatchOrder) {
            object[] results = this.Invoke("ShowBatpayMainBt_B", new object[] {
                        date,
                        BatchOrder});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ShowBatpayMainBt_BAsync(string date, string BatchOrder) {
            this.ShowBatpayMainBt_BAsync(date, BatchOrder, null);
        }
        
        /// <remarks/>
        public void ShowBatpayMainBt_BAsync(string date, string BatchOrder, object userState) {
            if ((this.ShowBatpayMainBt_BOperationCompleted == null)) {
                this.ShowBatpayMainBt_BOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowBatpayMainBt_BOperationCompleted);
            }
            this.InvokeAsync("ShowBatpayMainBt_B", new object[] {
                        date,
                        BatchOrder}, this.ShowBatpayMainBt_BOperationCompleted, userState);
        }
        
        private void OnShowBatpayMainBt_BOperationCompleted(object arg) {
            if ((this.ShowBatpayMainBt_BCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowBatpayMainBt_BCompleted(this, new ShowBatpayMainBt_BCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShowBatpayMainBt_V", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ShowBatpayMainBt_V(string date, string BatchOrder) {
            object[] results = this.Invoke("ShowBatpayMainBt_V", new object[] {
                        date,
                        BatchOrder});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ShowBatpayMainBt_VAsync(string date, string BatchOrder) {
            this.ShowBatpayMainBt_VAsync(date, BatchOrder, null);
        }
        
        /// <remarks/>
        public void ShowBatpayMainBt_VAsync(string date, string BatchOrder, object userState) {
            if ((this.ShowBatpayMainBt_VOperationCompleted == null)) {
                this.ShowBatpayMainBt_VOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowBatpayMainBt_VOperationCompleted);
            }
            this.InvokeAsync("ShowBatpayMainBt_V", new object[] {
                        date,
                        BatchOrder}, this.ShowBatpayMainBt_VOperationCompleted, userState);
        }
        
        private void OnShowBatpayMainBt_VOperationCompleted(object arg) {
            if ((this.ShowBatpayMainBt_VCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowBatpayMainBt_VCompleted(this, new ShowBatpayMainBt_VCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShowBatpayMainBt_O", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ShowBatpayMainBt_O(string date, string BatchOrder, string accountpaytype) {
            object[] results = this.Invoke("ShowBatpayMainBt_O", new object[] {
                        date,
                        BatchOrder,
                        accountpaytype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ShowBatpayMainBt_OAsync(string date, string BatchOrder, string accountpaytype) {
            this.ShowBatpayMainBt_OAsync(date, BatchOrder, accountpaytype, null);
        }
        
        /// <remarks/>
        public void ShowBatpayMainBt_OAsync(string date, string BatchOrder, string accountpaytype, object userState) {
            if ((this.ShowBatpayMainBt_OOperationCompleted == null)) {
                this.ShowBatpayMainBt_OOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowBatpayMainBt_OOperationCompleted);
            }
            this.InvokeAsync("ShowBatpayMainBt_O", new object[] {
                        date,
                        BatchOrder,
                        accountpaytype}, this.ShowBatpayMainBt_OOperationCompleted, userState);
        }
        
        private void OnShowBatpayMainBt_OOperationCompleted(object arg) {
            if ((this.ShowBatpayMainBt_OCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowBatpayMainBt_OCompleted(this, new ShowBatpayMainBt_OCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShowBatpayMainBt_R", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ShowBatpayMainBt_R(string date) {
            object[] results = this.Invoke("ShowBatpayMainBt_R", new object[] {
                        date});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ShowBatpayMainBt_RAsync(string date) {
            this.ShowBatpayMainBt_RAsync(date, null);
        }
        
        /// <remarks/>
        public void ShowBatpayMainBt_RAsync(string date, object userState) {
            if ((this.ShowBatpayMainBt_ROperationCompleted == null)) {
                this.ShowBatpayMainBt_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowBatpayMainBt_ROperationCompleted);
            }
            this.InvokeAsync("ShowBatpayMainBt_R", new object[] {
                        date}, this.ShowBatpayMainBt_ROperationCompleted, userState);
        }
        
        private void OnShowBatpayMainBt_ROperationCompleted(object arg) {
            if ((this.ShowBatpayMainBt_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowBatpayMainBt_RCompleted(this, new ShowBatpayMainBt_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankIDFromBatchNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBankIDFromBatchNo(string batchno) {
            object[] results = this.Invoke("GetBankIDFromBatchNo", new object[] {
                        batchno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankIDFromBatchNoAsync(string batchno) {
            this.GetBankIDFromBatchNoAsync(batchno, null);
        }
        
        /// <remarks/>
        public void GetBankIDFromBatchNoAsync(string batchno, object userState) {
            if ((this.GetBankIDFromBatchNoOperationCompleted == null)) {
                this.GetBankIDFromBatchNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankIDFromBatchNoOperationCompleted);
            }
            this.InvokeAsync("GetBankIDFromBatchNo", new object[] {
                        batchno}, this.GetBankIDFromBatchNoOperationCompleted, userState);
        }
        
        private void OnGetBankIDFromBatchNoOperationCompleted(object arg) {
            if ((this.GetBankIDFromBatchNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankIDFromBatchNoCompleted(this, new GetBankIDFromBatchNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankIO_CreatePayTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BankIO_CreatePayTask(string strBatchID) {
            object[] results = this.Invoke("BankIO_CreatePayTask", new object[] {
                        strBatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BankIO_CreatePayTaskAsync(string strBatchID) {
            this.BankIO_CreatePayTaskAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BankIO_CreatePayTaskAsync(string strBatchID, object userState) {
            if ((this.BankIO_CreatePayTaskOperationCompleted == null)) {
                this.BankIO_CreatePayTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankIO_CreatePayTaskOperationCompleted);
            }
            this.InvokeAsync("BankIO_CreatePayTask", new object[] {
                        strBatchID}, this.BankIO_CreatePayTaskOperationCompleted, userState);
        }
        
        private void OnBankIO_CreatePayTaskOperationCompleted(object arg) {
            if ((this.BankIO_CreatePayTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankIO_CreatePayTaskCompleted(this, new BankIO_CreatePayTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankIO_CreatePayTask_R", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BankIO_CreatePayTask_R(string strBatchID) {
            object[] results = this.Invoke("BankIO_CreatePayTask_R", new object[] {
                        strBatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BankIO_CreatePayTask_RAsync(string strBatchID) {
            this.BankIO_CreatePayTask_RAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BankIO_CreatePayTask_RAsync(string strBatchID, object userState) {
            if ((this.BankIO_CreatePayTask_ROperationCompleted == null)) {
                this.BankIO_CreatePayTask_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankIO_CreatePayTask_ROperationCompleted);
            }
            this.InvokeAsync("BankIO_CreatePayTask_R", new object[] {
                        strBatchID}, this.BankIO_CreatePayTask_ROperationCompleted, userState);
        }
        
        private void OnBankIO_CreatePayTask_ROperationCompleted(object arg) {
            if ((this.BankIO_CreatePayTask_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankIO_CreatePayTask_RCompleted(this, new BankIO_CreatePayTask_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateRefundTask_Other", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateRefundTask_Other(string strBatchID) {
            object[] results = this.Invoke("CreateRefundTask_Other", new object[] {
                        strBatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRefundTask_OtherAsync(string strBatchID) {
            this.CreateRefundTask_OtherAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void CreateRefundTask_OtherAsync(string strBatchID, object userState) {
            if ((this.CreateRefundTask_OtherOperationCompleted == null)) {
                this.CreateRefundTask_OtherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRefundTask_OtherOperationCompleted);
            }
            this.InvokeAsync("CreateRefundTask_Other", new object[] {
                        strBatchID}, this.CreateRefundTask_OtherOperationCompleted, userState);
        }
        
        private void OnCreateRefundTask_OtherOperationCompleted(object arg) {
            if ((this.CreateRefundTask_OtherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRefundTask_OtherCompleted(this, new CreateRefundTask_OtherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankIO_InputFirstFinish", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BankIO_InputFirstFinish(string strBatchID, out string msg) {
            object[] results = this.Invoke("BankIO_InputFirstFinish", new object[] {
                        strBatchID});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BankIO_InputFirstFinishAsync(string strBatchID) {
            this.BankIO_InputFirstFinishAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BankIO_InputFirstFinishAsync(string strBatchID, object userState) {
            if ((this.BankIO_InputFirstFinishOperationCompleted == null)) {
                this.BankIO_InputFirstFinishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankIO_InputFirstFinishOperationCompleted);
            }
            this.InvokeAsync("BankIO_InputFirstFinish", new object[] {
                        strBatchID}, this.BankIO_InputFirstFinishOperationCompleted, userState);
        }
        
        private void OnBankIO_InputFirstFinishOperationCompleted(object arg) {
            if ((this.BankIO_InputFirstFinishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankIO_InputFirstFinishCompleted(this, new BankIO_InputFirstFinishCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankIO_InputSecondFinish", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BankIO_InputSecondFinish(string strBatchID, out string msg) {
            object[] results = this.Invoke("BankIO_InputSecondFinish", new object[] {
                        strBatchID});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BankIO_InputSecondFinishAsync(string strBatchID) {
            this.BankIO_InputSecondFinishAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BankIO_InputSecondFinishAsync(string strBatchID, object userState) {
            if ((this.BankIO_InputSecondFinishOperationCompleted == null)) {
                this.BankIO_InputSecondFinishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankIO_InputSecondFinishOperationCompleted);
            }
            this.InvokeAsync("BankIO_InputSecondFinish", new object[] {
                        strBatchID}, this.BankIO_InputSecondFinishOperationCompleted, userState);
        }
        
        private void OnBankIO_InputSecondFinishOperationCompleted(object arg) {
            if ((this.BankIO_InputSecondFinishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankIO_InputSecondFinishCompleted(this, new BankIO_InputSecondFinishCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankIO_PayTaskFinish", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BankIO_PayTaskFinish(string strBatchID, out string msg) {
            object[] results = this.Invoke("BankIO_PayTaskFinish", new object[] {
                        strBatchID});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BankIO_PayTaskFinishAsync(string strBatchID) {
            this.BankIO_PayTaskFinishAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BankIO_PayTaskFinishAsync(string strBatchID, object userState) {
            if ((this.BankIO_PayTaskFinishOperationCompleted == null)) {
                this.BankIO_PayTaskFinishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankIO_PayTaskFinishOperationCompleted);
            }
            this.InvokeAsync("BankIO_PayTaskFinish", new object[] {
                        strBatchID}, this.BankIO_PayTaskFinishOperationCompleted, userState);
        }
        
        private void OnBankIO_PayTaskFinishOperationCompleted(object arg) {
            if ((this.BankIO_PayTaskFinishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankIO_PayTaskFinishCompleted(this, new BankIO_PayTaskFinishCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CanRollBackPayTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanRollBackPayTask(string BatchID) {
            object[] results = this.Invoke("CanRollBackPayTask", new object[] {
                        BatchID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanRollBackPayTaskAsync(string BatchID) {
            this.CanRollBackPayTaskAsync(BatchID, null);
        }
        
        /// <remarks/>
        public void CanRollBackPayTaskAsync(string BatchID, object userState) {
            if ((this.CanRollBackPayTaskOperationCompleted == null)) {
                this.CanRollBackPayTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanRollBackPayTaskOperationCompleted);
            }
            this.InvokeAsync("CanRollBackPayTask", new object[] {
                        BatchID}, this.CanRollBackPayTaskOperationCompleted, userState);
        }
        
        private void OnCanRollBackPayTaskOperationCompleted(object arg) {
            if ((this.CanRollBackPayTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanRollBackPayTaskCompleted(this, new CanRollBackPayTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankIO_UploadCancel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BankIO_UploadCancel(string strBatchID, out string msg) {
            object[] results = this.Invoke("BankIO_UploadCancel", new object[] {
                        strBatchID});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BankIO_UploadCancelAsync(string strBatchID) {
            this.BankIO_UploadCancelAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void BankIO_UploadCancelAsync(string strBatchID, object userState) {
            if ((this.BankIO_UploadCancelOperationCompleted == null)) {
                this.BankIO_UploadCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankIO_UploadCancelOperationCompleted);
            }
            this.InvokeAsync("BankIO_UploadCancel", new object[] {
                        strBatchID}, this.BankIO_UploadCancelOperationCompleted, userState);
        }
        
        private void OnBankIO_UploadCancelOperationCompleted(object arg) {
            if ((this.BankIO_UploadCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankIO_UploadCancelCompleted(this, new BankIO_UploadCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankIO_PayTaskCancel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BankIO_PayTaskCancel(string strBatchID, string reason, out string msg) {
            object[] results = this.Invoke("BankIO_PayTaskCancel", new object[] {
                        strBatchID,
                        reason});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BankIO_PayTaskCancelAsync(string strBatchID, string reason) {
            this.BankIO_PayTaskCancelAsync(strBatchID, reason, null);
        }
        
        /// <remarks/>
        public void BankIO_PayTaskCancelAsync(string strBatchID, string reason, object userState) {
            if ((this.BankIO_PayTaskCancelOperationCompleted == null)) {
                this.BankIO_PayTaskCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankIO_PayTaskCancelOperationCompleted);
            }
            this.InvokeAsync("BankIO_PayTaskCancel", new object[] {
                        strBatchID,
                        reason}, this.BankIO_PayTaskCancelOperationCompleted, userState);
        }
        
        private void OnBankIO_PayTaskCancelOperationCompleted(object arg) {
            if ((this.BankIO_PayTaskCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankIO_PayTaskCancelCompleted(this, new BankIO_PayTaskCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RefundOther_PayTaskCancel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RefundOther_PayTaskCancel(string strBatchID, string reason, int refundPath, int cancelType, out string msg) {
            object[] results = this.Invoke("RefundOther_PayTaskCancel", new object[] {
                        strBatchID,
                        reason,
                        refundPath,
                        cancelType});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RefundOther_PayTaskCancelAsync(string strBatchID, string reason, int refundPath, int cancelType) {
            this.RefundOther_PayTaskCancelAsync(strBatchID, reason, refundPath, cancelType, null);
        }
        
        /// <remarks/>
        public void RefundOther_PayTaskCancelAsync(string strBatchID, string reason, int refundPath, int cancelType, object userState) {
            if ((this.RefundOther_PayTaskCancelOperationCompleted == null)) {
                this.RefundOther_PayTaskCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundOther_PayTaskCancelOperationCompleted);
            }
            this.InvokeAsync("RefundOther_PayTaskCancel", new object[] {
                        strBatchID,
                        reason,
                        refundPath,
                        cancelType}, this.RefundOther_PayTaskCancelOperationCompleted, userState);
        }
        
        private void OnRefundOther_PayTaskCancelOperationCompleted(object arg) {
            if ((this.RefundOther_PayTaskCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundOther_PayTaskCancelCompleted(this, new RefundOther_PayTaskCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankIO_HandleExceptionData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BankIO_HandleExceptionData(string kid, int handletype, string memo, out string msg) {
            object[] results = this.Invoke("BankIO_HandleExceptionData", new object[] {
                        kid,
                        handletype,
                        memo});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BankIO_HandleExceptionDataAsync(string kid, int handletype, string memo) {
            this.BankIO_HandleExceptionDataAsync(kid, handletype, memo, null);
        }
        
        /// <remarks/>
        public void BankIO_HandleExceptionDataAsync(string kid, int handletype, string memo, object userState) {
            if ((this.BankIO_HandleExceptionDataOperationCompleted == null)) {
                this.BankIO_HandleExceptionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankIO_HandleExceptionDataOperationCompleted);
            }
            this.InvokeAsync("BankIO_HandleExceptionData", new object[] {
                        kid,
                        handletype,
                        memo}, this.BankIO_HandleExceptionDataOperationCompleted, userState);
        }
        
        private void OnBankIO_HandleExceptionDataOperationCompleted(object arg) {
            if ((this.BankIO_HandleExceptionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankIO_HandleExceptionDataCompleted(this, new BankIO_HandleExceptionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnTicketDetail_BindData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReturnTicketDetail_BindData(string batchid, string fseq, string flag) {
            object[] results = this.Invoke("ReturnTicketDetail_BindData", new object[] {
                        batchid,
                        fseq,
                        flag});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnTicketDetail_BindDataAsync(string batchid, string fseq, string flag) {
            this.ReturnTicketDetail_BindDataAsync(batchid, fseq, flag, null);
        }
        
        /// <remarks/>
        public void ReturnTicketDetail_BindDataAsync(string batchid, string fseq, string flag, object userState) {
            if ((this.ReturnTicketDetail_BindDataOperationCompleted == null)) {
                this.ReturnTicketDetail_BindDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnTicketDetail_BindDataOperationCompleted);
            }
            this.InvokeAsync("ReturnTicketDetail_BindData", new object[] {
                        batchid,
                        fseq,
                        flag}, this.ReturnTicketDetail_BindDataOperationCompleted, userState);
        }
        
        private void OnReturnTicketDetail_BindDataOperationCompleted(object arg) {
            if ((this.ReturnTicketDetail_BindDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnTicketDetail_BindDataCompleted(this, new ReturnTicketDetail_BindDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPayTaskDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayTaskDetail(string batchid) {
            object[] results = this.Invoke("GetPayTaskDetail", new object[] {
                        batchid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayTaskDetailAsync(string batchid) {
            this.GetPayTaskDetailAsync(batchid, null);
        }
        
        /// <remarks/>
        public void GetPayTaskDetailAsync(string batchid, object userState) {
            if ((this.GetPayTaskDetailOperationCompleted == null)) {
                this.GetPayTaskDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayTaskDetailOperationCompleted);
            }
            this.InvokeAsync("GetPayTaskDetail", new object[] {
                        batchid}, this.GetPayTaskDetailOperationCompleted, userState);
        }
        
        private void OnGetPayTaskDetailOperationCompleted(object arg) {
            if ((this.GetPayTaskDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayTaskDetailCompleted(this, new GetPayTaskDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TokenHang_ReverseHandle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TokenHang_ReverseHandle(object[] al, string date) {
            object[] results = this.Invoke("TokenHang_ReverseHandle", new object[] {
                        al,
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TokenHang_ReverseHandleAsync(object[] al, string date) {
            this.TokenHang_ReverseHandleAsync(al, date, null);
        }
        
        /// <remarks/>
        public void TokenHang_ReverseHandleAsync(object[] al, string date, object userState) {
            if ((this.TokenHang_ReverseHandleOperationCompleted == null)) {
                this.TokenHang_ReverseHandleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTokenHang_ReverseHandleOperationCompleted);
            }
            this.InvokeAsync("TokenHang_ReverseHandle", new object[] {
                        al,
                        date}, this.TokenHang_ReverseHandleOperationCompleted, userState);
        }
        
        private void OnTokenHang_ReverseHandleOperationCompleted(object arg) {
            if ((this.TokenHang_ReverseHandleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TokenHang_ReverseHandleCompleted(this, new TokenHang_ReverseHandleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HaoYe_UploadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HaoYe_UploadFile(string filepath, out string batchid, out string msg) {
            object[] results = this.Invoke("HaoYe_UploadFile", new object[] {
                        filepath});
            batchid = ((string)(results[1]));
            msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HaoYe_UploadFileAsync(string filepath) {
            this.HaoYe_UploadFileAsync(filepath, null);
        }
        
        /// <remarks/>
        public void HaoYe_UploadFileAsync(string filepath, object userState) {
            if ((this.HaoYe_UploadFileOperationCompleted == null)) {
                this.HaoYe_UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHaoYe_UploadFileOperationCompleted);
            }
            this.InvokeAsync("HaoYe_UploadFile", new object[] {
                        filepath}, this.HaoYe_UploadFileOperationCompleted, userState);
        }
        
        private void OnHaoYe_UploadFileOperationCompleted(object arg) {
            if ((this.HaoYe_UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HaoYe_UploadFileCompleted(this, new HaoYe_UploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HaoYe_CanStartCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HaoYe_CanStartCheck(string batchid, out string msg) {
            object[] results = this.Invoke("HaoYe_CanStartCheck", new object[] {
                        batchid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HaoYe_CanStartCheckAsync(string batchid) {
            this.HaoYe_CanStartCheckAsync(batchid, null);
        }
        
        /// <remarks/>
        public void HaoYe_CanStartCheckAsync(string batchid, object userState) {
            if ((this.HaoYe_CanStartCheckOperationCompleted == null)) {
                this.HaoYe_CanStartCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHaoYe_CanStartCheckOperationCompleted);
            }
            this.InvokeAsync("HaoYe_CanStartCheck", new object[] {
                        batchid}, this.HaoYe_CanStartCheckOperationCompleted, userState);
        }
        
        private void OnHaoYe_CanStartCheckOperationCompleted(object arg) {
            if ((this.HaoYe_CanStartCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HaoYe_CanStartCheckCompleted(this, new HaoYe_CanStartCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HaoYe_GetMondy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HaoYe_GetMondy(string batchid) {
            object[] results = this.Invoke("HaoYe_GetMondy", new object[] {
                        batchid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HaoYe_GetMondyAsync(string batchid) {
            this.HaoYe_GetMondyAsync(batchid, null);
        }
        
        /// <remarks/>
        public void HaoYe_GetMondyAsync(string batchid, object userState) {
            if ((this.HaoYe_GetMondyOperationCompleted == null)) {
                this.HaoYe_GetMondyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHaoYe_GetMondyOperationCompleted);
            }
            this.InvokeAsync("HaoYe_GetMondy", new object[] {
                        batchid}, this.HaoYe_GetMondyOperationCompleted, userState);
        }
        
        private void OnHaoYe_GetMondyOperationCompleted(object arg) {
            if ((this.HaoYe_GetMondyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HaoYe_GetMondyCompleted(this, new HaoYe_GetMondyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HaoYe_GetBatchList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] HaoYe_GetBatchList(string startuser, string state, string starttime, string endtime, out string msg) {
            object[] results = this.Invoke("HaoYe_GetBatchList", new object[] {
                        startuser,
                        state,
                        starttime,
                        endtime});
            msg = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void HaoYe_GetBatchListAsync(string startuser, string state, string starttime, string endtime) {
            this.HaoYe_GetBatchListAsync(startuser, state, starttime, endtime, null);
        }
        
        /// <remarks/>
        public void HaoYe_GetBatchListAsync(string startuser, string state, string starttime, string endtime, object userState) {
            if ((this.HaoYe_GetBatchListOperationCompleted == null)) {
                this.HaoYe_GetBatchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHaoYe_GetBatchListOperationCompleted);
            }
            this.InvokeAsync("HaoYe_GetBatchList", new object[] {
                        startuser,
                        state,
                        starttime,
                        endtime}, this.HaoYe_GetBatchListOperationCompleted, userState);
        }
        
        private void OnHaoYe_GetBatchListOperationCompleted(object arg) {
            if ((this.HaoYe_GetBatchListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HaoYe_GetBatchListCompleted(this, new HaoYe_GetBatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HaoYe_GetAllBatchList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] HaoYe_GetAllBatchList(out string msg) {
            object[] results = this.Invoke("HaoYe_GetAllBatchList", new object[0]);
            msg = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void HaoYe_GetAllBatchListAsync() {
            this.HaoYe_GetAllBatchListAsync(null);
        }
        
        /// <remarks/>
        public void HaoYe_GetAllBatchListAsync(object userState) {
            if ((this.HaoYe_GetAllBatchListOperationCompleted == null)) {
                this.HaoYe_GetAllBatchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHaoYe_GetAllBatchListOperationCompleted);
            }
            this.InvokeAsync("HaoYe_GetAllBatchList", new object[0], this.HaoYe_GetAllBatchListOperationCompleted, userState);
        }
        
        private void OnHaoYe_GetAllBatchListOperationCompleted(object arg) {
            if ((this.HaoYe_GetAllBatchListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HaoYe_GetAllBatchListCompleted(this, new HaoYe_GetAllBatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMedFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateMedFile(string strdate, out string msg, out string[] filelist) {
            object[] results = this.Invoke("CreateMedFile", new object[] {
                        strdate});
            msg = ((string)(results[1]));
            filelist = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateMedFileAsync(string strdate) {
            this.CreateMedFileAsync(strdate, null);
        }
        
        /// <remarks/>
        public void CreateMedFileAsync(string strdate, object userState) {
            if ((this.CreateMedFileOperationCompleted == null)) {
                this.CreateMedFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMedFileOperationCompleted);
            }
            this.InvokeAsync("CreateMedFile", new object[] {
                        strdate}, this.CreateMedFileOperationCompleted, userState);
        }
        
        private void OnCreateMedFileOperationCompleted(object arg) {
            if ((this.CreateMedFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMedFileCompleted(this, new CreateMedFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPayState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Param[] GetPayState(string batchid) {
            object[] results = this.Invoke("GetPayState", new object[] {
                        batchid});
            return ((Param[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPayStateAsync(string batchid) {
            this.GetPayStateAsync(batchid, null);
        }
        
        /// <remarks/>
        public void GetPayStateAsync(string batchid, object userState) {
            if ((this.GetPayStateOperationCompleted == null)) {
                this.GetPayStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayStateOperationCompleted);
            }
            this.InvokeAsync("GetPayState", new object[] {
                        batchid}, this.GetPayStateOperationCompleted, userState);
        }
        
        private void OnGetPayStateOperationCompleted(object arg) {
            if ((this.GetPayStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayStateCompleted(this, new GetPayStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPayState_R", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Param[] GetPayState_R(string batchid) {
            object[] results = this.Invoke("GetPayState_R", new object[] {
                        batchid});
            return ((Param[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPayState_RAsync(string batchid) {
            this.GetPayState_RAsync(batchid, null);
        }
        
        /// <remarks/>
        public void GetPayState_RAsync(string batchid, object userState) {
            if ((this.GetPayState_ROperationCompleted == null)) {
                this.GetPayState_ROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayState_ROperationCompleted);
            }
            this.InvokeAsync("GetPayState_R", new object[] {
                        batchid}, this.GetPayState_ROperationCompleted, userState);
        }
        
        private void OnGetPayState_ROperationCompleted(object arg) {
            if ((this.GetPayState_RCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayState_RCompleted(this, new GetPayState_RCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRefundState_Other", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Param[] GetRefundState_Other(string batchid) {
            object[] results = this.Invoke("GetRefundState_Other", new object[] {
                        batchid});
            return ((Param[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundState_OtherAsync(string batchid) {
            this.GetRefundState_OtherAsync(batchid, null);
        }
        
        /// <remarks/>
        public void GetRefundState_OtherAsync(string batchid, object userState) {
            if ((this.GetRefundState_OtherOperationCompleted == null)) {
                this.GetRefundState_OtherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundState_OtherOperationCompleted);
            }
            this.InvokeAsync("GetRefundState_Other", new object[] {
                        batchid}, this.GetRefundState_OtherOperationCompleted, userState);
        }
        
        private void OnGetRefundState_OtherOperationCompleted(object arg) {
            if ((this.GetRefundState_OtherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundState_OtherCompleted(this, new GetRefundState_OtherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadReturnTicketFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadReturnTicketFile(int count, long sum, string banktype, string file, out string msg, out System.Data.DataSet dess) {
            object[] results = this.Invoke("UploadReturnTicketFile", new object[] {
                        count,
                        sum,
                        banktype,
                        file});
            msg = ((string)(results[1]));
            dess = ((System.Data.DataSet)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadReturnTicketFileAsync(int count, long sum, string banktype, string file) {
            this.UploadReturnTicketFileAsync(count, sum, banktype, file, null);
        }
        
        /// <remarks/>
        public void UploadReturnTicketFileAsync(int count, long sum, string banktype, string file, object userState) {
            if ((this.UploadReturnTicketFileOperationCompleted == null)) {
                this.UploadReturnTicketFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadReturnTicketFileOperationCompleted);
            }
            this.InvokeAsync("UploadReturnTicketFile", new object[] {
                        count,
                        sum,
                        banktype,
                        file}, this.UploadReturnTicketFileOperationCompleted, userState);
        }
        
        private void OnUploadReturnTicketFileOperationCompleted(object arg) {
            if ((this.UploadReturnTicketFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadReturnTicketFileCompleted(this, new UploadReturnTicketFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPayBankCounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Param[] GetPayBankCounts(string batchid, out string msg) {
            object[] results = this.Invoke("GetPayBankCounts", new object[] {
                        batchid});
            msg = ((string)(results[1]));
            return ((Param[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPayBankCountsAsync(string batchid) {
            this.GetPayBankCountsAsync(batchid, null);
        }
        
        /// <remarks/>
        public void GetPayBankCountsAsync(string batchid, object userState) {
            if ((this.GetPayBankCountsOperationCompleted == null)) {
                this.GetPayBankCountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayBankCountsOperationCompleted);
            }
            this.InvokeAsync("GetPayBankCounts", new object[] {
                        batchid}, this.GetPayBankCountsOperationCompleted, userState);
        }
        
        private void OnGetPayBankCountsOperationCompleted(object arg) {
            if ((this.GetPayBankCountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayBankCountsCompleted(this, new GetPayBankCountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPackageCounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPackageCounts(string batchid, out string msg) {
            object[] results = this.Invoke("GetPackageCounts", new object[] {
                        batchid});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageCountsAsync(string batchid) {
            this.GetPackageCountsAsync(batchid, null);
        }
        
        /// <remarks/>
        public void GetPackageCountsAsync(string batchid, object userState) {
            if ((this.GetPackageCountsOperationCompleted == null)) {
                this.GetPackageCountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageCountsOperationCompleted);
            }
            this.InvokeAsync("GetPackageCounts", new object[] {
                        batchid}, this.GetPackageCountsOperationCompleted, userState);
        }
        
        private void OnGetPackageCountsOperationCompleted(object arg) {
            if ((this.GetPackageCountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageCountsCompleted(this, new GetPackageCountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankCounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankCounts(string batchid, out string msg) {
            object[] results = this.Invoke("GetBankCounts", new object[] {
                        batchid});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankCountsAsync(string batchid) {
            this.GetBankCountsAsync(batchid, null);
        }
        
        /// <remarks/>
        public void GetBankCountsAsync(string batchid, object userState) {
            if ((this.GetBankCountsOperationCompleted == null)) {
                this.GetBankCountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankCountsOperationCompleted);
            }
            this.InvokeAsync("GetBankCounts", new object[] {
                        batchid}, this.GetBankCountsOperationCompleted, userState);
        }
        
        private void OnGetBankCountsOperationCompleted(object arg) {
            if ((this.GetBankCountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankCountsCompleted(this, new GetBankCountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetPackageBankType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetPackageBankType(string batchid, string packageid, string flag, int num, string banktype, out string msg) {
            object[] results = this.Invoke("SetPackageBankType", new object[] {
                        batchid,
                        packageid,
                        flag,
                        num,
                        banktype});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetPackageBankTypeAsync(string batchid, string packageid, string flag, int num, string banktype) {
            this.SetPackageBankTypeAsync(batchid, packageid, flag, num, banktype, null);
        }
        
        /// <remarks/>
        public void SetPackageBankTypeAsync(string batchid, string packageid, string flag, int num, string banktype, object userState) {
            if ((this.SetPackageBankTypeOperationCompleted == null)) {
                this.SetPackageBankTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPackageBankTypeOperationCompleted);
            }
            this.InvokeAsync("SetPackageBankType", new object[] {
                        batchid,
                        packageid,
                        flag,
                        num,
                        banktype}, this.SetPackageBankTypeOperationCompleted, userState);
        }
        
        private void OnSetPackageBankTypeOperationCompleted(object arg) {
            if ((this.SetPackageBankTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPackageBankTypeCompleted(this, new SetPackageBankTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetBankBankType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetBankBankType(string batchid, string sourcebanktype, string banktype, out string msg) {
            object[] results = this.Invoke("SetBankBankType", new object[] {
                        batchid,
                        sourcebanktype,
                        banktype});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetBankBankTypeAsync(string batchid, string sourcebanktype, string banktype) {
            this.SetBankBankTypeAsync(batchid, sourcebanktype, banktype, null);
        }
        
        /// <remarks/>
        public void SetBankBankTypeAsync(string batchid, string sourcebanktype, string banktype, object userState) {
            if ((this.SetBankBankTypeOperationCompleted == null)) {
                this.SetBankBankTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetBankBankTypeOperationCompleted);
            }
            this.InvokeAsync("SetBankBankType", new object[] {
                        batchid,
                        sourcebanktype,
                        banktype}, this.SetBankBankTypeOperationCompleted, userState);
        }
        
        private void OnSetBankBankTypeOperationCompleted(object arg) {
            if ((this.SetBankBankTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetBankBankTypeCompleted(this, new SetBankBankTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GiveBack_GetBatchInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GiveBack_GetBatchInfo(string strBatchID, out string msg) {
            object[] results = this.Invoke("GiveBack_GetBatchInfo", new object[] {
                        strBatchID});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GiveBack_GetBatchInfoAsync(string strBatchID) {
            this.GiveBack_GetBatchInfoAsync(strBatchID, null);
        }
        
        /// <remarks/>
        public void GiveBack_GetBatchInfoAsync(string strBatchID, object userState) {
            if ((this.GiveBack_GetBatchInfoOperationCompleted == null)) {
                this.GiveBack_GetBatchInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGiveBack_GetBatchInfoOperationCompleted);
            }
            this.InvokeAsync("GiveBack_GetBatchInfo", new object[] {
                        strBatchID}, this.GiveBack_GetBatchInfoOperationCompleted, userState);
        }
        
        private void OnGiveBack_GetBatchInfoOperationCompleted(object arg) {
            if ((this.GiveBack_GetBatchInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GiveBack_GetBatchInfoCompleted(this, new GiveBack_GetBatchInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GiveBack_InputFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GiveBack_InputFile(string strBatchID, string filename, string filepath, string url, out string msg) {
            object[] results = this.Invoke("GiveBack_InputFile", new object[] {
                        strBatchID,
                        filename,
                        filepath,
                        url});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GiveBack_InputFileAsync(string strBatchID, string filename, string filepath, string url) {
            this.GiveBack_InputFileAsync(strBatchID, filename, filepath, url, null);
        }
        
        /// <remarks/>
        public void GiveBack_InputFileAsync(string strBatchID, string filename, string filepath, string url, object userState) {
            if ((this.GiveBack_InputFileOperationCompleted == null)) {
                this.GiveBack_InputFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGiveBack_InputFileOperationCompleted);
            }
            this.InvokeAsync("GiveBack_InputFile", new object[] {
                        strBatchID,
                        filename,
                        filepath,
                        url}, this.GiveBack_InputFileOperationCompleted, userState);
        }
        
        private void OnGiveBack_InputFileOperationCompleted(object arg) {
            if ((this.GiveBack_InputFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GiveBack_InputFileCompleted(this, new GiveBack_InputFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class Finance_Header : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string userPasswordField;
        
        private string userIPField;
        
        private string szKeyField;
        
        private int operIDField;
        
        private string rightStringField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string UserIP {
            get {
                return this.userIPField;
            }
            set {
                this.userIPField = value;
            }
        }
        
        /// <remarks/>
        public string SzKey {
            get {
                return this.szKeyField;
            }
            set {
                this.szKeyField = value;
            }
        }
        
        /// <remarks/>
        public int OperID {
            get {
                return this.operIDField;
            }
            set {
                this.operIDField = value;
            }
        }
        
        /// <remarks/>
        public string RightString {
            get {
                return this.rightStringField;
            }
            set {
                this.rightStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Param {
        
        private string paramNameField;
        
        private string paramValueField;
        
        private string paramFlagField;
        
        /// <remarks/>
        public string ParamName {
            get {
                return this.paramNameField;
            }
            set {
                this.paramNameField = value;
            }
        }
        
        /// <remarks/>
        public string ParamValue {
            get {
                return this.paramValueField;
            }
            set {
                this.paramValueField = value;
            }
        }
        
        /// <remarks/>
        public string ParamFlag {
            get {
                return this.paramFlagField;
            }
            set {
                this.paramFlagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SavePayInfoForRefundCompletedEventHandler(object sender, SavePayInfoForRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePayInfoForRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePayInfoForRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetRefundStateFromPayInfoCompletedEventHandler(object sender, GetRefundStateFromPayInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundStateFromPayInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundStateFromPayInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string DoMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GQWSaveMoneyCompletedEventHandler(object sender, GQWSaveMoneyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GQWSaveMoneyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GQWSaveMoneyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GQWFetchMoneyCompletedEventHandler(object sender, GQWFetchMoneyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GQWFetchMoneyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GQWFetchMoneyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GQWRecoverOperCompletedEventHandler(object sender, GQWRecoverOperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GQWRecoverOperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GQWRecoverOperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetZWDicValueByKeyCompletedEventHandler(object sender, GetZWDicValueByKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZWDicValueByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZWDicValueByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryBankNameCompletedEventHandler(object sender, QueryBankNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FundDispatch_SumCompletedEventHandler(object sender, FundDispatch_SumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FundDispatch_SumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FundDispatch_SumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void pospDispatch_SumCompletedEventHandler(object sender, pospDispatch_SumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pospDispatch_SumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pospDispatch_SumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FundPick_SumCompletedEventHandler(object sender, FundPick_SumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FundPick_SumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FundPick_SumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPayReturn_ReturnTask_10CompletedEventHandler(object sender, BatPayReturn_ReturnTask_10CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPayReturn_ReturnTask_10CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPayReturn_ReturnTask_10CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBatchBankIDCompletedEventHandler(object sender, GetBatchBankIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchBankIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchBankIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FundIntCheckAndSupplementCompletedEventHandler(object sender, FundIntCheckAndSupplementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FundIntCheckAndSupplementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FundIntCheckAndSupplementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPayReturn_FundDispatchToAccountCompletedEventHandler(object sender, BatPayReturn_FundDispatchToAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPayReturn_FundDispatchToAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPayReturn_FundDispatchToAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FundDispatchToAccount_ErrorCompletedEventHandler(object sender, FundDispatchToAccount_ErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FundDispatchToAccount_ErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FundDispatchToAccount_ErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPayReturn_pospDispatchToAccountCompletedEventHandler(object sender, BatPayReturn_pospDispatchToAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPayReturn_pospDispatchToAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPayReturn_pospDispatchToAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void pospDispatchToAccount_ErrorCompletedEventHandler(object sender, pospDispatchToAccount_ErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pospDispatchToAccount_ErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pospDispatchToAccount_ErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFtrueNameByFspidCompletedEventHandler(object sender, GetFtrueNameByFspidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFtrueNameByFspidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFtrueNameByFspidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFundDispatchToAccountCompletedEventHandler(object sender, GetFundDispatchToAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundDispatchToAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundDispatchToAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBatchFundBackDataCompletedEventHandler(object sender, GetBatchFundBackDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchFundBackDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchFundBackDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void updateFRecordState_FundbackCompletedEventHandler(object sender, updateFRecordState_FundbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateFRecordState_FundbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateFRecordState_FundbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFundbackStateCompletedEventHandler(object sender, GetFundbackStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundbackStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundbackStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBatch_FundtaskCompletedEventHandler(object sender, GetBatch_FundtaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatch_FundtaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatch_FundtaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFundBackFnumCompletedEventHandler(object sender, GetFundBackFnumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundBackFnumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundBackFnumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string mesg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string truefsum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void updateBankFum_FundbackCompletedEventHandler(object sender, updateBankFum_FundbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateBankFum_FundbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateBankFum_FundbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadBatchRefundDataCompletedEventHandler(object sender, UploadBatchRefundDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadBatchRefundDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadBatchRefundDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string batchid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartBatchRefundCheckCompletedEventHandler(object sender, StartBatchRefundCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartBatchRefundCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartBatchRefundCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckBatchRefundCompletedEventHandler(object sender, CheckBatchRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBatchRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBatchRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void queryDic_BPServiceCompletedEventHandler(object sender, queryDic_BPServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class queryDic_BPServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal queryDic_BPServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckVPNFileCompletedEventHandler(object sender, CheckVPNFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckVPNFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckVPNFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartSpecialTaskCheckCompletedEventHandler(object sender, StartSpecialTaskCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartSpecialTaskCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartSpecialTaskCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckVPNPayToCorporationFileCompletedEventHandler(object sender, CheckVPNPayToCorporationFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckVPNPayToCorporationFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckVPNPayToCorporationFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBankInforFromKJCompletedEventHandler(object sender, GetBankInforFromKJCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankInforFromKJCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankInforFromKJCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetZCInfoCompletedEventHandler(object sender, GetZCInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZCInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZCInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void POSCheck_InputFileCompletedEventHandler(object sender, POSCheck_InputFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class POSCheck_InputFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal POSCheck_InputFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetCheckProgressCompletedEventHandler(object sender, GetCheckProgressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCheckProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCheckProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateGWQUserStateCompletedEventHandler(object sender, UpdateGWQUserStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGWQUserStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGWQUserStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateGWQFetchMoneyCompletedEventHandler(object sender, UpdateGWQFetchMoneyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGWQFetchMoneyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGWQFetchMoneyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CanDoBatchRefundOperateCompletedEventHandler(object sender, CanDoBatchRefundOperateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanDoBatchRefundOperateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanDoBatchRefundOperateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CanDoBatchPayOperateCompletedEventHandler(object sender, CanDoBatchPayOperateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanDoBatchPayOperateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanDoBatchPayOperateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetVipWhiteListCompletedEventHandler(object sender, GetVipWhiteListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVipWhiteListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVipWhiteListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void VipWhiteListAddCompletedEventHandler(object sender, VipWhiteListAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VipWhiteListAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VipWhiteListAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void VipWhiteListDelCompletedEventHandler(object sender, VipWhiteListDelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VipWhiteListDelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VipWhiteListDelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckBatchRecord_RefundCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadRemitWaterFileForCheckCompletedEventHandler(object sender, UploadRemitWaterFileForCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadRemitWaterFileForCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadRemitWaterFileForCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckRemitWaterCompletedEventHandler(object sender, CheckRemitWaterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckRemitWaterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckRemitWaterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFundRefundStateFromPayInfoCompletedEventHandler(object sender, GetFundRefundStateFromPayInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundRefundStateFromPayInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundRefundStateFromPayInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string DoMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SavePayInfoForFundRefundCompletedEventHandler(object sender, SavePayInfoForFundRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePayInfoForFundRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePayInfoForFundRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPayReturn_ReturnTask_11CompletedEventHandler(object sender, BatPayReturn_ReturnTask_11CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPayReturn_ReturnTask_11CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPayReturn_ReturnTask_11CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBatchPayBankIdCompletedEventHandler(object sender, GetBatchPayBankIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchPayBankIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchPayBankIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsAllGH_9999CompletedEventHandler(object sender, IsAllGH_9999CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAllGH_9999CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAllGH_9999CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsDirectAndCheckCompletedEventHandler(object sender, IsDirectAndCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDirectAndCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDirectAndCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DirectRefundCheck_InputFileCompletedEventHandler(object sender, DirectRefundCheck_InputFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DirectRefundCheck_InputFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DirectRefundCheck_InputFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DirectRefundResult_RefundSuccCompletedEventHandler(object sender, DirectRefundResult_RefundSuccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DirectRefundResult_RefundSuccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DirectRefundResult_RefundSuccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DirectRefundResult_RefundFailCompletedEventHandler(object sender, DirectRefundResult_RefundFailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DirectRefundResult_RefundFailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DirectRefundResult_RefundFailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertBank4BatchCompletedEventHandler(object sender, InsertBank4BatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBank4BatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBank4BatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteBank4BatchCompletedEventHandler(object sender, DeleteBank4BatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBank4BatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBank4BatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DelPayMatchTaskCompletedEventHandler(object sender, DelPayMatchTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelPayMatchTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelPayMatchTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadRefundCompensationDataCompletedEventHandler(object sender, UploadRefundCompensationDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadRefundCompensationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadRefundCompensationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string batchid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartRefundCompensationCheckCompletedEventHandler(object sender, StartRefundCompensationCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartRefundCompensationCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartRefundCompensationCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartKFCZmanualRefundCheckCompletedEventHandler(object sender, StartKFCZmanualRefundCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartKFCZmanualRefundCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartKFCZmanualRefundCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckRefundCompensationCompletedEventHandler(object sender, CheckRefundCompensationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckRefundCompensationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckRefundCompensationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryCheckAndReturnRateCompletedEventHandler(object sender, QueryCheckAndReturnRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCheckAndReturnRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCheckAndReturnRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GiveBack_GetReturnTaskInfoCompletedEventHandler(object sender, GiveBack_GetReturnTaskInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GiveBack_GetReturnTaskInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GiveBack_GetReturnTaskInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckTwoRecord_payCompletedEventHandler(object sender, CheckTwoRecord_payCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTwoRecord_payCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTwoRecord_payCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckBatchRecord_payCompletedEventHandler(object sender, CheckBatchRecord_payCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBatchRecord_payCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBatchRecord_payCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckTwoRecord_AUTOCompletedEventHandler(object sender, CheckTwoRecord_AUTOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTwoRecord_AUTOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTwoRecord_AUTOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int recordcount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateGWQAdvanceFlagCompletedEventHandler(object sender, UpdateGWQAdvanceFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGWQAdvanceFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGWQAdvanceFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetQueryTaskDetail_New_DCompletedEventHandler(object sender, GetQueryTaskDetail_New_DCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryTaskDetail_New_DCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryTaskDetail_New_DCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPayTaskFileDetail_New_DCompletedEventHandler(object sender, GetPayTaskFileDetail_New_DCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayTaskFileDetail_New_DCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayTaskFileDetail_New_DCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAdjustDetailCompletedEventHandler(object sender, GetAdjustDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdjustDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdjustDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBankAccountDataCompletedEventHandler(object sender, GetBankAccountDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankAccountDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankAccountDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBankFundProspectDataCompletedEventHandler(object sender, GetBankFundProspectDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankFundProspectDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankFundProspectDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string chukuandate1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string chukuandate2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string endpaydate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFundProspectDataCompletedEventHandler(object sender, GetFundProspectDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundProspectDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundProspectDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertBankFundProspectDataCompletedEventHandler(object sender, InsertBankFundProspectDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBankFundProspectDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBankFundProspectDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string mesg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateBankFundProspectDataCompletedEventHandler(object sender, UpdateBankFundProspectDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBankFundProspectDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBankFundProspectDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteBankFundProspectDataCompletedEventHandler(object sender, DeleteBankFundProspectDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBankFundProspectDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBankFundProspectDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateFundProspectStateCompletedEventHandler(object sender, UpdateFundProspectStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFundProspectStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFundProspectStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFundProspectPlanByBatchCompletedEventHandler(object sender, GetFundProspectPlanByBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundProspectPlanByBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundProspectPlanByBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFundProspectDataForBatchCompletedEventHandler(object sender, GetFundProspectDataForBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundProspectDataForBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundProspectDataForBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFundProspectDataDetailCountCompletedEventHandler(object sender, GetFundProspectDataDetailCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundProspectDataDetailCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundProspectDataDetailCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFundProspectDataDetailCompletedEventHandler(object sender, GetFundProspectDataDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundProspectDataDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundProspectDataDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public double totalsum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFundProspectPlanCompletedEventHandler(object sender, GetFundProspectPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundProspectPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundProspectPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBankfundProspectByFidCompletedEventHandler(object sender, GetBankfundProspectByFidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankfundProspectByFidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankfundProspectByFidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateRequestProspectCompletedEventHandler(object sender, UpdateRequestProspectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRequestProspectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRequestProspectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string mesg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RequestProspectForBatch_RefuseCompletedEventHandler(object sender, RequestProspectForBatch_RefuseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestProspectForBatch_RefuseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestProspectForBatch_RefuseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string mesg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RequestProspectForBatchCompletedEventHandler(object sender, RequestProspectForBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestProspectForBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestProspectForBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string mesg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDPBankfundprospecCountCompletedEventHandler(object sender, GetDPBankfundprospecCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDPBankfundprospecCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDPBankfundprospecCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDPBankfundprospectCompletedEventHandler(object sender, GetDPBankfundprospectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDPBankfundprospectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDPBankfundprospectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FundprospectStateCompletedEventHandler(object sender, FundprospectStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FundprospectStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FundprospectStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FundprospectCancelCompletedEventHandler(object sender, FundprospectCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FundprospectCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FundprospectCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AutoFundCollectInnerAccountCompletedEventHandler(object sender, AutoFundCollectInnerAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoFundCollectInnerAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoFundCollectInnerAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CommitFundCollectInnerAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void XinHuaSaveZWStateCompletedEventHandler(object sender, XinHuaSaveZWStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XinHuaSaveZWStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XinHuaSaveZWStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckXinHuaOffPayCompletedEventHandler(object sender, CheckXinHuaOffPayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckXinHuaOffPayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckXinHuaOffPayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AutoCheckXinHuaOffPayCompletedEventHandler(object sender, AutoCheckXinHuaOffPayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoCheckXinHuaOffPayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoCheckXinHuaOffPayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AutoStartOutPayRefundCheckCompletedEventHandler(object sender, AutoStartOutPayRefundCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoStartOutPayRefundCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoStartOutPayRefundCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void OutPayRefundCheck_InputFileCompletedEventHandler(object sender, OutPayRefundCheck_InputFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OutPayRefundCheck_InputFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OutPayRefundCheck_InputFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RefundStartByRiskCompletedEventHandler(object sender, RefundStartByRiskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundStartByRiskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundStartByRiskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SendRefundMailCompletedEventHandler(object sender, SendRefundMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendRefundMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendRefundMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryRefundStateCompletedEventHandler(object sender, QueryRefundStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRefundStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryRefundStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryRefundState0CompletedEventHandler(object sender, QueryRefundState0CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRefundState0CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryRefundState0CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SendUnfinishRiskRefundCompletedEventHandler(object sender, SendUnfinishRiskRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendUnfinishRiskRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendUnfinishRiskRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RiskRefundNoticeMailCompletedEventHandler(object sender, RiskRefundNoticeMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RiskRefundNoticeMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RiskRefundNoticeMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatchRefundSingleCheckCompletedEventHandler(object sender, BatchRefundSingleCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchRefundSingleCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchRefundSingleCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatchRefundRequestCompletedEventHandler(object sender, BatchRefundRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchRefundRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchRefundRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatchRefundRejectCompletedEventHandler(object sender, BatchRefundRejectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchRefundRejectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchRefundRejectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatchRefundStartCheckCompletedEventHandler(object sender, BatchRefundStartCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchRefundStartCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchRefundStartCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GiveBack_ReturnDetailCompletedEventHandler(object sender, GiveBack_ReturnDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GiveBack_ReturnDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GiveBack_ReturnDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AdjustToFault_GiveBackCompletedEventHandler(object sender, AdjustToFault_GiveBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustToFault_GiveBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustToFault_GiveBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AdjustToSucc_GiveBackCompletedEventHandler(object sender, AdjustToSucc_GiveBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustToSucc_GiveBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustToSucc_GiveBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsCanUpdateSumNewTask_ZJDBCompletedEventHandler(object sender, IsCanUpdateSumNewTask_ZJDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCanUpdateSumNewTask_ZJDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCanUpdateSumNewTask_ZJDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string updatesumreson {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsUpdateSumNewTask_ZJDBCompletedEventHandler(object sender, IsUpdateSumNewTask_ZJDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUpdateSumNewTask_ZJDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUpdateSumNewTask_ZJDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string updatesumreson {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateSumNewTask_ZJDBCompletedEventHandler(object sender, UpdateSumNewTask_ZJDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSumNewTask_ZJDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSumNewTask_ZJDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateNewTask_ZJDBCompletedEventHandler(object sender, CreateNewTask_ZJDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewTask_ZJDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewTask_ZJDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateNewPayTaskCompletedEventHandler(object sender, CreateNewPayTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewPayTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewPayTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTaskAutoCheckStateCompletedEventHandler(object sender, GetTaskAutoCheckStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskAutoCheckStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskAutoCheckStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertTaskAutoCheckCompletedEventHandler(object sender, InsertTaskAutoCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTaskAutoCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTaskAutoCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateNewRefundOtherTaskCompletedEventHandler(object sender, CreateNewRefundOtherTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewRefundOtherTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewRefundOtherTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetNewTaskCompletedEventHandler(object sender, GetNewTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetNoticeTaskCompletedEventHandler(object sender, GetNoticeTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoticeTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNoticeTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetQueryTaskCompletedEventHandler(object sender, GetQueryTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetQueryTaskDetailCompletedEventHandler(object sender, GetQueryTaskDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryTaskDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryTaskDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetRefundCheckStateCompletedEventHandler(object sender, GetRefundCheckStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundCheckStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundCheckStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetQueryTaskDetail_DCompletedEventHandler(object sender, GetQueryTaskDetail_DCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryTaskDetail_DCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryTaskDetail_DCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HasRightCompletedEventHandler(object sender, HasRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HasRight_DCompletedEventHandler(object sender, HasRight_DCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasRight_DCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasRight_DCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SendSQRefundFileCompletedEventHandler(object sender, SendSQRefundFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSQRefundFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSQRefundFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPayTaskFileDetailCompletedEventHandler(object sender, GetPayTaskFileDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayTaskFileDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayTaskFileDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPayTaskFileFailRateCompletedEventHandler(object sender, GetPayTaskFileFailRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayTaskFileFailRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayTaskFileFailRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CanViewFileCompletedEventHandler(object sender, CanViewFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanViewFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanViewFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPayTaskCheckDetailCompletedEventHandler(object sender, GetPayTaskCheckDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayTaskCheckDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayTaskCheckDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPayTaskCheckDetail_DCompletedEventHandler(object sender, GetPayTaskCheckDetail_DCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayTaskCheckDetail_DCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayTaskCheckDetail_DCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDirectPayTaskDetailCompletedEventHandler(object sender, GetDirectPayTaskDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectPayTaskDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectPayTaskDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDirectPayTaskDetailCountCompletedEventHandler(object sender, GetDirectPayTaskDetailCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectPayTaskDetailCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectPayTaskDetailCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TaskGoNextStatusCompletedEventHandler(object sender, TaskGoNextStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaskGoNextStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaskGoNextStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TaskGoNextStatus_ZJDBCompletedEventHandler(object sender, TaskGoNextStatus_ZJDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaskGoNextStatus_ZJDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaskGoNextStatus_ZJDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void JsonBatchOpBindAppIdCompletedEventHandler(object sender, JsonBatchOpBindAppIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JsonBatchOpBindAppIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JsonBatchOpBindAppIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string messg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFundInterestforwardDataCompletedEventHandler(object sender, GetFundInterestforwardDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundInterestforwardDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundInterestforwardDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GiveBackPayLike3014CompletedEventHandler(object sender, GiveBackPayLike3014CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GiveBackPayLike3014CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GiveBackPayLike3014CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GiveBackReturnLike3014CompletedEventHandler(object sender, GiveBackReturnLike3014CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GiveBackReturnLike3014CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GiveBackReturnLike3014CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreatePayCheckOrResultFileCompletedEventHandler(object sender, CreatePayCheckOrResultFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePayCheckOrResultFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePayCheckOrResultFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetCreditCardCheckBillCompletedEventHandler(object sender, GetCreditCardCheckBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCardCheckBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCardCheckBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFundInterestforwardDataByFProspectIdCompletedEventHandler(object sender, GetFundInterestforwardDataByFProspectIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundInterestforwardDataByFProspectIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundInterestforwardDataByFProspectIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TaskGoBackStatus_ZJDBCompletedEventHandler(object sender, TaskGoBackStatus_ZJDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaskGoBackStatus_ZJDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaskGoBackStatus_ZJDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TaskGoBackStatusCompletedEventHandler(object sender, TaskGoBackStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaskGoBackStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaskGoBackStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TaskGoBackReturnStatusCompletedEventHandler(object sender, TaskGoBackReturnStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaskGoBackReturnStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaskGoBackReturnStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TaskGoNextStatus_DCompletedEventHandler(object sender, TaskGoNextStatus_DCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaskGoNextStatus_DCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaskGoNextStatus_DCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TaskGoBackStatus_DCompletedEventHandler(object sender, TaskGoBackStatus_DCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaskGoBackStatus_DCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaskGoBackStatus_DCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatchDirectPayCompletedEventHandler(object sender, BatchDirectPayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchDirectPayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchDirectPayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TaskCheckTotalInfoCompletedEventHandler(object sender, TaskCheckTotalInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaskCheckTotalInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaskCheckTotalInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void EncodeFileCompletedEventHandler(object sender, EncodeFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncodeFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncodeFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateADirectoryCompletedEventHandler(object sender, CreateADirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateADirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateADirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DecodeFileCompletedEventHandler(object sender, DecodeFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DecodeFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DecodeFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TaskCheckFileInfoCompletedEventHandler(object sender, TaskCheckFileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaskCheckFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaskCheckFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPayTaskChartDetailCompletedEventHandler(object sender, GetPayTaskChartDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayTaskChartDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayTaskChartDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TaskUploadResultFileCompletedEventHandler(object sender, TaskUploadResultFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaskUploadResultFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaskUploadResultFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TaskResultFileInsertCompletedEventHandler(object sender, TaskResultFileInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaskResultFileInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaskResultFileInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBankUserCheckDetailCompletedEventHandler(object sender, GetBankUserCheckDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankUserCheckDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankUserCheckDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBatchStateFromTaskIDCompletedEventHandler(object sender, GetBatchStateFromTaskIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchStateFromTaskIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchStateFromTaskIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ExistNHRefundTaskCompletedEventHandler(object sender, ExistNHRefundTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistNHRefundTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistNHRefundTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartNHAutoRefundCompletedEventHandler(object sender, StartNHAutoRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartNHAutoRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartNHAutoRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReturnRefundStateCompletedEventHandler(object sender, ReturnRefundStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnRefundStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnRefundStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HangRefundFailToOtherCompletedEventHandler(object sender, HangRefundFailToOtherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HangRefundFailToOtherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HangRefundFailToOtherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string insertMemo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AuthorizeRefundBankCompletedEventHandler(object sender, AuthorizeRefundBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthorizeRefundBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthorizeRefundBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PayRefundBankCompletedEventHandler(object sender, PayRefundBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayRefundBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayRefundBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ChangeRefundToFailCompletedEventHandler(object sender, ChangeRefundToFailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeRefundToFailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeRefundToFailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SetBankUserCheckDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllRefundBankCompletedEventHandler(object sender, GetAllRefundBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRefundBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRefundBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void EffectRefundStatusCompletedEventHandler(object sender, EffectRefundStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EffectRefundStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EffectRefundStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void EffectRefundStatus_newCompletedEventHandler(object sender, EffectRefundStatus_newCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EffectRefundStatus_newCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EffectRefundStatus_newCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SetRefundPayInfoCompletedEventHandler(object sender, SetRefundPayInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetRefundPayInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetRefundPayInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string updateMemo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SetRefundParamCompletedEventHandler(object sender, SetRefundParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetRefundParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetRefundParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string updateMemo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveRefundParamCompletedEventHandler(object sender, SaveRefundParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRefundParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveRefundParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string updateMemo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SQSLike3113BankTypeCompletedEventHandler(object sender, SQSLike3113BankTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SQSLike3113BankTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SQSLike3113BankTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CanAdjustRefundRecordCompletedEventHandler(object sender, CanAdjustRefundRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanAdjustRefundRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanAdjustRefundRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatchAdjustRefundRecordCompletedEventHandler(object sender, BatchAdjustRefundRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchAdjustRefundRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchAdjustRefundRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CanStartRefundOtherCheckCompletedEventHandler(object sender, CanStartRefundOtherCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanStartRefundOtherCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanStartRefundOtherCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string bankType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckDataForUploadCompletedEventHandler(object sender, CheckDataForUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDataForUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDataForUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string bankType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadICBCParamDataCompletedEventHandler(object sender, UploadICBCParamDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadICBCParamDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadICBCParamDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string operMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadICBCPayInfoCompletedEventHandler(object sender, UploadICBCPayInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadICBCPayInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadICBCPayInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string operMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartRefundOtherCheckCompletedEventHandler(object sender, StartRefundOtherCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartRefundOtherCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartRefundOtherCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartRefundOtherCheckNewCompletedEventHandler(object sender, StartRefundOtherCheckNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartRefundOtherCheckNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartRefundOtherCheckNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AdjustRefundRecordProxyCompletedEventHandler(object sender, AdjustRefundRecordProxyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustRefundRecordProxyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustRefundRecordProxyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AdjustRefundRecordCompletedEventHandler(object sender, AdjustRefundRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustRefundRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustRefundRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AdjustRefundRecord_newCompletedEventHandler(object sender, AdjustRefundRecord_newCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustRefundRecord_newCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustRefundRecord_newCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void WS_Adjust_ICBC_TaskCompletedEventHandler(object sender, WS_Adjust_ICBC_TaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_Adjust_ICBC_TaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_Adjust_ICBC_TaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadFileCountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReadFileCountCompletedEventHandler(object sender, ReadFileCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadFileCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadFileCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DownFileCountCompletedEventHandler(object sender, DownFileCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownFileCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownFileCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RefreshBatchInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartDoTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMerchantPayMemoCompletedEventHandler(object sender, GetMerchantPayMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMerchantPayMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMerchantPayMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MerchantPayMemoAttAddCompletedEventHandler(object sender, MerchantPayMemoAttAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MerchantPayMemoAttAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MerchantPayMemoAttAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MerchantPayMemoModifyCompletedEventHandler(object sender, MerchantPayMemoModifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MerchantPayMemoModifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MerchantPayMemoModifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MerchantPayMemoDelCompletedEventHandler(object sender, MerchantPayMemoDelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MerchantPayMemoDelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MerchantPayMemoDelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Batch_ReturnTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetXYKConnCompletedEventHandler(object sender, GetXYKConnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXYKConnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXYKConnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TaskCheckFile_VPNCompletedEventHandler(object sender, TaskCheckFile_VPNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaskCheckFile_VPNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaskCheckFile_VPNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadBatchTransferDataCompletedEventHandler(object sender, UploadBatchTransferDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadBatchTransferDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadBatchTransferDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string batchid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartBatchTransferCheckCompletedEventHandler(object sender, StartBatchTransferCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartBatchTransferCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartBatchTransferCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckBatchC2CTransferCompletedEventHandler(object sender, CheckBatchC2CTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBatchC2CTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBatchC2CTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadHONGBAODataCompletedEventHandler(object sender, UploadHONGBAODataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadHONGBAODataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadHONGBAODataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string batchid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartHONGBAOCheckCompletedEventHandler(object sender, StartHONGBAOCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartHONGBAOCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartHONGBAOCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckHONGBAOCompletedEventHandler(object sender, CheckHONGBAOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckHONGBAOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckHONGBAOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateRefundOtherMemoCompletedEventHandler(object sender, UpdateRefundOtherMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRefundOtherMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRefundOtherMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateRefundInfoCompletedEventHandler(object sender, UpdateRefundInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRefundInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRefundInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SumGiveBack4PayCompletedEventHandler(object sender, SumGiveBack4PayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SumGiveBack4PayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SumGiveBack4PayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckReturnticketCompletedEventHandler(object sender, CheckReturnticketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckReturnticketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckReturnticketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadReturnTicketFileForCheckCompletedEventHandler(object sender, UploadReturnTicketFileForCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadReturnTicketFileForCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadReturnTicketFileForCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadBatchLogOnUserCompletedEventHandler(object sender, UploadBatchLogOnUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadBatchLogOnUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadBatchLogOnUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string operMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatchLogOnUser_DetailCompletedEventHandler(object sender, BatchLogOnUser_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchLogOnUser_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchLogOnUser_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void WS_IsBatchCheckedCompletedEventHandler(object sender, WS_IsBatchCheckedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_IsBatchCheckedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_IsBatchCheckedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void XYK_IsBatchCheckedCompletedEventHandler(object sender, XYK_IsBatchCheckedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XYK_IsBatchCheckedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XYK_IsBatchCheckedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void WS_IcbcCheckRecCompletedEventHandler(object sender, WS_IcbcCheckRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_IcbcCheckRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_IcbcCheckRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void WS_CheckAllRecCompletedEventHandler(object sender, WS_CheckAllRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_CheckAllRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_CheckAllRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void WS_UploadTaskCompletedEventHandler(object sender, WS_UploadTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_UploadTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_UploadTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void WS_QueryTaskCompletedEventHandler(object sender, WS_QueryTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_QueryTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_QueryTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void WS_CanCheckCompletedEventHandler(object sender, WS_CanCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_CanCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_CanCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void XYK_CanCheckCompletedEventHandler(object sender, XYK_CanCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XYK_CanCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XYK_CanCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Tplus0_CanCheckCompletedEventHandler(object sender, Tplus0_CanCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Tplus0_CanCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Tplus0_CanCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Payfund_CanCheckCompletedEventHandler(object sender, Payfund_CanCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Payfund_CanCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Payfund_CanCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void WS_CanAdjustCompletedEventHandler(object sender, WS_CanAdjustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_CanAdjustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_CanAdjustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void WS_CanUploadTaskCompletedEventHandler(object sender, WS_CanUploadTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_CanUploadTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_CanUploadTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void WS_CanQueryTaskCompletedEventHandler(object sender, WS_CanQueryTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_CanQueryTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_CanQueryTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void WS_Adjust2SuccessCompletedEventHandler(object sender, WS_Adjust2SuccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_Adjust2SuccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_Adjust2SuccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void WS_CanPassCompletedEventHandler(object sender, WS_CanPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WS_CanPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WS_CanPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void WS_ModifyRefuseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_InitGridCompletedEventHandler(object sender, BatPay_InitGridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_InitGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_InitGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_InitGrid_BCompletedEventHandler(object sender, BatPay_InitGrid_BCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_InitGrid_BCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_InitGrid_BCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_InitGrid_VCompletedEventHandler(object sender, BatPay_InitGrid_VCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_InitGrid_VCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_InitGrid_VCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_InitGrid_OCompletedEventHandler(object sender, BatPay_InitGrid_OCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_InitGrid_OCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_InitGrid_OCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_InitGrid_XCompletedEventHandler(object sender, BatPay_InitGrid_XCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_InitGrid_XCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_InitGrid_XCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_InitGrid_FCompletedEventHandler(object sender, BatPay_InitGrid_FCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_InitGrid_FCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_InitGrid_FCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_InitGrid_PCompletedEventHandler(object sender, BatPay_InitGrid_PCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_InitGrid_PCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_InitGrid_PCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_InitGrid_RCompletedEventHandler(object sender, BatPay_InitGrid_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_InitGrid_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_InitGrid_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RefundOther_InitGrid_RCompletedEventHandler(object sender, RefundOther_InitGrid_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundOther_InitGrid_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundOther_InitGrid_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_CanVisibleCompletedEventHandler(object sender, BatPay_CanVisibleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CanVisibleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CanVisibleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_CanVisible_BCompletedEventHandler(object sender, BatPay_CanVisible_BCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CanVisible_BCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CanVisible_BCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_CanVisible_VCompletedEventHandler(object sender, BatPay_CanVisible_VCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CanVisible_VCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CanVisible_VCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_CanVisible_RCompletedEventHandler(object sender, BatPay_CanVisible_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CanVisible_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CanVisible_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_GetErrorMsgCompletedEventHandler(object sender, BatPay_GetErrorMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_GetErrorMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_GetErrorMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_SixCheckCompletedEventHandler(object sender, BatPay_SixCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_SixCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_SixCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_CheckSnapFinishCompletedEventHandler(object sender, BatPay_CheckSnapFinishCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CheckSnapFinishCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CheckSnapFinishCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_CheckTaskFinishCompletedEventHandler(object sender, BatPay_CheckTaskFinishCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CheckTaskFinishCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CheckTaskFinishCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_CheckFinish11CompletedEventHandler(object sender, BatPay_CheckFinish11CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CheckFinish11CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CheckFinish11CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_CheckBankFinishCompletedEventHandler(object sender, BatPay_CheckBankFinishCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CheckBankFinishCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CheckBankFinishCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_CanReturnTask_SameCheckCompletedEventHandler(object sender, BatPay_CanReturnTask_SameCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CanReturnTask_SameCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CanReturnTask_SameCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPay_CanReturnTaskCompletedEventHandler(object sender, BatPay_CanReturnTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPay_CanReturnTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPay_CanReturnTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPayReturn_ShowButtonCompletedEventHandler(object sender, BatPayReturn_ShowButtonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPayReturn_ShowButtonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPayReturn_ShowButtonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPayReturn_ShowButton_RCompletedEventHandler(object sender, BatPayReturn_ShowButton_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPayReturn_ShowButton_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPayReturn_ShowButton_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdatetbatchpayasknewStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPayReturn_ShowDataCompletedEventHandler(object sender, BatPayReturn_ShowDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPayReturn_ShowDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPayReturn_ShowDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPayReturn_ShowData_RCompletedEventHandler(object sender, BatPayReturn_ShowData_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatPayReturn_ShowData_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatPayReturn_ShowData_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RefundOther_ShowDataCompletedEventHandler(object sender, RefundOther_ShowDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundOther_ShowDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundOther_ShowDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BatPayReturn_CreateReturnTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FileList_RefreshDataCompletedEventHandler(object sender, FileList_RefreshDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileList_RefreshDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileList_RefreshDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReverseAdjust_GetTdeIDCompletedEventHandler(object sender, ReverseAdjust_GetTdeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverseAdjust_GetTdeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReverseAdjust_GetTdeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ShowDetail_GetCountCompletedEventHandler(object sender, ShowDetail_GetCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowDetail_GetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowDetail_GetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReturnTicket_BindDataCompletedEventHandler(object sender, ReturnTicket_BindDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnTicket_BindDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnTicket_BindDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReturnTicket_BindData_FileCompletedEventHandler(object sender, ReturnTicket_BindData_FileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnTicket_BindData_FileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnTicket_BindData_FileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartReturnTicket_FileCompletedEventHandler(object sender, StartReturnTicket_FileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartReturnTicket_FileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartReturnTicket_FileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ShowDetail_BindDataCompletedEventHandler(object sender, ShowDetail_BindDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowDetail_BindDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowDetail_BindDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankIO_GetFileListCompletedEventHandler(object sender, BankIO_GetFileListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankIO_GetFileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankIO_GetFileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankIO_CreateAllFileCompletedEventHandler(object sender, BankIO_CreateAllFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankIO_CreateAllFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankIO_CreateAllFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankIO_CreateAllFile_RCompletedEventHandler(object sender, BankIO_CreateAllFile_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankIO_CreateAllFile_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankIO_CreateAllFile_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankRefundIO_CreateAllFile_OtherCompletedEventHandler(object sender, BankRefundIO_CreateAllFile_OtherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankRefundIO_CreateAllFile_OtherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankRefundIO_CreateAllFile_OtherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankIO_InputFileCompletedEventHandler(object sender, BankIO_InputFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankIO_InputFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankIO_InputFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertHandleRecordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertHandleRecordXCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateBatchStatusCompletedEventHandler(object sender, UpdateBatchStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBatchStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBatchStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetCurrPhaseUserCompletedEventHandler(object sender, GetCurrPhaseUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrPhaseUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrPhaseUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPhaseNameCompletedEventHandler(object sender, GetPhaseNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPhaseNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPhaseNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankRoll_UploadCancelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankRoll_UploadCancel_ChargeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBankFuncUserCompletedEventHandler(object sender, GetBankFuncUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankFuncUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankFuncUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFuncAllBankCompletedEventHandler(object sender, GetFuncAllBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFuncAllBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFuncAllBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateFuncUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllPhaseTypeCompletedEventHandler(object sender, GetAllPhaseTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPhaseTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPhaseTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AdjustToFaultCompletedEventHandler(object sender, AdjustToFaultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustToFaultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustToFaultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AdjustToFault_HangCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AdjustToSuccessCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CanStartAdjustCompletedEventHandler(object sender, CanStartAdjustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanStartAdjustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanStartAdjustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CanStartAdjust_RCompletedEventHandler(object sender, CanStartAdjust_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanStartAdjust_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanStartAdjust_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CanStartTask_RCompletedEventHandler(object sender, CanStartTask_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanStartTask_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanStartTask_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckSpmRefundCompletedEventHandler(object sender, CheckSpmRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSpmRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSpmRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string outmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartCreateTask_RCompletedEventHandler(object sender, StartCreateTask_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartCreateTask_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartCreateTask_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CanStartHangDataCompletedEventHandler(object sender, CanStartHangDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanStartHangDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanStartHangDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateHandleResultCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateToFinishCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckTwoRecordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckTwoRecord_SubaccCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SpiltBankOrderCompletedEventHandler(object sender, SpiltBankOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpiltBankOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpiltBankOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string mesg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AutoCheckTwoRecordCompletedEventHandler(object sender, AutoCheckTwoRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoCheckTwoRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoCheckTwoRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AutoCheckTwoRecord_SubaccCompletedEventHandler(object sender, AutoCheckTwoRecord_SubaccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoCheckTwoRecord_SubaccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoCheckTwoRecord_SubaccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckBatchRecordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ShowBatpayMainBtCompletedEventHandler(object sender, ShowBatpayMainBtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowBatpayMainBtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowBatpayMainBtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ShowBatpayMainBt_BCompletedEventHandler(object sender, ShowBatpayMainBt_BCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowBatpayMainBt_BCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowBatpayMainBt_BCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ShowBatpayMainBt_VCompletedEventHandler(object sender, ShowBatpayMainBt_VCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowBatpayMainBt_VCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowBatpayMainBt_VCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ShowBatpayMainBt_OCompletedEventHandler(object sender, ShowBatpayMainBt_OCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowBatpayMainBt_OCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowBatpayMainBt_OCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ShowBatpayMainBt_RCompletedEventHandler(object sender, ShowBatpayMainBt_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowBatpayMainBt_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowBatpayMainBt_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBankIDFromBatchNoCompletedEventHandler(object sender, GetBankIDFromBatchNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankIDFromBatchNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankIDFromBatchNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankIO_CreatePayTaskCompletedEventHandler(object sender, BankIO_CreatePayTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankIO_CreatePayTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankIO_CreatePayTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankIO_CreatePayTask_RCompletedEventHandler(object sender, BankIO_CreatePayTask_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankIO_CreatePayTask_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankIO_CreatePayTask_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateRefundTask_OtherCompletedEventHandler(object sender, CreateRefundTask_OtherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRefundTask_OtherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRefundTask_OtherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankIO_InputFirstFinishCompletedEventHandler(object sender, BankIO_InputFirstFinishCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankIO_InputFirstFinishCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankIO_InputFirstFinishCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankIO_InputSecondFinishCompletedEventHandler(object sender, BankIO_InputSecondFinishCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankIO_InputSecondFinishCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankIO_InputSecondFinishCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankIO_PayTaskFinishCompletedEventHandler(object sender, BankIO_PayTaskFinishCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankIO_PayTaskFinishCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankIO_PayTaskFinishCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CanRollBackPayTaskCompletedEventHandler(object sender, CanRollBackPayTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanRollBackPayTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanRollBackPayTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankIO_UploadCancelCompletedEventHandler(object sender, BankIO_UploadCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankIO_UploadCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankIO_UploadCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankIO_PayTaskCancelCompletedEventHandler(object sender, BankIO_PayTaskCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankIO_PayTaskCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankIO_PayTaskCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RefundOther_PayTaskCancelCompletedEventHandler(object sender, RefundOther_PayTaskCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundOther_PayTaskCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundOther_PayTaskCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BankIO_HandleExceptionDataCompletedEventHandler(object sender, BankIO_HandleExceptionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankIO_HandleExceptionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankIO_HandleExceptionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReturnTicketDetail_BindDataCompletedEventHandler(object sender, ReturnTicketDetail_BindDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnTicketDetail_BindDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnTicketDetail_BindDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPayTaskDetailCompletedEventHandler(object sender, GetPayTaskDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayTaskDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayTaskDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TokenHang_ReverseHandleCompletedEventHandler(object sender, TokenHang_ReverseHandleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TokenHang_ReverseHandleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TokenHang_ReverseHandleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HaoYe_UploadFileCompletedEventHandler(object sender, HaoYe_UploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HaoYe_UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HaoYe_UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string batchid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HaoYe_CanStartCheckCompletedEventHandler(object sender, HaoYe_CanStartCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HaoYe_CanStartCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HaoYe_CanStartCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HaoYe_GetMondyCompletedEventHandler(object sender, HaoYe_GetMondyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HaoYe_GetMondyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HaoYe_GetMondyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HaoYe_GetBatchListCompletedEventHandler(object sender, HaoYe_GetBatchListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HaoYe_GetBatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HaoYe_GetBatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HaoYe_GetAllBatchListCompletedEventHandler(object sender, HaoYe_GetAllBatchListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HaoYe_GetAllBatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HaoYe_GetAllBatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateMedFileCompletedEventHandler(object sender, CreateMedFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMedFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMedFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] filelist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPayStateCompletedEventHandler(object sender, GetPayStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Param[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Param[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPayState_RCompletedEventHandler(object sender, GetPayState_RCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayState_RCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayState_RCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Param[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Param[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetRefundState_OtherCompletedEventHandler(object sender, GetRefundState_OtherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundState_OtherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundState_OtherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Param[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Param[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadReturnTicketFileCompletedEventHandler(object sender, UploadReturnTicketFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadReturnTicketFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadReturnTicketFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dess {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPayBankCountsCompletedEventHandler(object sender, GetPayBankCountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayBankCountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayBankCountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Param[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Param[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPackageCountsCompletedEventHandler(object sender, GetPackageCountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageCountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageCountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBankCountsCompletedEventHandler(object sender, GetBankCountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankCountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankCountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SetPackageBankTypeCompletedEventHandler(object sender, SetPackageBankTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPackageBankTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPackageBankTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SetBankBankTypeCompletedEventHandler(object sender, SetBankBankTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetBankBankTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetBankBankTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GiveBack_GetBatchInfoCompletedEventHandler(object sender, GiveBack_GetBatchInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GiveBack_GetBatchInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GiveBack_GetBatchInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GiveBack_InputFileCompletedEventHandler(object sender, GiveBack_InputFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GiveBack_InputFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GiveBack_InputFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591