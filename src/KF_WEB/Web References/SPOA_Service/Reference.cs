//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
// 
#pragma warning disable 1591

namespace TENCENT.OSS.CFT.KF.KF_Web.SPOA_Service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SPOA_ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class SPOA_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsStandardBarginOperationCompleted;
        
        private System.Threading.SendOrPostCallback MCHDetailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMerInfoForOverseaCardOMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTradePropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback WXModifyTradePropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyTradePropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestForSpoaOperationCompleted;
        
        private System.Threading.SendOrPostCallback FreezeSPOperationCompleted;
        
        private System.Threading.SendOrPostCallback LostOfSpidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClosePayOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenPayOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseAgencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenAgencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreOfSpidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExpelSPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetspidInfoSelfHelpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetspidInfoAgencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback MerchantHelperOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplyCpInfoXOperationCompleted;
        
        private System.Threading.SendOrPostCallback MerchantDataSyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFlatSPOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAgencyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAgencyApplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllt_mod_desOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBargainInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SPOA_Service() {
            this.Url = global::TENCENT.OSS.CFT.KF.KF_Web.Properties.Settings.Default.finance_web_SPOA_Service_SPOA_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPDFCompletedEventHandler GetPDFCompleted;
        
        /// <remarks/>
        public event IsStandardBarginCompletedEventHandler IsStandardBarginCompleted;
        
        /// <remarks/>
        public event MCHDetailAddressCompletedEventHandler MCHDetailAddressCompleted;
        
        /// <remarks/>
        public event GetMerInfoForOverseaCardOMSCompletedEventHandler GetMerInfoForOverseaCardOMSCompleted;
        
        /// <remarks/>
        public event QueryTradePropertyCompletedEventHandler QueryTradePropertyCompleted;
        
        /// <remarks/>
        public event WXModifyTradePropertyCompletedEventHandler WXModifyTradePropertyCompleted;
        
        /// <remarks/>
        public event ModifyTradePropertyCompletedEventHandler ModifyTradePropertyCompleted;
        
        /// <remarks/>
        public event TestForSpoaCompletedEventHandler TestForSpoaCompleted;
        
        /// <remarks/>
        public event FreezeSPCompletedEventHandler FreezeSPCompleted;
        
        /// <remarks/>
        public event LostOfSpidCompletedEventHandler LostOfSpidCompleted;
        
        /// <remarks/>
        public event ClosePayCompletedEventHandler ClosePayCompleted;
        
        /// <remarks/>
        public event OpenPayCompletedEventHandler OpenPayCompleted;
        
        /// <remarks/>
        public event CloseRefundCompletedEventHandler CloseRefundCompleted;
        
        /// <remarks/>
        public event OpenRefundCompletedEventHandler OpenRefundCompleted;
        
        /// <remarks/>
        public event CloseAgencyCompletedEventHandler CloseAgencyCompleted;
        
        /// <remarks/>
        public event OpenAgencyCompletedEventHandler OpenAgencyCompleted;
        
        /// <remarks/>
        public event RestoreOfSpidCompletedEventHandler RestoreOfSpidCompleted;
        
        /// <remarks/>
        public event ExpelSPCompletedEventHandler ExpelSPCompleted;
        
        /// <remarks/>
        public event GetspidInfoSelfHelpCompletedEventHandler GetspidInfoSelfHelpCompleted;
        
        /// <remarks/>
        public event GetspidInfoAgencyCompletedEventHandler GetspidInfoAgencyCompleted;
        
        /// <remarks/>
        public event MerchantHelperCompletedEventHandler MerchantHelperCompleted;
        
        /// <remarks/>
        public event GetApplyCpInfoXCompletedEventHandler GetApplyCpInfoXCompleted;
        
        /// <remarks/>
        public event MerchantDataSyncCompletedEventHandler MerchantDataSyncCompleted;
        
        /// <remarks/>
        public event SendFlatSPCompletedEventHandler SendFlatSPCompleted;
        
        /// <remarks/>
        public event InsertAgencyDataCompletedEventHandler InsertAgencyDataCompleted;
        
        /// <remarks/>
        public event InsertAgencyApplyCompletedEventHandler InsertAgencyApplyCompleted;
        
        /// <remarks/>
        public event GetAllt_mod_desCompletedEventHandler GetAllt_mod_desCompleted;
        
        /// <remarks/>
        public event InsertBargainInfoCompletedEventHandler InsertBargainInfoCompleted;
        
        /// <remarks/>
        public event SendMailCompletedEventHandler SendMailCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPDF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPDF(string spid, out long length, out string msg) {
            object[] results = this.Invoke("GetPDF", new object[] {
                        spid});
            length = ((long)(results[1]));
            msg = ((string)(results[2]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPDF(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPDF", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetPDF(System.IAsyncResult asyncResult, out long length, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            length = ((long)(results[1]));
            msg = ((string)(results[2]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPDFAsync(string spid) {
            this.GetPDFAsync(spid, null);
        }
        
        /// <remarks/>
        public void GetPDFAsync(string spid, object userState) {
            if ((this.GetPDFOperationCompleted == null)) {
                this.GetPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPDFOperationCompleted);
            }
            this.InvokeAsync("GetPDF", new object[] {
                        spid}, this.GetPDFOperationCompleted, userState);
        }
        
        private void OnGetPDFOperationCompleted(object arg) {
            if ((this.GetPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPDFCompleted(this, new GetPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsStandardBargin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsStandardBargin(string spid, out string type, out string msg) {
            object[] results = this.Invoke("IsStandardBargin", new object[] {
                        spid});
            type = ((string)(results[1]));
            msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsStandardBargin(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsStandardBargin", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsStandardBargin(System.IAsyncResult asyncResult, out string type, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            type = ((string)(results[1]));
            msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsStandardBarginAsync(string spid) {
            this.IsStandardBarginAsync(spid, null);
        }
        
        /// <remarks/>
        public void IsStandardBarginAsync(string spid, object userState) {
            if ((this.IsStandardBarginOperationCompleted == null)) {
                this.IsStandardBarginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsStandardBarginOperationCompleted);
            }
            this.InvokeAsync("IsStandardBargin", new object[] {
                        spid}, this.IsStandardBarginOperationCompleted, userState);
        }
        
        private void OnIsStandardBarginOperationCompleted(object arg) {
            if ((this.IsStandardBarginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsStandardBarginCompleted(this, new IsStandardBarginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MCHDetailAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("msg")]
        public string MCHDetailAddress(string spid, bool isModify, ref string address) {
            object[] results = this.Invoke("MCHDetailAddress", new object[] {
                        spid,
                        isModify,
                        address});
            address = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMCHDetailAddress(string spid, bool isModify, string address, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MCHDetailAddress", new object[] {
                        spid,
                        isModify,
                        address}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndMCHDetailAddress(System.IAsyncResult asyncResult, out string address) {
            object[] results = this.EndInvoke(asyncResult);
            address = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MCHDetailAddressAsync(string spid, bool isModify, string address) {
            this.MCHDetailAddressAsync(spid, isModify, address, null);
        }
        
        /// <remarks/>
        public void MCHDetailAddressAsync(string spid, bool isModify, string address, object userState) {
            if ((this.MCHDetailAddressOperationCompleted == null)) {
                this.MCHDetailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMCHDetailAddressOperationCompleted);
            }
            this.InvokeAsync("MCHDetailAddress", new object[] {
                        spid,
                        isModify,
                        address}, this.MCHDetailAddressOperationCompleted, userState);
        }
        
        private void OnMCHDetailAddressOperationCompleted(object arg) {
            if ((this.MCHDetailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MCHDetailAddressCompleted(this, new MCHDetailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMerInfoForOverseaCardOMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMerInfoForOverseaCardOMS(string merchantId) {
            object[] results = this.Invoke("GetMerInfoForOverseaCardOMS", new object[] {
                        merchantId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMerInfoForOverseaCardOMS(string merchantId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMerInfoForOverseaCardOMS", new object[] {
                        merchantId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetMerInfoForOverseaCardOMS(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMerInfoForOverseaCardOMSAsync(string merchantId) {
            this.GetMerInfoForOverseaCardOMSAsync(merchantId, null);
        }
        
        /// <remarks/>
        public void GetMerInfoForOverseaCardOMSAsync(string merchantId, object userState) {
            if ((this.GetMerInfoForOverseaCardOMSOperationCompleted == null)) {
                this.GetMerInfoForOverseaCardOMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMerInfoForOverseaCardOMSOperationCompleted);
            }
            this.InvokeAsync("GetMerInfoForOverseaCardOMS", new object[] {
                        merchantId}, this.GetMerInfoForOverseaCardOMSOperationCompleted, userState);
        }
        
        private void OnGetMerInfoForOverseaCardOMSOperationCompleted(object arg) {
            if ((this.GetMerInfoForOverseaCardOMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMerInfoForOverseaCardOMSCompleted(this, new GetMerInfoForOverseaCardOMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryTradeProperty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryTradeProperty(string spid) {
            object[] results = this.Invoke("QueryTradeProperty", new object[] {
                        spid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTradeProperty(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTradeProperty", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndQueryTradeProperty(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTradePropertyAsync(string spid) {
            this.QueryTradePropertyAsync(spid, null);
        }
        
        /// <remarks/>
        public void QueryTradePropertyAsync(string spid, object userState) {
            if ((this.QueryTradePropertyOperationCompleted == null)) {
                this.QueryTradePropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTradePropertyOperationCompleted);
            }
            this.InvokeAsync("QueryTradeProperty", new object[] {
                        spid}, this.QueryTradePropertyOperationCompleted, userState);
        }
        
        private void OnQueryTradePropertyOperationCompleted(object arg) {
            if ((this.QueryTradePropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTradePropertyCompleted(this, new QueryTradePropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WXModifyTradeProperty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WXModifyTradeProperty(string spid) {
            object[] results = this.Invoke("WXModifyTradeProperty", new object[] {
                        spid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWXModifyTradeProperty(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WXModifyTradeProperty", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndWXModifyTradeProperty(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WXModifyTradePropertyAsync(string spid) {
            this.WXModifyTradePropertyAsync(spid, null);
        }
        
        /// <remarks/>
        public void WXModifyTradePropertyAsync(string spid, object userState) {
            if ((this.WXModifyTradePropertyOperationCompleted == null)) {
                this.WXModifyTradePropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWXModifyTradePropertyOperationCompleted);
            }
            this.InvokeAsync("WXModifyTradeProperty", new object[] {
                        spid}, this.WXModifyTradePropertyOperationCompleted, userState);
        }
        
        private void OnWXModifyTradePropertyOperationCompleted(object arg) {
            if ((this.WXModifyTradePropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WXModifyTradePropertyCompleted(this, new WXModifyTradePropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyTradeProperty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ModifyTradeProperty(string spid, string item_type) {
            object[] results = this.Invoke("ModifyTradeProperty", new object[] {
                        spid,
                        item_type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginModifyTradeProperty(string spid, string item_type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ModifyTradeProperty", new object[] {
                        spid,
                        item_type}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndModifyTradeProperty(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyTradePropertyAsync(string spid, string item_type) {
            this.ModifyTradePropertyAsync(spid, item_type, null);
        }
        
        /// <remarks/>
        public void ModifyTradePropertyAsync(string spid, string item_type, object userState) {
            if ((this.ModifyTradePropertyOperationCompleted == null)) {
                this.ModifyTradePropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyTradePropertyOperationCompleted);
            }
            this.InvokeAsync("ModifyTradeProperty", new object[] {
                        spid,
                        item_type}, this.ModifyTradePropertyOperationCompleted, userState);
        }
        
        private void OnModifyTradePropertyOperationCompleted(object arg) {
            if ((this.ModifyTradePropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyTradePropertyCompleted(this, new ModifyTradePropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestForSpoa", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestForSpoa(string spid, string key) {
            object[] results = this.Invoke("TestForSpoa", new object[] {
                        spid,
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTestForSpoa(string spid, string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TestForSpoa", new object[] {
                        spid,
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndTestForSpoa(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestForSpoaAsync(string spid, string key) {
            this.TestForSpoaAsync(spid, key, null);
        }
        
        /// <remarks/>
        public void TestForSpoaAsync(string spid, string key, object userState) {
            if ((this.TestForSpoaOperationCompleted == null)) {
                this.TestForSpoaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestForSpoaOperationCompleted);
            }
            this.InvokeAsync("TestForSpoa", new object[] {
                        spid,
                        key}, this.TestForSpoaOperationCompleted, userState);
        }
        
        private void OnTestForSpoaOperationCompleted(object arg) {
            if ((this.TestForSpoaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestForSpoaCompleted(this, new TestForSpoaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FreezeSP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FreezeSP(string spid, string reason, string oprator) {
            object[] results = this.Invoke("FreezeSP", new object[] {
                        spid,
                        reason,
                        oprator});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFreezeSP(string spid, string reason, string oprator, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FreezeSP", new object[] {
                        spid,
                        reason,
                        oprator}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndFreezeSP(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FreezeSPAsync(string spid, string reason, string oprator) {
            this.FreezeSPAsync(spid, reason, oprator, null);
        }
        
        /// <remarks/>
        public void FreezeSPAsync(string spid, string reason, string oprator, object userState) {
            if ((this.FreezeSPOperationCompleted == null)) {
                this.FreezeSPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFreezeSPOperationCompleted);
            }
            this.InvokeAsync("FreezeSP", new object[] {
                        spid,
                        reason,
                        oprator}, this.FreezeSPOperationCompleted, userState);
        }
        
        private void OnFreezeSPOperationCompleted(object arg) {
            if ((this.FreezeSPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FreezeSPCompleted(this, new FreezeSPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LostOfSpid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LostOfSpid(string fspid, string opuser, string freson) {
            object[] results = this.Invoke("LostOfSpid", new object[] {
                        fspid,
                        opuser,
                        freson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLostOfSpid(string fspid, string opuser, string freson, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LostOfSpid", new object[] {
                        fspid,
                        opuser,
                        freson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLostOfSpid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LostOfSpidAsync(string fspid, string opuser, string freson) {
            this.LostOfSpidAsync(fspid, opuser, freson, null);
        }
        
        /// <remarks/>
        public void LostOfSpidAsync(string fspid, string opuser, string freson, object userState) {
            if ((this.LostOfSpidOperationCompleted == null)) {
                this.LostOfSpidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLostOfSpidOperationCompleted);
            }
            this.InvokeAsync("LostOfSpid", new object[] {
                        fspid,
                        opuser,
                        freson}, this.LostOfSpidOperationCompleted, userState);
        }
        
        private void OnLostOfSpidOperationCompleted(object arg) {
            if ((this.LostOfSpidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LostOfSpidCompleted(this, new LostOfSpidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClosePay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClosePay(string fspid, string opuser, string freson) {
            object[] results = this.Invoke("ClosePay", new object[] {
                        fspid,
                        opuser,
                        freson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginClosePay(string fspid, string opuser, string freson, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ClosePay", new object[] {
                        fspid,
                        opuser,
                        freson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndClosePay(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClosePayAsync(string fspid, string opuser, string freson) {
            this.ClosePayAsync(fspid, opuser, freson, null);
        }
        
        /// <remarks/>
        public void ClosePayAsync(string fspid, string opuser, string freson, object userState) {
            if ((this.ClosePayOperationCompleted == null)) {
                this.ClosePayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClosePayOperationCompleted);
            }
            this.InvokeAsync("ClosePay", new object[] {
                        fspid,
                        opuser,
                        freson}, this.ClosePayOperationCompleted, userState);
        }
        
        private void OnClosePayOperationCompleted(object arg) {
            if ((this.ClosePayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClosePayCompleted(this, new ClosePayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OpenPay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OpenPay(string fspid, string opuser, string freson) {
            object[] results = this.Invoke("OpenPay", new object[] {
                        fspid,
                        opuser,
                        freson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOpenPay(string fspid, string opuser, string freson, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OpenPay", new object[] {
                        fspid,
                        opuser,
                        freson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndOpenPay(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OpenPayAsync(string fspid, string opuser, string freson) {
            this.OpenPayAsync(fspid, opuser, freson, null);
        }
        
        /// <remarks/>
        public void OpenPayAsync(string fspid, string opuser, string freson, object userState) {
            if ((this.OpenPayOperationCompleted == null)) {
                this.OpenPayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenPayOperationCompleted);
            }
            this.InvokeAsync("OpenPay", new object[] {
                        fspid,
                        opuser,
                        freson}, this.OpenPayOperationCompleted, userState);
        }
        
        private void OnOpenPayOperationCompleted(object arg) {
            if ((this.OpenPayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenPayCompleted(this, new OpenPayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CloseRefund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CloseRefund(string fspid, string opuser, string freson) {
            object[] results = this.Invoke("CloseRefund", new object[] {
                        fspid,
                        opuser,
                        freson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCloseRefund(string fspid, string opuser, string freson, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CloseRefund", new object[] {
                        fspid,
                        opuser,
                        freson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCloseRefund(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CloseRefundAsync(string fspid, string opuser, string freson) {
            this.CloseRefundAsync(fspid, opuser, freson, null);
        }
        
        /// <remarks/>
        public void CloseRefundAsync(string fspid, string opuser, string freson, object userState) {
            if ((this.CloseRefundOperationCompleted == null)) {
                this.CloseRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseRefundOperationCompleted);
            }
            this.InvokeAsync("CloseRefund", new object[] {
                        fspid,
                        opuser,
                        freson}, this.CloseRefundOperationCompleted, userState);
        }
        
        private void OnCloseRefundOperationCompleted(object arg) {
            if ((this.CloseRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseRefundCompleted(this, new CloseRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OpenRefund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OpenRefund(string fspid, string opuser, string freson) {
            object[] results = this.Invoke("OpenRefund", new object[] {
                        fspid,
                        opuser,
                        freson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOpenRefund(string fspid, string opuser, string freson, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OpenRefund", new object[] {
                        fspid,
                        opuser,
                        freson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndOpenRefund(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OpenRefundAsync(string fspid, string opuser, string freson) {
            this.OpenRefundAsync(fspid, opuser, freson, null);
        }
        
        /// <remarks/>
        public void OpenRefundAsync(string fspid, string opuser, string freson, object userState) {
            if ((this.OpenRefundOperationCompleted == null)) {
                this.OpenRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenRefundOperationCompleted);
            }
            this.InvokeAsync("OpenRefund", new object[] {
                        fspid,
                        opuser,
                        freson}, this.OpenRefundOperationCompleted, userState);
        }
        
        private void OnOpenRefundOperationCompleted(object arg) {
            if ((this.OpenRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenRefundCompleted(this, new OpenRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CloseAgency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CloseAgency(string fspid, string opuser, string freson) {
            object[] results = this.Invoke("CloseAgency", new object[] {
                        fspid,
                        opuser,
                        freson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCloseAgency(string fspid, string opuser, string freson, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CloseAgency", new object[] {
                        fspid,
                        opuser,
                        freson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCloseAgency(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CloseAgencyAsync(string fspid, string opuser, string freson) {
            this.CloseAgencyAsync(fspid, opuser, freson, null);
        }
        
        /// <remarks/>
        public void CloseAgencyAsync(string fspid, string opuser, string freson, object userState) {
            if ((this.CloseAgencyOperationCompleted == null)) {
                this.CloseAgencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseAgencyOperationCompleted);
            }
            this.InvokeAsync("CloseAgency", new object[] {
                        fspid,
                        opuser,
                        freson}, this.CloseAgencyOperationCompleted, userState);
        }
        
        private void OnCloseAgencyOperationCompleted(object arg) {
            if ((this.CloseAgencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseAgencyCompleted(this, new CloseAgencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OpenAgency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OpenAgency(string fspid, string opuser, string freson) {
            object[] results = this.Invoke("OpenAgency", new object[] {
                        fspid,
                        opuser,
                        freson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOpenAgency(string fspid, string opuser, string freson, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OpenAgency", new object[] {
                        fspid,
                        opuser,
                        freson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndOpenAgency(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OpenAgencyAsync(string fspid, string opuser, string freson) {
            this.OpenAgencyAsync(fspid, opuser, freson, null);
        }
        
        /// <remarks/>
        public void OpenAgencyAsync(string fspid, string opuser, string freson, object userState) {
            if ((this.OpenAgencyOperationCompleted == null)) {
                this.OpenAgencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenAgencyOperationCompleted);
            }
            this.InvokeAsync("OpenAgency", new object[] {
                        fspid,
                        opuser,
                        freson}, this.OpenAgencyOperationCompleted, userState);
        }
        
        private void OnOpenAgencyOperationCompleted(object arg) {
            if ((this.OpenAgencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenAgencyCompleted(this, new OpenAgencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RestoreOfSpid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RestoreOfSpid(string fspid, string opuser, string freson) {
            object[] results = this.Invoke("RestoreOfSpid", new object[] {
                        fspid,
                        opuser,
                        freson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRestoreOfSpid(string fspid, string opuser, string freson, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RestoreOfSpid", new object[] {
                        fspid,
                        opuser,
                        freson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRestoreOfSpid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreOfSpidAsync(string fspid, string opuser, string freson) {
            this.RestoreOfSpidAsync(fspid, opuser, freson, null);
        }
        
        /// <remarks/>
        public void RestoreOfSpidAsync(string fspid, string opuser, string freson, object userState) {
            if ((this.RestoreOfSpidOperationCompleted == null)) {
                this.RestoreOfSpidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreOfSpidOperationCompleted);
            }
            this.InvokeAsync("RestoreOfSpid", new object[] {
                        fspid,
                        opuser,
                        freson}, this.RestoreOfSpidOperationCompleted, userState);
        }
        
        private void OnRestoreOfSpidOperationCompleted(object arg) {
            if ((this.RestoreOfSpidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreOfSpidCompleted(this, new RestoreOfSpidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpelSP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExpelSP(string spid, string reason, string oprator) {
            object[] results = this.Invoke("ExpelSP", new object[] {
                        spid,
                        reason,
                        oprator});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExpelSP(string spid, string reason, string oprator, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExpelSP", new object[] {
                        spid,
                        reason,
                        oprator}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndExpelSP(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExpelSPAsync(string spid, string reason, string oprator) {
            this.ExpelSPAsync(spid, reason, oprator, null);
        }
        
        /// <remarks/>
        public void ExpelSPAsync(string spid, string reason, string oprator, object userState) {
            if ((this.ExpelSPOperationCompleted == null)) {
                this.ExpelSPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExpelSPOperationCompleted);
            }
            this.InvokeAsync("ExpelSP", new object[] {
                        spid,
                        reason,
                        oprator}, this.ExpelSPOperationCompleted, userState);
        }
        
        private void OnExpelSPOperationCompleted(object arg) {
            if ((this.ExpelSPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExpelSPCompleted(this, new ExpelSPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetspidInfoSelfHelp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetspidInfoSelfHelp(string WWWAdress) {
            object[] results = this.Invoke("GetspidInfoSelfHelp", new object[] {
                        WWWAdress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetspidInfoSelfHelp(string WWWAdress, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetspidInfoSelfHelp", new object[] {
                        WWWAdress}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetspidInfoSelfHelp(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetspidInfoSelfHelpAsync(string WWWAdress) {
            this.GetspidInfoSelfHelpAsync(WWWAdress, null);
        }
        
        /// <remarks/>
        public void GetspidInfoSelfHelpAsync(string WWWAdress, object userState) {
            if ((this.GetspidInfoSelfHelpOperationCompleted == null)) {
                this.GetspidInfoSelfHelpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetspidInfoSelfHelpOperationCompleted);
            }
            this.InvokeAsync("GetspidInfoSelfHelp", new object[] {
                        WWWAdress}, this.GetspidInfoSelfHelpOperationCompleted, userState);
        }
        
        private void OnGetspidInfoSelfHelpOperationCompleted(object arg) {
            if ((this.GetspidInfoSelfHelpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetspidInfoSelfHelpCompleted(this, new GetspidInfoSelfHelpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetspidInfoAgency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetspidInfoAgency(string Fdomain) {
            object[] results = this.Invoke("GetspidInfoAgency", new object[] {
                        Fdomain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetspidInfoAgency(string Fdomain, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetspidInfoAgency", new object[] {
                        Fdomain}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetspidInfoAgency(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetspidInfoAgencyAsync(string Fdomain) {
            this.GetspidInfoAgencyAsync(Fdomain, null);
        }
        
        /// <remarks/>
        public void GetspidInfoAgencyAsync(string Fdomain, object userState) {
            if ((this.GetspidInfoAgencyOperationCompleted == null)) {
                this.GetspidInfoAgencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetspidInfoAgencyOperationCompleted);
            }
            this.InvokeAsync("GetspidInfoAgency", new object[] {
                        Fdomain}, this.GetspidInfoAgencyOperationCompleted, userState);
        }
        
        private void OnGetspidInfoAgencyOperationCompleted(object arg) {
            if ((this.GetspidInfoAgencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetspidInfoAgencyCompleted(this, new GetspidInfoAgencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MerchantHelper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode MerchantHelper(System.Xml.XmlNode param) {
            object[] results = this.Invoke("MerchantHelper", new object[] {
                        param});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMerchantHelper(System.Xml.XmlNode param, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MerchantHelper", new object[] {
                        param}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndMerchantHelper(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void MerchantHelperAsync(System.Xml.XmlNode param) {
            this.MerchantHelperAsync(param, null);
        }
        
        /// <remarks/>
        public void MerchantHelperAsync(System.Xml.XmlNode param, object userState) {
            if ((this.MerchantHelperOperationCompleted == null)) {
                this.MerchantHelperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMerchantHelperOperationCompleted);
            }
            this.InvokeAsync("MerchantHelper", new object[] {
                        param}, this.MerchantHelperOperationCompleted, userState);
        }
        
        private void OnMerchantHelperOperationCompleted(object arg) {
            if ((this.MerchantHelperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MerchantHelperCompleted(this, new MerchantHelperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApplyCpInfoX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetApplyCpInfoX(string spid) {
            object[] results = this.Invoke("GetApplyCpInfoX", new object[] {
                        spid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetApplyCpInfoX(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetApplyCpInfoX", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetApplyCpInfoX(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplyCpInfoXAsync(string spid) {
            this.GetApplyCpInfoXAsync(spid, null);
        }
        
        /// <remarks/>
        public void GetApplyCpInfoXAsync(string spid, object userState) {
            if ((this.GetApplyCpInfoXOperationCompleted == null)) {
                this.GetApplyCpInfoXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplyCpInfoXOperationCompleted);
            }
            this.InvokeAsync("GetApplyCpInfoX", new object[] {
                        spid}, this.GetApplyCpInfoXOperationCompleted, userState);
        }
        
        private void OnGetApplyCpInfoXOperationCompleted(object arg) {
            if ((this.GetApplyCpInfoXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplyCpInfoXCompleted(this, new GetApplyCpInfoXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MerchantDataSync", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode MerchantDataSync(System.Xml.XmlNode param) {
            object[] results = this.Invoke("MerchantDataSync", new object[] {
                        param});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMerchantDataSync(System.Xml.XmlNode param, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MerchantDataSync", new object[] {
                        param}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndMerchantDataSync(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void MerchantDataSyncAsync(System.Xml.XmlNode param) {
            this.MerchantDataSyncAsync(param, null);
        }
        
        /// <remarks/>
        public void MerchantDataSyncAsync(System.Xml.XmlNode param, object userState) {
            if ((this.MerchantDataSyncOperationCompleted == null)) {
                this.MerchantDataSyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMerchantDataSyncOperationCompleted);
            }
            this.InvokeAsync("MerchantDataSync", new object[] {
                        param}, this.MerchantDataSyncOperationCompleted, userState);
        }
        
        private void OnMerchantDataSyncOperationCompleted(object arg) {
            if ((this.MerchantDataSyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MerchantDataSyncCompleted(this, new MerchantDataSyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendFlatSP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendFlatSP(string AppID, bool Result, string Spid, string Reason, string CheckTime) {
            object[] results = this.Invoke("SendFlatSP", new object[] {
                        AppID,
                        Result,
                        Spid,
                        Reason,
                        CheckTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendFlatSP(string AppID, bool Result, string Spid, string Reason, string CheckTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendFlatSP", new object[] {
                        AppID,
                        Result,
                        Spid,
                        Reason,
                        CheckTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSendFlatSP(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFlatSPAsync(string AppID, bool Result, string Spid, string Reason, string CheckTime) {
            this.SendFlatSPAsync(AppID, Result, Spid, Reason, CheckTime, null);
        }
        
        /// <remarks/>
        public void SendFlatSPAsync(string AppID, bool Result, string Spid, string Reason, string CheckTime, object userState) {
            if ((this.SendFlatSPOperationCompleted == null)) {
                this.SendFlatSPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFlatSPOperationCompleted);
            }
            this.InvokeAsync("SendFlatSP", new object[] {
                        AppID,
                        Result,
                        Spid,
                        Reason,
                        CheckTime}, this.SendFlatSPOperationCompleted, userState);
        }
        
        private void OnSendFlatSPOperationCompleted(object arg) {
            if ((this.SendFlatSPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFlatSPCompleted(this, new SendFlatSPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAgencyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("msg")]
        public string InsertAgencyData() {
            object[] results = this.Invoke("InsertAgencyData", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertAgencyData(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertAgencyData", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndInsertAgencyData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAgencyDataAsync() {
            this.InsertAgencyDataAsync(null);
        }
        
        /// <remarks/>
        public void InsertAgencyDataAsync(object userState) {
            if ((this.InsertAgencyDataOperationCompleted == null)) {
                this.InsertAgencyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAgencyDataOperationCompleted);
            }
            this.InvokeAsync("InsertAgencyData", new object[0], this.InsertAgencyDataOperationCompleted, userState);
        }
        
        private void OnInsertAgencyDataOperationCompleted(object arg) {
            if ((this.InsertAgencyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAgencyDataCompleted(this, new InsertAgencyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAgencyApply", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertAgencyApply() {
            this.Invoke("InsertAgencyApply", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertAgencyApply(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertAgencyApply", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndInsertAgencyApply(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void InsertAgencyApplyAsync() {
            this.InsertAgencyApplyAsync(null);
        }
        
        /// <remarks/>
        public void InsertAgencyApplyAsync(object userState) {
            if ((this.InsertAgencyApplyOperationCompleted == null)) {
                this.InsertAgencyApplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAgencyApplyOperationCompleted);
            }
            this.InvokeAsync("InsertAgencyApply", new object[0], this.InsertAgencyApplyOperationCompleted, userState);
        }
        
        private void OnInsertAgencyApplyOperationCompleted(object arg) {
            if ((this.InsertAgencyApplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAgencyApplyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllt_mod_des", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllt_mod_des() {
            object[] results = this.Invoke("GetAllt_mod_des", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllt_mod_des(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllt_mod_des", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAllt_mod_des(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllt_mod_desAsync() {
            this.GetAllt_mod_desAsync(null);
        }
        
        /// <remarks/>
        public void GetAllt_mod_desAsync(object userState) {
            if ((this.GetAllt_mod_desOperationCompleted == null)) {
                this.GetAllt_mod_desOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllt_mod_desOperationCompleted);
            }
            this.InvokeAsync("GetAllt_mod_des", new object[0], this.GetAllt_mod_desOperationCompleted, userState);
        }
        
        private void OnGetAllt_mod_desOperationCompleted(object arg) {
            if ((this.GetAllt_mod_desCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllt_mod_desCompleted(this, new GetAllt_mod_desCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBargainInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertBargainInfo(System.Data.DataSet Info) {
            object[] results = this.Invoke("InsertBargainInfo", new object[] {
                        Info});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertBargainInfo(System.Data.DataSet Info, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertBargainInfo", new object[] {
                        Info}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndInsertBargainInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBargainInfoAsync(System.Data.DataSet Info) {
            this.InsertBargainInfoAsync(Info, null);
        }
        
        /// <remarks/>
        public void InsertBargainInfoAsync(System.Data.DataSet Info, object userState) {
            if ((this.InsertBargainInfoOperationCompleted == null)) {
                this.InsertBargainInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBargainInfoOperationCompleted);
            }
            this.InvokeAsync("InsertBargainInfo", new object[] {
                        Info}, this.InsertBargainInfoOperationCompleted, userState);
        }
        
        private void OnInsertBargainInfoOperationCompleted(object arg) {
            if ((this.InsertBargainInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBargainInfoCompleted(this, new InsertBargainInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMail(string mailToStr, string mailccStr, string mailSubject, string mailBody, bool htmlFormat, string[] fileAttachment) {
            this.Invoke("SendMail", new object[] {
                        mailToStr,
                        mailccStr,
                        mailSubject,
                        mailBody,
                        htmlFormat,
                        fileAttachment});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendMail(string mailToStr, string mailccStr, string mailSubject, string mailBody, bool htmlFormat, string[] fileAttachment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendMail", new object[] {
                        mailToStr,
                        mailccStr,
                        mailSubject,
                        mailBody,
                        htmlFormat,
                        fileAttachment}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSendMail(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SendMailAsync(string mailToStr, string mailccStr, string mailSubject, string mailBody, bool htmlFormat, string[] fileAttachment) {
            this.SendMailAsync(mailToStr, mailccStr, mailSubject, mailBody, htmlFormat, fileAttachment, null);
        }
        
        /// <remarks/>
        public void SendMailAsync(string mailToStr, string mailccStr, string mailSubject, string mailBody, bool htmlFormat, string[] fileAttachment, object userState) {
            if ((this.SendMailOperationCompleted == null)) {
                this.SendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailOperationCompleted);
            }
            this.InvokeAsync("SendMail", new object[] {
                        mailToStr,
                        mailccStr,
                        mailSubject,
                        mailBody,
                        htmlFormat,
                        fileAttachment}, this.SendMailOperationCompleted, userState);
        }
        
        private void OnSendMailOperationCompleted(object arg) {
            if ((this.SendMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPDFCompletedEventHandler(object sender, GetPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long length {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsStandardBarginCompletedEventHandler(object sender, IsStandardBarginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsStandardBarginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsStandardBarginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MCHDetailAddressCompletedEventHandler(object sender, MCHDetailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MCHDetailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MCHDetailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string address {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMerInfoForOverseaCardOMSCompletedEventHandler(object sender, GetMerInfoForOverseaCardOMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMerInfoForOverseaCardOMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMerInfoForOverseaCardOMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTradePropertyCompletedEventHandler(object sender, QueryTradePropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTradePropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTradePropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void WXModifyTradePropertyCompletedEventHandler(object sender, WXModifyTradePropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WXModifyTradePropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WXModifyTradePropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ModifyTradePropertyCompletedEventHandler(object sender, ModifyTradePropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyTradePropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyTradePropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TestForSpoaCompletedEventHandler(object sender, TestForSpoaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestForSpoaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestForSpoaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FreezeSPCompletedEventHandler(object sender, FreezeSPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FreezeSPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FreezeSPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LostOfSpidCompletedEventHandler(object sender, LostOfSpidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LostOfSpidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LostOfSpidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ClosePayCompletedEventHandler(object sender, ClosePayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClosePayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClosePayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void OpenPayCompletedEventHandler(object sender, OpenPayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenPayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenPayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CloseRefundCompletedEventHandler(object sender, CloseRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void OpenRefundCompletedEventHandler(object sender, OpenRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CloseAgencyCompletedEventHandler(object sender, CloseAgencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseAgencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseAgencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void OpenAgencyCompletedEventHandler(object sender, OpenAgencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenAgencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenAgencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RestoreOfSpidCompletedEventHandler(object sender, RestoreOfSpidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreOfSpidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreOfSpidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExpelSPCompletedEventHandler(object sender, ExpelSPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExpelSPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExpelSPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetspidInfoSelfHelpCompletedEventHandler(object sender, GetspidInfoSelfHelpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetspidInfoSelfHelpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetspidInfoSelfHelpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetspidInfoAgencyCompletedEventHandler(object sender, GetspidInfoAgencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetspidInfoAgencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetspidInfoAgencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MerchantHelperCompletedEventHandler(object sender, MerchantHelperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MerchantHelperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MerchantHelperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetApplyCpInfoXCompletedEventHandler(object sender, GetApplyCpInfoXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplyCpInfoXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplyCpInfoXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MerchantDataSyncCompletedEventHandler(object sender, MerchantDataSyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MerchantDataSyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MerchantDataSyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendFlatSPCompletedEventHandler(object sender, SendFlatSPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFlatSPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFlatSPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertAgencyDataCompletedEventHandler(object sender, InsertAgencyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAgencyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAgencyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertAgencyApplyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllt_mod_desCompletedEventHandler(object sender, GetAllt_mod_desCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllt_mod_desCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllt_mod_desCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertBargainInfoCompletedEventHandler(object sender, InsertBargainInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBargainInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBargainInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendMailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591