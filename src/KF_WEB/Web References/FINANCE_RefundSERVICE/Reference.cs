//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
// 
#pragma warning disable 1591

namespace TENCENT.OSS.CFT.KF.KF_Web.FINANCE_RefundSERVICE {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Query_ServiceSoap", Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Ability))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_CLASS_BASIC))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Query_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Finance_Header finance_HeaderValueField;
        
        private System.Threading.SendOrPostCallback GetUserAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAccountFromWechatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildrenInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChildrenFreezeOrUnfreezeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildrenFlistListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserMedInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserMedInfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBankAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchUserBankAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOPLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayList_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayList_PayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayList_PickOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankRollListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankRollList_withIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPayListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPayList_withIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTCBankAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTCBankRollListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTCBankPAYListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayListByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback returnListIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoanListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundListDetail_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsNewOrderCZDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankRollListByListIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundListDetail_SubaccOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundCardListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPickListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPickListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPickListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPickListDetail_SubaccOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectPickList_PriorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectPickListCount_PriorOperationCompleted;
        
        private System.Threading.SendOrPostCallback PickDirectPickList_PriorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectPickList_CheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectPickListCount_CheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback PickDirectPickList_CheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectPickList_PayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectPickListCount_PayOperationCompleted;
        
        private System.Threading.SendOrPostCallback DirectPickRePayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGiveBackListXOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGiveBackListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediListXOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuickTradeListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartTraderRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartTraderRefund_KFOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCheckTypeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCheckTypeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCheckTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreezeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExistFreezeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewFreezeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFreezeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreezeListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreezeListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMerSettleTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMerSettleDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangeQQListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangeQQListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataErrorCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataErrorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataErrList_Subacc_DeatailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataErrList_DeatailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataErrList_PreviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankCheckErrorCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankCheckErrorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataGenCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataGenListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHandleResultCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHandleResultListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHandleResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReturnTicketCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReturnTicketCount_FileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReturnTicketListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayExceptionCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayExceptionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataErrCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataErrCountXOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayMatchErrCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayMatchErrListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayMatchErrList_CheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataErrCountX_SubaccOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataErrListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataErrList_SubaccOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataErrListXOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataErrListX_SubaccOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAutoTwoCheckBankDataErrListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataErrList1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDataErrList_Subacc1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoinPubOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoinPubCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoinPubInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoinPubInForPubOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGwqOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGwqStatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGwqRollOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGwqCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGwqInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoinPubInOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoinPubInCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTokenHangCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTokenHangListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHaoYeCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHaoYeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProxyFetchRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProxyFetchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSynRecordQueryCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetSynRecordStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SynPayStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSynRecordQueryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSynRecordQueryDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediCertManageCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediCertManageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediCertListStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediCertStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback MediCertApplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback MediCertDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback MediCertUpdateStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetB2cReturnCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetB2cReturnListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetB2CReturnList_GSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundTotalCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundErrorCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundTotalListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundErrorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownRefundErrorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundTotalByIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundParamListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundTotalDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundErrorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetB2cReturnDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetB2cReturnFileListOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2CReturnStartCheck_GSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetB2cReturnDetail_GSOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2CReturnRefundAsyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback AgreeSuspendRefundmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2CReturnUpdateToSuccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuspendRefundmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisagreeSuspendOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2CReturnUpdateToHangOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2CReturnUpdateToRestoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQueryDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateRefoundStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getbankTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSaveIdInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediOperatorManageCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediOperatorManageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediOperatorRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMediOperatorRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediQueryPickCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediQueryPickListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediQueryRefundCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediQueryRefundListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediQueryTransferCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediQueryTransferListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediQueryBatchTransferCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediQueryBatchTransferListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediQueryBatchTransferList_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QQ2UidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QQ2UidXOperationCompleted;
        
        private System.Threading.SendOrPostCallback Uid2QQOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetBatchIDForSettleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchSettleDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSysBulletinOperationCompleted;
        
        private System.Threading.SendOrPostCallback SysBulletinIssueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SysBulletinGoPriorOperationCompleted;
        
        private System.Threading.SendOrPostCallback SysBulletinGoNextOperationCompleted;
        
        private System.Threading.SendOrPostCallback SysBulletinDelOperationCompleted;
        
        private System.Threading.SendOrPostCallback SysBulletinGoHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOneSysBulletinOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOneSysBulletinOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeOneSysBulletinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectRelationCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectRelationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllChannelListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayLimitCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayLimitListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectRelationDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeOneDirectRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOneDirectRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelOnePayLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReuseOnePayLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPMDicAccNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCFTUserAppealListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCFTUserAppealCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCFTUserAppealDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppealUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CFTCancelAppealOperationCompleted;
        
        private System.Threading.SendOrPostCallback CFTConfirmAppealOperationCompleted;
        
        private System.Threading.SendOrPostCallback CFTDelAppealOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGwqPubStateCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBindListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBindCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBindDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGiveBackListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGiveBackCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGwqPubStateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsFastPayUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppealQueryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppealListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppealListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppealListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserpayListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransportListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustDirectPayToErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectPayCheckListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDirectPayCheckInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBindListXOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBindCountXOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBindDetailXOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryForFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryForXATenpayFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBankRollListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBankRollList_allOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBankRollCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediUserChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGiveBackList_CheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTraderRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanStartTraderRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMerchantMidUidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpidByMidUidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchTransferCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchTransferListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchTransferTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundHistoryDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayInfoForRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayInfoForDataListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryExportBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryExportBankByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryExportBankByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryExportTaskCommOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryExportTaskCommByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryExportTaskCommByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryExportTaskTmpOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryExportTaskTmpByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryExportTaskTmpByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryExportBankrestOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryExportBankrestByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryExportBankrestByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryGWQAccountInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryGWQAccountInfoCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryGWQAccountByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryGWQUseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRecoverGWQAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryZWDicInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryZWDicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundDispatchListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetpospDispatchListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryConfigBankTypeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTDICInfoByValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTCBANKInfoByValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTSUBJECTInfoByValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTPRODUCTInfoByValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTBANKInfoByValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTBANKKEYSByValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTBANKCODEBytypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTBANKCLASSBytypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTFile_Model_Relation_BytypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTDICInfoByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTCBANKInfoByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTSUBJECTInfoByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTPRODUCTInfoByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTBANKInfoByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTBANKKEYSByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTBANKCLASSByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTbankcodeByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryFileModelInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllFileModelNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTFile_Model_Relation_ByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchpayZCCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBatchpayZCInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchRefundCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchRefundListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchRefundTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownMediCertByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchSynPayStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHongBaoPubDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHongBaoDetailDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHongBaoDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCreditAllInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCreditAllInfo_countOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCreditSendListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCreditSendList_countOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPOSBankrollCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPOSBankrollListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchPOSBankrollInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPOSCheckResultCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPOSCheckResultListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPOSCheckResultList2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPOSResultDoingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPOSResultTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSysBankBulletinOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankBulletinByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankBulletinInfoByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FuncUserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FuncUserListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileModelISExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFileModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsQuickPayBankTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundWaterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundWaterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundWaterErrorCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundWaterErrorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundWaterErrorTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetFundWaterErrorDoingOperationCompleted;
        
        private System.Threading.SendOrPostCallback FundWaterRefundCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectSpmRefundListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectSpmRefundCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchDirectSpmRefundListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCepBankInfo_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCepBankInfo_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCepBankInfo_Detail_CheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayMatch_BankaccListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayMatch_BankaccBatchListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayMatch_BankDetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayMatch_TaskStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayMatch_TaskListOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasPayMatchDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasPayMatchTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayMatch_TaskDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayMatch_Detail2ErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchRefundForCompensationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchRefundForCompensationTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchRefundForCompensationCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCompensationRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUtility_chargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUCBulletinByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUCBulletinInfoByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckExecuteSqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCheckParamInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBalanceByUIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback FeeContractQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInsureAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutPayCBListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutPayCBCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutPayCBSumAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXinHuaBankTransactionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXinHuaBankTransactionCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBauPaySourceByListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGiveBackResultListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGiveBackResultCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDirectPayNCInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDirectNCInfoByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDirectNCInfoByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCBZWBillListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCBZWBillCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCBZWBillSumAmtOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDirectErrCodeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDirectErrCodeByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDirectErrCodeByObjidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankPayAbilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListBankPayAbilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankRefundAbilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListBankRefundAbilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankPayAbilityFromCheckParamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBankRefundAbilityFromCheckParamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPaymentReturnStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPaymentReturnDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPaymentReturnDetailsSumTotalAmtOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPaymentReturnDetailsBankTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRefundSnopShotLogOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Query_Service() {
            this.Url = global::TENCENT.OSS.CFT.KF.KF_Web.Properties.Settings.Default.finance_web_FINANCE_REFUNDSERVICE_Query_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Finance_Header Finance_HeaderValue {
            get {
                return this.finance_HeaderValueField;
            }
            set {
                this.finance_HeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUserAccountCompletedEventHandler GetUserAccountCompleted;
        
        /// <remarks/>
        public event GetUserAccountFromWechatCompletedEventHandler GetUserAccountFromWechatCompleted;
        
        /// <remarks/>
        public event GetChildrenInfoCompletedEventHandler GetChildrenInfoCompleted;
        
        /// <remarks/>
        public event ChildrenFreezeOrUnfreezeCompletedEventHandler ChildrenFreezeOrUnfreezeCompleted;
        
        /// <remarks/>
        public event GetChildrenFlistListCompletedEventHandler GetChildrenFlistListCompleted;
        
        /// <remarks/>
        public event GetUserMedInfoCompletedEventHandler GetUserMedInfoCompleted;
        
        /// <remarks/>
        public event GetUserMedInfoListCompletedEventHandler GetUserMedInfoListCompleted;
        
        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
        
        /// <remarks/>
        public event GetUserBankAccountCompletedEventHandler GetUserBankAccountCompleted;
        
        /// <remarks/>
        public event GetBatchUserBankAccountCompletedEventHandler GetBatchUserBankAccountCompleted;
        
        /// <remarks/>
        public event GetPayListCompletedEventHandler GetPayListCompleted;
        
        /// <remarks/>
        public event GetUserOPLogCompletedEventHandler GetUserOPLogCompleted;
        
        /// <remarks/>
        public event GetPayList_ListCompletedEventHandler GetPayList_ListCompleted;
        
        /// <remarks/>
        public event GetPayList_PayCompletedEventHandler GetPayList_PayCompleted;
        
        /// <remarks/>
        public event GetPayList_PickCompletedEventHandler GetPayList_PickCompleted;
        
        /// <remarks/>
        public event GetBankRollListCompletedEventHandler GetBankRollListCompleted;
        
        /// <remarks/>
        public event GetBankRollList_withIDCompletedEventHandler GetBankRollList_withIDCompleted;
        
        /// <remarks/>
        public event GetUserPayListCompletedEventHandler GetUserPayListCompleted;
        
        /// <remarks/>
        public event GetUserPayList_withIDCompletedEventHandler GetUserPayList_withIDCompleted;
        
        /// <remarks/>
        public event GetTCBankAccountCompletedEventHandler GetTCBankAccountCompleted;
        
        /// <remarks/>
        public event GetTCBankRollListCompletedEventHandler GetTCBankRollListCompleted;
        
        /// <remarks/>
        public event GetTCBankPAYListCompletedEventHandler GetTCBankPAYListCompleted;
        
        /// <remarks/>
        public event GetRefundCompletedEventHandler GetRefundCompleted;
        
        /// <remarks/>
        public event GetPayListByTypeCompletedEventHandler GetPayListByTypeCompleted;
        
        /// <remarks/>
        public event returnListIDCompletedEventHandler returnListIDCompleted;
        
        /// <remarks/>
        public event ValidUserCompletedEventHandler ValidUserCompleted;
        
        /// <remarks/>
        public event ChangeUserPasswordCompletedEventHandler ChangeUserPasswordCompleted;
        
        /// <remarks/>
        public event GetLoanListCompletedEventHandler GetLoanListCompleted;
        
        /// <remarks/>
        public event GetFundListCompletedEventHandler GetFundListCompleted;
        
        /// <remarks/>
        public event GetFundTotalCompletedEventHandler GetFundTotalCompleted;
        
        /// <remarks/>
        public event GetFundListCountCompletedEventHandler GetFundListCountCompleted;
        
        /// <remarks/>
        public event GetFundListDetail_NewCompletedEventHandler GetFundListDetail_NewCompleted;
        
        /// <remarks/>
        public event IsNewOrderCZDataCompletedEventHandler IsNewOrderCZDataCompleted;
        
        /// <remarks/>
        public event GetBankRollListByListIdCompletedEventHandler GetBankRollListByListIdCompleted;
        
        /// <remarks/>
        public event GetFundListDetailCompletedEventHandler GetFundListDetailCompleted;
        
        /// <remarks/>
        public event GetFundListDetail_SubaccCompletedEventHandler GetFundListDetail_SubaccCompleted;
        
        /// <remarks/>
        public event GetFundCardListDetailCompletedEventHandler GetFundCardListDetailCompleted;
        
        /// <remarks/>
        public event GetPickListCompletedEventHandler GetPickListCompleted;
        
        /// <remarks/>
        public event GetPickListCountCompletedEventHandler GetPickListCountCompleted;
        
        /// <remarks/>
        public event GetPickListDetailCompletedEventHandler GetPickListDetailCompleted;
        
        /// <remarks/>
        public event GetPickListDetail_SubaccCompletedEventHandler GetPickListDetail_SubaccCompleted;
        
        /// <remarks/>
        public event GetDirectPickList_PriorCompletedEventHandler GetDirectPickList_PriorCompleted;
        
        /// <remarks/>
        public event GetDirectPickListCount_PriorCompletedEventHandler GetDirectPickListCount_PriorCompleted;
        
        /// <remarks/>
        public event PickDirectPickList_PriorCompletedEventHandler PickDirectPickList_PriorCompleted;
        
        /// <remarks/>
        public event GetDirectPickList_CheckCompletedEventHandler GetDirectPickList_CheckCompleted;
        
        /// <remarks/>
        public event GetDirectPickListCount_CheckCompletedEventHandler GetDirectPickListCount_CheckCompleted;
        
        /// <remarks/>
        public event PickDirectPickList_CheckCompletedEventHandler PickDirectPickList_CheckCompleted;
        
        /// <remarks/>
        public event GetDirectPickList_PayCompletedEventHandler GetDirectPickList_PayCompleted;
        
        /// <remarks/>
        public event GetDirectPickListCount_PayCompletedEventHandler GetDirectPickListCount_PayCompleted;
        
        /// <remarks/>
        public event DirectPickRePayCompletedEventHandler DirectPickRePayCompleted;
        
        /// <remarks/>
        public event GetGiveBackListXCompletedEventHandler GetGiveBackListXCompleted;
        
        /// <remarks/>
        public event GetGiveBackListCountCompletedEventHandler GetGiveBackListCountCompleted;
        
        /// <remarks/>
        public event GetMediListXCompletedEventHandler GetMediListXCompleted;
        
        /// <remarks/>
        public event GetMediListCompletedEventHandler GetMediListCompleted;
        
        /// <remarks/>
        public event GetMediListCountCompletedEventHandler GetMediListCountCompleted;
        
        /// <remarks/>
        public event GetQuickTradeListDetailCompletedEventHandler GetQuickTradeListDetailCompleted;
        
        /// <remarks/>
        public event StartTraderRefundCompletedEventHandler StartTraderRefundCompleted;
        
        /// <remarks/>
        public event StartTraderRefund_KFCompletedEventHandler StartTraderRefund_KFCompleted;
        
        /// <remarks/>
        public event GetCheckTypeListCompletedEventHandler GetCheckTypeListCompleted;
        
        /// <remarks/>
        public event GetCheckTypeDetailCompletedEventHandler GetCheckTypeDetailCompleted;
        
        /// <remarks/>
        public event SetCheckTypeCompletedEventHandler SetCheckTypeCompleted;
        
        /// <remarks/>
        public event GetFreezeListCompletedEventHandler GetFreezeListCompleted;
        
        /// <remarks/>
        public event GetExistFreezeCompletedEventHandler GetExistFreezeCompleted;
        
        /// <remarks/>
        public event CreateNewFreezeCompletedEventHandler CreateNewFreezeCompleted;
        
        /// <remarks/>
        public event UpdateFreezeInfoCompletedEventHandler UpdateFreezeInfoCompleted;
        
        /// <remarks/>
        public event GetFreezeListCountCompletedEventHandler GetFreezeListCountCompleted;
        
        /// <remarks/>
        public event GetFreezeListDetailCompletedEventHandler GetFreezeListDetailCompleted;
        
        /// <remarks/>
        public event GetOrderListCompletedEventHandler GetOrderListCompleted;
        
        /// <remarks/>
        public event GetOrderListCountCompletedEventHandler GetOrderListCountCompleted;
        
        /// <remarks/>
        public event GetMerSettleTableCompletedEventHandler GetMerSettleTableCompleted;
        
        /// <remarks/>
        public event GetMerSettleDetailCompletedEventHandler GetMerSettleDetailCompleted;
        
        /// <remarks/>
        public event GetChangeQQListCompletedEventHandler GetChangeQQListCompleted;
        
        /// <remarks/>
        public event GetChangeQQListCountCompletedEventHandler GetChangeQQListCountCompleted;
        
        /// <remarks/>
        public event GetBankDataErrorCountCompletedEventHandler GetBankDataErrorCountCompleted;
        
        /// <remarks/>
        public event GetBankDataErrorListCompletedEventHandler GetBankDataErrorListCompleted;
        
        /// <remarks/>
        public event GetBankDataErrList_Subacc_DeatailCompletedEventHandler GetBankDataErrList_Subacc_DeatailCompleted;
        
        /// <remarks/>
        public event GetBankDataErrList_DeatailCompletedEventHandler GetBankDataErrList_DeatailCompleted;
        
        /// <remarks/>
        public event GetBankDataErrList_PreviewCompletedEventHandler GetBankDataErrList_PreviewCompleted;
        
        /// <remarks/>
        public event GetBankCheckErrorCountCompletedEventHandler GetBankCheckErrorCountCompleted;
        
        /// <remarks/>
        public event GetBankCheckErrorListCompletedEventHandler GetBankCheckErrorListCompleted;
        
        /// <remarks/>
        public event GetBankDataGenCountCompletedEventHandler GetBankDataGenCountCompleted;
        
        /// <remarks/>
        public event GetBankDataGenListCompletedEventHandler GetBankDataGenListCompleted;
        
        /// <remarks/>
        public event GetHandleResultCountCompletedEventHandler GetHandleResultCountCompleted;
        
        /// <remarks/>
        public event GetHandleResultListCompletedEventHandler GetHandleResultListCompleted;
        
        /// <remarks/>
        public event GetHandleResultCompletedEventHandler GetHandleResultCompleted;
        
        /// <remarks/>
        public event GetReturnTicketCountCompletedEventHandler GetReturnTicketCountCompleted;
        
        /// <remarks/>
        public event GetReturnTicketCount_FileCompletedEventHandler GetReturnTicketCount_FileCompleted;
        
        /// <remarks/>
        public event GetReturnTicketListCompletedEventHandler GetReturnTicketListCompleted;
        
        /// <remarks/>
        public event GetPayExceptionCountCompletedEventHandler GetPayExceptionCountCompleted;
        
        /// <remarks/>
        public event GetPayExceptionListCompletedEventHandler GetPayExceptionListCompleted;
        
        /// <remarks/>
        public event GetBankDataErrCountCompletedEventHandler GetBankDataErrCountCompleted;
        
        /// <remarks/>
        public event GetBankDataErrCountXCompletedEventHandler GetBankDataErrCountXCompleted;
        
        /// <remarks/>
        public event GetPayMatchErrCountCompletedEventHandler GetPayMatchErrCountCompleted;
        
        /// <remarks/>
        public event GetPayMatchErrListCompletedEventHandler GetPayMatchErrListCompleted;
        
        /// <remarks/>
        public event GetPayMatchErrList_CheckCompletedEventHandler GetPayMatchErrList_CheckCompleted;
        
        /// <remarks/>
        public event GetBankDataErrCountX_SubaccCompletedEventHandler GetBankDataErrCountX_SubaccCompleted;
        
        /// <remarks/>
        public event GetBankDataErrListCompletedEventHandler GetBankDataErrListCompleted;
        
        /// <remarks/>
        public event GetBankDataErrList_SubaccCompletedEventHandler GetBankDataErrList_SubaccCompleted;
        
        /// <remarks/>
        public event GetBankDataErrListXCompletedEventHandler GetBankDataErrListXCompleted;
        
        /// <remarks/>
        public event GetBankDataErrListX_SubaccCompletedEventHandler GetBankDataErrListX_SubaccCompleted;
        
        /// <remarks/>
        public event GetAutoTwoCheckBankDataErrListCompletedEventHandler GetAutoTwoCheckBankDataErrListCompleted;
        
        /// <remarks/>
        public event GetBankDataErrList1CompletedEventHandler GetBankDataErrList1Completed;
        
        /// <remarks/>
        public event GetBankDataErrList_Subacc1CompletedEventHandler GetBankDataErrList_Subacc1Completed;
        
        /// <remarks/>
        public event GetCoinPubCompletedEventHandler GetCoinPubCompleted;
        
        /// <remarks/>
        public event GetCoinPubCountCompletedEventHandler GetCoinPubCountCompleted;
        
        /// <remarks/>
        public event GetCoinPubInfoCompletedEventHandler GetCoinPubInfoCompleted;
        
        /// <remarks/>
        public event GetCoinPubInForPubCompletedEventHandler GetCoinPubInForPubCompleted;
        
        /// <remarks/>
        public event GetGwqCompletedEventHandler GetGwqCompleted;
        
        /// <remarks/>
        public event GetGwqStatCompletedEventHandler GetGwqStatCompleted;
        
        /// <remarks/>
        public event GetGwqRollCompletedEventHandler GetGwqRollCompleted;
        
        /// <remarks/>
        public event GetGwqCountCompletedEventHandler GetGwqCountCompleted;
        
        /// <remarks/>
        public event GetGwqInfoCompletedEventHandler GetGwqInfoCompleted;
        
        /// <remarks/>
        public event GetCoinPubInCompletedEventHandler GetCoinPubInCompleted;
        
        /// <remarks/>
        public event GetCoinPubInCountCompletedEventHandler GetCoinPubInCountCompleted;
        
        /// <remarks/>
        public event GetTokenHangCountCompletedEventHandler GetTokenHangCountCompleted;
        
        /// <remarks/>
        public event GetTokenHangListCompletedEventHandler GetTokenHangListCompleted;
        
        /// <remarks/>
        public event GetHaoYeCountCompletedEventHandler GetHaoYeCountCompleted;
        
        /// <remarks/>
        public event GetHaoYeListCompletedEventHandler GetHaoYeListCompleted;
        
        /// <remarks/>
        public event getProxyFetchRequestCompletedEventHandler getProxyFetchRequestCompleted;
        
        /// <remarks/>
        public event getProxyFetchCompletedEventHandler getProxyFetchCompleted;
        
        /// <remarks/>
        public event GetSynRecordQueryCountCompletedEventHandler GetSynRecordQueryCountCompleted;
        
        /// <remarks/>
        public event ResetSynRecordStateCompletedEventHandler ResetSynRecordStateCompleted;
        
        /// <remarks/>
        public event SynPayStateCompletedEventHandler SynPayStateCompleted;
        
        /// <remarks/>
        public event GetSynRecordQueryListCompletedEventHandler GetSynRecordQueryListCompleted;
        
        /// <remarks/>
        public event GetSynRecordQueryDetailCompletedEventHandler GetSynRecordQueryDetailCompleted;
        
        /// <remarks/>
        public event GetMediCertManageCountCompletedEventHandler GetMediCertManageCountCompleted;
        
        /// <remarks/>
        public event GetMediCertManageListCompletedEventHandler GetMediCertManageListCompleted;
        
        /// <remarks/>
        public event GetMediCertListStatusCompletedEventHandler GetMediCertListStatusCompleted;
        
        /// <remarks/>
        public event GetMediCertStatusCompletedEventHandler GetMediCertStatusCompleted;
        
        /// <remarks/>
        public event MediCertApplyCompletedEventHandler MediCertApplyCompleted;
        
        /// <remarks/>
        public event MediCertDownloadCompletedEventHandler MediCertDownloadCompleted;
        
        /// <remarks/>
        public event MediCertUpdateStateCompletedEventHandler MediCertUpdateStateCompleted;
        
        /// <remarks/>
        public event GetB2cReturnCountCompletedEventHandler GetB2cReturnCountCompleted;
        
        /// <remarks/>
        public event GetB2cReturnListCompletedEventHandler GetB2cReturnListCompleted;
        
        /// <remarks/>
        public event GetB2CReturnList_GSCompletedEventHandler GetB2CReturnList_GSCompleted;
        
        /// <remarks/>
        public event GetRefundTotalCountCompletedEventHandler GetRefundTotalCountCompleted;
        
        /// <remarks/>
        public event GetRefundErrorCountCompletedEventHandler GetRefundErrorCountCompleted;
        
        /// <remarks/>
        public event GetRefundTotalListCompletedEventHandler GetRefundTotalListCompleted;
        
        /// <remarks/>
        public event GetRefundErrorListCompletedEventHandler GetRefundErrorListCompleted;
        
        /// <remarks/>
        public event DownRefundErrorListCompletedEventHandler DownRefundErrorListCompleted;
        
        /// <remarks/>
        public event GetRefundTotalByIdsCompletedEventHandler GetRefundTotalByIdsCompleted;
        
        /// <remarks/>
        public event GetRefundParamListCompletedEventHandler GetRefundParamListCompleted;
        
        /// <remarks/>
        public event GetRefundTotalDetailCompletedEventHandler GetRefundTotalDetailCompleted;
        
        /// <remarks/>
        public event GetRefundErrorDetailCompletedEventHandler GetRefundErrorDetailCompleted;
        
        /// <remarks/>
        public event GetRefundParamCompletedEventHandler GetRefundParamCompleted;
        
        /// <remarks/>
        public event GetB2cReturnDetailCompletedEventHandler GetB2cReturnDetailCompleted;
        
        /// <remarks/>
        public event GetB2cReturnFileListCompletedEventHandler GetB2cReturnFileListCompleted;
        
        /// <remarks/>
        public event B2CReturnStartCheck_GSCompletedEventHandler B2CReturnStartCheck_GSCompleted;
        
        /// <remarks/>
        public event GetB2cReturnDetail_GSCompletedEventHandler GetB2cReturnDetail_GSCompleted;
        
        /// <remarks/>
        public event B2CReturnRefundAsyncCompletedEventHandler B2CReturnRefundAsyncCompleted;
        
        /// <remarks/>
        public event AgreeSuspendRefundmentCompletedEventHandler AgreeSuspendRefundmentCompleted;
        
        /// <remarks/>
        public event B2CReturnUpdateToSuccessCompletedEventHandler B2CReturnUpdateToSuccessCompleted;
        
        /// <remarks/>
        public event SuspendRefundmentCompletedEventHandler SuspendRefundmentCompleted;
        
        /// <remarks/>
        public event DisagreeSuspendCompletedEventHandler DisagreeSuspendCompleted;
        
        /// <remarks/>
        public event B2CReturnUpdateToHangCompletedEventHandler B2CReturnUpdateToHangCompleted;
        
        /// <remarks/>
        public event B2CReturnUpdateToRestoreCompletedEventHandler B2CReturnUpdateToRestoreCompleted;
        
        /// <remarks/>
        public event getUserModifyCompletedEventHandler getUserModifyCompleted;
        
        /// <remarks/>
        public event getQueryDataCompletedEventHandler getQueryDataCompleted;
        
        /// <remarks/>
        public event updateRefoundStateCompletedEventHandler updateRefoundStateCompleted;
        
        /// <remarks/>
        public event getbankTypeCompletedEventHandler getbankTypeCompleted;
        
        /// <remarks/>
        public event GetSaveIdInfoCompletedEventHandler GetSaveIdInfoCompleted;
        
        /// <remarks/>
        public event GetMediOperatorManageCountCompletedEventHandler GetMediOperatorManageCountCompleted;
        
        /// <remarks/>
        public event GetMediOperatorManageListCompletedEventHandler GetMediOperatorManageListCompleted;
        
        /// <remarks/>
        public event GetMediOperatorRoleCompletedEventHandler GetMediOperatorRoleCompleted;
        
        /// <remarks/>
        public event SetMediOperatorRoleCompletedEventHandler SetMediOperatorRoleCompleted;
        
        /// <remarks/>
        public event GetMediQueryPickCountCompletedEventHandler GetMediQueryPickCountCompleted;
        
        /// <remarks/>
        public event GetMediQueryPickListCompletedEventHandler GetMediQueryPickListCompleted;
        
        /// <remarks/>
        public event GetMediQueryRefundCountCompletedEventHandler GetMediQueryRefundCountCompleted;
        
        /// <remarks/>
        public event GetMediQueryRefundListCompletedEventHandler GetMediQueryRefundListCompleted;
        
        /// <remarks/>
        public event GetMediQueryTransferCountCompletedEventHandler GetMediQueryTransferCountCompleted;
        
        /// <remarks/>
        public event GetMediQueryTransferListCompletedEventHandler GetMediQueryTransferListCompleted;
        
        /// <remarks/>
        public event GetMediQueryBatchTransferCountCompletedEventHandler GetMediQueryBatchTransferCountCompleted;
        
        /// <remarks/>
        public event GetMediQueryBatchTransferListCompletedEventHandler GetMediQueryBatchTransferListCompleted;
        
        /// <remarks/>
        public event GetMediQueryBatchTransferList_DetailCompletedEventHandler GetMediQueryBatchTransferList_DetailCompleted;
        
        /// <remarks/>
        public event QQ2UidCompletedEventHandler QQ2UidCompleted;
        
        /// <remarks/>
        public event QQ2UidXCompletedEventHandler QQ2UidXCompleted;
        
        /// <remarks/>
        public event Uid2QQCompletedEventHandler Uid2QQCompleted;
        
        /// <remarks/>
        public event SetBatchIDForSettleCompletedEventHandler SetBatchIDForSettleCompleted;
        
        /// <remarks/>
        public event GetBatchSettleDataCompletedEventHandler GetBatchSettleDataCompleted;
        
        /// <remarks/>
        public event GetSysBulletinCompletedEventHandler GetSysBulletinCompleted;
        
        /// <remarks/>
        public event SysBulletinIssueCompletedEventHandler SysBulletinIssueCompleted;
        
        /// <remarks/>
        public event SysBulletinGoPriorCompletedEventHandler SysBulletinGoPriorCompleted;
        
        /// <remarks/>
        public event SysBulletinGoNextCompletedEventHandler SysBulletinGoNextCompleted;
        
        /// <remarks/>
        public event SysBulletinDelCompletedEventHandler SysBulletinDelCompleted;
        
        /// <remarks/>
        public event SysBulletinGoHistoryCompletedEventHandler SysBulletinGoHistoryCompleted;
        
        /// <remarks/>
        public event GetOneSysBulletinCompletedEventHandler GetOneSysBulletinCompleted;
        
        /// <remarks/>
        public event AddOneSysBulletinCompletedEventHandler AddOneSysBulletinCompleted;
        
        /// <remarks/>
        public event ChangeOneSysBulletinCompletedEventHandler ChangeOneSysBulletinCompleted;
        
        /// <remarks/>
        public event GetDirectRelationCountCompletedEventHandler GetDirectRelationCountCompleted;
        
        /// <remarks/>
        public event GetDirectRelationListCompletedEventHandler GetDirectRelationListCompleted;
        
        /// <remarks/>
        public event GetAllChannelListCompletedEventHandler GetAllChannelListCompleted;
        
        /// <remarks/>
        public event GetPayLimitCountCompletedEventHandler GetPayLimitCountCompleted;
        
        /// <remarks/>
        public event GetPayLimitListCompletedEventHandler GetPayLimitListCompleted;
        
        /// <remarks/>
        public event GetDirectRelationDetailCompletedEventHandler GetDirectRelationDetailCompleted;
        
        /// <remarks/>
        public event ChangeOneDirectRelationCompletedEventHandler ChangeOneDirectRelationCompleted;
        
        /// <remarks/>
        public event InsertOneDirectRelationCompletedEventHandler InsertOneDirectRelationCompleted;
        
        /// <remarks/>
        public event DelOnePayLimitCompletedEventHandler DelOnePayLimitCompleted;
        
        /// <remarks/>
        public event ReuseOnePayLimitCompletedEventHandler ReuseOnePayLimitCompleted;
        
        /// <remarks/>
        public event QueryPMDicAccNameCompletedEventHandler QueryPMDicAccNameCompleted;
        
        /// <remarks/>
        public event GetCFTUserAppealListCompletedEventHandler GetCFTUserAppealListCompleted;
        
        /// <remarks/>
        public event GetCFTUserAppealCountCompletedEventHandler GetCFTUserAppealCountCompleted;
        
        /// <remarks/>
        public event GetCFTUserAppealDetailCompletedEventHandler GetCFTUserAppealDetailCompleted;
        
        /// <remarks/>
        public event GetAppealUserInfoCompletedEventHandler GetAppealUserInfoCompleted;
        
        /// <remarks/>
        public event CFTCancelAppealCompletedEventHandler CFTCancelAppealCompleted;
        
        /// <remarks/>
        public event CFTConfirmAppealCompletedEventHandler CFTConfirmAppealCompleted;
        
        /// <remarks/>
        public event CFTDelAppealCompletedEventHandler CFTDelAppealCompleted;
        
        /// <remarks/>
        public event GetGwqPubStateCountCompletedEventHandler GetGwqPubStateCountCompleted;
        
        /// <remarks/>
        public event GetUserBindListCompletedEventHandler GetUserBindListCompleted;
        
        /// <remarks/>
        public event GetUserBindCountCompletedEventHandler GetUserBindCountCompleted;
        
        /// <remarks/>
        public event GetUserBindDetailCompletedEventHandler GetUserBindDetailCompleted;
        
        /// <remarks/>
        public event GetGiveBackListCompletedEventHandler GetGiveBackListCompleted;
        
        /// <remarks/>
        public event GetGiveBackCountCompletedEventHandler GetGiveBackCountCompleted;
        
        /// <remarks/>
        public event GetGwqPubStateListCompletedEventHandler GetGwqPubStateListCompleted;
        
        /// <remarks/>
        public event IsFastPayUserCompletedEventHandler IsFastPayUserCompleted;
        
        /// <remarks/>
        public event GetQueryListCompletedEventHandler GetQueryListCompleted;
        
        /// <remarks/>
        public event GetQueryListCountCompletedEventHandler GetQueryListCountCompleted;
        
        /// <remarks/>
        public event GetQueryListDetailCompletedEventHandler GetQueryListDetailCompleted;
        
        /// <remarks/>
        public event GetAppealQueryListCompletedEventHandler GetAppealQueryListCompleted;
        
        /// <remarks/>
        public event GetAppealListCountCompletedEventHandler GetAppealListCountCompleted;
        
        /// <remarks/>
        public event GetAppealListDetailCompletedEventHandler GetAppealListDetailCompleted;
        
        /// <remarks/>
        public event GetAppealListCompletedEventHandler GetAppealListCompleted;
        
        /// <remarks/>
        public event GetUserpayListCompletedEventHandler GetUserpayListCompleted;
        
        /// <remarks/>
        public event GetTransportListCompletedEventHandler GetTransportListCompleted;
        
        /// <remarks/>
        public event AdjustDirectPayToErrorCompletedEventHandler AdjustDirectPayToErrorCompleted;
        
        /// <remarks/>
        public event GetDirectPayCheckListCompletedEventHandler GetDirectPayCheckListCompleted;
        
        /// <remarks/>
        public event UpdateDirectPayCheckInfoCompletedEventHandler UpdateDirectPayCheckInfoCompleted;
        
        /// <remarks/>
        public event GetUserBindListXCompletedEventHandler GetUserBindListXCompleted;
        
        /// <remarks/>
        public event GetUserBindCountXCompletedEventHandler GetUserBindCountXCompleted;
        
        /// <remarks/>
        public event GetUserBindDetailXCompletedEventHandler GetUserBindDetailXCompleted;
        
        /// <remarks/>
        public event GetRefundListCompletedEventHandler GetRefundListCompleted;
        
        /// <remarks/>
        public event GetRefundListCountCompletedEventHandler GetRefundListCountCompleted;
        
        /// <remarks/>
        public event QueryForFileCompletedEventHandler QueryForFileCompleted;
        
        /// <remarks/>
        public event QueryForXATenpayFileCompletedEventHandler QueryForXATenpayFileCompleted;
        
        /// <remarks/>
        public event GetUserBankRollListCompletedEventHandler GetUserBankRollListCompleted;
        
        /// <remarks/>
        public event GetUserBankRollList_allCompletedEventHandler GetUserBankRollList_allCompleted;
        
        /// <remarks/>
        public event GetUserBankRollCountCompletedEventHandler GetUserBankRollCountCompleted;
        
        /// <remarks/>
        public event GetMediUserChangeCompletedEventHandler GetMediUserChangeCompleted;
        
        /// <remarks/>
        public event GetGiveBackList_CheckCompletedEventHandler GetGiveBackList_CheckCompleted;
        
        /// <remarks/>
        public event CheckTraderRefundCompletedEventHandler CheckTraderRefundCompleted;
        
        /// <remarks/>
        public event CanStartTraderRefundCompletedEventHandler CanStartTraderRefundCompleted;
        
        /// <remarks/>
        public event GetMerchantMidUidCompletedEventHandler GetMerchantMidUidCompleted;
        
        /// <remarks/>
        public event GetSpidByMidUidCompletedEventHandler GetSpidByMidUidCompleted;
        
        /// <remarks/>
        public event GetBatchTransferCountCompletedEventHandler GetBatchTransferCountCompleted;
        
        /// <remarks/>
        public event GetBatchTransferListCompletedEventHandler GetBatchTransferListCompleted;
        
        /// <remarks/>
        public event GetBatchTransferTotalCompletedEventHandler GetBatchTransferTotalCompleted;
        
        /// <remarks/>
        public event GetRefundHistoryDetailCompletedEventHandler GetRefundHistoryDetailCompleted;
        
        /// <remarks/>
        public event GetPayInfoForRefundCompletedEventHandler GetPayInfoForRefundCompleted;
        
        /// <remarks/>
        public event GetPayInfoForDataListCompletedEventHandler GetPayInfoForDataListCompleted;
        
        /// <remarks/>
        public event QueryExportBankCompletedEventHandler QueryExportBankCompleted;
        
        /// <remarks/>
        public event QueryExportBankByIdCompletedEventHandler QueryExportBankByIdCompleted;
        
        /// <remarks/>
        public event QueryExportBankByObjidCompletedEventHandler QueryExportBankByObjidCompleted;
        
        /// <remarks/>
        public event QueryExportTaskCommCompletedEventHandler QueryExportTaskCommCompleted;
        
        /// <remarks/>
        public event QueryExportTaskCommByObjidCompletedEventHandler QueryExportTaskCommByObjidCompleted;
        
        /// <remarks/>
        public event QueryExportTaskCommByIdCompletedEventHandler QueryExportTaskCommByIdCompleted;
        
        /// <remarks/>
        public event QueryExportTaskTmpCompletedEventHandler QueryExportTaskTmpCompleted;
        
        /// <remarks/>
        public event QueryExportTaskTmpByObjidCompletedEventHandler QueryExportTaskTmpByObjidCompleted;
        
        /// <remarks/>
        public event QueryExportTaskTmpByIdCompletedEventHandler QueryExportTaskTmpByIdCompleted;
        
        /// <remarks/>
        public event QueryExportBankrestCompletedEventHandler QueryExportBankrestCompleted;
        
        /// <remarks/>
        public event QueryExportBankrestByIdCompletedEventHandler QueryExportBankrestByIdCompleted;
        
        /// <remarks/>
        public event QueryExportBankrestByObjidCompletedEventHandler QueryExportBankrestByObjidCompleted;
        
        /// <remarks/>
        public event QueryGWQAccountInfoCompletedEventHandler QueryGWQAccountInfoCompleted;
        
        /// <remarks/>
        public event QueryGWQAccountInfoCountCompletedEventHandler QueryGWQAccountInfoCountCompleted;
        
        /// <remarks/>
        public event QueryGWQAccountByIdCompletedEventHandler QueryGWQAccountByIdCompleted;
        
        /// <remarks/>
        public event QueryGWQUseInfoCompletedEventHandler QueryGWQUseInfoCompleted;
        
        /// <remarks/>
        public event QueryRecoverGWQAccountCompletedEventHandler QueryRecoverGWQAccountCompleted;
        
        /// <remarks/>
        public event QueryZWDicInfoCompletedEventHandler QueryZWDicInfoCompleted;
        
        /// <remarks/>
        public event QueryZWDicByIdCompletedEventHandler QueryZWDicByIdCompleted;
        
        /// <remarks/>
        public event GetFundDispatchListCompletedEventHandler GetFundDispatchListCompleted;
        
        /// <remarks/>
        public event GetpospDispatchListCompletedEventHandler GetpospDispatchListCompleted;
        
        /// <remarks/>
        public event QueryConfigBankTypeInfoCompletedEventHandler QueryConfigBankTypeInfoCompleted;
        
        /// <remarks/>
        public event QueryTDICInfoByValueCompletedEventHandler QueryTDICInfoByValueCompleted;
        
        /// <remarks/>
        public event QueryTCBANKInfoByValueCompletedEventHandler QueryTCBANKInfoByValueCompleted;
        
        /// <remarks/>
        public event QueryTSUBJECTInfoByValueCompletedEventHandler QueryTSUBJECTInfoByValueCompleted;
        
        /// <remarks/>
        public event QueryTPRODUCTInfoByValueCompletedEventHandler QueryTPRODUCTInfoByValueCompleted;
        
        /// <remarks/>
        public event QueryTBANKInfoByValueCompletedEventHandler QueryTBANKInfoByValueCompleted;
        
        /// <remarks/>
        public event QueryTBANKKEYSByValueCompletedEventHandler QueryTBANKKEYSByValueCompleted;
        
        /// <remarks/>
        public event QueryTBANKCODEBytypeCompletedEventHandler QueryTBANKCODEBytypeCompleted;
        
        /// <remarks/>
        public event QueryTBANKCLASSBytypeCompletedEventHandler QueryTBANKCLASSBytypeCompleted;
        
        /// <remarks/>
        public event QueryTFile_Model_Relation_BytypeCompletedEventHandler QueryTFile_Model_Relation_BytypeCompleted;
        
        /// <remarks/>
        public event QueryTDICInfoByObjidCompletedEventHandler QueryTDICInfoByObjidCompleted;
        
        /// <remarks/>
        public event QueryTCBANKInfoByObjidCompletedEventHandler QueryTCBANKInfoByObjidCompleted;
        
        /// <remarks/>
        public event QueryTSUBJECTInfoByObjidCompletedEventHandler QueryTSUBJECTInfoByObjidCompleted;
        
        /// <remarks/>
        public event QueryTPRODUCTInfoByObjidCompletedEventHandler QueryTPRODUCTInfoByObjidCompleted;
        
        /// <remarks/>
        public event QueryTBANKInfoByObjidCompletedEventHandler QueryTBANKInfoByObjidCompleted;
        
        /// <remarks/>
        public event QueryTBANKKEYSByObjidCompletedEventHandler QueryTBANKKEYSByObjidCompleted;
        
        /// <remarks/>
        public event QueryTBANKCLASSByObjidCompletedEventHandler QueryTBANKCLASSByObjidCompleted;
        
        /// <remarks/>
        public event QueryTbankcodeByObjidCompletedEventHandler QueryTbankcodeByObjidCompleted;
        
        /// <remarks/>
        public event QueryFileModelInfoCompletedEventHandler QueryFileModelInfoCompleted;
        
        /// <remarks/>
        public event GetAllFileModelNameCompletedEventHandler GetAllFileModelNameCompleted;
        
        /// <remarks/>
        public event QueryTFile_Model_Relation_ByObjidCompletedEventHandler QueryTFile_Model_Relation_ByObjidCompleted;
        
        /// <remarks/>
        public event GetBatchpayZCCountCompletedEventHandler GetBatchpayZCCountCompleted;
        
        /// <remarks/>
        public event QueryBatchpayZCInfoCompletedEventHandler QueryBatchpayZCInfoCompleted;
        
        /// <remarks/>
        public event GetBatchRefundCountCompletedEventHandler GetBatchRefundCountCompleted;
        
        /// <remarks/>
        public event GetBatchRefundListCompletedEventHandler GetBatchRefundListCompleted;
        
        /// <remarks/>
        public event GetBatchRefundTotalCompletedEventHandler GetBatchRefundTotalCompleted;
        
        /// <remarks/>
        public event DownMediCertByIdCompletedEventHandler DownMediCertByIdCompleted;
        
        /// <remarks/>
        public event BatchSynPayStateCompletedEventHandler BatchSynPayStateCompleted;
        
        /// <remarks/>
        public event GetHongBaoPubDataCompletedEventHandler GetHongBaoPubDataCompleted;
        
        /// <remarks/>
        public event GetHongBaoDetailDataCompletedEventHandler GetHongBaoDetailDataCompleted;
        
        /// <remarks/>
        public event GetHongBaoDataCompletedEventHandler GetHongBaoDataCompleted;
        
        /// <remarks/>
        public event QueryCreditAllInfoCompletedEventHandler QueryCreditAllInfoCompleted;
        
        /// <remarks/>
        public event QueryCreditAllInfo_countCompletedEventHandler QueryCreditAllInfo_countCompleted;
        
        /// <remarks/>
        public event QueryCreditSendListCompletedEventHandler QueryCreditSendListCompleted;
        
        /// <remarks/>
        public event QueryCreditSendList_countCompletedEventHandler QueryCreditSendList_countCompleted;
        
        /// <remarks/>
        public event GetPOSBankrollCountCompletedEventHandler GetPOSBankrollCountCompleted;
        
        /// <remarks/>
        public event GetPOSBankrollListCompletedEventHandler GetPOSBankrollListCompleted;
        
        /// <remarks/>
        public event GetBatchPOSBankrollInfoCompletedEventHandler GetBatchPOSBankrollInfoCompleted;
        
        /// <remarks/>
        public event GetPOSCheckResultCountCompletedEventHandler GetPOSCheckResultCountCompleted;
        
        /// <remarks/>
        public event GetPOSCheckResultListCompletedEventHandler GetPOSCheckResultListCompleted;
        
        /// <remarks/>
        public event GetPOSCheckResultList2CompletedEventHandler GetPOSCheckResultList2Completed;
        
        /// <remarks/>
        public event SetPOSResultDoingCompletedEventHandler SetPOSResultDoingCompleted;
        
        /// <remarks/>
        public event GetPOSResultTotalCompletedEventHandler GetPOSResultTotalCompleted;
        
        /// <remarks/>
        public event GetSysBankBulletinCompletedEventHandler GetSysBankBulletinCompleted;
        
        /// <remarks/>
        public event QueryBankBulletinByIdCompletedEventHandler QueryBankBulletinByIdCompleted;
        
        /// <remarks/>
        public event QueryBankBulletinInfoByObjidCompletedEventHandler QueryBankBulletinInfoByObjidCompleted;
        
        /// <remarks/>
        public event GetBankByTypeCompletedEventHandler GetBankByTypeCompleted;
        
        /// <remarks/>
        public event FuncUserListCompletedEventHandler FuncUserListCompleted;
        
        /// <remarks/>
        public event FuncUserListCountCompletedEventHandler FuncUserListCountCompleted;
        
        /// <remarks/>
        public event FileModelISExistCompletedEventHandler FileModelISExistCompleted;
        
        /// <remarks/>
        public event InsertFileModelCompletedEventHandler InsertFileModelCompleted;
        
        /// <remarks/>
        public event DeleteFileModelCompletedEventHandler DeleteFileModelCompleted;
        
        /// <remarks/>
        public event IsQuickPayBankTypeCompletedEventHandler IsQuickPayBankTypeCompleted;
        
        /// <remarks/>
        public event GetFundWaterListCompletedEventHandler GetFundWaterListCompleted;
        
        /// <remarks/>
        public event GetFundWaterCountCompletedEventHandler GetFundWaterCountCompleted;
        
        /// <remarks/>
        public event GetFundWaterErrorCountCompletedEventHandler GetFundWaterErrorCountCompleted;
        
        /// <remarks/>
        public event GetFundWaterErrorListCompletedEventHandler GetFundWaterErrorListCompleted;
        
        /// <remarks/>
        public event GetFundWaterErrorTotalCompletedEventHandler GetFundWaterErrorTotalCompleted;
        
        /// <remarks/>
        public event SetFundWaterErrorDoingCompletedEventHandler SetFundWaterErrorDoingCompleted;
        
        /// <remarks/>
        public event FundWaterRefundCheckCompletedEventHandler FundWaterRefundCheckCompleted;
        
        /// <remarks/>
        public event GetDirectSpmRefundListCompletedEventHandler GetDirectSpmRefundListCompleted;
        
        /// <remarks/>
        public event GetDirectSpmRefundCountCompletedEventHandler GetDirectSpmRefundCountCompleted;
        
        /// <remarks/>
        public event GetBatchDirectSpmRefundListCompletedEventHandler GetBatchDirectSpmRefundListCompleted;
        
        /// <remarks/>
        public event QueryCepBankInfo_ListCompletedEventHandler QueryCepBankInfo_ListCompleted;
        
        /// <remarks/>
        public event QueryCepBankInfo_DetailCompletedEventHandler QueryCepBankInfo_DetailCompleted;
        
        /// <remarks/>
        public event QueryCepBankInfo_Detail_CheckCompletedEventHandler QueryCepBankInfo_Detail_CheckCompleted;
        
        /// <remarks/>
        public event GetPayMatch_BankaccListCompletedEventHandler GetPayMatch_BankaccListCompleted;
        
        /// <remarks/>
        public event GetPayMatch_BankaccBatchListCompletedEventHandler GetPayMatch_BankaccBatchListCompleted;
        
        /// <remarks/>
        public event GetPayMatch_BankDetailListCompletedEventHandler GetPayMatch_BankDetailListCompleted;
        
        /// <remarks/>
        public event GetPayMatch_TaskStateCompletedEventHandler GetPayMatch_TaskStateCompleted;
        
        /// <remarks/>
        public event GetPayMatch_TaskListCompletedEventHandler GetPayMatch_TaskListCompleted;
        
        /// <remarks/>
        public event HasPayMatchDetailCompletedEventHandler HasPayMatchDetailCompleted;
        
        /// <remarks/>
        public event HasPayMatchTaskCompletedEventHandler HasPayMatchTaskCompleted;
        
        /// <remarks/>
        public event GetPayMatch_TaskDetailCompletedEventHandler GetPayMatch_TaskDetailCompleted;
        
        /// <remarks/>
        public event PayMatch_Detail2ErrorCompletedEventHandler PayMatch_Detail2ErrorCompleted;
        
        /// <remarks/>
        public event GetBatchRefundForCompensationListCompletedEventHandler GetBatchRefundForCompensationListCompleted;
        
        /// <remarks/>
        public event GetBatchRefundForCompensationTotalCompletedEventHandler GetBatchRefundForCompensationTotalCompleted;
        
        /// <remarks/>
        public event GetBatchRefundForCompensationCountCompletedEventHandler GetBatchRefundForCompensationCountCompleted;
        
        /// <remarks/>
        public event CheckCompensationRefundCompletedEventHandler CheckCompensationRefundCompleted;
        
        /// <remarks/>
        public event GetLogCompletedEventHandler GetLogCompleted;
        
        /// <remarks/>
        public event GetUtility_chargeCompletedEventHandler GetUtility_chargeCompleted;
        
        /// <remarks/>
        public event QueryUCBulletinByIdCompletedEventHandler QueryUCBulletinByIdCompleted;
        
        /// <remarks/>
        public event QueryUCBulletinInfoByObjidCompletedEventHandler QueryUCBulletinInfoByObjidCompleted;
        
        /// <remarks/>
        public event CheckExecuteSqlCompletedEventHandler CheckExecuteSqlCompleted;
        
        /// <remarks/>
        public event QueryCheckParamInfoCompletedEventHandler QueryCheckParamInfoCompleted;
        
        /// <remarks/>
        public event GetUserBalanceCompletedEventHandler GetUserBalanceCompleted;
        
        /// <remarks/>
        public event GetUserBalanceByUIdCompletedEventHandler GetUserBalanceByUIdCompleted;
        
        /// <remarks/>
        public event FeeContractQueryCompletedEventHandler FeeContractQueryCompleted;
        
        /// <remarks/>
        public event GetInsureAccountCompletedEventHandler GetInsureAccountCompleted;
        
        /// <remarks/>
        public event GetOutPayCBListCompletedEventHandler GetOutPayCBListCompleted;
        
        /// <remarks/>
        public event GetOutPayCBCountCompletedEventHandler GetOutPayCBCountCompleted;
        
        /// <remarks/>
        public event GetOutPayCBSumAmountCompletedEventHandler GetOutPayCBSumAmountCompleted;
        
        /// <remarks/>
        public event GetXinHuaBankTransactionListCompletedEventHandler GetXinHuaBankTransactionListCompleted;
        
        /// <remarks/>
        public event GetXinHuaBankTransactionCountCompletedEventHandler GetXinHuaBankTransactionCountCompleted;
        
        /// <remarks/>
        public event QueryBauPaySourceByListCompletedEventHandler QueryBauPaySourceByListCompleted;
        
        /// <remarks/>
        public event GetGiveBackResultListCompletedEventHandler GetGiveBackResultListCompleted;
        
        /// <remarks/>
        public event GetGiveBackResultCountCompletedEventHandler GetGiveBackResultCountCompleted;
        
        /// <remarks/>
        public event QueryDirectPayNCInfoCompletedEventHandler QueryDirectPayNCInfoCompleted;
        
        /// <remarks/>
        public event QueryDirectNCInfoByIdCompletedEventHandler QueryDirectNCInfoByIdCompleted;
        
        /// <remarks/>
        public event QueryDirectNCInfoByObjidCompletedEventHandler QueryDirectNCInfoByObjidCompleted;
        
        /// <remarks/>
        public event GetCBZWBillListCompletedEventHandler GetCBZWBillListCompleted;
        
        /// <remarks/>
        public event GetCBZWBillCountCompletedEventHandler GetCBZWBillCountCompleted;
        
        /// <remarks/>
        public event GetCBZWBillSumAmtCompletedEventHandler GetCBZWBillSumAmtCompleted;
        
        /// <remarks/>
        public event QueryDirectErrCodeInfoCompletedEventHandler QueryDirectErrCodeInfoCompleted;
        
        /// <remarks/>
        public event QueryDirectErrCodeByIdCompletedEventHandler QueryDirectErrCodeByIdCompleted;
        
        /// <remarks/>
        public event QueryDirectErrCodeByObjidCompletedEventHandler QueryDirectErrCodeByObjidCompleted;
        
        /// <remarks/>
        public event QueryBankPayAbilityCompletedEventHandler QueryBankPayAbilityCompleted;
        
        /// <remarks/>
        public event ListBankPayAbilitiesCompletedEventHandler ListBankPayAbilitiesCompleted;
        
        /// <remarks/>
        public event QueryBankRefundAbilityCompletedEventHandler QueryBankRefundAbilityCompleted;
        
        /// <remarks/>
        public event ListBankRefundAbilitiesCompletedEventHandler ListBankRefundAbilitiesCompleted;
        
        /// <remarks/>
        public event QueryBankPayAbilityFromCheckParamsCompletedEventHandler QueryBankPayAbilityFromCheckParamsCompleted;
        
        /// <remarks/>
        public event QueryBankRefundAbilityFromCheckParamsCompletedEventHandler QueryBankRefundAbilityFromCheckParamsCompleted;
        
        /// <remarks/>
        public event QueryPaymentReturnStatisticsCompletedEventHandler QueryPaymentReturnStatisticsCompleted;
        
        /// <remarks/>
        public event QueryPaymentReturnDetailsCompletedEventHandler QueryPaymentReturnDetailsCompleted;
        
        /// <remarks/>
        public event QueryPaymentReturnDetailsSumTotalAmtCompletedEventHandler QueryPaymentReturnDetailsSumTotalAmtCompleted;
        
        /// <remarks/>
        public event QueryPaymentReturnDetailsBankTypeCompletedEventHandler QueryPaymentReturnDetailsBankTypeCompleted;
        
        /// <remarks/>
        public event QueryRefundSnopShotLogCompletedEventHandler QueryRefundSnopShotLogCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserAccount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserAccount(string u_QQID, int fcurtype, int istr, int imax) {
            object[] results = this.Invoke("GetUserAccount", new object[] {
                        u_QQID,
                        fcurtype,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAccount(string u_QQID, int fcurtype, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAccount", new object[] {
                        u_QQID,
                        fcurtype,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAccountAsync(string u_QQID, int fcurtype, int istr, int imax) {
            this.GetUserAccountAsync(u_QQID, fcurtype, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserAccountAsync(string u_QQID, int fcurtype, int istr, int imax, object userState) {
            if ((this.GetUserAccountOperationCompleted == null)) {
                this.GetUserAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAccountOperationCompleted);
            }
            this.InvokeAsync("GetUserAccount", new object[] {
                        u_QQID,
                        fcurtype,
                        istr,
                        imax}, this.GetUserAccountOperationCompleted, userState);
        }
        
        private void OnGetUserAccountOperationCompleted(object arg) {
            if ((this.GetUserAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAccountCompleted(this, new GetUserAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserAccountFromWechat", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserAccountFromWechat(string u_QQID, int istr, int imax) {
            object[] results = this.Invoke("GetUserAccountFromWechat", new object[] {
                        u_QQID,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAccountFromWechat(string u_QQID, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAccountFromWechat", new object[] {
                        u_QQID,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserAccountFromWechat(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAccountFromWechatAsync(string u_QQID, int istr, int imax) {
            this.GetUserAccountFromWechatAsync(u_QQID, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserAccountFromWechatAsync(string u_QQID, int istr, int imax, object userState) {
            if ((this.GetUserAccountFromWechatOperationCompleted == null)) {
                this.GetUserAccountFromWechatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAccountFromWechatOperationCompleted);
            }
            this.InvokeAsync("GetUserAccountFromWechat", new object[] {
                        u_QQID,
                        istr,
                        imax}, this.GetUserAccountFromWechatOperationCompleted, userState);
        }
        
        private void OnGetUserAccountFromWechatOperationCompleted(object arg) {
            if ((this.GetUserAccountFromWechatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAccountFromWechatCompleted(this, new GetUserAccountFromWechatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetChildrenInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetChildrenInfo(string u_QQID, string Fcurtype) {
            object[] results = this.Invoke("GetChildrenInfo", new object[] {
                        u_QQID,
                        Fcurtype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChildrenInfo(string u_QQID, string Fcurtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChildrenInfo", new object[] {
                        u_QQID,
                        Fcurtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetChildrenInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChildrenInfoAsync(string u_QQID, string Fcurtype) {
            this.GetChildrenInfoAsync(u_QQID, Fcurtype, null);
        }
        
        /// <remarks/>
        public void GetChildrenInfoAsync(string u_QQID, string Fcurtype, object userState) {
            if ((this.GetChildrenInfoOperationCompleted == null)) {
                this.GetChildrenInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildrenInfoOperationCompleted);
            }
            this.InvokeAsync("GetChildrenInfo", new object[] {
                        u_QQID,
                        Fcurtype}, this.GetChildrenInfoOperationCompleted, userState);
        }
        
        private void OnGetChildrenInfoOperationCompleted(object arg) {
            if ((this.GetChildrenInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildrenInfoCompleted(this, new GetChildrenInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ChildrenFreezeOrUnfreeze", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChildrenFreezeOrUnfreeze(string u_QQID, string Fcurtype, string UpdateFstate) {
            this.Invoke("ChildrenFreezeOrUnfreeze", new object[] {
                        u_QQID,
                        Fcurtype,
                        UpdateFstate});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChildrenFreezeOrUnfreeze(string u_QQID, string Fcurtype, string UpdateFstate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChildrenFreezeOrUnfreeze", new object[] {
                        u_QQID,
                        Fcurtype,
                        UpdateFstate}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndChildrenFreezeOrUnfreeze(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ChildrenFreezeOrUnfreezeAsync(string u_QQID, string Fcurtype, string UpdateFstate) {
            this.ChildrenFreezeOrUnfreezeAsync(u_QQID, Fcurtype, UpdateFstate, null);
        }
        
        /// <remarks/>
        public void ChildrenFreezeOrUnfreezeAsync(string u_QQID, string Fcurtype, string UpdateFstate, object userState) {
            if ((this.ChildrenFreezeOrUnfreezeOperationCompleted == null)) {
                this.ChildrenFreezeOrUnfreezeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChildrenFreezeOrUnfreezeOperationCompleted);
            }
            this.InvokeAsync("ChildrenFreezeOrUnfreeze", new object[] {
                        u_QQID,
                        Fcurtype,
                        UpdateFstate}, this.ChildrenFreezeOrUnfreezeOperationCompleted, userState);
        }
        
        private void OnChildrenFreezeOrUnfreezeOperationCompleted(object arg) {
            if ((this.ChildrenFreezeOrUnfreezeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChildrenFreezeOrUnfreezeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetChildrenFlistList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetChildrenFlistList(string Flistid, string Fcurtype) {
            object[] results = this.Invoke("GetChildrenFlistList", new object[] {
                        Flistid,
                        Fcurtype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChildrenFlistList(string Flistid, string Fcurtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChildrenFlistList", new object[] {
                        Flistid,
                        Fcurtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetChildrenFlistList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChildrenFlistListAsync(string Flistid, string Fcurtype) {
            this.GetChildrenFlistListAsync(Flistid, Fcurtype, null);
        }
        
        /// <remarks/>
        public void GetChildrenFlistListAsync(string Flistid, string Fcurtype, object userState) {
            if ((this.GetChildrenFlistListOperationCompleted == null)) {
                this.GetChildrenFlistListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildrenFlistListOperationCompleted);
            }
            this.InvokeAsync("GetChildrenFlistList", new object[] {
                        Flistid,
                        Fcurtype}, this.GetChildrenFlistListOperationCompleted, userState);
        }
        
        private void OnGetChildrenFlistListOperationCompleted(object arg) {
            if ((this.GetChildrenFlistListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildrenFlistListCompleted(this, new GetChildrenFlistListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserMedInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_USER_MED GetUserMedInfo(string SPID, int fcurtype, int istr, int imax) {
            object[] results = this.Invoke("GetUserMedInfo", new object[] {
                        SPID,
                        fcurtype,
                        istr,
                        imax});
            return ((T_USER_MED)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserMedInfo(string SPID, int fcurtype, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserMedInfo", new object[] {
                        SPID,
                        fcurtype,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_USER_MED EndGetUserMedInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((T_USER_MED)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserMedInfoAsync(string SPID, int fcurtype, int istr, int imax) {
            this.GetUserMedInfoAsync(SPID, fcurtype, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserMedInfoAsync(string SPID, int fcurtype, int istr, int imax, object userState) {
            if ((this.GetUserMedInfoOperationCompleted == null)) {
                this.GetUserMedInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserMedInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserMedInfo", new object[] {
                        SPID,
                        fcurtype,
                        istr,
                        imax}, this.GetUserMedInfoOperationCompleted, userState);
        }
        
        private void OnGetUserMedInfoOperationCompleted(object arg) {
            if ((this.GetUserMedInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserMedInfoCompleted(this, new GetUserMedInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserMedInfoList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserMedInfoList() {
            object[] results = this.Invoke("GetUserMedInfoList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserMedInfoList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserMedInfoList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserMedInfoList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserMedInfoListAsync() {
            this.GetUserMedInfoListAsync(null);
        }
        
        /// <remarks/>
        public void GetUserMedInfoListAsync(object userState) {
            if ((this.GetUserMedInfoListOperationCompleted == null)) {
                this.GetUserMedInfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserMedInfoListOperationCompleted);
            }
            this.InvokeAsync("GetUserMedInfoList", new object[0], this.GetUserMedInfoListOperationCompleted, userState);
        }
        
        private void OnGetUserMedInfoListOperationCompleted(object arg) {
            if ((this.GetUserMedInfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserMedInfoListCompleted(this, new GetUserMedInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserInfo(string u_QQID, int istr, int imax) {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                        u_QQID,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserInfo(string u_QQID, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserInfo", new object[] {
                        u_QQID,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string u_QQID, int istr, int imax) {
            this.GetUserInfoAsync(u_QQID, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string u_QQID, int istr, int imax, object userState) {
            if ((this.GetUserInfoOperationCompleted == null)) {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                        u_QQID,
                        istr,
                        imax}, this.GetUserInfoOperationCompleted, userState);
        }
        
        private void OnGetUserInfoOperationCompleted(object arg) {
            if ((this.GetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBankAccount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserBankAccount(string u_QQID, int istr, int imax) {
            object[] results = this.Invoke("GetUserBankAccount", new object[] {
                        u_QQID,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBankAccount(string u_QQID, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBankAccount", new object[] {
                        u_QQID,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserBankAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBankAccountAsync(string u_QQID, int istr, int imax) {
            this.GetUserBankAccountAsync(u_QQID, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserBankAccountAsync(string u_QQID, int istr, int imax, object userState) {
            if ((this.GetUserBankAccountOperationCompleted == null)) {
                this.GetUserBankAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBankAccountOperationCompleted);
            }
            this.InvokeAsync("GetUserBankAccount", new object[] {
                        u_QQID,
                        istr,
                        imax}, this.GetUserBankAccountOperationCompleted, userState);
        }
        
        private void OnGetUserBankAccountOperationCompleted(object arg) {
            if ((this.GetUserBankAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBankAccountCompleted(this, new GetUserBankAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchUserBankAccount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBatchUserBankAccount(string u_QQID) {
            object[] results = this.Invoke("GetBatchUserBankAccount", new object[] {
                        u_QQID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchUserBankAccount(string u_QQID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchUserBankAccount", new object[] {
                        u_QQID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBatchUserBankAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchUserBankAccountAsync(string u_QQID) {
            this.GetBatchUserBankAccountAsync(u_QQID, null);
        }
        
        /// <remarks/>
        public void GetBatchUserBankAccountAsync(string u_QQID, object userState) {
            if ((this.GetBatchUserBankAccountOperationCompleted == null)) {
                this.GetBatchUserBankAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchUserBankAccountOperationCompleted);
            }
            this.InvokeAsync("GetBatchUserBankAccount", new object[] {
                        u_QQID}, this.GetBatchUserBankAccountOperationCompleted, userState);
        }
        
        private void OnGetBatchUserBankAccountOperationCompleted(object arg) {
            if ((this.GetBatchUserBankAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchUserBankAccountCompleted(this, new GetBatchUserBankAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayList(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            object[] results = this.Invoke("GetPayList", new object[] {
                        u_ID,
                        u_IDType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayList(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayList", new object[] {
                        u_ID,
                        u_IDType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayListAsync(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            this.GetPayListAsync(u_ID, u_IDType, fcurtype, u_BeginTime, u_EndTime, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetPayListAsync(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, object userState) {
            if ((this.GetPayListOperationCompleted == null)) {
                this.GetPayListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayListOperationCompleted);
            }
            this.InvokeAsync("GetPayList", new object[] {
                        u_ID,
                        u_IDType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, this.GetPayListOperationCompleted, userState);
        }
        
        private void OnGetPayListOperationCompleted(object arg) {
            if ((this.GetPayListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayListCompleted(this, new GetPayListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserOPLog", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserOPLog(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            object[] results = this.Invoke("GetUserOPLog", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserOPLog(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserOPLog", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserOPLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserOPLogAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            this.GetUserOPLogAsync(u_ID, u_BeginTime, u_EndTime, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserOPLogAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, object userState) {
            if ((this.GetUserOPLogOperationCompleted == null)) {
                this.GetUserOPLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOPLogOperationCompleted);
            }
            this.InvokeAsync("GetUserOPLog", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, this.GetUserOPLogOperationCompleted, userState);
        }
        
        private void OnGetUserOPLogOperationCompleted(object arg) {
            if ((this.GetUserOPLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserOPLogCompleted(this, new GetUserOPLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayList_List", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayList_List(string u_ID) {
            object[] results = this.Invoke("GetPayList_List", new object[] {
                        u_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayList_List(string u_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayList_List", new object[] {
                        u_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayList_List(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayList_ListAsync(string u_ID) {
            this.GetPayList_ListAsync(u_ID, null);
        }
        
        /// <remarks/>
        public void GetPayList_ListAsync(string u_ID, object userState) {
            if ((this.GetPayList_ListOperationCompleted == null)) {
                this.GetPayList_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayList_ListOperationCompleted);
            }
            this.InvokeAsync("GetPayList_List", new object[] {
                        u_ID}, this.GetPayList_ListOperationCompleted, userState);
        }
        
        private void OnGetPayList_ListOperationCompleted(object arg) {
            if ((this.GetPayList_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayList_ListCompleted(this, new GetPayList_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayList_Pay", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayList_Pay(string u_ID) {
            object[] results = this.Invoke("GetPayList_Pay", new object[] {
                        u_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayList_Pay(string u_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayList_Pay", new object[] {
                        u_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayList_Pay(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayList_PayAsync(string u_ID) {
            this.GetPayList_PayAsync(u_ID, null);
        }
        
        /// <remarks/>
        public void GetPayList_PayAsync(string u_ID, object userState) {
            if ((this.GetPayList_PayOperationCompleted == null)) {
                this.GetPayList_PayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayList_PayOperationCompleted);
            }
            this.InvokeAsync("GetPayList_Pay", new object[] {
                        u_ID}, this.GetPayList_PayOperationCompleted, userState);
        }
        
        private void OnGetPayList_PayOperationCompleted(object arg) {
            if ((this.GetPayList_PayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayList_PayCompleted(this, new GetPayList_PayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayList_Pick", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayList_Pick(string u_ID) {
            object[] results = this.Invoke("GetPayList_Pick", new object[] {
                        u_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayList_Pick(string u_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayList_Pick", new object[] {
                        u_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayList_Pick(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayList_PickAsync(string u_ID) {
            this.GetPayList_PickAsync(u_ID, null);
        }
        
        /// <remarks/>
        public void GetPayList_PickAsync(string u_ID, object userState) {
            if ((this.GetPayList_PickOperationCompleted == null)) {
                this.GetPayList_PickOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayList_PickOperationCompleted);
            }
            this.InvokeAsync("GetPayList_Pick", new object[] {
                        u_ID}, this.GetPayList_PickOperationCompleted, userState);
        }
        
        private void OnGetPayList_PickOperationCompleted(object arg) {
            if ((this.GetPayList_PickCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayList_PickCompleted(this, new GetPayList_PickCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankRollList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankRollList(string u_QQID, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            object[] results = this.Invoke("GetBankRollList", new object[] {
                        u_QQID,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankRollList(string u_QQID, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankRollList", new object[] {
                        u_QQID,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankRollList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankRollListAsync(string u_QQID, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            this.GetBankRollListAsync(u_QQID, fcurtype, u_BeginTime, u_EndTime, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetBankRollListAsync(string u_QQID, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, object userState) {
            if ((this.GetBankRollListOperationCompleted == null)) {
                this.GetBankRollListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankRollListOperationCompleted);
            }
            this.InvokeAsync("GetBankRollList", new object[] {
                        u_QQID,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, this.GetBankRollListOperationCompleted, userState);
        }
        
        private void OnGetBankRollListOperationCompleted(object arg) {
            if ((this.GetBankRollListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankRollListCompleted(this, new GetBankRollListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankRollList_withID", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankRollList_withID(System.DateTime u_BeginTime, System.DateTime u_EndTime, string ListID, int istr, int imax) {
            object[] results = this.Invoke("GetBankRollList_withID", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        ListID,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankRollList_withID(System.DateTime u_BeginTime, System.DateTime u_EndTime, string ListID, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankRollList_withID", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        ListID,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankRollList_withID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankRollList_withIDAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string ListID, int istr, int imax) {
            this.GetBankRollList_withIDAsync(u_BeginTime, u_EndTime, ListID, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetBankRollList_withIDAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string ListID, int istr, int imax, object userState) {
            if ((this.GetBankRollList_withIDOperationCompleted == null)) {
                this.GetBankRollList_withIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankRollList_withIDOperationCompleted);
            }
            this.InvokeAsync("GetBankRollList_withID", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        ListID,
                        istr,
                        imax}, this.GetBankRollList_withIDOperationCompleted, userState);
        }
        
        private void OnGetBankRollList_withIDOperationCompleted(object arg) {
            if ((this.GetBankRollList_withIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankRollList_withIDCompleted(this, new GetBankRollList_withIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserPayList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserPayList(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            object[] results = this.Invoke("GetUserPayList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserPayList(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserPayList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserPayList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPayListAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            this.GetUserPayListAsync(u_ID, u_IDType, u_BeginTime, u_EndTime, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserPayListAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, object userState) {
            if ((this.GetUserPayListOperationCompleted == null)) {
                this.GetUserPayListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPayListOperationCompleted);
            }
            this.InvokeAsync("GetUserPayList", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, this.GetUserPayListOperationCompleted, userState);
        }
        
        private void OnGetUserPayListOperationCompleted(object arg) {
            if ((this.GetUserPayListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPayListCompleted(this, new GetUserPayListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserPayList_withID", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserPayList_withID(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string slistID, int istr, int imax) {
            object[] results = this.Invoke("GetUserPayList_withID", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        slistID,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserPayList_withID(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string slistID, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserPayList_withID", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        slistID,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserPayList_withID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPayList_withIDAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string slistID, int istr, int imax) {
            this.GetUserPayList_withIDAsync(u_ID, u_BeginTime, u_EndTime, slistID, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetUserPayList_withIDAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string slistID, int istr, int imax, object userState) {
            if ((this.GetUserPayList_withIDOperationCompleted == null)) {
                this.GetUserPayList_withIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPayList_withIDOperationCompleted);
            }
            this.InvokeAsync("GetUserPayList_withID", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        slistID,
                        istr,
                        imax}, this.GetUserPayList_withIDOperationCompleted, userState);
        }
        
        private void OnGetUserPayList_withIDOperationCompleted(object arg) {
            if ((this.GetUserPayList_withIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPayList_withIDCompleted(this, new GetUserPayList_withIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetTCBankAccount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTCBankAccount(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            object[] results = this.Invoke("GetTCBankAccount", new object[] {
                        u_ID,
                        u_IDType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTCBankAccount(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTCBankAccount", new object[] {
                        u_ID,
                        u_IDType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTCBankAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTCBankAccountAsync(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            this.GetTCBankAccountAsync(u_ID, u_IDType, fcurtype, u_BeginTime, u_EndTime, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetTCBankAccountAsync(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, object userState) {
            if ((this.GetTCBankAccountOperationCompleted == null)) {
                this.GetTCBankAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTCBankAccountOperationCompleted);
            }
            this.InvokeAsync("GetTCBankAccount", new object[] {
                        u_ID,
                        u_IDType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, this.GetTCBankAccountOperationCompleted, userState);
        }
        
        private void OnGetTCBankAccountOperationCompleted(object arg) {
            if ((this.GetTCBankAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTCBankAccountCompleted(this, new GetTCBankAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetTCBankRollList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTCBankRollList(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool isHistory, int istr, int imax) {
            object[] results = this.Invoke("GetTCBankRollList", new object[] {
                        u_ID,
                        u_IDType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        isHistory,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTCBankRollList(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool isHistory, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTCBankRollList", new object[] {
                        u_ID,
                        u_IDType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        isHistory,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTCBankRollList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTCBankRollListAsync(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool isHistory, int istr, int imax) {
            this.GetTCBankRollListAsync(u_ID, u_IDType, fcurtype, u_BeginTime, u_EndTime, isHistory, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetTCBankRollListAsync(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool isHistory, int istr, int imax, object userState) {
            if ((this.GetTCBankRollListOperationCompleted == null)) {
                this.GetTCBankRollListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTCBankRollListOperationCompleted);
            }
            this.InvokeAsync("GetTCBankRollList", new object[] {
                        u_ID,
                        u_IDType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        isHistory,
                        istr,
                        imax}, this.GetTCBankRollListOperationCompleted, userState);
        }
        
        private void OnGetTCBankRollListOperationCompleted(object arg) {
            if ((this.GetTCBankRollListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTCBankRollListCompleted(this, new GetTCBankRollListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetTCBankPAYList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTCBankPAYList(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            object[] results = this.Invoke("GetTCBankPAYList", new object[] {
                        u_ID,
                        u_IDType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTCBankPAYList(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTCBankPAYList", new object[] {
                        u_ID,
                        u_IDType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTCBankPAYList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTCBankPAYListAsync(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            this.GetTCBankPAYListAsync(u_ID, u_IDType, fcurtype, u_BeginTime, u_EndTime, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetTCBankPAYListAsync(string u_ID, int u_IDType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, object userState) {
            if ((this.GetTCBankPAYListOperationCompleted == null)) {
                this.GetTCBankPAYListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTCBankPAYListOperationCompleted);
            }
            this.InvokeAsync("GetTCBankPAYList", new object[] {
                        u_ID,
                        u_IDType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, this.GetTCBankPAYListOperationCompleted, userState);
        }
        
        private void OnGetTCBankPAYListOperationCompleted(object arg) {
            if ((this.GetTCBankPAYListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTCBankPAYListCompleted(this, new GetTCBankPAYListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefund", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRefund(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            object[] results = this.Invoke("GetRefund", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefund(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefund", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRefund(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax) {
            this.GetRefundAsync(u_ID, u_IDType, u_BeginTime, u_EndTime, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetRefundAsync(string u_ID, int u_IDType, System.DateTime u_BeginTime, System.DateTime u_EndTime, int istr, int imax, object userState) {
            if ((this.GetRefundOperationCompleted == null)) {
                this.GetRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundOperationCompleted);
            }
            this.InvokeAsync("GetRefund", new object[] {
                        u_ID,
                        u_IDType,
                        u_BeginTime,
                        u_EndTime,
                        istr,
                        imax}, this.GetRefundOperationCompleted, userState);
        }
        
        private void OnGetRefundOperationCompleted(object arg) {
            if ((this.GetRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundCompleted(this, new GetRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayListByType", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayListByType(string u_BuyID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int U_Type, int istr, int imax) {
            object[] results = this.Invoke("GetPayListByType", new object[] {
                        u_BuyID,
                        u_BeginTime,
                        u_EndTime,
                        U_Type,
                        istr,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayListByType(string u_BuyID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int U_Type, int istr, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayListByType", new object[] {
                        u_BuyID,
                        u_BeginTime,
                        u_EndTime,
                        U_Type,
                        istr,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayListByType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayListByTypeAsync(string u_BuyID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int U_Type, int istr, int imax) {
            this.GetPayListByTypeAsync(u_BuyID, u_BeginTime, u_EndTime, U_Type, istr, imax, null);
        }
        
        /// <remarks/>
        public void GetPayListByTypeAsync(string u_BuyID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int U_Type, int istr, int imax, object userState) {
            if ((this.GetPayListByTypeOperationCompleted == null)) {
                this.GetPayListByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayListByTypeOperationCompleted);
            }
            this.InvokeAsync("GetPayListByType", new object[] {
                        u_BuyID,
                        u_BeginTime,
                        u_EndTime,
                        U_Type,
                        istr,
                        imax}, this.GetPayListByTypeOperationCompleted, userState);
        }
        
        private void OnGetPayListByTypeOperationCompleted(object arg) {
            if ((this.GetPayListByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayListByTypeCompleted(this, new GetPayListByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/returnListID", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string returnListID(string sFbankAcc, string sDateTime) {
            object[] results = this.Invoke("returnListID", new object[] {
                        sFbankAcc,
                        sDateTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginreturnListID(string sFbankAcc, string sDateTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("returnListID", new object[] {
                        sFbankAcc,
                        sDateTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndreturnListID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void returnListIDAsync(string sFbankAcc, string sDateTime) {
            this.returnListIDAsync(sFbankAcc, sDateTime, null);
        }
        
        /// <remarks/>
        public void returnListIDAsync(string sFbankAcc, string sDateTime, object userState) {
            if ((this.returnListIDOperationCompleted == null)) {
                this.returnListIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreturnListIDOperationCompleted);
            }
            this.InvokeAsync("returnListID", new object[] {
                        sFbankAcc,
                        sDateTime}, this.returnListIDOperationCompleted, userState);
        }
        
        private void OnreturnListIDOperationCompleted(object arg) {
            if ((this.returnListIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.returnListIDCompleted(this, new returnListIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ValidUser", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TCreateSessionReply ValidUser(string LoginUserID, string strPassword, string userIP) {
            object[] results = this.Invoke("ValidUser", new object[] {
                        LoginUserID,
                        strPassword,
                        userIP});
            return ((TCreateSessionReply)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidUser(string LoginUserID, string strPassword, string userIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidUser", new object[] {
                        LoginUserID,
                        strPassword,
                        userIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public TCreateSessionReply EndValidUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TCreateSessionReply)(results[0]));
        }
        
        /// <remarks/>
        public void ValidUserAsync(string LoginUserID, string strPassword, string userIP) {
            this.ValidUserAsync(LoginUserID, strPassword, userIP, null);
        }
        
        /// <remarks/>
        public void ValidUserAsync(string LoginUserID, string strPassword, string userIP, object userState) {
            if ((this.ValidUserOperationCompleted == null)) {
                this.ValidUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidUserOperationCompleted);
            }
            this.InvokeAsync("ValidUser", new object[] {
                        LoginUserID,
                        strPassword,
                        userIP}, this.ValidUserOperationCompleted, userState);
        }
        
        private void OnValidUserOperationCompleted(object arg) {
            if ((this.ValidUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidUserCompleted(this, new ValidUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ChangeUserPassword", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeUserPassword(string userid, string oldpwdmd5, string newpwdmd5, out string errMsg) {
            object[] results = this.Invoke("ChangeUserPassword", new object[] {
                        userid,
                        oldpwdmd5,
                        newpwdmd5});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeUserPassword(string userid, string oldpwdmd5, string newpwdmd5, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeUserPassword", new object[] {
                        userid,
                        oldpwdmd5,
                        newpwdmd5}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndChangeUserPassword(System.IAsyncResult asyncResult, out string errMsg) {
            object[] results = this.EndInvoke(asyncResult);
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(string userid, string oldpwdmd5, string newpwdmd5) {
            this.ChangeUserPasswordAsync(userid, oldpwdmd5, newpwdmd5, null);
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(string userid, string oldpwdmd5, string newpwdmd5, object userState) {
            if ((this.ChangeUserPasswordOperationCompleted == null)) {
                this.ChangeUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeUserPassword", new object[] {
                        userid,
                        oldpwdmd5,
                        newpwdmd5}, this.ChangeUserPasswordOperationCompleted, userState);
        }
        
        private void OnChangeUserPasswordOperationCompleted(object arg) {
            if ((this.ChangeUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserPasswordCompleted(this, new ChangeUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetLoanList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLoanList(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, bool isHistory, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetLoanList", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        isHistory,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLoanList(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, bool isHistory, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLoanList", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        isHistory,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLoanList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoanListAsync(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, bool isHistory, int iPageStart, int iPageMax) {
            this.GetLoanListAsync(u_ID, u_QueryType, fcurtype, u_BeginTime, u_EndTime, fstate, fnum, fnumMax, banktype, sorttype, isHistory, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetLoanListAsync(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, bool isHistory, int iPageStart, int iPageMax, object userState) {
            if ((this.GetLoanListOperationCompleted == null)) {
                this.GetLoanListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoanListOperationCompleted);
            }
            this.InvokeAsync("GetLoanList", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        isHistory,
                        iPageStart,
                        iPageMax}, this.GetLoanListOperationCompleted, userState);
        }
        
        private void OnGetLoanListOperationCompleted(object arg) {
            if ((this.GetLoanListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoanListCompleted(this, new GetLoanListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundList(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, bool isHistory, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetFundList", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        isHistory,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundList(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, bool isHistory, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundList", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        isHistory,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundListAsync(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, bool isHistory, int iPageStart, int iPageMax) {
            this.GetFundListAsync(u_ID, u_QueryType, fcurtype, u_BeginTime, u_EndTime, fstate, fnum, fnumMax, banktype, sorttype, isHistory, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetFundListAsync(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, bool isHistory, int iPageStart, int iPageMax, object userState) {
            if ((this.GetFundListOperationCompleted == null)) {
                this.GetFundListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundListOperationCompleted);
            }
            this.InvokeAsync("GetFundList", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        isHistory,
                        iPageStart,
                        iPageMax}, this.GetFundListOperationCompleted, userState);
        }
        
        private void OnGetFundListOperationCompleted(object arg) {
            if ((this.GetFundListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundListCompleted(this, new GetFundListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundTotal", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundTotal(string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, bool isHistory) {
            object[] results = this.Invoke("GetFundTotal", new object[] {
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        isHistory});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundTotal(string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, bool isHistory, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundTotal", new object[] {
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        isHistory}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundTotal(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundTotalAsync(string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, bool isHistory) {
            this.GetFundTotalAsync(u_QueryType, fcurtype, u_BeginTime, u_EndTime, fstate, fnum, fnumMax, banktype, isHistory, null);
        }
        
        /// <remarks/>
        public void GetFundTotalAsync(string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, bool isHistory, object userState) {
            if ((this.GetFundTotalOperationCompleted == null)) {
                this.GetFundTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundTotalOperationCompleted);
            }
            this.InvokeAsync("GetFundTotal", new object[] {
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        isHistory}, this.GetFundTotalOperationCompleted, userState);
        }
        
        private void OnGetFundTotalOperationCompleted(object arg) {
            if ((this.GetFundTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundTotalCompleted(this, new GetFundTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFundListCount(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, bool isHistory) {
            object[] results = this.Invoke("GetFundListCount", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        isHistory});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundListCount(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, bool isHistory, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundListCount", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        isHistory}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetFundListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundListCountAsync(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, bool isHistory) {
            this.GetFundListCountAsync(u_ID, u_QueryType, fcurtype, u_BeginTime, u_EndTime, fstate, fnum, fnumMax, banktype, isHistory, null);
        }
        
        /// <remarks/>
        public void GetFundListCountAsync(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, bool isHistory, object userState) {
            if ((this.GetFundListCountOperationCompleted == null)) {
                this.GetFundListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundListCountOperationCompleted);
            }
            this.InvokeAsync("GetFundListCount", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        isHistory}, this.GetFundListCountOperationCompleted, userState);
        }
        
        private void OnGetFundListCountOperationCompleted(object arg) {
            if ((this.GetFundListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundListCountCompleted(this, new GetFundListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundListDetail_New", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundListDetail_New(string listid, string fbank_list, string fbank_type, out string mesgg) {
            object[] results = this.Invoke("GetFundListDetail_New", new object[] {
                        listid,
                        fbank_list,
                        fbank_type});
            mesgg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundListDetail_New(string listid, string fbank_list, string fbank_type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundListDetail_New", new object[] {
                        listid,
                        fbank_list,
                        fbank_type}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundListDetail_New(System.IAsyncResult asyncResult, out string mesgg) {
            object[] results = this.EndInvoke(asyncResult);
            mesgg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundListDetail_NewAsync(string listid, string fbank_list, string fbank_type) {
            this.GetFundListDetail_NewAsync(listid, fbank_list, fbank_type, null);
        }
        
        /// <remarks/>
        public void GetFundListDetail_NewAsync(string listid, string fbank_list, string fbank_type, object userState) {
            if ((this.GetFundListDetail_NewOperationCompleted == null)) {
                this.GetFundListDetail_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundListDetail_NewOperationCompleted);
            }
            this.InvokeAsync("GetFundListDetail_New", new object[] {
                        listid,
                        fbank_list,
                        fbank_type}, this.GetFundListDetail_NewOperationCompleted, userState);
        }
        
        private void OnGetFundListDetail_NewOperationCompleted(object arg) {
            if ((this.GetFundListDetail_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundListDetail_NewCompleted(this, new GetFundListDetail_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/IsNewOrderCZData", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsNewOrderCZData(System.DateTime payFrontTime) {
            object[] results = this.Invoke("IsNewOrderCZData", new object[] {
                        payFrontTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsNewOrderCZData(System.DateTime payFrontTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsNewOrderCZData", new object[] {
                        payFrontTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsNewOrderCZData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsNewOrderCZDataAsync(System.DateTime payFrontTime) {
            this.IsNewOrderCZDataAsync(payFrontTime, null);
        }
        
        /// <remarks/>
        public void IsNewOrderCZDataAsync(System.DateTime payFrontTime, object userState) {
            if ((this.IsNewOrderCZDataOperationCompleted == null)) {
                this.IsNewOrderCZDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsNewOrderCZDataOperationCompleted);
            }
            this.InvokeAsync("IsNewOrderCZData", new object[] {
                        payFrontTime}, this.IsNewOrderCZDataOperationCompleted, userState);
        }
        
        private void OnIsNewOrderCZDataOperationCompleted(object arg) {
            if ((this.IsNewOrderCZDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsNewOrderCZDataCompleted(this, new IsNewOrderCZDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankRollListByListId", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankRollListByListId(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetBankRollListByListId", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankRollListByListId(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankRollListByListId", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankRollListByListId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankRollListByListIdAsync(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, int iPageStart, int iPageMax) {
            this.GetBankRollListByListIdAsync(u_ID, u_QueryType, fcurtype, u_BeginTime, u_EndTime, fstate, fnum, fnumMax, banktype, sorttype, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetBankRollListByListIdAsync(string u_ID, string u_QueryType, int fcurtype, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, float fnumMax, string banktype, string sorttype, int iPageStart, int iPageMax, object userState) {
            if ((this.GetBankRollListByListIdOperationCompleted == null)) {
                this.GetBankRollListByListIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankRollListByListIdOperationCompleted);
            }
            this.InvokeAsync("GetBankRollListByListId", new object[] {
                        u_ID,
                        u_QueryType,
                        fcurtype,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        fnumMax,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax}, this.GetBankRollListByListIdOperationCompleted, userState);
        }
        
        private void OnGetBankRollListByListIdOperationCompleted(object arg) {
            if ((this.GetBankRollListByListIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankRollListByListIdCompleted(this, new GetBankRollListByListIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundListDetail(string tdeid, string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag, bool isHistory) {
            object[] results = this.Invoke("GetFundListDetail", new object[] {
                        tdeid,
                        listid,
                        u_BeginTime,
                        u_EndTime,
                        oldflag,
                        isHistory});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundListDetail(string tdeid, string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag, bool isHistory, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundListDetail", new object[] {
                        tdeid,
                        listid,
                        u_BeginTime,
                        u_EndTime,
                        oldflag,
                        isHistory}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundListDetailAsync(string tdeid, string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag, bool isHistory) {
            this.GetFundListDetailAsync(tdeid, listid, u_BeginTime, u_EndTime, oldflag, isHistory, null);
        }
        
        /// <remarks/>
        public void GetFundListDetailAsync(string tdeid, string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag, bool isHistory, object userState) {
            if ((this.GetFundListDetailOperationCompleted == null)) {
                this.GetFundListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundListDetailOperationCompleted);
            }
            this.InvokeAsync("GetFundListDetail", new object[] {
                        tdeid,
                        listid,
                        u_BeginTime,
                        u_EndTime,
                        oldflag,
                        isHistory}, this.GetFundListDetailOperationCompleted, userState);
        }
        
        private void OnGetFundListDetailOperationCompleted(object arg) {
            if ((this.GetFundListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundListDetailCompleted(this, new GetFundListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundListDetail_Subacc", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundListDetail_Subacc(string listid, string fcurtype, out string strResp) {
            object[] results = this.Invoke("GetFundListDetail_Subacc", new object[] {
                        listid,
                        fcurtype});
            strResp = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundListDetail_Subacc(string listid, string fcurtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundListDetail_Subacc", new object[] {
                        listid,
                        fcurtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundListDetail_Subacc(System.IAsyncResult asyncResult, out string strResp) {
            object[] results = this.EndInvoke(asyncResult);
            strResp = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundListDetail_SubaccAsync(string listid, string fcurtype) {
            this.GetFundListDetail_SubaccAsync(listid, fcurtype, null);
        }
        
        /// <remarks/>
        public void GetFundListDetail_SubaccAsync(string listid, string fcurtype, object userState) {
            if ((this.GetFundListDetail_SubaccOperationCompleted == null)) {
                this.GetFundListDetail_SubaccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundListDetail_SubaccOperationCompleted);
            }
            this.InvokeAsync("GetFundListDetail_Subacc", new object[] {
                        listid,
                        fcurtype}, this.GetFundListDetail_SubaccOperationCompleted, userState);
        }
        
        private void OnGetFundListDetail_SubaccOperationCompleted(object arg) {
            if ((this.GetFundListDetail_SubaccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundListDetail_SubaccCompleted(this, new GetFundListDetail_SubaccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundCardListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundCardListDetail(string flistid, string fsupplylist, string fcarrdid) {
            object[] results = this.Invoke("GetFundCardListDetail", new object[] {
                        flistid,
                        fsupplylist,
                        fcarrdid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundCardListDetail(string flistid, string fsupplylist, string fcarrdid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundCardListDetail", new object[] {
                        flistid,
                        fsupplylist,
                        fcarrdid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundCardListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundCardListDetailAsync(string flistid, string fsupplylist, string fcarrdid) {
            this.GetFundCardListDetailAsync(flistid, fsupplylist, fcarrdid, null);
        }
        
        /// <remarks/>
        public void GetFundCardListDetailAsync(string flistid, string fsupplylist, string fcarrdid, object userState) {
            if ((this.GetFundCardListDetailOperationCompleted == null)) {
                this.GetFundCardListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundCardListDetailOperationCompleted);
            }
            this.InvokeAsync("GetFundCardListDetail", new object[] {
                        flistid,
                        fsupplylist,
                        fcarrdid}, this.GetFundCardListDetailOperationCompleted, userState);
        }
        
        private void OnGetFundCardListDetailOperationCompleted(object arg) {
            if ((this.GetFundCardListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundCardListDetailCompleted(this, new GetFundCardListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPickList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPickList(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype, string sorttype, string fpaybankType, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetPickList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        idtype,
                        sorttype,
                        fpaybankType,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPickList(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype, string sorttype, string fpaybankType, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPickList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        idtype,
                        sorttype,
                        fpaybankType,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPickList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPickListAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype, string sorttype, string fpaybankType, int iPageStart, int iPageMax) {
            this.GetPickListAsync(u_ID, u_BeginTime, u_EndTime, fstate, fnum, banktype, idtype, sorttype, fpaybankType, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetPickListAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype, string sorttype, string fpaybankType, int iPageStart, int iPageMax, object userState) {
            if ((this.GetPickListOperationCompleted == null)) {
                this.GetPickListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPickListOperationCompleted);
            }
            this.InvokeAsync("GetPickList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        idtype,
                        sorttype,
                        fpaybankType,
                        iPageStart,
                        iPageMax}, this.GetPickListOperationCompleted, userState);
        }
        
        private void OnGetPickListOperationCompleted(object arg) {
            if ((this.GetPickListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPickListCompleted(this, new GetPickListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPickListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPickListCount(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype) {
            object[] results = this.Invoke("GetPickListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        idtype});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPickListCount(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPickListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        idtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetPickListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPickListCountAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype) {
            this.GetPickListCountAsync(u_ID, u_BeginTime, u_EndTime, fstate, fnum, banktype, idtype, null);
        }
        
        /// <remarks/>
        public void GetPickListCountAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, int idtype, object userState) {
            if ((this.GetPickListCountOperationCompleted == null)) {
                this.GetPickListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPickListCountOperationCompleted);
            }
            this.InvokeAsync("GetPickListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        idtype}, this.GetPickListCountOperationCompleted, userState);
        }
        
        private void OnGetPickListCountOperationCompleted(object arg) {
            if ((this.GetPickListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPickListCountCompleted(this, new GetPickListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPickListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPickListDetail(string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag) {
            object[] results = this.Invoke("GetPickListDetail", new object[] {
                        listid,
                        u_BeginTime,
                        u_EndTime,
                        oldflag});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPickListDetail(string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPickListDetail", new object[] {
                        listid,
                        u_BeginTime,
                        u_EndTime,
                        oldflag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPickListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPickListDetailAsync(string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag) {
            this.GetPickListDetailAsync(listid, u_BeginTime, u_EndTime, oldflag, null);
        }
        
        /// <remarks/>
        public void GetPickListDetailAsync(string listid, System.DateTime u_BeginTime, System.DateTime u_EndTime, bool oldflag, object userState) {
            if ((this.GetPickListDetailOperationCompleted == null)) {
                this.GetPickListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPickListDetailOperationCompleted);
            }
            this.InvokeAsync("GetPickListDetail", new object[] {
                        listid,
                        u_BeginTime,
                        u_EndTime,
                        oldflag}, this.GetPickListDetailOperationCompleted, userState);
        }
        
        private void OnGetPickListDetailOperationCompleted(object arg) {
            if ((this.GetPickListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPickListDetailCompleted(this, new GetPickListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPickListDetail_Subacc", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPickListDetail_Subacc(string flistid) {
            object[] results = this.Invoke("GetPickListDetail_Subacc", new object[] {
                        flistid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPickListDetail_Subacc(string flistid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPickListDetail_Subacc", new object[] {
                        flistid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPickListDetail_Subacc(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPickListDetail_SubaccAsync(string flistid) {
            this.GetPickListDetail_SubaccAsync(flistid, null);
        }
        
        /// <remarks/>
        public void GetPickListDetail_SubaccAsync(string flistid, object userState) {
            if ((this.GetPickListDetail_SubaccOperationCompleted == null)) {
                this.GetPickListDetail_SubaccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPickListDetail_SubaccOperationCompleted);
            }
            this.InvokeAsync("GetPickListDetail_Subacc", new object[] {
                        flistid}, this.GetPickListDetail_SubaccOperationCompleted, userState);
        }
        
        private void OnGetPickListDetail_SubaccOperationCompleted(object arg) {
            if ((this.GetPickListDetail_SubaccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPickListDetail_SubaccCompleted(this, new GetPickListDetail_SubaccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDirectPickList_Prior", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDirectPickList_Prior(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetDirectPickList_Prior", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirectPickList_Prior(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirectPickList_Prior", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDirectPickList_Prior(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectPickList_PriorAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int iPageStart, int iPageMax) {
            this.GetDirectPickList_PriorAsync(u_BeginTime, u_EndTime, banktype, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetDirectPickList_PriorAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int iPageStart, int iPageMax, object userState) {
            if ((this.GetDirectPickList_PriorOperationCompleted == null)) {
                this.GetDirectPickList_PriorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectPickList_PriorOperationCompleted);
            }
            this.InvokeAsync("GetDirectPickList_Prior", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        iPageStart,
                        iPageMax}, this.GetDirectPickList_PriorOperationCompleted, userState);
        }
        
        private void OnGetDirectPickList_PriorOperationCompleted(object arg) {
            if ((this.GetDirectPickList_PriorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectPickList_PriorCompleted(this, new GetDirectPickList_PriorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDirectPickListCount_Prior", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDirectPickListCount_Prior(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype) {
            object[] results = this.Invoke("GetDirectPickListCount_Prior", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirectPickListCount_Prior(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirectPickListCount_Prior", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetDirectPickListCount_Prior(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectPickListCount_PriorAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype) {
            this.GetDirectPickListCount_PriorAsync(u_BeginTime, u_EndTime, banktype, null);
        }
        
        /// <remarks/>
        public void GetDirectPickListCount_PriorAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, object userState) {
            if ((this.GetDirectPickListCount_PriorOperationCompleted == null)) {
                this.GetDirectPickListCount_PriorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectPickListCount_PriorOperationCompleted);
            }
            this.InvokeAsync("GetDirectPickListCount_Prior", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype}, this.GetDirectPickListCount_PriorOperationCompleted, userState);
        }
        
        private void OnGetDirectPickListCount_PriorOperationCompleted(object arg) {
            if ((this.GetDirectPickListCount_PriorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectPickListCount_PriorCompleted(this, new GetDirectPickListCount_PriorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/PickDirectPickList_Prior", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PickDirectPickList_Prior(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, out string msg) {
            object[] results = this.Invoke("PickDirectPickList_Prior", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPickDirectPickList_Prior(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PickDirectPickList_Prior", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndPickDirectPickList_Prior(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PickDirectPickList_PriorAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype) {
            this.PickDirectPickList_PriorAsync(u_BeginTime, u_EndTime, banktype, null);
        }
        
        /// <remarks/>
        public void PickDirectPickList_PriorAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, object userState) {
            if ((this.PickDirectPickList_PriorOperationCompleted == null)) {
                this.PickDirectPickList_PriorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPickDirectPickList_PriorOperationCompleted);
            }
            this.InvokeAsync("PickDirectPickList_Prior", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype}, this.PickDirectPickList_PriorOperationCompleted, userState);
        }
        
        private void OnPickDirectPickList_PriorOperationCompleted(object arg) {
            if ((this.PickDirectPickList_PriorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PickDirectPickList_PriorCompleted(this, new PickDirectPickList_PriorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDirectPickList_Check", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDirectPickList_Check(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetDirectPickList_Check", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirectPickList_Check(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirectPickList_Check", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDirectPickList_Check(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectPickList_CheckAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, int iPageStart, int iPageMax) {
            this.GetDirectPickList_CheckAsync(u_BeginTime, u_EndTime, banktype, checkstate, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetDirectPickList_CheckAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, int iPageStart, int iPageMax, object userState) {
            if ((this.GetDirectPickList_CheckOperationCompleted == null)) {
                this.GetDirectPickList_CheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectPickList_CheckOperationCompleted);
            }
            this.InvokeAsync("GetDirectPickList_Check", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate,
                        iPageStart,
                        iPageMax}, this.GetDirectPickList_CheckOperationCompleted, userState);
        }
        
        private void OnGetDirectPickList_CheckOperationCompleted(object arg) {
            if ((this.GetDirectPickList_CheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectPickList_CheckCompleted(this, new GetDirectPickList_CheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDirectPickListCount_Check", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDirectPickListCount_Check(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate) {
            object[] results = this.Invoke("GetDirectPickListCount_Check", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirectPickListCount_Check(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirectPickListCount_Check", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetDirectPickListCount_Check(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectPickListCount_CheckAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate) {
            this.GetDirectPickListCount_CheckAsync(u_BeginTime, u_EndTime, banktype, checkstate, null);
        }
        
        /// <remarks/>
        public void GetDirectPickListCount_CheckAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, object userState) {
            if ((this.GetDirectPickListCount_CheckOperationCompleted == null)) {
                this.GetDirectPickListCount_CheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectPickListCount_CheckOperationCompleted);
            }
            this.InvokeAsync("GetDirectPickListCount_Check", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate}, this.GetDirectPickListCount_CheckOperationCompleted, userState);
        }
        
        private void OnGetDirectPickListCount_CheckOperationCompleted(object arg) {
            if ((this.GetDirectPickListCount_CheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectPickListCount_CheckCompleted(this, new GetDirectPickListCount_CheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/PickDirectPickList_Check", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PickDirectPickList_Check(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, out string msg) {
            object[] results = this.Invoke("PickDirectPickList_Check", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPickDirectPickList_Check(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PickDirectPickList_Check", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndPickDirectPickList_Check(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PickDirectPickList_CheckAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate) {
            this.PickDirectPickList_CheckAsync(u_BeginTime, u_EndTime, banktype, checkstate, null);
        }
        
        /// <remarks/>
        public void PickDirectPickList_CheckAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, object userState) {
            if ((this.PickDirectPickList_CheckOperationCompleted == null)) {
                this.PickDirectPickList_CheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPickDirectPickList_CheckOperationCompleted);
            }
            this.InvokeAsync("PickDirectPickList_Check", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate}, this.PickDirectPickList_CheckOperationCompleted, userState);
        }
        
        private void OnPickDirectPickList_CheckOperationCompleted(object arg) {
            if ((this.PickDirectPickList_CheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PickDirectPickList_CheckCompleted(this, new PickDirectPickList_CheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDirectPickList_Pay", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDirectPickList_Pay(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetDirectPickList_Pay", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirectPickList_Pay(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirectPickList_Pay", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDirectPickList_Pay(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectPickList_PayAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, int iPageStart, int iPageMax) {
            this.GetDirectPickList_PayAsync(u_BeginTime, u_EndTime, banktype, checkstate, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetDirectPickList_PayAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, int iPageStart, int iPageMax, object userState) {
            if ((this.GetDirectPickList_PayOperationCompleted == null)) {
                this.GetDirectPickList_PayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectPickList_PayOperationCompleted);
            }
            this.InvokeAsync("GetDirectPickList_Pay", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate,
                        iPageStart,
                        iPageMax}, this.GetDirectPickList_PayOperationCompleted, userState);
        }
        
        private void OnGetDirectPickList_PayOperationCompleted(object arg) {
            if ((this.GetDirectPickList_PayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectPickList_PayCompleted(this, new GetDirectPickList_PayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDirectPickListCount_Pay", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDirectPickListCount_Pay(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate) {
            object[] results = this.Invoke("GetDirectPickListCount_Pay", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirectPickListCount_Pay(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirectPickListCount_Pay", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetDirectPickListCount_Pay(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectPickListCount_PayAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate) {
            this.GetDirectPickListCount_PayAsync(u_BeginTime, u_EndTime, banktype, checkstate, null);
        }
        
        /// <remarks/>
        public void GetDirectPickListCount_PayAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string banktype, int checkstate, object userState) {
            if ((this.GetDirectPickListCount_PayOperationCompleted == null)) {
                this.GetDirectPickListCount_PayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectPickListCount_PayOperationCompleted);
            }
            this.InvokeAsync("GetDirectPickListCount_Pay", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        banktype,
                        checkstate}, this.GetDirectPickListCount_PayOperationCompleted, userState);
        }
        
        private void OnGetDirectPickListCount_PayOperationCompleted(object arg) {
            if ((this.GetDirectPickListCount_PayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectPickListCount_PayCompleted(this, new GetDirectPickListCount_PayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DirectPickRePay", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DirectPickRePay(string flistid, out string msg) {
            object[] results = this.Invoke("DirectPickRePay", new object[] {
                        flistid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDirectPickRePay(string flistid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DirectPickRePay", new object[] {
                        flistid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDirectPickRePay(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DirectPickRePayAsync(string flistid) {
            this.DirectPickRePayAsync(flistid, null);
        }
        
        /// <remarks/>
        public void DirectPickRePayAsync(string flistid, object userState) {
            if ((this.DirectPickRePayOperationCompleted == null)) {
                this.DirectPickRePayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDirectPickRePayOperationCompleted);
            }
            this.InvokeAsync("DirectPickRePay", new object[] {
                        flistid}, this.DirectPickRePayOperationCompleted, userState);
        }
        
        private void OnDirectPickRePayOperationCompleted(object arg) {
            if ((this.DirectPickRePayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DirectPickRePayCompleted(this, new DirectPickRePayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGiveBackListX", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGiveBackListX(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, string sorttype, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetGiveBackListX", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGiveBackListX(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, string sorttype, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGiveBackListX", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetGiveBackListX(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGiveBackListXAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, string sorttype, int iPageStart, int iPageMax) {
            this.GetGiveBackListXAsync(u_ID, u_BeginTime, u_EndTime, fstate, fnum, banktype, sorttype, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetGiveBackListXAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, string sorttype, int iPageStart, int iPageMax, object userState) {
            if ((this.GetGiveBackListXOperationCompleted == null)) {
                this.GetGiveBackListXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGiveBackListXOperationCompleted);
            }
            this.InvokeAsync("GetGiveBackListX", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax}, this.GetGiveBackListXOperationCompleted, userState);
        }
        
        private void OnGetGiveBackListXOperationCompleted(object arg) {
            if ((this.GetGiveBackListXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGiveBackListXCompleted(this, new GetGiveBackListXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGiveBackListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] GetGiveBackListCount(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype) {
            object[] results = this.Invoke("GetGiveBackListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGiveBackListCount(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGiveBackListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype}, callback, asyncState);
        }
        
        /// <remarks/>
        public long[] EndGetGiveBackListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGiveBackListCountAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype) {
            this.GetGiveBackListCountAsync(u_ID, u_BeginTime, u_EndTime, fstate, fnum, banktype, null);
        }
        
        /// <remarks/>
        public void GetGiveBackListCountAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, object userState) {
            if ((this.GetGiveBackListCountOperationCompleted == null)) {
                this.GetGiveBackListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGiveBackListCountOperationCompleted);
            }
            this.InvokeAsync("GetGiveBackListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype}, this.GetGiveBackListCountOperationCompleted, userState);
        }
        
        private void OnGetGiveBackListCountOperationCompleted(object arg) {
            if ((this.GetGiveBackListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGiveBackListCountCompleted(this, new GetGiveBackListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediListX", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediListX(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string u_UserFilter, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetMediListX", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        u_UserFilter,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediListX(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string u_UserFilter, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediListX", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        u_UserFilter,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediListX(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediListXAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string u_UserFilter, int iPageStart, int iPageMax) {
            this.GetMediListXAsync(u_ID, u_BeginTime, u_EndTime, u_UserFilter, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetMediListXAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string u_UserFilter, int iPageStart, int iPageMax, object userState) {
            if ((this.GetMediListXOperationCompleted == null)) {
                this.GetMediListXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediListXOperationCompleted);
            }
            this.InvokeAsync("GetMediListX", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        u_UserFilter,
                        iPageStart,
                        iPageMax}, this.GetMediListXOperationCompleted, userState);
        }
        
        private void OnGetMediListXOperationCompleted(object arg) {
            if ((this.GetMediListXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediListXCompleted(this, new GetMediListXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediList(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetMediList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediList(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediListAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax) {
            this.GetMediListAsync(u_ID, u_BeginTime, u_EndTime, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetMediListAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int iPageStart, int iPageMax, object userState) {
            if ((this.GetMediListOperationCompleted == null)) {
                this.GetMediListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediListOperationCompleted);
            }
            this.InvokeAsync("GetMediList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        iPageStart,
                        iPageMax}, this.GetMediListOperationCompleted, userState);
        }
        
        private void OnGetMediListOperationCompleted(object arg) {
            if ((this.GetMediListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediListCompleted(this, new GetMediListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMediListCount(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime) {
            object[] results = this.Invoke("GetMediListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediListCount(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetMediListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediListCountAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime) {
            this.GetMediListCountAsync(u_ID, u_BeginTime, u_EndTime, null);
        }
        
        /// <remarks/>
        public void GetMediListCountAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, object userState) {
            if ((this.GetMediListCountOperationCompleted == null)) {
                this.GetMediListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediListCountOperationCompleted);
            }
            this.InvokeAsync("GetMediListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime}, this.GetMediListCountOperationCompleted, userState);
        }
        
        private void OnGetMediListCountOperationCompleted(object arg) {
            if ((this.GetMediListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediListCountCompleted(this, new GetMediListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetQuickTradeListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQuickTradeListDetail(string listid) {
            object[] results = this.Invoke("GetQuickTradeListDetail", new object[] {
                        listid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQuickTradeListDetail(string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQuickTradeListDetail", new object[] {
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetQuickTradeListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuickTradeListDetailAsync(string listid) {
            this.GetQuickTradeListDetailAsync(listid, null);
        }
        
        /// <remarks/>
        public void GetQuickTradeListDetailAsync(string listid, object userState) {
            if ((this.GetQuickTradeListDetailOperationCompleted == null)) {
                this.GetQuickTradeListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuickTradeListDetailOperationCompleted);
            }
            this.InvokeAsync("GetQuickTradeListDetail", new object[] {
                        listid}, this.GetQuickTradeListDetailOperationCompleted, userState);
        }
        
        private void OnGetQuickTradeListDetailOperationCompleted(object arg) {
            if ((this.GetQuickTradeListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuickTradeListDetailCompleted(this, new GetQuickTradeListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/StartTraderRefund", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartTraderRefund(string listid, long refundAmt, string refundMemo, out string msg) {
            object[] results = this.Invoke("StartTraderRefund", new object[] {
                        listid,
                        refundAmt,
                        refundMemo});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStartTraderRefund(string listid, long refundAmt, string refundMemo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StartTraderRefund", new object[] {
                        listid,
                        refundAmt,
                        refundMemo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndStartTraderRefund(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartTraderRefundAsync(string listid, long refundAmt, string refundMemo) {
            this.StartTraderRefundAsync(listid, refundAmt, refundMemo, null);
        }
        
        /// <remarks/>
        public void StartTraderRefundAsync(string listid, long refundAmt, string refundMemo, object userState) {
            if ((this.StartTraderRefundOperationCompleted == null)) {
                this.StartTraderRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartTraderRefundOperationCompleted);
            }
            this.InvokeAsync("StartTraderRefund", new object[] {
                        listid,
                        refundAmt,
                        refundMemo}, this.StartTraderRefundOperationCompleted, userState);
        }
        
        private void OnStartTraderRefundOperationCompleted(object arg) {
            if ((this.StartTraderRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartTraderRefundCompleted(this, new StartTraderRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/StartTraderRefund_KF", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartTraderRefund_KF(string type, string qqid, string listid, long refundAmt, string refundMemo, string filename, out string msg) {
            object[] results = this.Invoke("StartTraderRefund_KF", new object[] {
                        type,
                        qqid,
                        listid,
                        refundAmt,
                        refundMemo,
                        filename});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStartTraderRefund_KF(string type, string qqid, string listid, long refundAmt, string refundMemo, string filename, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StartTraderRefund_KF", new object[] {
                        type,
                        qqid,
                        listid,
                        refundAmt,
                        refundMemo,
                        filename}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndStartTraderRefund_KF(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartTraderRefund_KFAsync(string type, string qqid, string listid, long refundAmt, string refundMemo, string filename) {
            this.StartTraderRefund_KFAsync(type, qqid, listid, refundAmt, refundMemo, filename, null);
        }
        
        /// <remarks/>
        public void StartTraderRefund_KFAsync(string type, string qqid, string listid, long refundAmt, string refundMemo, string filename, object userState) {
            if ((this.StartTraderRefund_KFOperationCompleted == null)) {
                this.StartTraderRefund_KFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartTraderRefund_KFOperationCompleted);
            }
            this.InvokeAsync("StartTraderRefund_KF", new object[] {
                        type,
                        qqid,
                        listid,
                        refundAmt,
                        refundMemo,
                        filename}, this.StartTraderRefund_KFOperationCompleted, userState);
        }
        
        private void OnStartTraderRefund_KFOperationCompleted(object arg) {
            if ((this.StartTraderRefund_KFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartTraderRefund_KFCompleted(this, new StartTraderRefund_KFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCheckTypeList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_CheckType[] GetCheckTypeList() {
            object[] results = this.Invoke("GetCheckTypeList", new object[0]);
            return ((T_CheckType[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCheckTypeList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCheckTypeList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public T_CheckType[] EndGetCheckTypeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((T_CheckType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCheckTypeListAsync() {
            this.GetCheckTypeListAsync(null);
        }
        
        /// <remarks/>
        public void GetCheckTypeListAsync(object userState) {
            if ((this.GetCheckTypeListOperationCompleted == null)) {
                this.GetCheckTypeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCheckTypeListOperationCompleted);
            }
            this.InvokeAsync("GetCheckTypeList", new object[0], this.GetCheckTypeListOperationCompleted, userState);
        }
        
        private void OnGetCheckTypeListOperationCompleted(object arg) {
            if ((this.GetCheckTypeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCheckTypeListCompleted(this, new GetCheckTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCheckTypeDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_CheckType GetCheckTypeDetail(string TypeID) {
            object[] results = this.Invoke("GetCheckTypeDetail", new object[] {
                        TypeID});
            return ((T_CheckType)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCheckTypeDetail(string TypeID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCheckTypeDetail", new object[] {
                        TypeID}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_CheckType EndGetCheckTypeDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((T_CheckType)(results[0]));
        }
        
        /// <remarks/>
        public void GetCheckTypeDetailAsync(string TypeID) {
            this.GetCheckTypeDetailAsync(TypeID, null);
        }
        
        /// <remarks/>
        public void GetCheckTypeDetailAsync(string TypeID, object userState) {
            if ((this.GetCheckTypeDetailOperationCompleted == null)) {
                this.GetCheckTypeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCheckTypeDetailOperationCompleted);
            }
            this.InvokeAsync("GetCheckTypeDetail", new object[] {
                        TypeID}, this.GetCheckTypeDetailOperationCompleted, userState);
        }
        
        private void OnGetCheckTypeDetailOperationCompleted(object arg) {
            if ((this.GetCheckTypeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCheckTypeDetailCompleted(this, new GetCheckTypeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SetCheckType", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetCheckType(T_CheckType ct) {
            object[] results = this.Invoke("SetCheckType", new object[] {
                        ct});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetCheckType(T_CheckType ct, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetCheckType", new object[] {
                        ct}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSetCheckType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetCheckTypeAsync(T_CheckType ct) {
            this.SetCheckTypeAsync(ct, null);
        }
        
        /// <remarks/>
        public void SetCheckTypeAsync(T_CheckType ct, object userState) {
            if ((this.SetCheckTypeOperationCompleted == null)) {
                this.SetCheckTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCheckTypeOperationCompleted);
            }
            this.InvokeAsync("SetCheckType", new object[] {
                        ct}, this.SetCheckTypeOperationCompleted, userState);
        }
        
        private void OnSetCheckTypeOperationCompleted(object arg) {
            if ((this.SetCheckTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCheckTypeCompleted(this, new SetCheckTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFreezeList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFreezeList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetFreezeList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        freezeuser,
                        username,
                        handletype,
                        statetype,
                        qqid,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFreezeList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFreezeList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        freezeuser,
                        username,
                        handletype,
                        statetype,
                        qqid,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFreezeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreezeListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid, int iPageStart, int iPageMax) {
            this.GetFreezeListAsync(u_BeginTime, u_EndTime, freezeuser, username, handletype, statetype, qqid, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetFreezeListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid, int iPageStart, int iPageMax, object userState) {
            if ((this.GetFreezeListOperationCompleted == null)) {
                this.GetFreezeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreezeListOperationCompleted);
            }
            this.InvokeAsync("GetFreezeList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        freezeuser,
                        username,
                        handletype,
                        statetype,
                        qqid,
                        iPageStart,
                        iPageMax}, this.GetFreezeListOperationCompleted, userState);
        }
        
        private void OnGetFreezeListOperationCompleted(object arg) {
            if ((this.GetFreezeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreezeListCompleted(this, new GetFreezeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetExistFreeze", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FreezeInfo GetExistFreeze(string freezeid) {
            object[] results = this.Invoke("GetExistFreeze", new object[] {
                        freezeid});
            return ((FreezeInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExistFreeze(string freezeid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExistFreeze", new object[] {
                        freezeid}, callback, asyncState);
        }
        
        /// <remarks/>
        public FreezeInfo EndGetExistFreeze(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FreezeInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetExistFreezeAsync(string freezeid) {
            this.GetExistFreezeAsync(freezeid, null);
        }
        
        /// <remarks/>
        public void GetExistFreezeAsync(string freezeid, object userState) {
            if ((this.GetExistFreezeOperationCompleted == null)) {
                this.GetExistFreezeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExistFreezeOperationCompleted);
            }
            this.InvokeAsync("GetExistFreeze", new object[] {
                        freezeid}, this.GetExistFreezeOperationCompleted, userState);
        }
        
        private void OnGetExistFreezeOperationCompleted(object arg) {
            if ((this.GetExistFreezeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExistFreezeCompleted(this, new GetExistFreezeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CreateNewFreeze", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateNewFreeze(FreezeInfo fi) {
            this.Invoke("CreateNewFreeze", new object[] {
                        fi});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateNewFreeze(FreezeInfo fi, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateNewFreeze", new object[] {
                        fi}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateNewFreeze(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void CreateNewFreezeAsync(FreezeInfo fi) {
            this.CreateNewFreezeAsync(fi, null);
        }
        
        /// <remarks/>
        public void CreateNewFreezeAsync(FreezeInfo fi, object userState) {
            if ((this.CreateNewFreezeOperationCompleted == null)) {
                this.CreateNewFreezeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewFreezeOperationCompleted);
            }
            this.InvokeAsync("CreateNewFreeze", new object[] {
                        fi}, this.CreateNewFreezeOperationCompleted, userState);
        }
        
        private void OnCreateNewFreezeOperationCompleted(object arg) {
            if ((this.CreateNewFreezeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewFreezeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UpdateFreezeInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFreezeInfo(FreezeInfo fi) {
            this.Invoke("UpdateFreezeInfo", new object[] {
                        fi});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateFreezeInfo(FreezeInfo fi, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateFreezeInfo", new object[] {
                        fi}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateFreezeInfo(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateFreezeInfoAsync(FreezeInfo fi) {
            this.UpdateFreezeInfoAsync(fi, null);
        }
        
        /// <remarks/>
        public void UpdateFreezeInfoAsync(FreezeInfo fi, object userState) {
            if ((this.UpdateFreezeInfoOperationCompleted == null)) {
                this.UpdateFreezeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFreezeInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateFreezeInfo", new object[] {
                        fi}, this.UpdateFreezeInfoOperationCompleted, userState);
        }
        
        private void OnUpdateFreezeInfoOperationCompleted(object arg) {
            if ((this.UpdateFreezeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFreezeInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFreezeListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFreezeListCount(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid) {
            object[] results = this.Invoke("GetFreezeListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        freezeuser,
                        username,
                        handletype,
                        statetype,
                        qqid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFreezeListCount(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFreezeListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        freezeuser,
                        username,
                        handletype,
                        statetype,
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetFreezeListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreezeListCountAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid) {
            this.GetFreezeListCountAsync(u_BeginTime, u_EndTime, freezeuser, username, handletype, statetype, qqid, null);
        }
        
        /// <remarks/>
        public void GetFreezeListCountAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string freezeuser, string username, int handletype, int statetype, string qqid, object userState) {
            if ((this.GetFreezeListCountOperationCompleted == null)) {
                this.GetFreezeListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreezeListCountOperationCompleted);
            }
            this.InvokeAsync("GetFreezeListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        freezeuser,
                        username,
                        handletype,
                        statetype,
                        qqid}, this.GetFreezeListCountOperationCompleted, userState);
        }
        
        private void OnGetFreezeListCountOperationCompleted(object arg) {
            if ((this.GetFreezeListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreezeListCountCompleted(this, new GetFreezeListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFreezeListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFreezeListDetail(string tdeid) {
            object[] results = this.Invoke("GetFreezeListDetail", new object[] {
                        tdeid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFreezeListDetail(string tdeid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFreezeListDetail", new object[] {
                        tdeid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFreezeListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreezeListDetailAsync(string tdeid) {
            this.GetFreezeListDetailAsync(tdeid, null);
        }
        
        /// <remarks/>
        public void GetFreezeListDetailAsync(string tdeid, object userState) {
            if ((this.GetFreezeListDetailOperationCompleted == null)) {
                this.GetFreezeListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreezeListDetailOperationCompleted);
            }
            this.InvokeAsync("GetFreezeListDetail", new object[] {
                        tdeid}, this.GetFreezeListDetailOperationCompleted, userState);
        }
        
        private void OnGetFreezeListDetailOperationCompleted(object arg) {
            if ((this.GetFreezeListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreezeListDetailCompleted(this, new GetFreezeListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetOrderList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrderList(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, string sorttype, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetOrderList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrderList(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, string sorttype, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrderList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetOrderList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderListAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, string sorttype, int iPageStart, int iPageMax) {
            this.GetOrderListAsync(u_ID, u_BeginTime, u_EndTime, fstate, fnum, banktype, sorttype, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetOrderListAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, string sorttype, int iPageStart, int iPageMax, object userState) {
            if ((this.GetOrderListOperationCompleted == null)) {
                this.GetOrderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderListOperationCompleted);
            }
            this.InvokeAsync("GetOrderList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype,
                        sorttype,
                        iPageStart,
                        iPageMax}, this.GetOrderListOperationCompleted, userState);
        }
        
        private void OnGetOrderListOperationCompleted(object arg) {
            if ((this.GetOrderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderListCompleted(this, new GetOrderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetOrderListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrderListCount(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype) {
            object[] results = this.Invoke("GetOrderListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrderListCount(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrderListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetOrderListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderListCountAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype) {
            this.GetOrderListCountAsync(u_ID, u_BeginTime, u_EndTime, fstate, fnum, banktype, null);
        }
        
        /// <remarks/>
        public void GetOrderListCountAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, float fnum, string banktype, object userState) {
            if ((this.GetOrderListCountOperationCompleted == null)) {
                this.GetOrderListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderListCountOperationCompleted);
            }
            this.InvokeAsync("GetOrderListCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        fnum,
                        banktype}, this.GetOrderListCountOperationCompleted, userState);
        }
        
        private void OnGetOrderListCountOperationCompleted(object arg) {
            if ((this.GetOrderListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderListCountCompleted(this, new GetOrderListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMerSettleTable", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMerSettleTable(int pageSize, string whereSign, string addWhereStr, string orderSign) {
            object[] results = this.Invoke("GetMerSettleTable", new object[] {
                        pageSize,
                        whereSign,
                        addWhereStr,
                        orderSign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMerSettleTable(int pageSize, string whereSign, string addWhereStr, string orderSign, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMerSettleTable", new object[] {
                        pageSize,
                        whereSign,
                        addWhereStr,
                        orderSign}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMerSettleTable(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMerSettleTableAsync(int pageSize, string whereSign, string addWhereStr, string orderSign) {
            this.GetMerSettleTableAsync(pageSize, whereSign, addWhereStr, orderSign, null);
        }
        
        /// <remarks/>
        public void GetMerSettleTableAsync(int pageSize, string whereSign, string addWhereStr, string orderSign, object userState) {
            if ((this.GetMerSettleTableOperationCompleted == null)) {
                this.GetMerSettleTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMerSettleTableOperationCompleted);
            }
            this.InvokeAsync("GetMerSettleTable", new object[] {
                        pageSize,
                        whereSign,
                        addWhereStr,
                        orderSign}, this.GetMerSettleTableOperationCompleted, userState);
        }
        
        private void OnGetMerSettleTableOperationCompleted(object arg) {
            if ((this.GetMerSettleTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMerSettleTableCompleted(this, new GetMerSettleTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMerSettleDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMerSettleDetail(string id, out string Msg) {
            object[] results = this.Invoke("GetMerSettleDetail", new object[] {
                        id});
            Msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMerSettleDetail(string id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMerSettleDetail", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMerSettleDetail(System.IAsyncResult asyncResult, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            Msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMerSettleDetailAsync(string id) {
            this.GetMerSettleDetailAsync(id, null);
        }
        
        /// <remarks/>
        public void GetMerSettleDetailAsync(string id, object userState) {
            if ((this.GetMerSettleDetailOperationCompleted == null)) {
                this.GetMerSettleDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMerSettleDetailOperationCompleted);
            }
            this.InvokeAsync("GetMerSettleDetail", new object[] {
                        id}, this.GetMerSettleDetailOperationCompleted, userState);
        }
        
        private void OnGetMerSettleDetailOperationCompleted(object arg) {
            if ((this.GetMerSettleDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMerSettleDetailCompleted(this, new GetMerSettleDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetChangeQQList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetChangeQQList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string userid, string qq, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetChangeQQList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        userid,
                        qq,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChangeQQList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string userid, string qq, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChangeQQList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        userid,
                        qq,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetChangeQQList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChangeQQListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string userid, string qq, int iPageStart, int iPageMax) {
            this.GetChangeQQListAsync(u_BeginTime, u_EndTime, userid, qq, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetChangeQQListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string userid, string qq, int iPageStart, int iPageMax, object userState) {
            if ((this.GetChangeQQListOperationCompleted == null)) {
                this.GetChangeQQListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangeQQListOperationCompleted);
            }
            this.InvokeAsync("GetChangeQQList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        userid,
                        qq,
                        iPageStart,
                        iPageMax}, this.GetChangeQQListOperationCompleted, userState);
        }
        
        private void OnGetChangeQQListOperationCompleted(object arg) {
            if ((this.GetChangeQQListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangeQQListCompleted(this, new GetChangeQQListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetChangeQQListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetChangeQQListCount(System.DateTime u_BeginTime, System.DateTime u_EndTime, string userid, string qq) {
            object[] results = this.Invoke("GetChangeQQListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        userid,
                        qq});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChangeQQListCount(System.DateTime u_BeginTime, System.DateTime u_EndTime, string userid, string qq, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChangeQQListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        userid,
                        qq}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetChangeQQListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetChangeQQListCountAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string userid, string qq) {
            this.GetChangeQQListCountAsync(u_BeginTime, u_EndTime, userid, qq, null);
        }
        
        /// <remarks/>
        public void GetChangeQQListCountAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string userid, string qq, object userState) {
            if ((this.GetChangeQQListCountOperationCompleted == null)) {
                this.GetChangeQQListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangeQQListCountOperationCompleted);
            }
            this.InvokeAsync("GetChangeQQListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        userid,
                        qq}, this.GetChangeQQListCountOperationCompleted, userState);
        }
        
        private void OnGetChangeQQListCountOperationCompleted(object arg) {
            if ((this.GetChangeQQListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangeQQListCountCompleted(this, new GetChangeQQListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataErrorCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBankDataErrorCount() {
            object[] results = this.Invoke("GetBankDataErrorCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataErrorCount(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataErrorCount", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetBankDataErrorCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataErrorCountAsync() {
            this.GetBankDataErrorCountAsync(null);
        }
        
        /// <remarks/>
        public void GetBankDataErrorCountAsync(object userState) {
            if ((this.GetBankDataErrorCountOperationCompleted == null)) {
                this.GetBankDataErrorCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataErrorCountOperationCompleted);
            }
            this.InvokeAsync("GetBankDataErrorCount", new object[0], this.GetBankDataErrorCountOperationCompleted, userState);
        }
        
        private void OnGetBankDataErrorCountOperationCompleted(object arg) {
            if ((this.GetBankDataErrorCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataErrorCountCompleted(this, new GetBankDataErrorCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataErrorList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankDataErrorList(int istart, int imax) {
            object[] results = this.Invoke("GetBankDataErrorList", new object[] {
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataErrorList(int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataErrorList", new object[] {
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankDataErrorList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataErrorListAsync(int istart, int imax) {
            this.GetBankDataErrorListAsync(istart, imax, null);
        }
        
        /// <remarks/>
        public void GetBankDataErrorListAsync(int istart, int imax, object userState) {
            if ((this.GetBankDataErrorListOperationCompleted == null)) {
                this.GetBankDataErrorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataErrorListOperationCompleted);
            }
            this.InvokeAsync("GetBankDataErrorList", new object[] {
                        istart,
                        imax}, this.GetBankDataErrorListOperationCompleted, userState);
        }
        
        private void OnGetBankDataErrorListOperationCompleted(object arg) {
            if ((this.GetBankDataErrorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataErrorListCompleted(this, new GetBankDataErrorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataErrList_Subacc_Dea" +
            "tail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankDataErrList_Subacc_Deatail(string checkid) {
            object[] results = this.Invoke("GetBankDataErrList_Subacc_Deatail", new object[] {
                        checkid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataErrList_Subacc_Deatail(string checkid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataErrList_Subacc_Deatail", new object[] {
                        checkid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankDataErrList_Subacc_Deatail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataErrList_Subacc_DeatailAsync(string checkid) {
            this.GetBankDataErrList_Subacc_DeatailAsync(checkid, null);
        }
        
        /// <remarks/>
        public void GetBankDataErrList_Subacc_DeatailAsync(string checkid, object userState) {
            if ((this.GetBankDataErrList_Subacc_DeatailOperationCompleted == null)) {
                this.GetBankDataErrList_Subacc_DeatailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataErrList_Subacc_DeatailOperationCompleted);
            }
            this.InvokeAsync("GetBankDataErrList_Subacc_Deatail", new object[] {
                        checkid}, this.GetBankDataErrList_Subacc_DeatailOperationCompleted, userState);
        }
        
        private void OnGetBankDataErrList_Subacc_DeatailOperationCompleted(object arg) {
            if ((this.GetBankDataErrList_Subacc_DeatailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataErrList_Subacc_DeatailCompleted(this, new GetBankDataErrList_Subacc_DeatailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataErrList_Deatail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankDataErrList_Deatail(string checkid, int istart, int imax) {
            object[] results = this.Invoke("GetBankDataErrList_Deatail", new object[] {
                        checkid,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataErrList_Deatail(string checkid, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataErrList_Deatail", new object[] {
                        checkid,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankDataErrList_Deatail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataErrList_DeatailAsync(string checkid, int istart, int imax) {
            this.GetBankDataErrList_DeatailAsync(checkid, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetBankDataErrList_DeatailAsync(string checkid, int istart, int imax, object userState) {
            if ((this.GetBankDataErrList_DeatailOperationCompleted == null)) {
                this.GetBankDataErrList_DeatailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataErrList_DeatailOperationCompleted);
            }
            this.InvokeAsync("GetBankDataErrList_Deatail", new object[] {
                        checkid,
                        istart,
                        imax}, this.GetBankDataErrList_DeatailOperationCompleted, userState);
        }
        
        private void OnGetBankDataErrList_DeatailOperationCompleted(object arg) {
            if ((this.GetBankDataErrList_DeatailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataErrList_DeatailCompleted(this, new GetBankDataErrList_DeatailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataErrList_Preview", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankDataErrList_Preview(object[] al) {
            object[] results = this.Invoke("GetBankDataErrList_Preview", new object[] {
                        al});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataErrList_Preview(object[] al, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataErrList_Preview", new object[] {
                        al}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankDataErrList_Preview(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataErrList_PreviewAsync(object[] al) {
            this.GetBankDataErrList_PreviewAsync(al, null);
        }
        
        /// <remarks/>
        public void GetBankDataErrList_PreviewAsync(object[] al, object userState) {
            if ((this.GetBankDataErrList_PreviewOperationCompleted == null)) {
                this.GetBankDataErrList_PreviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataErrList_PreviewOperationCompleted);
            }
            this.InvokeAsync("GetBankDataErrList_Preview", new object[] {
                        al}, this.GetBankDataErrList_PreviewOperationCompleted, userState);
        }
        
        private void OnGetBankDataErrList_PreviewOperationCompleted(object arg) {
            if ((this.GetBankDataErrList_PreviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataErrList_PreviewCompleted(this, new GetBankDataErrList_PreviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankCheckErrorCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBankCheckErrorCount() {
            object[] results = this.Invoke("GetBankCheckErrorCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankCheckErrorCount(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankCheckErrorCount", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetBankCheckErrorCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankCheckErrorCountAsync() {
            this.GetBankCheckErrorCountAsync(null);
        }
        
        /// <remarks/>
        public void GetBankCheckErrorCountAsync(object userState) {
            if ((this.GetBankCheckErrorCountOperationCompleted == null)) {
                this.GetBankCheckErrorCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankCheckErrorCountOperationCompleted);
            }
            this.InvokeAsync("GetBankCheckErrorCount", new object[0], this.GetBankCheckErrorCountOperationCompleted, userState);
        }
        
        private void OnGetBankCheckErrorCountOperationCompleted(object arg) {
            if ((this.GetBankCheckErrorCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankCheckErrorCountCompleted(this, new GetBankCheckErrorCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankCheckErrorList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankCheckErrorList(int istart, int imax) {
            object[] results = this.Invoke("GetBankCheckErrorList", new object[] {
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankCheckErrorList(int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankCheckErrorList", new object[] {
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankCheckErrorList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankCheckErrorListAsync(int istart, int imax) {
            this.GetBankCheckErrorListAsync(istart, imax, null);
        }
        
        /// <remarks/>
        public void GetBankCheckErrorListAsync(int istart, int imax, object userState) {
            if ((this.GetBankCheckErrorListOperationCompleted == null)) {
                this.GetBankCheckErrorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankCheckErrorListOperationCompleted);
            }
            this.InvokeAsync("GetBankCheckErrorList", new object[] {
                        istart,
                        imax}, this.GetBankCheckErrorListOperationCompleted, userState);
        }
        
        private void OnGetBankCheckErrorListOperationCompleted(object arg) {
            if ((this.GetBankCheckErrorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankCheckErrorListCompleted(this, new GetBankCheckErrorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataGenCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBankDataGenCount(string date, string bank) {
            object[] results = this.Invoke("GetBankDataGenCount", new object[] {
                        date,
                        bank});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataGenCount(string date, string bank, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataGenCount", new object[] {
                        date,
                        bank}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetBankDataGenCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataGenCountAsync(string date, string bank) {
            this.GetBankDataGenCountAsync(date, bank, null);
        }
        
        /// <remarks/>
        public void GetBankDataGenCountAsync(string date, string bank, object userState) {
            if ((this.GetBankDataGenCountOperationCompleted == null)) {
                this.GetBankDataGenCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataGenCountOperationCompleted);
            }
            this.InvokeAsync("GetBankDataGenCount", new object[] {
                        date,
                        bank}, this.GetBankDataGenCountOperationCompleted, userState);
        }
        
        private void OnGetBankDataGenCountOperationCompleted(object arg) {
            if ((this.GetBankDataGenCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataGenCountCompleted(this, new GetBankDataGenCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataGenList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankDataGenList(string date, string bank, int istart, int imax) {
            object[] results = this.Invoke("GetBankDataGenList", new object[] {
                        date,
                        bank,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataGenList(string date, string bank, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataGenList", new object[] {
                        date,
                        bank,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankDataGenList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataGenListAsync(string date, string bank, int istart, int imax) {
            this.GetBankDataGenListAsync(date, bank, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetBankDataGenListAsync(string date, string bank, int istart, int imax, object userState) {
            if ((this.GetBankDataGenListOperationCompleted == null)) {
                this.GetBankDataGenListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataGenListOperationCompleted);
            }
            this.InvokeAsync("GetBankDataGenList", new object[] {
                        date,
                        bank,
                        istart,
                        imax}, this.GetBankDataGenListOperationCompleted, userState);
        }
        
        private void OnGetBankDataGenListOperationCompleted(object arg) {
            if ((this.GetBankDataGenListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataGenListCompleted(this, new GetBankDataGenListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetHandleResultCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetHandleResultCount(string date, int phaseid, int stateid) {
            object[] results = this.Invoke("GetHandleResultCount", new object[] {
                        date,
                        phaseid,
                        stateid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHandleResultCount(string date, int phaseid, int stateid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHandleResultCount", new object[] {
                        date,
                        phaseid,
                        stateid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetHandleResultCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetHandleResultCountAsync(string date, int phaseid, int stateid) {
            this.GetHandleResultCountAsync(date, phaseid, stateid, null);
        }
        
        /// <remarks/>
        public void GetHandleResultCountAsync(string date, int phaseid, int stateid, object userState) {
            if ((this.GetHandleResultCountOperationCompleted == null)) {
                this.GetHandleResultCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHandleResultCountOperationCompleted);
            }
            this.InvokeAsync("GetHandleResultCount", new object[] {
                        date,
                        phaseid,
                        stateid}, this.GetHandleResultCountOperationCompleted, userState);
        }
        
        private void OnGetHandleResultCountOperationCompleted(object arg) {
            if ((this.GetHandleResultCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHandleResultCountCompleted(this, new GetHandleResultCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetHandleResultList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHandleResultList(string date, int phaseid, int stateid, int istart, int imax) {
            object[] results = this.Invoke("GetHandleResultList", new object[] {
                        date,
                        phaseid,
                        stateid,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHandleResultList(string date, int phaseid, int stateid, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHandleResultList", new object[] {
                        date,
                        phaseid,
                        stateid,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetHandleResultList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHandleResultListAsync(string date, int phaseid, int stateid, int istart, int imax) {
            this.GetHandleResultListAsync(date, phaseid, stateid, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetHandleResultListAsync(string date, int phaseid, int stateid, int istart, int imax, object userState) {
            if ((this.GetHandleResultListOperationCompleted == null)) {
                this.GetHandleResultListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHandleResultListOperationCompleted);
            }
            this.InvokeAsync("GetHandleResultList", new object[] {
                        date,
                        phaseid,
                        stateid,
                        istart,
                        imax}, this.GetHandleResultListOperationCompleted, userState);
        }
        
        private void OnGetHandleResultListOperationCompleted(object arg) {
            if ((this.GetHandleResultListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHandleResultListCompleted(this, new GetHandleResultListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetHandleResult", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHandleResult(string fid) {
            object[] results = this.Invoke("GetHandleResult", new object[] {
                        fid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHandleResult(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHandleResult", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetHandleResult(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHandleResultAsync(string fid) {
            this.GetHandleResultAsync(fid, null);
        }
        
        /// <remarks/>
        public void GetHandleResultAsync(string fid, object userState) {
            if ((this.GetHandleResultOperationCompleted == null)) {
                this.GetHandleResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHandleResultOperationCompleted);
            }
            this.InvokeAsync("GetHandleResult", new object[] {
                        fid}, this.GetHandleResultOperationCompleted, userState);
        }
        
        private void OnGetHandleResultOperationCompleted(object arg) {
            if ((this.GetHandleResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHandleResultCompleted(this, new GetHandleResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetReturnTicketCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetReturnTicketCount(string strdate, string bankid, string bankacc, long famt, string paytype, int order) {
            object[] results = this.Invoke("GetReturnTicketCount", new object[] {
                        strdate,
                        bankid,
                        bankacc,
                        famt,
                        paytype,
                        order});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReturnTicketCount(string strdate, string bankid, string bankacc, long famt, string paytype, int order, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReturnTicketCount", new object[] {
                        strdate,
                        bankid,
                        bankacc,
                        famt,
                        paytype,
                        order}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetReturnTicketCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetReturnTicketCountAsync(string strdate, string bankid, string bankacc, long famt, string paytype, int order) {
            this.GetReturnTicketCountAsync(strdate, bankid, bankacc, famt, paytype, order, null);
        }
        
        /// <remarks/>
        public void GetReturnTicketCountAsync(string strdate, string bankid, string bankacc, long famt, string paytype, int order, object userState) {
            if ((this.GetReturnTicketCountOperationCompleted == null)) {
                this.GetReturnTicketCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReturnTicketCountOperationCompleted);
            }
            this.InvokeAsync("GetReturnTicketCount", new object[] {
                        strdate,
                        bankid,
                        bankacc,
                        famt,
                        paytype,
                        order}, this.GetReturnTicketCountOperationCompleted, userState);
        }
        
        private void OnGetReturnTicketCountOperationCompleted(object arg) {
            if ((this.GetReturnTicketCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReturnTicketCountCompleted(this, new GetReturnTicketCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetReturnTicketCount_File", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetReturnTicketCount_File(string strdate, string bankid, string batchid, string paytype, int order) {
            object[] results = this.Invoke("GetReturnTicketCount_File", new object[] {
                        strdate,
                        bankid,
                        batchid,
                        paytype,
                        order});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReturnTicketCount_File(string strdate, string bankid, string batchid, string paytype, int order, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReturnTicketCount_File", new object[] {
                        strdate,
                        bankid,
                        batchid,
                        paytype,
                        order}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetReturnTicketCount_File(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetReturnTicketCount_FileAsync(string strdate, string bankid, string batchid, string paytype, int order) {
            this.GetReturnTicketCount_FileAsync(strdate, bankid, batchid, paytype, order, null);
        }
        
        /// <remarks/>
        public void GetReturnTicketCount_FileAsync(string strdate, string bankid, string batchid, string paytype, int order, object userState) {
            if ((this.GetReturnTicketCount_FileOperationCompleted == null)) {
                this.GetReturnTicketCount_FileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReturnTicketCount_FileOperationCompleted);
            }
            this.InvokeAsync("GetReturnTicketCount_File", new object[] {
                        strdate,
                        bankid,
                        batchid,
                        paytype,
                        order}, this.GetReturnTicketCount_FileOperationCompleted, userState);
        }
        
        private void OnGetReturnTicketCount_FileOperationCompleted(object arg) {
            if ((this.GetReturnTicketCount_FileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReturnTicketCount_FileCompleted(this, new GetReturnTicketCount_FileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetReturnTicketList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReturnTicketList(string strdate, string bankid, string bankacc, long famt, string paytype, int order, int istart, int imax) {
            object[] results = this.Invoke("GetReturnTicketList", new object[] {
                        strdate,
                        bankid,
                        bankacc,
                        famt,
                        paytype,
                        order,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReturnTicketList(string strdate, string bankid, string bankacc, long famt, string paytype, int order, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReturnTicketList", new object[] {
                        strdate,
                        bankid,
                        bankacc,
                        famt,
                        paytype,
                        order,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetReturnTicketList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReturnTicketListAsync(string strdate, string bankid, string bankacc, long famt, string paytype, int order, int istart, int imax) {
            this.GetReturnTicketListAsync(strdate, bankid, bankacc, famt, paytype, order, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetReturnTicketListAsync(string strdate, string bankid, string bankacc, long famt, string paytype, int order, int istart, int imax, object userState) {
            if ((this.GetReturnTicketListOperationCompleted == null)) {
                this.GetReturnTicketListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReturnTicketListOperationCompleted);
            }
            this.InvokeAsync("GetReturnTicketList", new object[] {
                        strdate,
                        bankid,
                        bankacc,
                        famt,
                        paytype,
                        order,
                        istart,
                        imax}, this.GetReturnTicketListOperationCompleted, userState);
        }
        
        private void OnGetReturnTicketListOperationCompleted(object arg) {
            if ((this.GetReturnTicketListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReturnTicketListCompleted(this, new GetReturnTicketListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayExceptionCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPayExceptionCount(string strdate, string bankid, int state, int errtype) {
            object[] results = this.Invoke("GetPayExceptionCount", new object[] {
                        strdate,
                        bankid,
                        state,
                        errtype});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayExceptionCount(string strdate, string bankid, int state, int errtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayExceptionCount", new object[] {
                        strdate,
                        bankid,
                        state,
                        errtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetPayExceptionCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayExceptionCountAsync(string strdate, string bankid, int state, int errtype) {
            this.GetPayExceptionCountAsync(strdate, bankid, state, errtype, null);
        }
        
        /// <remarks/>
        public void GetPayExceptionCountAsync(string strdate, string bankid, int state, int errtype, object userState) {
            if ((this.GetPayExceptionCountOperationCompleted == null)) {
                this.GetPayExceptionCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayExceptionCountOperationCompleted);
            }
            this.InvokeAsync("GetPayExceptionCount", new object[] {
                        strdate,
                        bankid,
                        state,
                        errtype}, this.GetPayExceptionCountOperationCompleted, userState);
        }
        
        private void OnGetPayExceptionCountOperationCompleted(object arg) {
            if ((this.GetPayExceptionCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayExceptionCountCompleted(this, new GetPayExceptionCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayExceptionList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayExceptionList(string strdate, string bankid, int state, int errtype, int istart, int imax) {
            object[] results = this.Invoke("GetPayExceptionList", new object[] {
                        strdate,
                        bankid,
                        state,
                        errtype,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayExceptionList(string strdate, string bankid, int state, int errtype, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayExceptionList", new object[] {
                        strdate,
                        bankid,
                        state,
                        errtype,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayExceptionList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayExceptionListAsync(string strdate, string bankid, int state, int errtype, int istart, int imax) {
            this.GetPayExceptionListAsync(strdate, bankid, state, errtype, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetPayExceptionListAsync(string strdate, string bankid, int state, int errtype, int istart, int imax, object userState) {
            if ((this.GetPayExceptionListOperationCompleted == null)) {
                this.GetPayExceptionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayExceptionListOperationCompleted);
            }
            this.InvokeAsync("GetPayExceptionList", new object[] {
                        strdate,
                        bankid,
                        state,
                        errtype,
                        istart,
                        imax}, this.GetPayExceptionListOperationCompleted, userState);
        }
        
        private void OnGetPayExceptionListOperationCompleted(object arg) {
            if ((this.GetPayExceptionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayExceptionListCompleted(this, new GetPayExceptionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataErrCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBankDataErrCount() {
            object[] results = this.Invoke("GetBankDataErrCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataErrCount(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataErrCount", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetBankDataErrCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataErrCountAsync() {
            this.GetBankDataErrCountAsync(null);
        }
        
        /// <remarks/>
        public void GetBankDataErrCountAsync(object userState) {
            if ((this.GetBankDataErrCountOperationCompleted == null)) {
                this.GetBankDataErrCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataErrCountOperationCompleted);
            }
            this.InvokeAsync("GetBankDataErrCount", new object[0], this.GetBankDataErrCountOperationCompleted, userState);
        }
        
        private void OnGetBankDataErrCountOperationCompleted(object arg) {
            if ((this.GetBankDataErrCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataErrCountCompleted(this, new GetBankDataErrCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataErrCount2", RequestElementName="GetBankDataErrCount2", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseElementName="GetBankDataErrCount2Response", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetBankDataErrCount2Result")]
        public int GetBankDataErrCountX(string date, string date2, string bank, string state, string order, string errtype, string ordertype, string result, string handletype, long minmoney, long maxmoney) {
            object[] results = this.Invoke("GetBankDataErrCountX", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        order,
                        errtype,
                        ordertype,
                        result,
                        handletype,
                        minmoney,
                        maxmoney});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataErrCountX(string date, string date2, string bank, string state, string order, string errtype, string ordertype, string result, string handletype, long minmoney, long maxmoney, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataErrCountX", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        order,
                        errtype,
                        ordertype,
                        result,
                        handletype,
                        minmoney,
                        maxmoney}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetBankDataErrCountX(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataErrCountXAsync(string date, string date2, string bank, string state, string order, string errtype, string ordertype, string result, string handletype, long minmoney, long maxmoney) {
            this.GetBankDataErrCountXAsync(date, date2, bank, state, order, errtype, ordertype, result, handletype, minmoney, maxmoney, null);
        }
        
        /// <remarks/>
        public void GetBankDataErrCountXAsync(string date, string date2, string bank, string state, string order, string errtype, string ordertype, string result, string handletype, long minmoney, long maxmoney, object userState) {
            if ((this.GetBankDataErrCountXOperationCompleted == null)) {
                this.GetBankDataErrCountXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataErrCountXOperationCompleted);
            }
            this.InvokeAsync("GetBankDataErrCountX", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        order,
                        errtype,
                        ordertype,
                        result,
                        handletype,
                        minmoney,
                        maxmoney}, this.GetBankDataErrCountXOperationCompleted, userState);
        }
        
        private void OnGetBankDataErrCountXOperationCompleted(object arg) {
            if ((this.GetBankDataErrCountXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataErrCountXCompleted(this, new GetBankDataErrCountXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayMatchErrCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPayMatchErrCount(string date, string date2, string state, string errtype, string handletype, string bankaccno) {
            object[] results = this.Invoke("GetPayMatchErrCount", new object[] {
                        date,
                        date2,
                        state,
                        errtype,
                        handletype,
                        bankaccno});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayMatchErrCount(string date, string date2, string state, string errtype, string handletype, string bankaccno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayMatchErrCount", new object[] {
                        date,
                        date2,
                        state,
                        errtype,
                        handletype,
                        bankaccno}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetPayMatchErrCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayMatchErrCountAsync(string date, string date2, string state, string errtype, string handletype, string bankaccno) {
            this.GetPayMatchErrCountAsync(date, date2, state, errtype, handletype, bankaccno, null);
        }
        
        /// <remarks/>
        public void GetPayMatchErrCountAsync(string date, string date2, string state, string errtype, string handletype, string bankaccno, object userState) {
            if ((this.GetPayMatchErrCountOperationCompleted == null)) {
                this.GetPayMatchErrCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayMatchErrCountOperationCompleted);
            }
            this.InvokeAsync("GetPayMatchErrCount", new object[] {
                        date,
                        date2,
                        state,
                        errtype,
                        handletype,
                        bankaccno}, this.GetPayMatchErrCountOperationCompleted, userState);
        }
        
        private void OnGetPayMatchErrCountOperationCompleted(object arg) {
            if ((this.GetPayMatchErrCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayMatchErrCountCompleted(this, new GetPayMatchErrCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayMatchErrList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayMatchErrList(string date, string date2, string state, string errtype, string handletype, string bankaccno, int start, int max) {
            object[] results = this.Invoke("GetPayMatchErrList", new object[] {
                        date,
                        date2,
                        state,
                        errtype,
                        handletype,
                        bankaccno,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayMatchErrList(string date, string date2, string state, string errtype, string handletype, string bankaccno, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayMatchErrList", new object[] {
                        date,
                        date2,
                        state,
                        errtype,
                        handletype,
                        bankaccno,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayMatchErrList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayMatchErrListAsync(string date, string date2, string state, string errtype, string handletype, string bankaccno, int start, int max) {
            this.GetPayMatchErrListAsync(date, date2, state, errtype, handletype, bankaccno, start, max, null);
        }
        
        /// <remarks/>
        public void GetPayMatchErrListAsync(string date, string date2, string state, string errtype, string handletype, string bankaccno, int start, int max, object userState) {
            if ((this.GetPayMatchErrListOperationCompleted == null)) {
                this.GetPayMatchErrListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayMatchErrListOperationCompleted);
            }
            this.InvokeAsync("GetPayMatchErrList", new object[] {
                        date,
                        date2,
                        state,
                        errtype,
                        handletype,
                        bankaccno,
                        start,
                        max}, this.GetPayMatchErrListOperationCompleted, userState);
        }
        
        private void OnGetPayMatchErrListOperationCompleted(object arg) {
            if ((this.GetPayMatchErrListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayMatchErrListCompleted(this, new GetPayMatchErrListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayMatchErrList_Check", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayMatchErrList_Check(string checkbatchid) {
            object[] results = this.Invoke("GetPayMatchErrList_Check", new object[] {
                        checkbatchid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayMatchErrList_Check(string checkbatchid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayMatchErrList_Check", new object[] {
                        checkbatchid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayMatchErrList_Check(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayMatchErrList_CheckAsync(string checkbatchid) {
            this.GetPayMatchErrList_CheckAsync(checkbatchid, null);
        }
        
        /// <remarks/>
        public void GetPayMatchErrList_CheckAsync(string checkbatchid, object userState) {
            if ((this.GetPayMatchErrList_CheckOperationCompleted == null)) {
                this.GetPayMatchErrList_CheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayMatchErrList_CheckOperationCompleted);
            }
            this.InvokeAsync("GetPayMatchErrList_Check", new object[] {
                        checkbatchid}, this.GetPayMatchErrList_CheckOperationCompleted, userState);
        }
        
        private void OnGetPayMatchErrList_CheckOperationCompleted(object arg) {
            if ((this.GetPayMatchErrList_CheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayMatchErrList_CheckCompleted(this, new GetPayMatchErrList_CheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataErrCountX_Subacc", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBankDataErrCountX_Subacc(string date, string date2, string state, string order, string errtype, string ordertype, string result, string handletype) {
            object[] results = this.Invoke("GetBankDataErrCountX_Subacc", new object[] {
                        date,
                        date2,
                        state,
                        order,
                        errtype,
                        ordertype,
                        result,
                        handletype});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataErrCountX_Subacc(string date, string date2, string state, string order, string errtype, string ordertype, string result, string handletype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataErrCountX_Subacc", new object[] {
                        date,
                        date2,
                        state,
                        order,
                        errtype,
                        ordertype,
                        result,
                        handletype}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetBankDataErrCountX_Subacc(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataErrCountX_SubaccAsync(string date, string date2, string state, string order, string errtype, string ordertype, string result, string handletype) {
            this.GetBankDataErrCountX_SubaccAsync(date, date2, state, order, errtype, ordertype, result, handletype, null);
        }
        
        /// <remarks/>
        public void GetBankDataErrCountX_SubaccAsync(string date, string date2, string state, string order, string errtype, string ordertype, string result, string handletype, object userState) {
            if ((this.GetBankDataErrCountX_SubaccOperationCompleted == null)) {
                this.GetBankDataErrCountX_SubaccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataErrCountX_SubaccOperationCompleted);
            }
            this.InvokeAsync("GetBankDataErrCountX_Subacc", new object[] {
                        date,
                        date2,
                        state,
                        order,
                        errtype,
                        ordertype,
                        result,
                        handletype}, this.GetBankDataErrCountX_SubaccOperationCompleted, userState);
        }
        
        private void OnGetBankDataErrCountX_SubaccOperationCompleted(object arg) {
            if ((this.GetBankDataErrCountX_SubaccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataErrCountX_SubaccCompleted(this, new GetBankDataErrCountX_SubaccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataErrList3", RequestElementName="GetBankDataErrList3", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseElementName="GetBankDataErrList3Response", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetBankDataErrList3Result")]
        public System.Data.DataSet GetBankDataErrList(int istart, int imax) {
            object[] results = this.Invoke("GetBankDataErrList", new object[] {
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataErrList(int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataErrList", new object[] {
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankDataErrList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataErrListAsync(int istart, int imax) {
            this.GetBankDataErrListAsync(istart, imax, null);
        }
        
        /// <remarks/>
        public void GetBankDataErrListAsync(int istart, int imax, object userState) {
            if ((this.GetBankDataErrListOperationCompleted == null)) {
                this.GetBankDataErrListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataErrListOperationCompleted);
            }
            this.InvokeAsync("GetBankDataErrList", new object[] {
                        istart,
                        imax}, this.GetBankDataErrListOperationCompleted, userState);
        }
        
        private void OnGetBankDataErrListOperationCompleted(object arg) {
            if ((this.GetBankDataErrListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataErrListCompleted(this, new GetBankDataErrListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataErrList4", RequestElementName="GetBankDataErrList4", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseElementName="GetBankDataErrList4Response", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetBankDataErrList4Result")]
        public System.Data.DataSet GetBankDataErrList_Subacc(int istart, int imax) {
            object[] results = this.Invoke("GetBankDataErrList_Subacc", new object[] {
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataErrList_Subacc(int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataErrList_Subacc", new object[] {
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankDataErrList_Subacc(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataErrList_SubaccAsync(int istart, int imax) {
            this.GetBankDataErrList_SubaccAsync(istart, imax, null);
        }
        
        /// <remarks/>
        public void GetBankDataErrList_SubaccAsync(int istart, int imax, object userState) {
            if ((this.GetBankDataErrList_SubaccOperationCompleted == null)) {
                this.GetBankDataErrList_SubaccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataErrList_SubaccOperationCompleted);
            }
            this.InvokeAsync("GetBankDataErrList_Subacc", new object[] {
                        istart,
                        imax}, this.GetBankDataErrList_SubaccOperationCompleted, userState);
        }
        
        private void OnGetBankDataErrList_SubaccOperationCompleted(object arg) {
            if ((this.GetBankDataErrList_SubaccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataErrList_SubaccCompleted(this, new GetBankDataErrList_SubaccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataErrList2", RequestElementName="GetBankDataErrList2", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseElementName="GetBankDataErrList2Response", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetBankDataErrList2Result")]
        public System.Data.DataSet GetBankDataErrListX(string date, string date2, string bank, string state, string order, string errtype, string ordertype, string result, string handletype, long minmoney, long maxmoney, int istart, int imax) {
            object[] results = this.Invoke("GetBankDataErrListX", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        order,
                        errtype,
                        ordertype,
                        result,
                        handletype,
                        minmoney,
                        maxmoney,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataErrListX(string date, string date2, string bank, string state, string order, string errtype, string ordertype, string result, string handletype, long minmoney, long maxmoney, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataErrListX", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        order,
                        errtype,
                        ordertype,
                        result,
                        handletype,
                        minmoney,
                        maxmoney,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankDataErrListX(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataErrListXAsync(string date, string date2, string bank, string state, string order, string errtype, string ordertype, string result, string handletype, long minmoney, long maxmoney, int istart, int imax) {
            this.GetBankDataErrListXAsync(date, date2, bank, state, order, errtype, ordertype, result, handletype, minmoney, maxmoney, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetBankDataErrListXAsync(string date, string date2, string bank, string state, string order, string errtype, string ordertype, string result, string handletype, long minmoney, long maxmoney, int istart, int imax, object userState) {
            if ((this.GetBankDataErrListXOperationCompleted == null)) {
                this.GetBankDataErrListXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataErrListXOperationCompleted);
            }
            this.InvokeAsync("GetBankDataErrListX", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        order,
                        errtype,
                        ordertype,
                        result,
                        handletype,
                        minmoney,
                        maxmoney,
                        istart,
                        imax}, this.GetBankDataErrListXOperationCompleted, userState);
        }
        
        private void OnGetBankDataErrListXOperationCompleted(object arg) {
            if ((this.GetBankDataErrListXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataErrListXCompleted(this, new GetBankDataErrListXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataErrListX_Subacc", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankDataErrListX_Subacc(string date, string date2, string state, string list, string errtype, string ordertype, string result, string handletype, int istart, int imax) {
            object[] results = this.Invoke("GetBankDataErrListX_Subacc", new object[] {
                        date,
                        date2,
                        state,
                        list,
                        errtype,
                        ordertype,
                        result,
                        handletype,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataErrListX_Subacc(string date, string date2, string state, string list, string errtype, string ordertype, string result, string handletype, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataErrListX_Subacc", new object[] {
                        date,
                        date2,
                        state,
                        list,
                        errtype,
                        ordertype,
                        result,
                        handletype,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankDataErrListX_Subacc(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataErrListX_SubaccAsync(string date, string date2, string state, string list, string errtype, string ordertype, string result, string handletype, int istart, int imax) {
            this.GetBankDataErrListX_SubaccAsync(date, date2, state, list, errtype, ordertype, result, handletype, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetBankDataErrListX_SubaccAsync(string date, string date2, string state, string list, string errtype, string ordertype, string result, string handletype, int istart, int imax, object userState) {
            if ((this.GetBankDataErrListX_SubaccOperationCompleted == null)) {
                this.GetBankDataErrListX_SubaccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataErrListX_SubaccOperationCompleted);
            }
            this.InvokeAsync("GetBankDataErrListX_Subacc", new object[] {
                        date,
                        date2,
                        state,
                        list,
                        errtype,
                        ordertype,
                        result,
                        handletype,
                        istart,
                        imax}, this.GetBankDataErrListX_SubaccOperationCompleted, userState);
        }
        
        private void OnGetBankDataErrListX_SubaccOperationCompleted(object arg) {
            if ((this.GetBankDataErrListX_SubaccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataErrListX_SubaccCompleted(this, new GetBankDataErrListX_SubaccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAutoTwoCheckBankDataErrLis" +
            "t", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAutoTwoCheckBankDataErrList(string date, string date2, string bank) {
            object[] results = this.Invoke("GetAutoTwoCheckBankDataErrList", new object[] {
                        date,
                        date2,
                        bank});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAutoTwoCheckBankDataErrList(string date, string date2, string bank, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAutoTwoCheckBankDataErrList", new object[] {
                        date,
                        date2,
                        bank}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAutoTwoCheckBankDataErrList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAutoTwoCheckBankDataErrListAsync(string date, string date2, string bank) {
            this.GetAutoTwoCheckBankDataErrListAsync(date, date2, bank, null);
        }
        
        /// <remarks/>
        public void GetAutoTwoCheckBankDataErrListAsync(string date, string date2, string bank, object userState) {
            if ((this.GetAutoTwoCheckBankDataErrListOperationCompleted == null)) {
                this.GetAutoTwoCheckBankDataErrListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAutoTwoCheckBankDataErrListOperationCompleted);
            }
            this.InvokeAsync("GetAutoTwoCheckBankDataErrList", new object[] {
                        date,
                        date2,
                        bank}, this.GetAutoTwoCheckBankDataErrListOperationCompleted, userState);
        }
        
        private void OnGetAutoTwoCheckBankDataErrListOperationCompleted(object arg) {
            if ((this.GetAutoTwoCheckBankDataErrListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAutoTwoCheckBankDataErrListCompleted(this, new GetAutoTwoCheckBankDataErrListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetBankDataErrList1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataErrList", RequestElementName="GetBankDataErrList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseElementName="GetBankDataErrListResponse", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetBankDataErrListResult")]
        public System.Data.DataSet GetBankDataErrList(int fid) {
            object[] results = this.Invoke("GetBankDataErrList1", new object[] {
                        fid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataErrList1(int fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataErrList1", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankDataErrList1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataErrList1Async(int fid) {
            this.GetBankDataErrList1Async(fid, null);
        }
        
        /// <remarks/>
        public void GetBankDataErrList1Async(int fid, object userState) {
            if ((this.GetBankDataErrList1OperationCompleted == null)) {
                this.GetBankDataErrList1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataErrList1OperationCompleted);
            }
            this.InvokeAsync("GetBankDataErrList1", new object[] {
                        fid}, this.GetBankDataErrList1OperationCompleted, userState);
        }
        
        private void OnGetBankDataErrList1OperationCompleted(object arg) {
            if ((this.GetBankDataErrList1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataErrList1Completed(this, new GetBankDataErrList1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetBankDataErrList_Subacc1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankDataErrList_Subacc", RequestElementName="GetBankDataErrList_Subacc", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseElementName="GetBankDataErrList_SubaccResponse", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetBankDataErrList_SubaccResult")]
        public System.Data.DataSet GetBankDataErrList_Subacc(int fid) {
            object[] results = this.Invoke("GetBankDataErrList_Subacc1", new object[] {
                        fid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDataErrList_Subacc1(int fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDataErrList_Subacc1", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankDataErrList_Subacc1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDataErrList_Subacc1Async(int fid) {
            this.GetBankDataErrList_Subacc1Async(fid, null);
        }
        
        /// <remarks/>
        public void GetBankDataErrList_Subacc1Async(int fid, object userState) {
            if ((this.GetBankDataErrList_Subacc1OperationCompleted == null)) {
                this.GetBankDataErrList_Subacc1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDataErrList_Subacc1OperationCompleted);
            }
            this.InvokeAsync("GetBankDataErrList_Subacc1", new object[] {
                        fid}, this.GetBankDataErrList_Subacc1OperationCompleted, userState);
        }
        
        private void OnGetBankDataErrList_Subacc1OperationCompleted(object arg) {
            if ((this.GetBankDataErrList_Subacc1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDataErrList_Subacc1Completed(this, new GetBankDataErrList_Subacc1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCoinPub", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCoinPub(string filter, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetCoinPub", new object[] {
                        filter,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCoinPub(string filter, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCoinPub", new object[] {
                        filter,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCoinPub(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCoinPubAsync(string filter, int iPageStart, int iPageMax) {
            this.GetCoinPubAsync(filter, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetCoinPubAsync(string filter, int iPageStart, int iPageMax, object userState) {
            if ((this.GetCoinPubOperationCompleted == null)) {
                this.GetCoinPubOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoinPubOperationCompleted);
            }
            this.InvokeAsync("GetCoinPub", new object[] {
                        filter,
                        iPageStart,
                        iPageMax}, this.GetCoinPubOperationCompleted, userState);
        }
        
        private void OnGetCoinPubOperationCompleted(object arg) {
            if ((this.GetCoinPubCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoinPubCompleted(this, new GetCoinPubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCoinPubCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCoinPubCount(string filter) {
            object[] results = this.Invoke("GetCoinPubCount", new object[] {
                        filter});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCoinPubCount(string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCoinPubCount", new object[] {
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetCoinPubCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCoinPubCountAsync(string filter) {
            this.GetCoinPubCountAsync(filter, null);
        }
        
        /// <remarks/>
        public void GetCoinPubCountAsync(string filter, object userState) {
            if ((this.GetCoinPubCountOperationCompleted == null)) {
                this.GetCoinPubCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoinPubCountOperationCompleted);
            }
            this.InvokeAsync("GetCoinPubCount", new object[] {
                        filter}, this.GetCoinPubCountOperationCompleted, userState);
        }
        
        private void OnGetCoinPubCountOperationCompleted(object arg) {
            if ((this.GetCoinPubCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoinPubCountCompleted(this, new GetCoinPubCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCoinPubInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_COIN_PUB GetCoinPubInfo(string u_ID) {
            object[] results = this.Invoke("GetCoinPubInfo", new object[] {
                        u_ID});
            return ((T_COIN_PUB)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCoinPubInfo(string u_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCoinPubInfo", new object[] {
                        u_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_COIN_PUB EndGetCoinPubInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((T_COIN_PUB)(results[0]));
        }
        
        /// <remarks/>
        public void GetCoinPubInfoAsync(string u_ID) {
            this.GetCoinPubInfoAsync(u_ID, null);
        }
        
        /// <remarks/>
        public void GetCoinPubInfoAsync(string u_ID, object userState) {
            if ((this.GetCoinPubInfoOperationCompleted == null)) {
                this.GetCoinPubInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoinPubInfoOperationCompleted);
            }
            this.InvokeAsync("GetCoinPubInfo", new object[] {
                        u_ID}, this.GetCoinPubInfoOperationCompleted, userState);
        }
        
        private void OnGetCoinPubInfoOperationCompleted(object arg) {
            if ((this.GetCoinPubInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoinPubInfoCompleted(this, new GetCoinPubInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCoinPubInForPub", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetCoinPubInForPub(string u_ID) {
            object[] results = this.Invoke("GetCoinPubInForPub", new object[] {
                        u_ID});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCoinPubInForPub(string u_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCoinPubInForPub", new object[] {
                        u_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public long EndGetCoinPubInForPub(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetCoinPubInForPubAsync(string u_ID) {
            this.GetCoinPubInForPubAsync(u_ID, null);
        }
        
        /// <remarks/>
        public void GetCoinPubInForPubAsync(string u_ID, object userState) {
            if ((this.GetCoinPubInForPubOperationCompleted == null)) {
                this.GetCoinPubInForPubOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoinPubInForPubOperationCompleted);
            }
            this.InvokeAsync("GetCoinPubInForPub", new object[] {
                        u_ID}, this.GetCoinPubInForPubOperationCompleted, userState);
        }
        
        private void OnGetCoinPubInForPubOperationCompleted(object arg) {
            if ((this.GetCoinPubInForPubCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoinPubInForPubCompleted(this, new GetCoinPubInForPubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGwq", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGwq(string u_ID, int is_tdeID, string filter, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetGwq", new object[] {
                        u_ID,
                        is_tdeID,
                        filter,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGwq(string u_ID, int is_tdeID, string filter, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGwq", new object[] {
                        u_ID,
                        is_tdeID,
                        filter,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetGwq(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGwqAsync(string u_ID, int is_tdeID, string filter, int iPageStart, int iPageMax) {
            this.GetGwqAsync(u_ID, is_tdeID, filter, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetGwqAsync(string u_ID, int is_tdeID, string filter, int iPageStart, int iPageMax, object userState) {
            if ((this.GetGwqOperationCompleted == null)) {
                this.GetGwqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGwqOperationCompleted);
            }
            this.InvokeAsync("GetGwq", new object[] {
                        u_ID,
                        is_tdeID,
                        filter,
                        iPageStart,
                        iPageMax}, this.GetGwqOperationCompleted, userState);
        }
        
        private void OnGetGwqOperationCompleted(object arg) {
            if ((this.GetGwqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGwqCompleted(this, new GetGwqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGwqStat", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGwqStat(System.DateTime dt, string filter) {
            object[] results = this.Invoke("GetGwqStat", new object[] {
                        dt,
                        filter});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGwqStat(System.DateTime dt, string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGwqStat", new object[] {
                        dt,
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetGwqStat(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGwqStatAsync(System.DateTime dt, string filter) {
            this.GetGwqStatAsync(dt, filter, null);
        }
        
        /// <remarks/>
        public void GetGwqStatAsync(System.DateTime dt, string filter, object userState) {
            if ((this.GetGwqStatOperationCompleted == null)) {
                this.GetGwqStatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGwqStatOperationCompleted);
            }
            this.InvokeAsync("GetGwqStat", new object[] {
                        dt,
                        filter}, this.GetGwqStatOperationCompleted, userState);
        }
        
        private void OnGetGwqStatOperationCompleted(object arg) {
            if ((this.GetGwqStatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGwqStatCompleted(this, new GetGwqStatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGwqRoll", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGwqRoll(string u_ID, string ticket_id) {
            object[] results = this.Invoke("GetGwqRoll", new object[] {
                        u_ID,
                        ticket_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGwqRoll(string u_ID, string ticket_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGwqRoll", new object[] {
                        u_ID,
                        ticket_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetGwqRoll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGwqRollAsync(string u_ID, string ticket_id) {
            this.GetGwqRollAsync(u_ID, ticket_id, null);
        }
        
        /// <remarks/>
        public void GetGwqRollAsync(string u_ID, string ticket_id, object userState) {
            if ((this.GetGwqRollOperationCompleted == null)) {
                this.GetGwqRollOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGwqRollOperationCompleted);
            }
            this.InvokeAsync("GetGwqRoll", new object[] {
                        u_ID,
                        ticket_id}, this.GetGwqRollOperationCompleted, userState);
        }
        
        private void OnGetGwqRollOperationCompleted(object arg) {
            if ((this.GetGwqRollCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGwqRollCompleted(this, new GetGwqRollCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGwqCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetGwqCount(string u_ID, int is_tdeID, string filter) {
            object[] results = this.Invoke("GetGwqCount", new object[] {
                        u_ID,
                        is_tdeID,
                        filter});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGwqCount(string u_ID, int is_tdeID, string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGwqCount", new object[] {
                        u_ID,
                        is_tdeID,
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetGwqCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetGwqCountAsync(string u_ID, int is_tdeID, string filter) {
            this.GetGwqCountAsync(u_ID, is_tdeID, filter, null);
        }
        
        /// <remarks/>
        public void GetGwqCountAsync(string u_ID, int is_tdeID, string filter, object userState) {
            if ((this.GetGwqCountOperationCompleted == null)) {
                this.GetGwqCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGwqCountOperationCompleted);
            }
            this.InvokeAsync("GetGwqCount", new object[] {
                        u_ID,
                        is_tdeID,
                        filter}, this.GetGwqCountOperationCompleted, userState);
        }
        
        private void OnGetGwqCountOperationCompleted(object arg) {
            if ((this.GetGwqCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGwqCountCompleted(this, new GetGwqCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGwqInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_GWQ GetGwqInfo(string u_ID, string ticket_id) {
            object[] results = this.Invoke("GetGwqInfo", new object[] {
                        u_ID,
                        ticket_id});
            return ((T_GWQ)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGwqInfo(string u_ID, string ticket_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGwqInfo", new object[] {
                        u_ID,
                        ticket_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_GWQ EndGetGwqInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((T_GWQ)(results[0]));
        }
        
        /// <remarks/>
        public void GetGwqInfoAsync(string u_ID, string ticket_id) {
            this.GetGwqInfoAsync(u_ID, ticket_id, null);
        }
        
        /// <remarks/>
        public void GetGwqInfoAsync(string u_ID, string ticket_id, object userState) {
            if ((this.GetGwqInfoOperationCompleted == null)) {
                this.GetGwqInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGwqInfoOperationCompleted);
            }
            this.InvokeAsync("GetGwqInfo", new object[] {
                        u_ID,
                        ticket_id}, this.GetGwqInfoOperationCompleted, userState);
        }
        
        private void OnGetGwqInfoOperationCompleted(object arg) {
            if ((this.GetGwqInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGwqInfoCompleted(this, new GetGwqInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCoinPubIn", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCoinPubIn(string u_ID, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetCoinPubIn", new object[] {
                        u_ID,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCoinPubIn(string u_ID, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCoinPubIn", new object[] {
                        u_ID,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCoinPubIn(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCoinPubInAsync(string u_ID, int iPageStart, int iPageMax) {
            this.GetCoinPubInAsync(u_ID, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetCoinPubInAsync(string u_ID, int iPageStart, int iPageMax, object userState) {
            if ((this.GetCoinPubInOperationCompleted == null)) {
                this.GetCoinPubInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoinPubInOperationCompleted);
            }
            this.InvokeAsync("GetCoinPubIn", new object[] {
                        u_ID,
                        iPageStart,
                        iPageMax}, this.GetCoinPubInOperationCompleted, userState);
        }
        
        private void OnGetCoinPubInOperationCompleted(object arg) {
            if ((this.GetCoinPubInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoinPubInCompleted(this, new GetCoinPubInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCoinPubInCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCoinPubInCount(string u_ID) {
            object[] results = this.Invoke("GetCoinPubInCount", new object[] {
                        u_ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCoinPubInCount(string u_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCoinPubInCount", new object[] {
                        u_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetCoinPubInCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCoinPubInCountAsync(string u_ID) {
            this.GetCoinPubInCountAsync(u_ID, null);
        }
        
        /// <remarks/>
        public void GetCoinPubInCountAsync(string u_ID, object userState) {
            if ((this.GetCoinPubInCountOperationCompleted == null)) {
                this.GetCoinPubInCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoinPubInCountOperationCompleted);
            }
            this.InvokeAsync("GetCoinPubInCount", new object[] {
                        u_ID}, this.GetCoinPubInCountOperationCompleted, userState);
        }
        
        private void OnGetCoinPubInCountOperationCompleted(object arg) {
            if ((this.GetCoinPubInCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoinPubInCountCompleted(this, new GetCoinPubInCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetTokenHangCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTokenHangCount(string date, string begindate, string enddate, int state, string token, string list, string qq) {
            object[] results = this.Invoke("GetTokenHangCount", new object[] {
                        date,
                        begindate,
                        enddate,
                        state,
                        token,
                        list,
                        qq});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTokenHangCount(string date, string begindate, string enddate, int state, string token, string list, string qq, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTokenHangCount", new object[] {
                        date,
                        begindate,
                        enddate,
                        state,
                        token,
                        list,
                        qq}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetTokenHangCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTokenHangCountAsync(string date, string begindate, string enddate, int state, string token, string list, string qq) {
            this.GetTokenHangCountAsync(date, begindate, enddate, state, token, list, qq, null);
        }
        
        /// <remarks/>
        public void GetTokenHangCountAsync(string date, string begindate, string enddate, int state, string token, string list, string qq, object userState) {
            if ((this.GetTokenHangCountOperationCompleted == null)) {
                this.GetTokenHangCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTokenHangCountOperationCompleted);
            }
            this.InvokeAsync("GetTokenHangCount", new object[] {
                        date,
                        begindate,
                        enddate,
                        state,
                        token,
                        list,
                        qq}, this.GetTokenHangCountOperationCompleted, userState);
        }
        
        private void OnGetTokenHangCountOperationCompleted(object arg) {
            if ((this.GetTokenHangCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTokenHangCountCompleted(this, new GetTokenHangCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetTokenHangList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTokenHangList(string date, string begindate, string enddate, int state, string token, string list, string qq, int istart, int imax) {
            object[] results = this.Invoke("GetTokenHangList", new object[] {
                        date,
                        begindate,
                        enddate,
                        state,
                        token,
                        list,
                        qq,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTokenHangList(string date, string begindate, string enddate, int state, string token, string list, string qq, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTokenHangList", new object[] {
                        date,
                        begindate,
                        enddate,
                        state,
                        token,
                        list,
                        qq,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTokenHangList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTokenHangListAsync(string date, string begindate, string enddate, int state, string token, string list, string qq, int istart, int imax) {
            this.GetTokenHangListAsync(date, begindate, enddate, state, token, list, qq, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetTokenHangListAsync(string date, string begindate, string enddate, int state, string token, string list, string qq, int istart, int imax, object userState) {
            if ((this.GetTokenHangListOperationCompleted == null)) {
                this.GetTokenHangListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTokenHangListOperationCompleted);
            }
            this.InvokeAsync("GetTokenHangList", new object[] {
                        date,
                        begindate,
                        enddate,
                        state,
                        token,
                        list,
                        qq,
                        istart,
                        imax}, this.GetTokenHangListOperationCompleted, userState);
        }
        
        private void OnGetTokenHangListOperationCompleted(object arg) {
            if ((this.GetTokenHangListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTokenHangListCompleted(this, new GetTokenHangListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetHaoYeCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetHaoYeCount(string batchid, string qq) {
            object[] results = this.Invoke("GetHaoYeCount", new object[] {
                        batchid,
                        qq});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHaoYeCount(string batchid, string qq, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHaoYeCount", new object[] {
                        batchid,
                        qq}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetHaoYeCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetHaoYeCountAsync(string batchid, string qq) {
            this.GetHaoYeCountAsync(batchid, qq, null);
        }
        
        /// <remarks/>
        public void GetHaoYeCountAsync(string batchid, string qq, object userState) {
            if ((this.GetHaoYeCountOperationCompleted == null)) {
                this.GetHaoYeCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHaoYeCountOperationCompleted);
            }
            this.InvokeAsync("GetHaoYeCount", new object[] {
                        batchid,
                        qq}, this.GetHaoYeCountOperationCompleted, userState);
        }
        
        private void OnGetHaoYeCountOperationCompleted(object arg) {
            if ((this.GetHaoYeCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHaoYeCountCompleted(this, new GetHaoYeCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetHaoYeList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHaoYeList(string batchid, string qq, int istart, int imax) {
            object[] results = this.Invoke("GetHaoYeList", new object[] {
                        batchid,
                        qq,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHaoYeList(string batchid, string qq, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHaoYeList", new object[] {
                        batchid,
                        qq,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetHaoYeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHaoYeListAsync(string batchid, string qq, int istart, int imax) {
            this.GetHaoYeListAsync(batchid, qq, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetHaoYeListAsync(string batchid, string qq, int istart, int imax, object userState) {
            if ((this.GetHaoYeListOperationCompleted == null)) {
                this.GetHaoYeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHaoYeListOperationCompleted);
            }
            this.InvokeAsync("GetHaoYeList", new object[] {
                        batchid,
                        qq,
                        istart,
                        imax}, this.GetHaoYeListOperationCompleted, userState);
        }
        
        private void OnGetHaoYeListOperationCompleted(object arg) {
            if ((this.GetHaoYeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHaoYeListCompleted(this, new GetHaoYeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/getProxyFetchRequest", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getProxyFetchRequest(string checkid) {
            object[] results = this.Invoke("getProxyFetchRequest", new object[] {
                        checkid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProxyFetchRequest(string checkid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProxyFetchRequest", new object[] {
                        checkid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndgetProxyFetchRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getProxyFetchRequestAsync(string checkid) {
            this.getProxyFetchRequestAsync(checkid, null);
        }
        
        /// <remarks/>
        public void getProxyFetchRequestAsync(string checkid, object userState) {
            if ((this.getProxyFetchRequestOperationCompleted == null)) {
                this.getProxyFetchRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProxyFetchRequestOperationCompleted);
            }
            this.InvokeAsync("getProxyFetchRequest", new object[] {
                        checkid}, this.getProxyFetchRequestOperationCompleted, userState);
        }
        
        private void OngetProxyFetchRequestOperationCompleted(object arg) {
            if ((this.getProxyFetchRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProxyFetchRequestCompleted(this, new getProxyFetchRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/getProxyFetch", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getProxyFetch(string beginDate, string endDate, out System.Data.DataSet dsGen, out string Msg) {
            object[] results = this.Invoke("getProxyFetch", new object[] {
                        beginDate,
                        endDate});
            dsGen = ((System.Data.DataSet)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProxyFetch(string beginDate, string endDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProxyFetch", new object[] {
                        beginDate,
                        endDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndgetProxyFetch(System.IAsyncResult asyncResult, out System.Data.DataSet dsGen, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            dsGen = ((System.Data.DataSet)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getProxyFetchAsync(string beginDate, string endDate) {
            this.getProxyFetchAsync(beginDate, endDate, null);
        }
        
        /// <remarks/>
        public void getProxyFetchAsync(string beginDate, string endDate, object userState) {
            if ((this.getProxyFetchOperationCompleted == null)) {
                this.getProxyFetchOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProxyFetchOperationCompleted);
            }
            this.InvokeAsync("getProxyFetch", new object[] {
                        beginDate,
                        endDate}, this.getProxyFetchOperationCompleted, userState);
        }
        
        private void OngetProxyFetchOperationCompleted(object arg) {
            if ((this.getProxyFetchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProxyFetchCompleted(this, new getProxyFetchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSynRecordQueryCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSynRecordQueryCount(string transid, string begintime, string endtime, int paystatus, int synstatus, int syntype, int paytype, string spid, string spbillno, string purchaser, string bargainor, int flag, int synresult) {
            object[] results = this.Invoke("GetSynRecordQueryCount", new object[] {
                        transid,
                        begintime,
                        endtime,
                        paystatus,
                        synstatus,
                        syntype,
                        paytype,
                        spid,
                        spbillno,
                        purchaser,
                        bargainor,
                        flag,
                        synresult});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSynRecordQueryCount(string transid, string begintime, string endtime, int paystatus, int synstatus, int syntype, int paytype, string spid, string spbillno, string purchaser, string bargainor, int flag, int synresult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSynRecordQueryCount", new object[] {
                        transid,
                        begintime,
                        endtime,
                        paystatus,
                        synstatus,
                        syntype,
                        paytype,
                        spid,
                        spbillno,
                        purchaser,
                        bargainor,
                        flag,
                        synresult}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetSynRecordQueryCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSynRecordQueryCountAsync(string transid, string begintime, string endtime, int paystatus, int synstatus, int syntype, int paytype, string spid, string spbillno, string purchaser, string bargainor, int flag, int synresult) {
            this.GetSynRecordQueryCountAsync(transid, begintime, endtime, paystatus, synstatus, syntype, paytype, spid, spbillno, purchaser, bargainor, flag, synresult, null);
        }
        
        /// <remarks/>
        public void GetSynRecordQueryCountAsync(string transid, string begintime, string endtime, int paystatus, int synstatus, int syntype, int paytype, string spid, string spbillno, string purchaser, string bargainor, int flag, int synresult, object userState) {
            if ((this.GetSynRecordQueryCountOperationCompleted == null)) {
                this.GetSynRecordQueryCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSynRecordQueryCountOperationCompleted);
            }
            this.InvokeAsync("GetSynRecordQueryCount", new object[] {
                        transid,
                        begintime,
                        endtime,
                        paystatus,
                        synstatus,
                        syntype,
                        paytype,
                        spid,
                        spbillno,
                        purchaser,
                        bargainor,
                        flag,
                        synresult}, this.GetSynRecordQueryCountOperationCompleted, userState);
        }
        
        private void OnGetSynRecordQueryCountOperationCompleted(object arg) {
            if ((this.GetSynRecordQueryCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSynRecordQueryCountCompleted(this, new GetSynRecordQueryCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ResetSynRecordState", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetSynRecordState(string transid, string createtime, int inum) {
            this.Invoke("ResetSynRecordState", new object[] {
                        transid,
                        createtime,
                        inum});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginResetSynRecordState(string transid, string createtime, int inum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ResetSynRecordState", new object[] {
                        transid,
                        createtime,
                        inum}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndResetSynRecordState(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ResetSynRecordStateAsync(string transid, string createtime, int inum) {
            this.ResetSynRecordStateAsync(transid, createtime, inum, null);
        }
        
        /// <remarks/>
        public void ResetSynRecordStateAsync(string transid, string createtime, int inum, object userState) {
            if ((this.ResetSynRecordStateOperationCompleted == null)) {
                this.ResetSynRecordStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetSynRecordStateOperationCompleted);
            }
            this.InvokeAsync("ResetSynRecordState", new object[] {
                        transid,
                        createtime,
                        inum}, this.ResetSynRecordStateOperationCompleted, userState);
        }
        
        private void OnResetSynRecordStateOperationCompleted(object arg) {
            if ((this.ResetSynRecordStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetSynRecordStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SynPayState", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SynPayState(string transid, string createtime) {
            object[] results = this.Invoke("SynPayState", new object[] {
                        transid,
                        createtime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSynPayState(string transid, string createtime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SynPayState", new object[] {
                        transid,
                        createtime}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSynPayState(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SynPayStateAsync(string transid, string createtime) {
            this.SynPayStateAsync(transid, createtime, null);
        }
        
        /// <remarks/>
        public void SynPayStateAsync(string transid, string createtime, object userState) {
            if ((this.SynPayStateOperationCompleted == null)) {
                this.SynPayStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSynPayStateOperationCompleted);
            }
            this.InvokeAsync("SynPayState", new object[] {
                        transid,
                        createtime}, this.SynPayStateOperationCompleted, userState);
        }
        
        private void OnSynPayStateOperationCompleted(object arg) {
            if ((this.SynPayStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SynPayStateCompleted(this, new SynPayStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSynRecordQueryList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSynRecordQueryList(string transid, string begintime, string endtime, int paystatus, int synstatus, int syntype, int paytype, string spid, string spbillno, string purchaser, string bargainor, int flag, int synresult, int istart, int imax) {
            object[] results = this.Invoke("GetSynRecordQueryList", new object[] {
                        transid,
                        begintime,
                        endtime,
                        paystatus,
                        synstatus,
                        syntype,
                        paytype,
                        spid,
                        spbillno,
                        purchaser,
                        bargainor,
                        flag,
                        synresult,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSynRecordQueryList(
                    string transid, 
                    string begintime, 
                    string endtime, 
                    int paystatus, 
                    int synstatus, 
                    int syntype, 
                    int paytype, 
                    string spid, 
                    string spbillno, 
                    string purchaser, 
                    string bargainor, 
                    int flag, 
                    int synresult, 
                    int istart, 
                    int imax, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("GetSynRecordQueryList", new object[] {
                        transid,
                        begintime,
                        endtime,
                        paystatus,
                        synstatus,
                        syntype,
                        paytype,
                        spid,
                        spbillno,
                        purchaser,
                        bargainor,
                        flag,
                        synresult,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSynRecordQueryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSynRecordQueryListAsync(string transid, string begintime, string endtime, int paystatus, int synstatus, int syntype, int paytype, string spid, string spbillno, string purchaser, string bargainor, int flag, int synresult, int istart, int imax) {
            this.GetSynRecordQueryListAsync(transid, begintime, endtime, paystatus, synstatus, syntype, paytype, spid, spbillno, purchaser, bargainor, flag, synresult, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetSynRecordQueryListAsync(
                    string transid, 
                    string begintime, 
                    string endtime, 
                    int paystatus, 
                    int synstatus, 
                    int syntype, 
                    int paytype, 
                    string spid, 
                    string spbillno, 
                    string purchaser, 
                    string bargainor, 
                    int flag, 
                    int synresult, 
                    int istart, 
                    int imax, 
                    object userState) {
            if ((this.GetSynRecordQueryListOperationCompleted == null)) {
                this.GetSynRecordQueryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSynRecordQueryListOperationCompleted);
            }
            this.InvokeAsync("GetSynRecordQueryList", new object[] {
                        transid,
                        begintime,
                        endtime,
                        paystatus,
                        synstatus,
                        syntype,
                        paytype,
                        spid,
                        spbillno,
                        purchaser,
                        bargainor,
                        flag,
                        synresult,
                        istart,
                        imax}, this.GetSynRecordQueryListOperationCompleted, userState);
        }
        
        private void OnGetSynRecordQueryListOperationCompleted(object arg) {
            if ((this.GetSynRecordQueryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSynRecordQueryListCompleted(this, new GetSynRecordQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSynRecordQueryDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSynRecordQueryDetail(string transid, string createdate, int flag) {
            object[] results = this.Invoke("GetSynRecordQueryDetail", new object[] {
                        transid,
                        createdate,
                        flag});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSynRecordQueryDetail(string transid, string createdate, int flag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSynRecordQueryDetail", new object[] {
                        transid,
                        createdate,
                        flag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSynRecordQueryDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSynRecordQueryDetailAsync(string transid, string createdate, int flag) {
            this.GetSynRecordQueryDetailAsync(transid, createdate, flag, null);
        }
        
        /// <remarks/>
        public void GetSynRecordQueryDetailAsync(string transid, string createdate, int flag, object userState) {
            if ((this.GetSynRecordQueryDetailOperationCompleted == null)) {
                this.GetSynRecordQueryDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSynRecordQueryDetailOperationCompleted);
            }
            this.InvokeAsync("GetSynRecordQueryDetail", new object[] {
                        transid,
                        createdate,
                        flag}, this.GetSynRecordQueryDetailOperationCompleted, userState);
        }
        
        private void OnGetSynRecordQueryDetailOperationCompleted(object arg) {
            if ((this.GetSynRecordQueryDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSynRecordQueryDetailCompleted(this, new GetSynRecordQueryDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediCertManageCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMediCertManageCount(string spid, int status, int liststatus) {
            object[] results = this.Invoke("GetMediCertManageCount", new object[] {
                        spid,
                        status,
                        liststatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediCertManageCount(string spid, int status, int liststatus, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediCertManageCount", new object[] {
                        spid,
                        status,
                        liststatus}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetMediCertManageCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediCertManageCountAsync(string spid, int status, int liststatus) {
            this.GetMediCertManageCountAsync(spid, status, liststatus, null);
        }
        
        /// <remarks/>
        public void GetMediCertManageCountAsync(string spid, int status, int liststatus, object userState) {
            if ((this.GetMediCertManageCountOperationCompleted == null)) {
                this.GetMediCertManageCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediCertManageCountOperationCompleted);
            }
            this.InvokeAsync("GetMediCertManageCount", new object[] {
                        spid,
                        status,
                        liststatus}, this.GetMediCertManageCountOperationCompleted, userState);
        }
        
        private void OnGetMediCertManageCountOperationCompleted(object arg) {
            if ((this.GetMediCertManageCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediCertManageCountCompleted(this, new GetMediCertManageCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediCertManageList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediCertManageList(string spid, int status, int liststatus, int istart, int imax) {
            object[] results = this.Invoke("GetMediCertManageList", new object[] {
                        spid,
                        status,
                        liststatus,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediCertManageList(string spid, int status, int liststatus, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediCertManageList", new object[] {
                        spid,
                        status,
                        liststatus,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediCertManageList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediCertManageListAsync(string spid, int status, int liststatus, int istart, int imax) {
            this.GetMediCertManageListAsync(spid, status, liststatus, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetMediCertManageListAsync(string spid, int status, int liststatus, int istart, int imax, object userState) {
            if ((this.GetMediCertManageListOperationCompleted == null)) {
                this.GetMediCertManageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediCertManageListOperationCompleted);
            }
            this.InvokeAsync("GetMediCertManageList", new object[] {
                        spid,
                        status,
                        liststatus,
                        istart,
                        imax}, this.GetMediCertManageListOperationCompleted, userState);
        }
        
        private void OnGetMediCertManageListOperationCompleted(object arg) {
            if ((this.GetMediCertManageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediCertManageListCompleted(this, new GetMediCertManageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediCertListStatus", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMediCertListStatus(string spid) {
            object[] results = this.Invoke("GetMediCertListStatus", new object[] {
                        spid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediCertListStatus(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediCertListStatus", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetMediCertListStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediCertListStatusAsync(string spid) {
            this.GetMediCertListStatusAsync(spid, null);
        }
        
        /// <remarks/>
        public void GetMediCertListStatusAsync(string spid, object userState) {
            if ((this.GetMediCertListStatusOperationCompleted == null)) {
                this.GetMediCertListStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediCertListStatusOperationCompleted);
            }
            this.InvokeAsync("GetMediCertListStatus", new object[] {
                        spid}, this.GetMediCertListStatusOperationCompleted, userState);
        }
        
        private void OnGetMediCertListStatusOperationCompleted(object arg) {
            if ((this.GetMediCertListStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediCertListStatusCompleted(this, new GetMediCertListStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediCertStatus", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMediCertStatus(string spid) {
            object[] results = this.Invoke("GetMediCertStatus", new object[] {
                        spid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediCertStatus(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediCertStatus", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetMediCertStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediCertStatusAsync(string spid) {
            this.GetMediCertStatusAsync(spid, null);
        }
        
        /// <remarks/>
        public void GetMediCertStatusAsync(string spid, object userState) {
            if ((this.GetMediCertStatusOperationCompleted == null)) {
                this.GetMediCertStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediCertStatusOperationCompleted);
            }
            this.InvokeAsync("GetMediCertStatus", new object[] {
                        spid}, this.GetMediCertStatusOperationCompleted, userState);
        }
        
        private void OnGetMediCertStatusOperationCompleted(object arg) {
            if ((this.GetMediCertStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediCertStatusCompleted(this, new GetMediCertStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/MediCertApply", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MediCertApply(string spid, string ip, out string msg) {
            object[] results = this.Invoke("MediCertApply", new object[] {
                        spid,
                        ip});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMediCertApply(string spid, string ip, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MediCertApply", new object[] {
                        spid,
                        ip}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndMediCertApply(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MediCertApplyAsync(string spid, string ip) {
            this.MediCertApplyAsync(spid, ip, null);
        }
        
        /// <remarks/>
        public void MediCertApplyAsync(string spid, string ip, object userState) {
            if ((this.MediCertApplyOperationCompleted == null)) {
                this.MediCertApplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediCertApplyOperationCompleted);
            }
            this.InvokeAsync("MediCertApply", new object[] {
                        spid,
                        ip}, this.MediCertApplyOperationCompleted, userState);
        }
        
        private void OnMediCertApplyOperationCompleted(object arg) {
            if ((this.MediCertApplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediCertApplyCompleted(this, new MediCertApplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/MediCertDownload", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MediCertDownload(string spid, out string msg) {
            object[] results = this.Invoke("MediCertDownload", new object[] {
                        spid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMediCertDownload(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MediCertDownload", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndMediCertDownload(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MediCertDownloadAsync(string spid) {
            this.MediCertDownloadAsync(spid, null);
        }
        
        /// <remarks/>
        public void MediCertDownloadAsync(string spid, object userState) {
            if ((this.MediCertDownloadOperationCompleted == null)) {
                this.MediCertDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediCertDownloadOperationCompleted);
            }
            this.InvokeAsync("MediCertDownload", new object[] {
                        spid}, this.MediCertDownloadOperationCompleted, userState);
        }
        
        private void OnMediCertDownloadOperationCompleted(object arg) {
            if ((this.MediCertDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediCertDownloadCompleted(this, new MediCertDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/MediCertUpdateState", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MediCertUpdateState(string autoid, int handletype, out string msg) {
            object[] results = this.Invoke("MediCertUpdateState", new object[] {
                        autoid,
                        handletype});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMediCertUpdateState(string autoid, int handletype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MediCertUpdateState", new object[] {
                        autoid,
                        handletype}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndMediCertUpdateState(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MediCertUpdateStateAsync(string autoid, int handletype) {
            this.MediCertUpdateStateAsync(autoid, handletype, null);
        }
        
        /// <remarks/>
        public void MediCertUpdateStateAsync(string autoid, int handletype, object userState) {
            if ((this.MediCertUpdateStateOperationCompleted == null)) {
                this.MediCertUpdateStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediCertUpdateStateOperationCompleted);
            }
            this.InvokeAsync("MediCertUpdateState", new object[] {
                        autoid,
                        handletype}, this.MediCertUpdateStateOperationCompleted, userState);
        }
        
        private void OnMediCertUpdateStateOperationCompleted(object arg) {
            if ((this.MediCertUpdateStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediCertUpdateStateCompleted(this, new MediCertUpdateStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetB2cReturnCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetB2cReturnCount(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid) {
            object[] results = this.Invoke("GetB2cReturnCount", new object[] {
                        spid,
                        begintime,
                        endtime,
                        refundtype,
                        status,
                        tranid,
                        buyqq,
                        banktype,
                        sumtype,
                        drawid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetB2cReturnCount(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetB2cReturnCount", new object[] {
                        spid,
                        begintime,
                        endtime,
                        refundtype,
                        status,
                        tranid,
                        buyqq,
                        banktype,
                        sumtype,
                        drawid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetB2cReturnCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetB2cReturnCountAsync(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid) {
            this.GetB2cReturnCountAsync(spid, begintime, endtime, refundtype, status, tranid, buyqq, banktype, sumtype, drawid, null);
        }
        
        /// <remarks/>
        public void GetB2cReturnCountAsync(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid, object userState) {
            if ((this.GetB2cReturnCountOperationCompleted == null)) {
                this.GetB2cReturnCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetB2cReturnCountOperationCompleted);
            }
            this.InvokeAsync("GetB2cReturnCount", new object[] {
                        spid,
                        begintime,
                        endtime,
                        refundtype,
                        status,
                        tranid,
                        buyqq,
                        banktype,
                        sumtype,
                        drawid}, this.GetB2cReturnCountOperationCompleted, userState);
        }
        
        private void OnGetB2cReturnCountOperationCompleted(object arg) {
            if ((this.GetB2cReturnCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetB2cReturnCountCompleted(this, new GetB2cReturnCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetB2cReturnList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetB2cReturnList(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid, int queryTable, int istart, int imax) {
            object[] results = this.Invoke("GetB2cReturnList", new object[] {
                        spid,
                        begintime,
                        endtime,
                        refundtype,
                        status,
                        tranid,
                        buyqq,
                        banktype,
                        sumtype,
                        drawid,
                        queryTable,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetB2cReturnList(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid, int queryTable, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetB2cReturnList", new object[] {
                        spid,
                        begintime,
                        endtime,
                        refundtype,
                        status,
                        tranid,
                        buyqq,
                        banktype,
                        sumtype,
                        drawid,
                        queryTable,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetB2cReturnList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetB2cReturnListAsync(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid, int queryTable, int istart, int imax) {
            this.GetB2cReturnListAsync(spid, begintime, endtime, refundtype, status, tranid, buyqq, banktype, sumtype, drawid, queryTable, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetB2cReturnListAsync(string spid, string begintime, string endtime, int refundtype, int status, string tranid, string buyqq, string banktype, int sumtype, string drawid, int queryTable, int istart, int imax, object userState) {
            if ((this.GetB2cReturnListOperationCompleted == null)) {
                this.GetB2cReturnListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetB2cReturnListOperationCompleted);
            }
            this.InvokeAsync("GetB2cReturnList", new object[] {
                        spid,
                        begintime,
                        endtime,
                        refundtype,
                        status,
                        tranid,
                        buyqq,
                        banktype,
                        sumtype,
                        drawid,
                        queryTable,
                        istart,
                        imax}, this.GetB2cReturnListOperationCompleted, userState);
        }
        
        private void OnGetB2cReturnListOperationCompleted(object arg) {
            if ((this.GetB2cReturnListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetB2cReturnListCompleted(this, new GetB2cReturnListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetB2CReturnList_GS", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetB2CReturnList_GS(string spid, string begintime, string endtime) {
            object[] results = this.Invoke("GetB2CReturnList_GS", new object[] {
                        spid,
                        begintime,
                        endtime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetB2CReturnList_GS(string spid, string begintime, string endtime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetB2CReturnList_GS", new object[] {
                        spid,
                        begintime,
                        endtime}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetB2CReturnList_GS(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetB2CReturnList_GSAsync(string spid, string begintime, string endtime) {
            this.GetB2CReturnList_GSAsync(spid, begintime, endtime, null);
        }
        
        /// <remarks/>
        public void GetB2CReturnList_GSAsync(string spid, string begintime, string endtime, object userState) {
            if ((this.GetB2CReturnList_GSOperationCompleted == null)) {
                this.GetB2CReturnList_GSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetB2CReturnList_GSOperationCompleted);
            }
            this.InvokeAsync("GetB2CReturnList_GS", new object[] {
                        spid,
                        begintime,
                        endtime}, this.GetB2CReturnList_GSOperationCompleted, userState);
        }
        
        private void OnGetB2CReturnList_GSOperationCompleted(object arg) {
            if ((this.GetB2CReturnList_GSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetB2CReturnList_GSCompleted(this, new GetB2CReturnList_GSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundTotalCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRefundTotalCount(string spid, string begindate, string enddate, int refundtype, string refundbank, int refundpath, int refundstate, int returnstate, string RefundID, string Banklist, string oldid) {
            object[] results = this.Invoke("GetRefundTotalCount", new object[] {
                        spid,
                        begindate,
                        enddate,
                        refundtype,
                        refundbank,
                        refundpath,
                        refundstate,
                        returnstate,
                        RefundID,
                        Banklist,
                        oldid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundTotalCount(string spid, string begindate, string enddate, int refundtype, string refundbank, int refundpath, int refundstate, int returnstate, string RefundID, string Banklist, string oldid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefundTotalCount", new object[] {
                        spid,
                        begindate,
                        enddate,
                        refundtype,
                        refundbank,
                        refundpath,
                        refundstate,
                        returnstate,
                        RefundID,
                        Banklist,
                        oldid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetRefundTotalCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundTotalCountAsync(string spid, string begindate, string enddate, int refundtype, string refundbank, int refundpath, int refundstate, int returnstate, string RefundID, string Banklist, string oldid) {
            this.GetRefundTotalCountAsync(spid, begindate, enddate, refundtype, refundbank, refundpath, refundstate, returnstate, RefundID, Banklist, oldid, null);
        }
        
        /// <remarks/>
        public void GetRefundTotalCountAsync(string spid, string begindate, string enddate, int refundtype, string refundbank, int refundpath, int refundstate, int returnstate, string RefundID, string Banklist, string oldid, object userState) {
            if ((this.GetRefundTotalCountOperationCompleted == null)) {
                this.GetRefundTotalCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundTotalCountOperationCompleted);
            }
            this.InvokeAsync("GetRefundTotalCount", new object[] {
                        spid,
                        begindate,
                        enddate,
                        refundtype,
                        refundbank,
                        refundpath,
                        refundstate,
                        returnstate,
                        RefundID,
                        Banklist,
                        oldid}, this.GetRefundTotalCountOperationCompleted, userState);
        }
        
        private void OnGetRefundTotalCountOperationCompleted(object arg) {
            if ((this.GetRefundTotalCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundTotalCountCompleted(this, new GetRefundTotalCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundErrorCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRefundErrorCount(string batchid, string refundOrder, int orderType, string beginDate, string endDate, int refundType, string bankType, int refundPath, int handleType, int errorType, int refundState, string viewOldIds, string viewBatchid, int queryTimeType) {
            object[] results = this.Invoke("GetRefundErrorCount", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        viewOldIds,
                        viewBatchid,
                        queryTimeType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundErrorCount(
                    string batchid, 
                    string refundOrder, 
                    int orderType, 
                    string beginDate, 
                    string endDate, 
                    int refundType, 
                    string bankType, 
                    int refundPath, 
                    int handleType, 
                    int errorType, 
                    int refundState, 
                    string viewOldIds, 
                    string viewBatchid, 
                    int queryTimeType, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("GetRefundErrorCount", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        viewOldIds,
                        viewBatchid,
                        queryTimeType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetRefundErrorCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundErrorCountAsync(string batchid, string refundOrder, int orderType, string beginDate, string endDate, int refundType, string bankType, int refundPath, int handleType, int errorType, int refundState, string viewOldIds, string viewBatchid, int queryTimeType) {
            this.GetRefundErrorCountAsync(batchid, refundOrder, orderType, beginDate, endDate, refundType, bankType, refundPath, handleType, errorType, refundState, viewOldIds, viewBatchid, queryTimeType, null);
        }
        
        /// <remarks/>
        public void GetRefundErrorCountAsync(string batchid, string refundOrder, int orderType, string beginDate, string endDate, int refundType, string bankType, int refundPath, int handleType, int errorType, int refundState, string viewOldIds, string viewBatchid, int queryTimeType, object userState) {
            if ((this.GetRefundErrorCountOperationCompleted == null)) {
                this.GetRefundErrorCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundErrorCountOperationCompleted);
            }
            this.InvokeAsync("GetRefundErrorCount", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        viewOldIds,
                        viewBatchid,
                        queryTimeType}, this.GetRefundErrorCountOperationCompleted, userState);
        }
        
        private void OnGetRefundErrorCountOperationCompleted(object arg) {
            if ((this.GetRefundErrorCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundErrorCountCompleted(this, new GetRefundErrorCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundTotalList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRefundTotalList(string spid, string begindate, string enddate, int refundtype, string refundbank, int refundpath, int refundstate, int returnstate, string RefundID, string Banklist, bool truebankdata, string oldid, int istart, int imax) {
            object[] results = this.Invoke("GetRefundTotalList", new object[] {
                        spid,
                        begindate,
                        enddate,
                        refundtype,
                        refundbank,
                        refundpath,
                        refundstate,
                        returnstate,
                        RefundID,
                        Banklist,
                        truebankdata,
                        oldid,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundTotalList(
                    string spid, 
                    string begindate, 
                    string enddate, 
                    int refundtype, 
                    string refundbank, 
                    int refundpath, 
                    int refundstate, 
                    int returnstate, 
                    string RefundID, 
                    string Banklist, 
                    bool truebankdata, 
                    string oldid, 
                    int istart, 
                    int imax, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("GetRefundTotalList", new object[] {
                        spid,
                        begindate,
                        enddate,
                        refundtype,
                        refundbank,
                        refundpath,
                        refundstate,
                        returnstate,
                        RefundID,
                        Banklist,
                        truebankdata,
                        oldid,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRefundTotalList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundTotalListAsync(string spid, string begindate, string enddate, int refundtype, string refundbank, int refundpath, int refundstate, int returnstate, string RefundID, string Banklist, bool truebankdata, string oldid, int istart, int imax) {
            this.GetRefundTotalListAsync(spid, begindate, enddate, refundtype, refundbank, refundpath, refundstate, returnstate, RefundID, Banklist, truebankdata, oldid, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetRefundTotalListAsync(string spid, string begindate, string enddate, int refundtype, string refundbank, int refundpath, int refundstate, int returnstate, string RefundID, string Banklist, bool truebankdata, string oldid, int istart, int imax, object userState) {
            if ((this.GetRefundTotalListOperationCompleted == null)) {
                this.GetRefundTotalListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundTotalListOperationCompleted);
            }
            this.InvokeAsync("GetRefundTotalList", new object[] {
                        spid,
                        begindate,
                        enddate,
                        refundtype,
                        refundbank,
                        refundpath,
                        refundstate,
                        returnstate,
                        RefundID,
                        Banklist,
                        truebankdata,
                        oldid,
                        istart,
                        imax}, this.GetRefundTotalListOperationCompleted, userState);
        }
        
        private void OnGetRefundTotalListOperationCompleted(object arg) {
            if ((this.GetRefundTotalListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundTotalListCompleted(this, new GetRefundTotalListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundErrorList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRefundErrorList(
                    string batchid, 
                    string refundOrder, 
                    int orderType, 
                    string beginDate, 
                    string endDate, 
                    int refundType, 
                    string bankType, 
                    int refundPath, 
                    int handleType, 
                    int errorType, 
                    int refundState, 
                    bool truebankdata, 
                    string viewOldIds, 
                    string viewBatchid, 
                    int queryTimeType, 
                    int istart, 
                    int imax) {
            object[] results = this.Invoke("GetRefundErrorList", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        truebankdata,
                        viewOldIds,
                        viewBatchid,
                        queryTimeType,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundErrorList(
                    string batchid, 
                    string refundOrder, 
                    int orderType, 
                    string beginDate, 
                    string endDate, 
                    int refundType, 
                    string bankType, 
                    int refundPath, 
                    int handleType, 
                    int errorType, 
                    int refundState, 
                    bool truebankdata, 
                    string viewOldIds, 
                    string viewBatchid, 
                    int queryTimeType, 
                    int istart, 
                    int imax, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("GetRefundErrorList", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        truebankdata,
                        viewOldIds,
                        viewBatchid,
                        queryTimeType,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRefundErrorList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundErrorListAsync(
                    string batchid, 
                    string refundOrder, 
                    int orderType, 
                    string beginDate, 
                    string endDate, 
                    int refundType, 
                    string bankType, 
                    int refundPath, 
                    int handleType, 
                    int errorType, 
                    int refundState, 
                    bool truebankdata, 
                    string viewOldIds, 
                    string viewBatchid, 
                    int queryTimeType, 
                    int istart, 
                    int imax) {
            this.GetRefundErrorListAsync(batchid, refundOrder, orderType, beginDate, endDate, refundType, bankType, refundPath, handleType, errorType, refundState, truebankdata, viewOldIds, viewBatchid, queryTimeType, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetRefundErrorListAsync(
                    string batchid, 
                    string refundOrder, 
                    int orderType, 
                    string beginDate, 
                    string endDate, 
                    int refundType, 
                    string bankType, 
                    int refundPath, 
                    int handleType, 
                    int errorType, 
                    int refundState, 
                    bool truebankdata, 
                    string viewOldIds, 
                    string viewBatchid, 
                    int queryTimeType, 
                    int istart, 
                    int imax, 
                    object userState) {
            if ((this.GetRefundErrorListOperationCompleted == null)) {
                this.GetRefundErrorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundErrorListOperationCompleted);
            }
            this.InvokeAsync("GetRefundErrorList", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        truebankdata,
                        viewOldIds,
                        viewBatchid,
                        queryTimeType,
                        istart,
                        imax}, this.GetRefundErrorListOperationCompleted, userState);
        }
        
        private void OnGetRefundErrorListOperationCompleted(object arg) {
            if ((this.GetRefundErrorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundErrorListCompleted(this, new GetRefundErrorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DownRefundErrorList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownRefundErrorList(string batchid, string refundOrder, int orderType, string beginDate, string endDate, int refundType, string bankType, int refundPath, int handleType, int errorType, int refundState, bool truebankdata, string viewOldIds, string viewBatchid, int queryTimeType) {
            object[] results = this.Invoke("DownRefundErrorList", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        truebankdata,
                        viewOldIds,
                        viewBatchid,
                        queryTimeType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDownRefundErrorList(
                    string batchid, 
                    string refundOrder, 
                    int orderType, 
                    string beginDate, 
                    string endDate, 
                    int refundType, 
                    string bankType, 
                    int refundPath, 
                    int handleType, 
                    int errorType, 
                    int refundState, 
                    bool truebankdata, 
                    string viewOldIds, 
                    string viewBatchid, 
                    int queryTimeType, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("DownRefundErrorList", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        truebankdata,
                        viewOldIds,
                        viewBatchid,
                        queryTimeType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndDownRefundErrorList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownRefundErrorListAsync(string batchid, string refundOrder, int orderType, string beginDate, string endDate, int refundType, string bankType, int refundPath, int handleType, int errorType, int refundState, bool truebankdata, string viewOldIds, string viewBatchid, int queryTimeType) {
            this.DownRefundErrorListAsync(batchid, refundOrder, orderType, beginDate, endDate, refundType, bankType, refundPath, handleType, errorType, refundState, truebankdata, viewOldIds, viewBatchid, queryTimeType, null);
        }
        
        /// <remarks/>
        public void DownRefundErrorListAsync(
                    string batchid, 
                    string refundOrder, 
                    int orderType, 
                    string beginDate, 
                    string endDate, 
                    int refundType, 
                    string bankType, 
                    int refundPath, 
                    int handleType, 
                    int errorType, 
                    int refundState, 
                    bool truebankdata, 
                    string viewOldIds, 
                    string viewBatchid, 
                    int queryTimeType, 
                    object userState) {
            if ((this.DownRefundErrorListOperationCompleted == null)) {
                this.DownRefundErrorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownRefundErrorListOperationCompleted);
            }
            this.InvokeAsync("DownRefundErrorList", new object[] {
                        batchid,
                        refundOrder,
                        orderType,
                        beginDate,
                        endDate,
                        refundType,
                        bankType,
                        refundPath,
                        handleType,
                        errorType,
                        refundState,
                        truebankdata,
                        viewOldIds,
                        viewBatchid,
                        queryTimeType}, this.DownRefundErrorListOperationCompleted, userState);
        }
        
        private void OnDownRefundErrorListOperationCompleted(object arg) {
            if ((this.DownRefundErrorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownRefundErrorListCompleted(this, new DownRefundErrorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundTotalByIds", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRefundTotalByIds(string batchid, string refundids) {
            object[] results = this.Invoke("GetRefundTotalByIds", new object[] {
                        batchid,
                        refundids});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundTotalByIds(string batchid, string refundids, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefundTotalByIds", new object[] {
                        batchid,
                        refundids}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRefundTotalByIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundTotalByIdsAsync(string batchid, string refundids) {
            this.GetRefundTotalByIdsAsync(batchid, refundids, null);
        }
        
        /// <remarks/>
        public void GetRefundTotalByIdsAsync(string batchid, string refundids, object userState) {
            if ((this.GetRefundTotalByIdsOperationCompleted == null)) {
                this.GetRefundTotalByIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundTotalByIdsOperationCompleted);
            }
            this.InvokeAsync("GetRefundTotalByIds", new object[] {
                        batchid,
                        refundids}, this.GetRefundTotalByIdsOperationCompleted, userState);
        }
        
        private void OnGetRefundTotalByIdsOperationCompleted(object arg) {
            if ((this.GetRefundTotalByIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundTotalByIdsCompleted(this, new GetRefundTotalByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundParamList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRefundParamList(string oldIds, int itemCounts, string bankType, string checktype, out string msg) {
            object[] results = this.Invoke("GetRefundParamList", new object[] {
                        oldIds,
                        itemCounts,
                        bankType,
                        checktype});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundParamList(string oldIds, int itemCounts, string bankType, string checktype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefundParamList", new object[] {
                        oldIds,
                        itemCounts,
                        bankType,
                        checktype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRefundParamList(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundParamListAsync(string oldIds, int itemCounts, string bankType, string checktype) {
            this.GetRefundParamListAsync(oldIds, itemCounts, bankType, checktype, null);
        }
        
        /// <remarks/>
        public void GetRefundParamListAsync(string oldIds, int itemCounts, string bankType, string checktype, object userState) {
            if ((this.GetRefundParamListOperationCompleted == null)) {
                this.GetRefundParamListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundParamListOperationCompleted);
            }
            this.InvokeAsync("GetRefundParamList", new object[] {
                        oldIds,
                        itemCounts,
                        bankType,
                        checktype}, this.GetRefundParamListOperationCompleted, userState);
        }
        
        private void OnGetRefundParamListOperationCompleted(object arg) {
            if ((this.GetRefundParamListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundParamListCompleted(this, new GetRefundParamListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundTotalDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRefundTotalDetail(string refundid, string batchid) {
            object[] results = this.Invoke("GetRefundTotalDetail", new object[] {
                        refundid,
                        batchid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundTotalDetail(string refundid, string batchid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefundTotalDetail", new object[] {
                        refundid,
                        batchid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRefundTotalDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundTotalDetailAsync(string refundid, string batchid) {
            this.GetRefundTotalDetailAsync(refundid, batchid, null);
        }
        
        /// <remarks/>
        public void GetRefundTotalDetailAsync(string refundid, string batchid, object userState) {
            if ((this.GetRefundTotalDetailOperationCompleted == null)) {
                this.GetRefundTotalDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundTotalDetailOperationCompleted);
            }
            this.InvokeAsync("GetRefundTotalDetail", new object[] {
                        refundid,
                        batchid}, this.GetRefundTotalDetailOperationCompleted, userState);
        }
        
        private void OnGetRefundTotalDetailOperationCompleted(object arg) {
            if ((this.GetRefundTotalDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundTotalDetailCompleted(this, new GetRefundTotalDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundErrorDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRefundErrorDetail(string oldId) {
            object[] results = this.Invoke("GetRefundErrorDetail", new object[] {
                        oldId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundErrorDetail(string oldId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefundErrorDetail", new object[] {
                        oldId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRefundErrorDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundErrorDetailAsync(string oldId) {
            this.GetRefundErrorDetailAsync(oldId, null);
        }
        
        /// <remarks/>
        public void GetRefundErrorDetailAsync(string oldId, object userState) {
            if ((this.GetRefundErrorDetailOperationCompleted == null)) {
                this.GetRefundErrorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundErrorDetailOperationCompleted);
            }
            this.InvokeAsync("GetRefundErrorDetail", new object[] {
                        oldId}, this.GetRefundErrorDetailOperationCompleted, userState);
        }
        
        private void OnGetRefundErrorDetailOperationCompleted(object arg) {
            if ((this.GetRefundErrorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundErrorDetailCompleted(this, new GetRefundErrorDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundParam", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRefundParam(string oldId) {
            object[] results = this.Invoke("GetRefundParam", new object[] {
                        oldId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundParam(string oldId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefundParam", new object[] {
                        oldId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRefundParam(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundParamAsync(string oldId) {
            this.GetRefundParamAsync(oldId, null);
        }
        
        /// <remarks/>
        public void GetRefundParamAsync(string oldId, object userState) {
            if ((this.GetRefundParamOperationCompleted == null)) {
                this.GetRefundParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundParamOperationCompleted);
            }
            this.InvokeAsync("GetRefundParam", new object[] {
                        oldId}, this.GetRefundParamOperationCompleted, userState);
        }
        
        private void OnGetRefundParamOperationCompleted(object arg) {
            if ((this.GetRefundParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundParamCompleted(this, new GetRefundParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetB2cReturnDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetB2cReturnDetail(string transid, string drawid, string refundType) {
            object[] results = this.Invoke("GetB2cReturnDetail", new object[] {
                        transid,
                        drawid,
                        refundType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetB2cReturnDetail(string transid, string drawid, string refundType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetB2cReturnDetail", new object[] {
                        transid,
                        drawid,
                        refundType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetB2cReturnDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetB2cReturnDetailAsync(string transid, string drawid, string refundType) {
            this.GetB2cReturnDetailAsync(transid, drawid, refundType, null);
        }
        
        /// <remarks/>
        public void GetB2cReturnDetailAsync(string transid, string drawid, string refundType, object userState) {
            if ((this.GetB2cReturnDetailOperationCompleted == null)) {
                this.GetB2cReturnDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetB2cReturnDetailOperationCompleted);
            }
            this.InvokeAsync("GetB2cReturnDetail", new object[] {
                        transid,
                        drawid,
                        refundType}, this.GetB2cReturnDetailOperationCompleted, userState);
        }
        
        private void OnGetB2cReturnDetailOperationCompleted(object arg) {
            if ((this.GetB2cReturnDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetB2cReturnDetailCompleted(this, new GetB2cReturnDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetB2cReturnFileList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetB2cReturnFileList(string batchid) {
            object[] results = this.Invoke("GetB2cReturnFileList", new object[] {
                        batchid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetB2cReturnFileList(string batchid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetB2cReturnFileList", new object[] {
                        batchid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetB2cReturnFileList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetB2cReturnFileListAsync(string batchid) {
            this.GetB2cReturnFileListAsync(batchid, null);
        }
        
        /// <remarks/>
        public void GetB2cReturnFileListAsync(string batchid, object userState) {
            if ((this.GetB2cReturnFileListOperationCompleted == null)) {
                this.GetB2cReturnFileListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetB2cReturnFileListOperationCompleted);
            }
            this.InvokeAsync("GetB2cReturnFileList", new object[] {
                        batchid}, this.GetB2cReturnFileListOperationCompleted, userState);
        }
        
        private void OnGetB2cReturnFileListOperationCompleted(object arg) {
            if ((this.GetB2cReturnFileListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetB2cReturnFileListCompleted(this, new GetB2cReturnFileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/B2CReturnStartCheck_GS", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool B2CReturnStartCheck_GS(string begindate, string enddate, out string msg) {
            object[] results = this.Invoke("B2CReturnStartCheck_GS", new object[] {
                        begindate,
                        enddate});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginB2CReturnStartCheck_GS(string begindate, string enddate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("B2CReturnStartCheck_GS", new object[] {
                        begindate,
                        enddate}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndB2CReturnStartCheck_GS(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void B2CReturnStartCheck_GSAsync(string begindate, string enddate) {
            this.B2CReturnStartCheck_GSAsync(begindate, enddate, null);
        }
        
        /// <remarks/>
        public void B2CReturnStartCheck_GSAsync(string begindate, string enddate, object userState) {
            if ((this.B2CReturnStartCheck_GSOperationCompleted == null)) {
                this.B2CReturnStartCheck_GSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2CReturnStartCheck_GSOperationCompleted);
            }
            this.InvokeAsync("B2CReturnStartCheck_GS", new object[] {
                        begindate,
                        enddate}, this.B2CReturnStartCheck_GSOperationCompleted, userState);
        }
        
        private void OnB2CReturnStartCheck_GSOperationCompleted(object arg) {
            if ((this.B2CReturnStartCheck_GSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2CReturnStartCheck_GSCompleted(this, new B2CReturnStartCheck_GSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetB2cReturnDetail_GS", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetB2cReturnDetail_GS(string transid, string faccountdate) {
            object[] results = this.Invoke("GetB2cReturnDetail_GS", new object[] {
                        transid,
                        faccountdate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetB2cReturnDetail_GS(string transid, string faccountdate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetB2cReturnDetail_GS", new object[] {
                        transid,
                        faccountdate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetB2cReturnDetail_GS(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetB2cReturnDetail_GSAsync(string transid, string faccountdate) {
            this.GetB2cReturnDetail_GSAsync(transid, faccountdate, null);
        }
        
        /// <remarks/>
        public void GetB2cReturnDetail_GSAsync(string transid, string faccountdate, object userState) {
            if ((this.GetB2cReturnDetail_GSOperationCompleted == null)) {
                this.GetB2cReturnDetail_GSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetB2cReturnDetail_GSOperationCompleted);
            }
            this.InvokeAsync("GetB2cReturnDetail_GS", new object[] {
                        transid,
                        faccountdate}, this.GetB2cReturnDetail_GSOperationCompleted, userState);
        }
        
        private void OnGetB2cReturnDetail_GSOperationCompleted(object arg) {
            if ((this.GetB2cReturnDetail_GSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetB2cReturnDetail_GSCompleted(this, new GetB2cReturnDetail_GSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/B2CReturnRefundAsync", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void B2CReturnRefundAsync(string begindate, string enddate) {
            this.Invoke("B2CReturnRefundAsync", new object[] {
                        begindate,
                        enddate});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginB2CReturnRefundAsync(string begindate, string enddate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("B2CReturnRefundAsync", new object[] {
                        begindate,
                        enddate}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndB2CReturnRefundAsync(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void B2CReturnRefundAsyncAsync(string begindate, string enddate) {
            this.B2CReturnRefundAsyncAsync(begindate, enddate, null);
        }
        
        /// <remarks/>
        public void B2CReturnRefundAsyncAsync(string begindate, string enddate, object userState) {
            if ((this.B2CReturnRefundAsyncOperationCompleted == null)) {
                this.B2CReturnRefundAsyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2CReturnRefundAsyncOperationCompleted);
            }
            this.InvokeAsync("B2CReturnRefundAsync", new object[] {
                        begindate,
                        enddate}, this.B2CReturnRefundAsyncOperationCompleted, userState);
        }
        
        private void OnB2CReturnRefundAsyncOperationCompleted(object arg) {
            if ((this.B2CReturnRefundAsyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2CReturnRefundAsyncCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/AgreeSuspendRefundment", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AgreeSuspendRefundment(string transid, string dreawid, string refund_type, out string msg) {
            object[] results = this.Invoke("AgreeSuspendRefundment", new object[] {
                        transid,
                        dreawid,
                        refund_type});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAgreeSuspendRefundment(string transid, string dreawid, string refund_type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AgreeSuspendRefundment", new object[] {
                        transid,
                        dreawid,
                        refund_type}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAgreeSuspendRefundment(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AgreeSuspendRefundmentAsync(string transid, string dreawid, string refund_type) {
            this.AgreeSuspendRefundmentAsync(transid, dreawid, refund_type, null);
        }
        
        /// <remarks/>
        public void AgreeSuspendRefundmentAsync(string transid, string dreawid, string refund_type, object userState) {
            if ((this.AgreeSuspendRefundmentOperationCompleted == null)) {
                this.AgreeSuspendRefundmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgreeSuspendRefundmentOperationCompleted);
            }
            this.InvokeAsync("AgreeSuspendRefundment", new object[] {
                        transid,
                        dreawid,
                        refund_type}, this.AgreeSuspendRefundmentOperationCompleted, userState);
        }
        
        private void OnAgreeSuspendRefundmentOperationCompleted(object arg) {
            if ((this.AgreeSuspendRefundmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgreeSuspendRefundmentCompleted(this, new AgreeSuspendRefundmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/B2CReturnUpdateToSuccess", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool B2CReturnUpdateToSuccess(string transid, out string msg) {
            object[] results = this.Invoke("B2CReturnUpdateToSuccess", new object[] {
                        transid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginB2CReturnUpdateToSuccess(string transid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("B2CReturnUpdateToSuccess", new object[] {
                        transid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndB2CReturnUpdateToSuccess(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void B2CReturnUpdateToSuccessAsync(string transid) {
            this.B2CReturnUpdateToSuccessAsync(transid, null);
        }
        
        /// <remarks/>
        public void B2CReturnUpdateToSuccessAsync(string transid, object userState) {
            if ((this.B2CReturnUpdateToSuccessOperationCompleted == null)) {
                this.B2CReturnUpdateToSuccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2CReturnUpdateToSuccessOperationCompleted);
            }
            this.InvokeAsync("B2CReturnUpdateToSuccess", new object[] {
                        transid}, this.B2CReturnUpdateToSuccessOperationCompleted, userState);
        }
        
        private void OnB2CReturnUpdateToSuccessOperationCompleted(object arg) {
            if ((this.B2CReturnUpdateToSuccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2CReturnUpdateToSuccessCompleted(this, new B2CReturnUpdateToSuccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SuspendRefundment", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SuspendRefundment(object[] al, out string msg) {
            object[] results = this.Invoke("SuspendRefundment", new object[] {
                        al});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSuspendRefundment(object[] al, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SuspendRefundment", new object[] {
                        al}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSuspendRefundment(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SuspendRefundmentAsync(object[] al) {
            this.SuspendRefundmentAsync(al, null);
        }
        
        /// <remarks/>
        public void SuspendRefundmentAsync(object[] al, object userState) {
            if ((this.SuspendRefundmentOperationCompleted == null)) {
                this.SuspendRefundmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuspendRefundmentOperationCompleted);
            }
            this.InvokeAsync("SuspendRefundment", new object[] {
                        al}, this.SuspendRefundmentOperationCompleted, userState);
        }
        
        private void OnSuspendRefundmentOperationCompleted(object arg) {
            if ((this.SuspendRefundmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuspendRefundmentCompleted(this, new SuspendRefundmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DisagreeSuspend", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DisagreeSuspend(object[] al, out string msg) {
            object[] results = this.Invoke("DisagreeSuspend", new object[] {
                        al});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDisagreeSuspend(object[] al, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DisagreeSuspend", new object[] {
                        al}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDisagreeSuspend(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DisagreeSuspendAsync(object[] al) {
            this.DisagreeSuspendAsync(al, null);
        }
        
        /// <remarks/>
        public void DisagreeSuspendAsync(object[] al, object userState) {
            if ((this.DisagreeSuspendOperationCompleted == null)) {
                this.DisagreeSuspendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisagreeSuspendOperationCompleted);
            }
            this.InvokeAsync("DisagreeSuspend", new object[] {
                        al}, this.DisagreeSuspendOperationCompleted, userState);
        }
        
        private void OnDisagreeSuspendOperationCompleted(object arg) {
            if ((this.DisagreeSuspendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisagreeSuspendCompleted(this, new DisagreeSuspendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/B2CReturnUpdateToHang", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool B2CReturnUpdateToHang(object[] al, out string msg) {
            object[] results = this.Invoke("B2CReturnUpdateToHang", new object[] {
                        al});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginB2CReturnUpdateToHang(object[] al, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("B2CReturnUpdateToHang", new object[] {
                        al}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndB2CReturnUpdateToHang(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void B2CReturnUpdateToHangAsync(object[] al) {
            this.B2CReturnUpdateToHangAsync(al, null);
        }
        
        /// <remarks/>
        public void B2CReturnUpdateToHangAsync(object[] al, object userState) {
            if ((this.B2CReturnUpdateToHangOperationCompleted == null)) {
                this.B2CReturnUpdateToHangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2CReturnUpdateToHangOperationCompleted);
            }
            this.InvokeAsync("B2CReturnUpdateToHang", new object[] {
                        al}, this.B2CReturnUpdateToHangOperationCompleted, userState);
        }
        
        private void OnB2CReturnUpdateToHangOperationCompleted(object arg) {
            if ((this.B2CReturnUpdateToHangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2CReturnUpdateToHangCompleted(this, new B2CReturnUpdateToHangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/B2CReturnUpdateToRestore", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool B2CReturnUpdateToRestore(object[] al, out string msg) {
            object[] results = this.Invoke("B2CReturnUpdateToRestore", new object[] {
                        al});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginB2CReturnUpdateToRestore(object[] al, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("B2CReturnUpdateToRestore", new object[] {
                        al}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndB2CReturnUpdateToRestore(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void B2CReturnUpdateToRestoreAsync(object[] al) {
            this.B2CReturnUpdateToRestoreAsync(al, null);
        }
        
        /// <remarks/>
        public void B2CReturnUpdateToRestoreAsync(object[] al, object userState) {
            if ((this.B2CReturnUpdateToRestoreOperationCompleted == null)) {
                this.B2CReturnUpdateToRestoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2CReturnUpdateToRestoreOperationCompleted);
            }
            this.InvokeAsync("B2CReturnUpdateToRestore", new object[] {
                        al}, this.B2CReturnUpdateToRestoreOperationCompleted, userState);
        }
        
        private void OnB2CReturnUpdateToRestoreOperationCompleted(object arg) {
            if ((this.B2CReturnUpdateToRestoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2CReturnUpdateToRestoreCompleted(this, new B2CReturnUpdateToRestoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/getUserModify", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getUserModify(int istartIndex, int length, System.DateTime bgdate, System.DateTime eddate, string whereStr, out System.Data.DataSet ds, out string Msg) {
            object[] results = this.Invoke("getUserModify", new object[] {
                        istartIndex,
                        length,
                        bgdate,
                        eddate,
                        whereStr});
            ds = ((System.Data.DataSet)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserModify(int istartIndex, int length, System.DateTime bgdate, System.DateTime eddate, string whereStr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserModify", new object[] {
                        istartIndex,
                        length,
                        bgdate,
                        eddate,
                        whereStr}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndgetUserModify(System.IAsyncResult asyncResult, out System.Data.DataSet ds, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            ds = ((System.Data.DataSet)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getUserModifyAsync(int istartIndex, int length, System.DateTime bgdate, System.DateTime eddate, string whereStr) {
            this.getUserModifyAsync(istartIndex, length, bgdate, eddate, whereStr, null);
        }
        
        /// <remarks/>
        public void getUserModifyAsync(int istartIndex, int length, System.DateTime bgdate, System.DateTime eddate, string whereStr, object userState) {
            if ((this.getUserModifyOperationCompleted == null)) {
                this.getUserModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserModifyOperationCompleted);
            }
            this.InvokeAsync("getUserModify", new object[] {
                        istartIndex,
                        length,
                        bgdate,
                        eddate,
                        whereStr}, this.getUserModifyOperationCompleted, userState);
        }
        
        private void OngetUserModifyOperationCompleted(object arg) {
            if ((this.getUserModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserModifyCompleted(this, new getUserModifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/getQueryData", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getQueryData(int istartIndex, int length, System.DateTime bgDate, System.DateTime edDate, string whereStr, string queryType, out System.Data.DataSet ds, out string Msg) {
            object[] results = this.Invoke("getQueryData", new object[] {
                        istartIndex,
                        length,
                        bgDate,
                        edDate,
                        whereStr,
                        queryType});
            ds = ((System.Data.DataSet)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetQueryData(int istartIndex, int length, System.DateTime bgDate, System.DateTime edDate, string whereStr, string queryType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getQueryData", new object[] {
                        istartIndex,
                        length,
                        bgDate,
                        edDate,
                        whereStr,
                        queryType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndgetQueryData(System.IAsyncResult asyncResult, out System.Data.DataSet ds, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            ds = ((System.Data.DataSet)(results[1]));
            Msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getQueryDataAsync(int istartIndex, int length, System.DateTime bgDate, System.DateTime edDate, string whereStr, string queryType) {
            this.getQueryDataAsync(istartIndex, length, bgDate, edDate, whereStr, queryType, null);
        }
        
        /// <remarks/>
        public void getQueryDataAsync(int istartIndex, int length, System.DateTime bgDate, System.DateTime edDate, string whereStr, string queryType, object userState) {
            if ((this.getQueryDataOperationCompleted == null)) {
                this.getQueryDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQueryDataOperationCompleted);
            }
            this.InvokeAsync("getQueryData", new object[] {
                        istartIndex,
                        length,
                        bgDate,
                        edDate,
                        whereStr,
                        queryType}, this.getQueryDataOperationCompleted, userState);
        }
        
        private void OngetQueryDataOperationCompleted(object arg) {
            if ((this.getQueryDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQueryDataCompleted(this, new getQueryDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/updateRefoundState", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateRefoundState(string type, string[] ar, out string Msg) {
            object[] results = this.Invoke("updateRefoundState", new object[] {
                        type,
                        ar});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateRefoundState(string type, string[] ar, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateRefoundState", new object[] {
                        type,
                        ar}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndupdateRefoundState(System.IAsyncResult asyncResult, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateRefoundStateAsync(string type, string[] ar) {
            this.updateRefoundStateAsync(type, ar, null);
        }
        
        /// <remarks/>
        public void updateRefoundStateAsync(string type, string[] ar, object userState) {
            if ((this.updateRefoundStateOperationCompleted == null)) {
                this.updateRefoundStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateRefoundStateOperationCompleted);
            }
            this.InvokeAsync("updateRefoundState", new object[] {
                        type,
                        ar}, this.updateRefoundStateOperationCompleted, userState);
        }
        
        private void OnupdateRefoundStateOperationCompleted(object arg) {
            if ((this.updateRefoundStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateRefoundStateCompleted(this, new updateRefoundStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/getbankType", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getbankType(string listID, string bankorderid, string payFromtTime) {
            object[] results = this.Invoke("getbankType", new object[] {
                        listID,
                        bankorderid,
                        payFromtTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetbankType(string listID, string bankorderid, string payFromtTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getbankType", new object[] {
                        listID,
                        bankorderid,
                        payFromtTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetbankType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getbankTypeAsync(string listID, string bankorderid, string payFromtTime) {
            this.getbankTypeAsync(listID, bankorderid, payFromtTime, null);
        }
        
        /// <remarks/>
        public void getbankTypeAsync(string listID, string bankorderid, string payFromtTime, object userState) {
            if ((this.getbankTypeOperationCompleted == null)) {
                this.getbankTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetbankTypeOperationCompleted);
            }
            this.InvokeAsync("getbankType", new object[] {
                        listID,
                        bankorderid,
                        payFromtTime}, this.getbankTypeOperationCompleted, userState);
        }
        
        private void OngetbankTypeOperationCompleted(object arg) {
            if ((this.getbankTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getbankTypeCompleted(this, new getbankTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSaveIdInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSaveIdInfo(string saveListID, string bankList) {
            object[] results = this.Invoke("GetSaveIdInfo", new object[] {
                        saveListID,
                        bankList});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSaveIdInfo(string saveListID, string bankList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSaveIdInfo", new object[] {
                        saveListID,
                        bankList}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSaveIdInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSaveIdInfoAsync(string saveListID, string bankList) {
            this.GetSaveIdInfoAsync(saveListID, bankList, null);
        }
        
        /// <remarks/>
        public void GetSaveIdInfoAsync(string saveListID, string bankList, object userState) {
            if ((this.GetSaveIdInfoOperationCompleted == null)) {
                this.GetSaveIdInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSaveIdInfoOperationCompleted);
            }
            this.InvokeAsync("GetSaveIdInfo", new object[] {
                        saveListID,
                        bankList}, this.GetSaveIdInfoOperationCompleted, userState);
        }
        
        private void OnGetSaveIdInfoOperationCompleted(object arg) {
            if ((this.GetSaveIdInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSaveIdInfoCompleted(this, new GetSaveIdInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediOperatorManageCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMediOperatorManageCount(string spid, string account) {
            object[] results = this.Invoke("GetMediOperatorManageCount", new object[] {
                        spid,
                        account});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediOperatorManageCount(string spid, string account, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediOperatorManageCount", new object[] {
                        spid,
                        account}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetMediOperatorManageCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediOperatorManageCountAsync(string spid, string account) {
            this.GetMediOperatorManageCountAsync(spid, account, null);
        }
        
        /// <remarks/>
        public void GetMediOperatorManageCountAsync(string spid, string account, object userState) {
            if ((this.GetMediOperatorManageCountOperationCompleted == null)) {
                this.GetMediOperatorManageCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediOperatorManageCountOperationCompleted);
            }
            this.InvokeAsync("GetMediOperatorManageCount", new object[] {
                        spid,
                        account}, this.GetMediOperatorManageCountOperationCompleted, userState);
        }
        
        private void OnGetMediOperatorManageCountOperationCompleted(object arg) {
            if ((this.GetMediOperatorManageCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediOperatorManageCountCompleted(this, new GetMediOperatorManageCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediOperatorManageList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediOperatorManageList(string spid, string account, int istart, int imax) {
            object[] results = this.Invoke("GetMediOperatorManageList", new object[] {
                        spid,
                        account,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediOperatorManageList(string spid, string account, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediOperatorManageList", new object[] {
                        spid,
                        account,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediOperatorManageList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediOperatorManageListAsync(string spid, string account, int istart, int imax) {
            this.GetMediOperatorManageListAsync(spid, account, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetMediOperatorManageListAsync(string spid, string account, int istart, int imax, object userState) {
            if ((this.GetMediOperatorManageListOperationCompleted == null)) {
                this.GetMediOperatorManageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediOperatorManageListOperationCompleted);
            }
            this.InvokeAsync("GetMediOperatorManageList", new object[] {
                        spid,
                        account,
                        istart,
                        imax}, this.GetMediOperatorManageListOperationCompleted, userState);
        }
        
        private void OnGetMediOperatorManageListOperationCompleted(object arg) {
            if ((this.GetMediOperatorManageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediOperatorManageListCompleted(this, new GetMediOperatorManageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediOperatorRole", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMediOperatorRole(string spid, string qqid, int signorder) {
            object[] results = this.Invoke("GetMediOperatorRole", new object[] {
                        spid,
                        qqid,
                        signorder});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediOperatorRole(string spid, string qqid, int signorder, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediOperatorRole", new object[] {
                        spid,
                        qqid,
                        signorder}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetMediOperatorRole(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediOperatorRoleAsync(string spid, string qqid, int signorder) {
            this.GetMediOperatorRoleAsync(spid, qqid, signorder, null);
        }
        
        /// <remarks/>
        public void GetMediOperatorRoleAsync(string spid, string qqid, int signorder, object userState) {
            if ((this.GetMediOperatorRoleOperationCompleted == null)) {
                this.GetMediOperatorRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediOperatorRoleOperationCompleted);
            }
            this.InvokeAsync("GetMediOperatorRole", new object[] {
                        spid,
                        qqid,
                        signorder}, this.GetMediOperatorRoleOperationCompleted, userState);
        }
        
        private void OnGetMediOperatorRoleOperationCompleted(object arg) {
            if ((this.GetMediOperatorRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediOperatorRoleCompleted(this, new GetMediOperatorRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SetMediOperatorRole", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetMediOperatorRole(string spid, string qqid, int newrole, int signorder) {
            object[] results = this.Invoke("SetMediOperatorRole", new object[] {
                        spid,
                        qqid,
                        newrole,
                        signorder});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetMediOperatorRole(string spid, string qqid, int newrole, int signorder, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetMediOperatorRole", new object[] {
                        spid,
                        qqid,
                        newrole,
                        signorder}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSetMediOperatorRole(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetMediOperatorRoleAsync(string spid, string qqid, int newrole, int signorder) {
            this.SetMediOperatorRoleAsync(spid, qqid, newrole, signorder, null);
        }
        
        /// <remarks/>
        public void SetMediOperatorRoleAsync(string spid, string qqid, int newrole, int signorder, object userState) {
            if ((this.SetMediOperatorRoleOperationCompleted == null)) {
                this.SetMediOperatorRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMediOperatorRoleOperationCompleted);
            }
            this.InvokeAsync("SetMediOperatorRole", new object[] {
                        spid,
                        qqid,
                        newrole,
                        signorder}, this.SetMediOperatorRoleOperationCompleted, userState);
        }
        
        private void OnSetMediOperatorRoleOperationCompleted(object arg) {
            if ((this.SetMediOperatorRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMediOperatorRoleCompleted(this, new SetMediOperatorRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediQueryPickCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] GetMediQueryPickCount(string spid, int state, string bankacc, System.DateTime begintime, System.DateTime endtime) {
            object[] results = this.Invoke("GetMediQueryPickCount", new object[] {
                        spid,
                        state,
                        bankacc,
                        begintime,
                        endtime});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediQueryPickCount(string spid, int state, string bankacc, System.DateTime begintime, System.DateTime endtime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediQueryPickCount", new object[] {
                        spid,
                        state,
                        bankacc,
                        begintime,
                        endtime}, callback, asyncState);
        }
        
        /// <remarks/>
        public long[] EndGetMediQueryPickCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMediQueryPickCountAsync(string spid, int state, string bankacc, System.DateTime begintime, System.DateTime endtime) {
            this.GetMediQueryPickCountAsync(spid, state, bankacc, begintime, endtime, null);
        }
        
        /// <remarks/>
        public void GetMediQueryPickCountAsync(string spid, int state, string bankacc, System.DateTime begintime, System.DateTime endtime, object userState) {
            if ((this.GetMediQueryPickCountOperationCompleted == null)) {
                this.GetMediQueryPickCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediQueryPickCountOperationCompleted);
            }
            this.InvokeAsync("GetMediQueryPickCount", new object[] {
                        spid,
                        state,
                        bankacc,
                        begintime,
                        endtime}, this.GetMediQueryPickCountOperationCompleted, userState);
        }
        
        private void OnGetMediQueryPickCountOperationCompleted(object arg) {
            if ((this.GetMediQueryPickCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediQueryPickCountCompleted(this, new GetMediQueryPickCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediQueryPickList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediQueryPickList(string spid, int state, string bankacc, System.DateTime begintime, System.DateTime endtime, int istart, int imax) {
            object[] results = this.Invoke("GetMediQueryPickList", new object[] {
                        spid,
                        state,
                        bankacc,
                        begintime,
                        endtime,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediQueryPickList(string spid, int state, string bankacc, System.DateTime begintime, System.DateTime endtime, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediQueryPickList", new object[] {
                        spid,
                        state,
                        bankacc,
                        begintime,
                        endtime,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediQueryPickList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediQueryPickListAsync(string spid, int state, string bankacc, System.DateTime begintime, System.DateTime endtime, int istart, int imax) {
            this.GetMediQueryPickListAsync(spid, state, bankacc, begintime, endtime, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetMediQueryPickListAsync(string spid, int state, string bankacc, System.DateTime begintime, System.DateTime endtime, int istart, int imax, object userState) {
            if ((this.GetMediQueryPickListOperationCompleted == null)) {
                this.GetMediQueryPickListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediQueryPickListOperationCompleted);
            }
            this.InvokeAsync("GetMediQueryPickList", new object[] {
                        spid,
                        state,
                        bankacc,
                        begintime,
                        endtime,
                        istart,
                        imax}, this.GetMediQueryPickListOperationCompleted, userState);
        }
        
        private void OnGetMediQueryPickListOperationCompleted(object arg) {
            if ((this.GetMediQueryPickListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediQueryPickListCompleted(this, new GetMediQueryPickListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediQueryRefundCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] GetMediQueryRefundCount(string spid, string listid, string bankacc, System.DateTime begintime, System.DateTime endtime) {
            object[] results = this.Invoke("GetMediQueryRefundCount", new object[] {
                        spid,
                        listid,
                        bankacc,
                        begintime,
                        endtime});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediQueryRefundCount(string spid, string listid, string bankacc, System.DateTime begintime, System.DateTime endtime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediQueryRefundCount", new object[] {
                        spid,
                        listid,
                        bankacc,
                        begintime,
                        endtime}, callback, asyncState);
        }
        
        /// <remarks/>
        public long[] EndGetMediQueryRefundCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMediQueryRefundCountAsync(string spid, string listid, string bankacc, System.DateTime begintime, System.DateTime endtime) {
            this.GetMediQueryRefundCountAsync(spid, listid, bankacc, begintime, endtime, null);
        }
        
        /// <remarks/>
        public void GetMediQueryRefundCountAsync(string spid, string listid, string bankacc, System.DateTime begintime, System.DateTime endtime, object userState) {
            if ((this.GetMediQueryRefundCountOperationCompleted == null)) {
                this.GetMediQueryRefundCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediQueryRefundCountOperationCompleted);
            }
            this.InvokeAsync("GetMediQueryRefundCount", new object[] {
                        spid,
                        listid,
                        bankacc,
                        begintime,
                        endtime}, this.GetMediQueryRefundCountOperationCompleted, userState);
        }
        
        private void OnGetMediQueryRefundCountOperationCompleted(object arg) {
            if ((this.GetMediQueryRefundCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediQueryRefundCountCompleted(this, new GetMediQueryRefundCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediQueryRefundList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediQueryRefundList(string spid, string listid, string bankacc, System.DateTime begintime, System.DateTime endtime, int istart, int imax) {
            object[] results = this.Invoke("GetMediQueryRefundList", new object[] {
                        spid,
                        listid,
                        bankacc,
                        begintime,
                        endtime,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediQueryRefundList(string spid, string listid, string bankacc, System.DateTime begintime, System.DateTime endtime, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediQueryRefundList", new object[] {
                        spid,
                        listid,
                        bankacc,
                        begintime,
                        endtime,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediQueryRefundList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediQueryRefundListAsync(string spid, string listid, string bankacc, System.DateTime begintime, System.DateTime endtime, int istart, int imax) {
            this.GetMediQueryRefundListAsync(spid, listid, bankacc, begintime, endtime, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetMediQueryRefundListAsync(string spid, string listid, string bankacc, System.DateTime begintime, System.DateTime endtime, int istart, int imax, object userState) {
            if ((this.GetMediQueryRefundListOperationCompleted == null)) {
                this.GetMediQueryRefundListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediQueryRefundListOperationCompleted);
            }
            this.InvokeAsync("GetMediQueryRefundList", new object[] {
                        spid,
                        listid,
                        bankacc,
                        begintime,
                        endtime,
                        istart,
                        imax}, this.GetMediQueryRefundListOperationCompleted, userState);
        }
        
        private void OnGetMediQueryRefundListOperationCompleted(object arg) {
            if ((this.GetMediQueryRefundListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediQueryRefundListCompleted(this, new GetMediQueryRefundListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediQueryTransferCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] GetMediQueryTransferCount(string spid, string listid, System.DateTime begintime, System.DateTime endtime) {
            object[] results = this.Invoke("GetMediQueryTransferCount", new object[] {
                        spid,
                        listid,
                        begintime,
                        endtime});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediQueryTransferCount(string spid, string listid, System.DateTime begintime, System.DateTime endtime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediQueryTransferCount", new object[] {
                        spid,
                        listid,
                        begintime,
                        endtime}, callback, asyncState);
        }
        
        /// <remarks/>
        public long[] EndGetMediQueryTransferCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMediQueryTransferCountAsync(string spid, string listid, System.DateTime begintime, System.DateTime endtime) {
            this.GetMediQueryTransferCountAsync(spid, listid, begintime, endtime, null);
        }
        
        /// <remarks/>
        public void GetMediQueryTransferCountAsync(string spid, string listid, System.DateTime begintime, System.DateTime endtime, object userState) {
            if ((this.GetMediQueryTransferCountOperationCompleted == null)) {
                this.GetMediQueryTransferCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediQueryTransferCountOperationCompleted);
            }
            this.InvokeAsync("GetMediQueryTransferCount", new object[] {
                        spid,
                        listid,
                        begintime,
                        endtime}, this.GetMediQueryTransferCountOperationCompleted, userState);
        }
        
        private void OnGetMediQueryTransferCountOperationCompleted(object arg) {
            if ((this.GetMediQueryTransferCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediQueryTransferCountCompleted(this, new GetMediQueryTransferCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediQueryTransferList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediQueryTransferList(string spid, string listid, System.DateTime begintime, System.DateTime endtime, int istart, int imax) {
            object[] results = this.Invoke("GetMediQueryTransferList", new object[] {
                        spid,
                        listid,
                        begintime,
                        endtime,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediQueryTransferList(string spid, string listid, System.DateTime begintime, System.DateTime endtime, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediQueryTransferList", new object[] {
                        spid,
                        listid,
                        begintime,
                        endtime,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediQueryTransferList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediQueryTransferListAsync(string spid, string listid, System.DateTime begintime, System.DateTime endtime, int istart, int imax) {
            this.GetMediQueryTransferListAsync(spid, listid, begintime, endtime, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetMediQueryTransferListAsync(string spid, string listid, System.DateTime begintime, System.DateTime endtime, int istart, int imax, object userState) {
            if ((this.GetMediQueryTransferListOperationCompleted == null)) {
                this.GetMediQueryTransferListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediQueryTransferListOperationCompleted);
            }
            this.InvokeAsync("GetMediQueryTransferList", new object[] {
                        spid,
                        listid,
                        begintime,
                        endtime,
                        istart,
                        imax}, this.GetMediQueryTransferListOperationCompleted, userState);
        }
        
        private void OnGetMediQueryTransferListOperationCompleted(object arg) {
            if ((this.GetMediQueryTransferListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediQueryTransferListCompleted(this, new GetMediQueryTransferListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediQueryBatchTransferCoun" +
            "t", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] GetMediQueryBatchTransferCount(string spid, int state, System.DateTime begintime, System.DateTime endtime, string frontbatchid, string bachbatchid, int batchtype) {
            object[] results = this.Invoke("GetMediQueryBatchTransferCount", new object[] {
                        spid,
                        state,
                        begintime,
                        endtime,
                        frontbatchid,
                        bachbatchid,
                        batchtype});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediQueryBatchTransferCount(string spid, int state, System.DateTime begintime, System.DateTime endtime, string frontbatchid, string bachbatchid, int batchtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediQueryBatchTransferCount", new object[] {
                        spid,
                        state,
                        begintime,
                        endtime,
                        frontbatchid,
                        bachbatchid,
                        batchtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public long[] EndGetMediQueryBatchTransferCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMediQueryBatchTransferCountAsync(string spid, int state, System.DateTime begintime, System.DateTime endtime, string frontbatchid, string bachbatchid, int batchtype) {
            this.GetMediQueryBatchTransferCountAsync(spid, state, begintime, endtime, frontbatchid, bachbatchid, batchtype, null);
        }
        
        /// <remarks/>
        public void GetMediQueryBatchTransferCountAsync(string spid, int state, System.DateTime begintime, System.DateTime endtime, string frontbatchid, string bachbatchid, int batchtype, object userState) {
            if ((this.GetMediQueryBatchTransferCountOperationCompleted == null)) {
                this.GetMediQueryBatchTransferCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediQueryBatchTransferCountOperationCompleted);
            }
            this.InvokeAsync("GetMediQueryBatchTransferCount", new object[] {
                        spid,
                        state,
                        begintime,
                        endtime,
                        frontbatchid,
                        bachbatchid,
                        batchtype}, this.GetMediQueryBatchTransferCountOperationCompleted, userState);
        }
        
        private void OnGetMediQueryBatchTransferCountOperationCompleted(object arg) {
            if ((this.GetMediQueryBatchTransferCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediQueryBatchTransferCountCompleted(this, new GetMediQueryBatchTransferCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediQueryBatchTransferList" +
            "", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediQueryBatchTransferList(string spid, int state, System.DateTime begintime, System.DateTime endtime, string frontbatchid, string bachbatchid, int batchtype, int istart, int imax) {
            object[] results = this.Invoke("GetMediQueryBatchTransferList", new object[] {
                        spid,
                        state,
                        begintime,
                        endtime,
                        frontbatchid,
                        bachbatchid,
                        batchtype,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediQueryBatchTransferList(string spid, int state, System.DateTime begintime, System.DateTime endtime, string frontbatchid, string bachbatchid, int batchtype, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediQueryBatchTransferList", new object[] {
                        spid,
                        state,
                        begintime,
                        endtime,
                        frontbatchid,
                        bachbatchid,
                        batchtype,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediQueryBatchTransferList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediQueryBatchTransferListAsync(string spid, int state, System.DateTime begintime, System.DateTime endtime, string frontbatchid, string bachbatchid, int batchtype, int istart, int imax) {
            this.GetMediQueryBatchTransferListAsync(spid, state, begintime, endtime, frontbatchid, bachbatchid, batchtype, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetMediQueryBatchTransferListAsync(string spid, int state, System.DateTime begintime, System.DateTime endtime, string frontbatchid, string bachbatchid, int batchtype, int istart, int imax, object userState) {
            if ((this.GetMediQueryBatchTransferListOperationCompleted == null)) {
                this.GetMediQueryBatchTransferListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediQueryBatchTransferListOperationCompleted);
            }
            this.InvokeAsync("GetMediQueryBatchTransferList", new object[] {
                        spid,
                        state,
                        begintime,
                        endtime,
                        frontbatchid,
                        bachbatchid,
                        batchtype,
                        istart,
                        imax}, this.GetMediQueryBatchTransferListOperationCompleted, userState);
        }
        
        private void OnGetMediQueryBatchTransferListOperationCompleted(object arg) {
            if ((this.GetMediQueryBatchTransferListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediQueryBatchTransferListCompleted(this, new GetMediQueryBatchTransferListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediQueryBatchTransferList" +
            "_Detail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediQueryBatchTransferList_Detail(string spid, string backbatchid) {
            object[] results = this.Invoke("GetMediQueryBatchTransferList_Detail", new object[] {
                        spid,
                        backbatchid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediQueryBatchTransferList_Detail(string spid, string backbatchid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediQueryBatchTransferList_Detail", new object[] {
                        spid,
                        backbatchid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediQueryBatchTransferList_Detail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediQueryBatchTransferList_DetailAsync(string spid, string backbatchid) {
            this.GetMediQueryBatchTransferList_DetailAsync(spid, backbatchid, null);
        }
        
        /// <remarks/>
        public void GetMediQueryBatchTransferList_DetailAsync(string spid, string backbatchid, object userState) {
            if ((this.GetMediQueryBatchTransferList_DetailOperationCompleted == null)) {
                this.GetMediQueryBatchTransferList_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediQueryBatchTransferList_DetailOperationCompleted);
            }
            this.InvokeAsync("GetMediQueryBatchTransferList_Detail", new object[] {
                        spid,
                        backbatchid}, this.GetMediQueryBatchTransferList_DetailOperationCompleted, userState);
        }
        
        private void OnGetMediQueryBatchTransferList_DetailOperationCompleted(object arg) {
            if ((this.GetMediQueryBatchTransferList_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediQueryBatchTransferList_DetailCompleted(this, new GetMediQueryBatchTransferList_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QQ2Uid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QQ2Uid(string qqid) {
            object[] results = this.Invoke("QQ2Uid", new object[] {
                        qqid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQQ2Uid(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QQ2Uid", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndQQ2Uid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QQ2UidAsync(string qqid) {
            this.QQ2UidAsync(qqid, null);
        }
        
        /// <remarks/>
        public void QQ2UidAsync(string qqid, object userState) {
            if ((this.QQ2UidOperationCompleted == null)) {
                this.QQ2UidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQQ2UidOperationCompleted);
            }
            this.InvokeAsync("QQ2Uid", new object[] {
                        qqid}, this.QQ2UidOperationCompleted, userState);
        }
        
        private void OnQQ2UidOperationCompleted(object arg) {
            if ((this.QQ2UidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QQ2UidCompleted(this, new QQ2UidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QQ2UidX", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QQ2UidX(string qqid) {
            object[] results = this.Invoke("QQ2UidX", new object[] {
                        qqid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQQ2UidX(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QQ2UidX", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndQQ2UidX(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QQ2UidXAsync(string qqid) {
            this.QQ2UidXAsync(qqid, null);
        }
        
        /// <remarks/>
        public void QQ2UidXAsync(string qqid, object userState) {
            if ((this.QQ2UidXOperationCompleted == null)) {
                this.QQ2UidXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQQ2UidXOperationCompleted);
            }
            this.InvokeAsync("QQ2UidX", new object[] {
                        qqid}, this.QQ2UidXOperationCompleted, userState);
        }
        
        private void OnQQ2UidXOperationCompleted(object arg) {
            if ((this.QQ2UidXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QQ2UidXCompleted(this, new QQ2UidXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/Uid2QQ", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Uid2QQ(string uid) {
            object[] results = this.Invoke("Uid2QQ", new object[] {
                        uid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUid2QQ(string uid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Uid2QQ", new object[] {
                        uid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUid2QQ(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Uid2QQAsync(string uid) {
            this.Uid2QQAsync(uid, null);
        }
        
        /// <remarks/>
        public void Uid2QQAsync(string uid, object userState) {
            if ((this.Uid2QQOperationCompleted == null)) {
                this.Uid2QQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUid2QQOperationCompleted);
            }
            this.InvokeAsync("Uid2QQ", new object[] {
                        uid}, this.Uid2QQOperationCompleted, userState);
        }
        
        private void OnUid2QQOperationCompleted(object arg) {
            if ((this.Uid2QQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Uid2QQCompleted(this, new Uid2QQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SetBatchIDForSettle", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetBatchIDForSettle(string batchid, string[] feenos, out string msg, out string levelvalue) {
            object[] results = this.Invoke("SetBatchIDForSettle", new object[] {
                        batchid,
                        feenos});
            msg = ((string)(results[1]));
            levelvalue = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetBatchIDForSettle(string batchid, string[] feenos, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetBatchIDForSettle", new object[] {
                        batchid,
                        feenos}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSetBatchIDForSettle(System.IAsyncResult asyncResult, out string msg, out string levelvalue) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            levelvalue = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetBatchIDForSettleAsync(string batchid, string[] feenos) {
            this.SetBatchIDForSettleAsync(batchid, feenos, null);
        }
        
        /// <remarks/>
        public void SetBatchIDForSettleAsync(string batchid, string[] feenos, object userState) {
            if ((this.SetBatchIDForSettleOperationCompleted == null)) {
                this.SetBatchIDForSettleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetBatchIDForSettleOperationCompleted);
            }
            this.InvokeAsync("SetBatchIDForSettle", new object[] {
                        batchid,
                        feenos}, this.SetBatchIDForSettleOperationCompleted, userState);
        }
        
        private void OnSetBatchIDForSettleOperationCompleted(object arg) {
            if ((this.SetBatchIDForSettleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetBatchIDForSettleCompleted(this, new SetBatchIDForSettleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchSettleData", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBatchSettleData(string batchid) {
            object[] results = this.Invoke("GetBatchSettleData", new object[] {
                        batchid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchSettleData(string batchid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchSettleData", new object[] {
                        batchid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBatchSettleData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchSettleDataAsync(string batchid) {
            this.GetBatchSettleDataAsync(batchid, null);
        }
        
        /// <remarks/>
        public void GetBatchSettleDataAsync(string batchid, object userState) {
            if ((this.GetBatchSettleDataOperationCompleted == null)) {
                this.GetBatchSettleDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchSettleDataOperationCompleted);
            }
            this.InvokeAsync("GetBatchSettleData", new object[] {
                        batchid}, this.GetBatchSettleDataOperationCompleted, userState);
        }
        
        private void OnGetBatchSettleDataOperationCompleted(object arg) {
            if ((this.GetBatchSettleDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchSettleDataCompleted(this, new GetBatchSettleDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSysBulletin", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSysBulletin(string listtype, out string msg) {
            object[] results = this.Invoke("GetSysBulletin", new object[] {
                        listtype});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSysBulletin(string listtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSysBulletin", new object[] {
                        listtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSysBulletin(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSysBulletinAsync(string listtype) {
            this.GetSysBulletinAsync(listtype, null);
        }
        
        /// <remarks/>
        public void GetSysBulletinAsync(string listtype, object userState) {
            if ((this.GetSysBulletinOperationCompleted == null)) {
                this.GetSysBulletinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSysBulletinOperationCompleted);
            }
            this.InvokeAsync("GetSysBulletin", new object[] {
                        listtype}, this.GetSysBulletinOperationCompleted, userState);
        }
        
        private void OnGetSysBulletinOperationCompleted(object arg) {
            if ((this.GetSysBulletinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSysBulletinCompleted(this, new GetSysBulletinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SysBulletinIssue", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SysBulletinIssue(string sysid, out string msg) {
            object[] results = this.Invoke("SysBulletinIssue", new object[] {
                        sysid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSysBulletinIssue(string sysid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SysBulletinIssue", new object[] {
                        sysid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSysBulletinIssue(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SysBulletinIssueAsync(string sysid) {
            this.SysBulletinIssueAsync(sysid, null);
        }
        
        /// <remarks/>
        public void SysBulletinIssueAsync(string sysid, object userState) {
            if ((this.SysBulletinIssueOperationCompleted == null)) {
                this.SysBulletinIssueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSysBulletinIssueOperationCompleted);
            }
            this.InvokeAsync("SysBulletinIssue", new object[] {
                        sysid}, this.SysBulletinIssueOperationCompleted, userState);
        }
        
        private void OnSysBulletinIssueOperationCompleted(object arg) {
            if ((this.SysBulletinIssueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SysBulletinIssueCompleted(this, new SysBulletinIssueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SysBulletinGoPrior", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SysBulletinGoPrior(string fid, out string msg) {
            object[] results = this.Invoke("SysBulletinGoPrior", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSysBulletinGoPrior(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SysBulletinGoPrior", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSysBulletinGoPrior(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SysBulletinGoPriorAsync(string fid) {
            this.SysBulletinGoPriorAsync(fid, null);
        }
        
        /// <remarks/>
        public void SysBulletinGoPriorAsync(string fid, object userState) {
            if ((this.SysBulletinGoPriorOperationCompleted == null)) {
                this.SysBulletinGoPriorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSysBulletinGoPriorOperationCompleted);
            }
            this.InvokeAsync("SysBulletinGoPrior", new object[] {
                        fid}, this.SysBulletinGoPriorOperationCompleted, userState);
        }
        
        private void OnSysBulletinGoPriorOperationCompleted(object arg) {
            if ((this.SysBulletinGoPriorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SysBulletinGoPriorCompleted(this, new SysBulletinGoPriorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SysBulletinGoNext", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SysBulletinGoNext(string fid, out string msg) {
            object[] results = this.Invoke("SysBulletinGoNext", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSysBulletinGoNext(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SysBulletinGoNext", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSysBulletinGoNext(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SysBulletinGoNextAsync(string fid) {
            this.SysBulletinGoNextAsync(fid, null);
        }
        
        /// <remarks/>
        public void SysBulletinGoNextAsync(string fid, object userState) {
            if ((this.SysBulletinGoNextOperationCompleted == null)) {
                this.SysBulletinGoNextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSysBulletinGoNextOperationCompleted);
            }
            this.InvokeAsync("SysBulletinGoNext", new object[] {
                        fid}, this.SysBulletinGoNextOperationCompleted, userState);
        }
        
        private void OnSysBulletinGoNextOperationCompleted(object arg) {
            if ((this.SysBulletinGoNextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SysBulletinGoNextCompleted(this, new SysBulletinGoNextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SysBulletinDel", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SysBulletinDel(string fid, out string msg) {
            object[] results = this.Invoke("SysBulletinDel", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSysBulletinDel(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SysBulletinDel", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSysBulletinDel(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SysBulletinDelAsync(string fid) {
            this.SysBulletinDelAsync(fid, null);
        }
        
        /// <remarks/>
        public void SysBulletinDelAsync(string fid, object userState) {
            if ((this.SysBulletinDelOperationCompleted == null)) {
                this.SysBulletinDelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSysBulletinDelOperationCompleted);
            }
            this.InvokeAsync("SysBulletinDel", new object[] {
                        fid}, this.SysBulletinDelOperationCompleted, userState);
        }
        
        private void OnSysBulletinDelOperationCompleted(object arg) {
            if ((this.SysBulletinDelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SysBulletinDelCompleted(this, new SysBulletinDelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SysBulletinGoHistory", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SysBulletinGoHistory(string fid, out string msg) {
            object[] results = this.Invoke("SysBulletinGoHistory", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSysBulletinGoHistory(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SysBulletinGoHistory", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSysBulletinGoHistory(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SysBulletinGoHistoryAsync(string fid) {
            this.SysBulletinGoHistoryAsync(fid, null);
        }
        
        /// <remarks/>
        public void SysBulletinGoHistoryAsync(string fid, object userState) {
            if ((this.SysBulletinGoHistoryOperationCompleted == null)) {
                this.SysBulletinGoHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSysBulletinGoHistoryOperationCompleted);
            }
            this.InvokeAsync("SysBulletinGoHistory", new object[] {
                        fid}, this.SysBulletinGoHistoryOperationCompleted, userState);
        }
        
        private void OnSysBulletinGoHistoryOperationCompleted(object arg) {
            if ((this.SysBulletinGoHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SysBulletinGoHistoryCompleted(this, new SysBulletinGoHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetOneSysBulletin", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SysBulletinClass GetOneSysBulletin(string fid, out string msg) {
            object[] results = this.Invoke("GetOneSysBulletin", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((SysBulletinClass)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOneSysBulletin(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOneSysBulletin", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public SysBulletinClass EndGetOneSysBulletin(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((SysBulletinClass)(results[0]));
        }
        
        /// <remarks/>
        public void GetOneSysBulletinAsync(string fid) {
            this.GetOneSysBulletinAsync(fid, null);
        }
        
        /// <remarks/>
        public void GetOneSysBulletinAsync(string fid, object userState) {
            if ((this.GetOneSysBulletinOperationCompleted == null)) {
                this.GetOneSysBulletinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOneSysBulletinOperationCompleted);
            }
            this.InvokeAsync("GetOneSysBulletin", new object[] {
                        fid}, this.GetOneSysBulletinOperationCompleted, userState);
        }
        
        private void OnGetOneSysBulletinOperationCompleted(object arg) {
            if ((this.GetOneSysBulletinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOneSysBulletinCompleted(this, new GetOneSysBulletinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/AddOneSysBulletin", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddOneSysBulletin(SysBulletinClass sc, out string msg) {
            object[] results = this.Invoke("AddOneSysBulletin", new object[] {
                        sc});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddOneSysBulletin(SysBulletinClass sc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddOneSysBulletin", new object[] {
                        sc}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAddOneSysBulletin(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddOneSysBulletinAsync(SysBulletinClass sc) {
            this.AddOneSysBulletinAsync(sc, null);
        }
        
        /// <remarks/>
        public void AddOneSysBulletinAsync(SysBulletinClass sc, object userState) {
            if ((this.AddOneSysBulletinOperationCompleted == null)) {
                this.AddOneSysBulletinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOneSysBulletinOperationCompleted);
            }
            this.InvokeAsync("AddOneSysBulletin", new object[] {
                        sc}, this.AddOneSysBulletinOperationCompleted, userState);
        }
        
        private void OnAddOneSysBulletinOperationCompleted(object arg) {
            if ((this.AddOneSysBulletinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOneSysBulletinCompleted(this, new AddOneSysBulletinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ChangeOneSysBulletin", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeOneSysBulletin(SysBulletinClass sc, out string msg) {
            object[] results = this.Invoke("ChangeOneSysBulletin", new object[] {
                        sc});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeOneSysBulletin(SysBulletinClass sc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeOneSysBulletin", new object[] {
                        sc}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndChangeOneSysBulletin(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeOneSysBulletinAsync(SysBulletinClass sc) {
            this.ChangeOneSysBulletinAsync(sc, null);
        }
        
        /// <remarks/>
        public void ChangeOneSysBulletinAsync(SysBulletinClass sc, object userState) {
            if ((this.ChangeOneSysBulletinOperationCompleted == null)) {
                this.ChangeOneSysBulletinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeOneSysBulletinOperationCompleted);
            }
            this.InvokeAsync("ChangeOneSysBulletin", new object[] {
                        sc}, this.ChangeOneSysBulletinOperationCompleted, userState);
        }
        
        private void OnChangeOneSysBulletinOperationCompleted(object arg) {
            if ((this.ChangeOneSysBulletinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeOneSysBulletinCompleted(this, new ChangeOneSysBulletinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDirectRelationCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDirectRelationCount() {
            object[] results = this.Invoke("GetDirectRelationCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirectRelationCount(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirectRelationCount", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetDirectRelationCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectRelationCountAsync() {
            this.GetDirectRelationCountAsync(null);
        }
        
        /// <remarks/>
        public void GetDirectRelationCountAsync(object userState) {
            if ((this.GetDirectRelationCountOperationCompleted == null)) {
                this.GetDirectRelationCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectRelationCountOperationCompleted);
            }
            this.InvokeAsync("GetDirectRelationCount", new object[0], this.GetDirectRelationCountOperationCompleted, userState);
        }
        
        private void OnGetDirectRelationCountOperationCompleted(object arg) {
            if ((this.GetDirectRelationCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectRelationCountCompleted(this, new GetDirectRelationCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDirectRelationList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDirectRelationList(int start, int max, out string msg) {
            object[] results = this.Invoke("GetDirectRelationList", new object[] {
                        start,
                        max});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirectRelationList(int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirectRelationList", new object[] {
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDirectRelationList(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectRelationListAsync(int start, int max) {
            this.GetDirectRelationListAsync(start, max, null);
        }
        
        /// <remarks/>
        public void GetDirectRelationListAsync(int start, int max, object userState) {
            if ((this.GetDirectRelationListOperationCompleted == null)) {
                this.GetDirectRelationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectRelationListOperationCompleted);
            }
            this.InvokeAsync("GetDirectRelationList", new object[] {
                        start,
                        max}, this.GetDirectRelationListOperationCompleted, userState);
        }
        
        private void OnGetDirectRelationListOperationCompleted(object arg) {
            if ((this.GetDirectRelationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectRelationListCompleted(this, new GetDirectRelationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAllChannelList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllChannelList() {
            object[] results = this.Invoke("GetAllChannelList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllChannelList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllChannelList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAllChannelList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllChannelListAsync() {
            this.GetAllChannelListAsync(null);
        }
        
        /// <remarks/>
        public void GetAllChannelListAsync(object userState) {
            if ((this.GetAllChannelListOperationCompleted == null)) {
                this.GetAllChannelListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllChannelListOperationCompleted);
            }
            this.InvokeAsync("GetAllChannelList", new object[0], this.GetAllChannelListOperationCompleted, userState);
        }
        
        private void OnGetAllChannelListOperationCompleted(object arg) {
            if ((this.GetAllChannelListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllChannelListCompleted(this, new GetAllChannelListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayLimitCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPayLimitCount(string qqid, int channelid, string aqqid) {
            object[] results = this.Invoke("GetPayLimitCount", new object[] {
                        qqid,
                        channelid,
                        aqqid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayLimitCount(string qqid, int channelid, string aqqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayLimitCount", new object[] {
                        qqid,
                        channelid,
                        aqqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetPayLimitCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayLimitCountAsync(string qqid, int channelid, string aqqid) {
            this.GetPayLimitCountAsync(qqid, channelid, aqqid, null);
        }
        
        /// <remarks/>
        public void GetPayLimitCountAsync(string qqid, int channelid, string aqqid, object userState) {
            if ((this.GetPayLimitCountOperationCompleted == null)) {
                this.GetPayLimitCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayLimitCountOperationCompleted);
            }
            this.InvokeAsync("GetPayLimitCount", new object[] {
                        qqid,
                        channelid,
                        aqqid}, this.GetPayLimitCountOperationCompleted, userState);
        }
        
        private void OnGetPayLimitCountOperationCompleted(object arg) {
            if ((this.GetPayLimitCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayLimitCountCompleted(this, new GetPayLimitCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayLimitList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayLimitList(string qqid, int channelid, string aqqid, int start, int max) {
            object[] results = this.Invoke("GetPayLimitList", new object[] {
                        qqid,
                        channelid,
                        aqqid,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayLimitList(string qqid, int channelid, string aqqid, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayLimitList", new object[] {
                        qqid,
                        channelid,
                        aqqid,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayLimitList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayLimitListAsync(string qqid, int channelid, string aqqid, int start, int max) {
            this.GetPayLimitListAsync(qqid, channelid, aqqid, start, max, null);
        }
        
        /// <remarks/>
        public void GetPayLimitListAsync(string qqid, int channelid, string aqqid, int start, int max, object userState) {
            if ((this.GetPayLimitListOperationCompleted == null)) {
                this.GetPayLimitListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayLimitListOperationCompleted);
            }
            this.InvokeAsync("GetPayLimitList", new object[] {
                        qqid,
                        channelid,
                        aqqid,
                        start,
                        max}, this.GetPayLimitListOperationCompleted, userState);
        }
        
        private void OnGetPayLimitListOperationCompleted(object arg) {
            if ((this.GetPayLimitListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayLimitListCompleted(this, new GetPayLimitListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDirectRelationDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDirectRelationDetail(string channelid, out string msg) {
            object[] results = this.Invoke("GetDirectRelationDetail", new object[] {
                        channelid});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirectRelationDetail(string channelid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirectRelationDetail", new object[] {
                        channelid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDirectRelationDetail(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectRelationDetailAsync(string channelid) {
            this.GetDirectRelationDetailAsync(channelid, null);
        }
        
        /// <remarks/>
        public void GetDirectRelationDetailAsync(string channelid, object userState) {
            if ((this.GetDirectRelationDetailOperationCompleted == null)) {
                this.GetDirectRelationDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectRelationDetailOperationCompleted);
            }
            this.InvokeAsync("GetDirectRelationDetail", new object[] {
                        channelid}, this.GetDirectRelationDetailOperationCompleted, userState);
        }
        
        private void OnGetDirectRelationDetailOperationCompleted(object arg) {
            if ((this.GetDirectRelationDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectRelationDetailCompleted(this, new GetDirectRelationDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ChangeOneDirectRelation", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeOneDirectRelation(int fchannel_id, string fchannel_name, int fdirect, string fphone, string fmemo, int flist_state, out string msg) {
            object[] results = this.Invoke("ChangeOneDirectRelation", new object[] {
                        fchannel_id,
                        fchannel_name,
                        fdirect,
                        fphone,
                        fmemo,
                        flist_state});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeOneDirectRelation(int fchannel_id, string fchannel_name, int fdirect, string fphone, string fmemo, int flist_state, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeOneDirectRelation", new object[] {
                        fchannel_id,
                        fchannel_name,
                        fdirect,
                        fphone,
                        fmemo,
                        flist_state}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndChangeOneDirectRelation(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeOneDirectRelationAsync(int fchannel_id, string fchannel_name, int fdirect, string fphone, string fmemo, int flist_state) {
            this.ChangeOneDirectRelationAsync(fchannel_id, fchannel_name, fdirect, fphone, fmemo, flist_state, null);
        }
        
        /// <remarks/>
        public void ChangeOneDirectRelationAsync(int fchannel_id, string fchannel_name, int fdirect, string fphone, string fmemo, int flist_state, object userState) {
            if ((this.ChangeOneDirectRelationOperationCompleted == null)) {
                this.ChangeOneDirectRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeOneDirectRelationOperationCompleted);
            }
            this.InvokeAsync("ChangeOneDirectRelation", new object[] {
                        fchannel_id,
                        fchannel_name,
                        fdirect,
                        fphone,
                        fmemo,
                        flist_state}, this.ChangeOneDirectRelationOperationCompleted, userState);
        }
        
        private void OnChangeOneDirectRelationOperationCompleted(object arg) {
            if ((this.ChangeOneDirectRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeOneDirectRelationCompleted(this, new ChangeOneDirectRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/InsertOneDirectRelation", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertOneDirectRelation(int fchannel_id, string fchannel_name, int fdirect, string fphone, string fmemo, int flist_state, out string msg) {
            object[] results = this.Invoke("InsertOneDirectRelation", new object[] {
                        fchannel_id,
                        fchannel_name,
                        fdirect,
                        fphone,
                        fmemo,
                        flist_state});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertOneDirectRelation(int fchannel_id, string fchannel_name, int fdirect, string fphone, string fmemo, int flist_state, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertOneDirectRelation", new object[] {
                        fchannel_id,
                        fchannel_name,
                        fdirect,
                        fphone,
                        fmemo,
                        flist_state}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndInsertOneDirectRelation(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOneDirectRelationAsync(int fchannel_id, string fchannel_name, int fdirect, string fphone, string fmemo, int flist_state) {
            this.InsertOneDirectRelationAsync(fchannel_id, fchannel_name, fdirect, fphone, fmemo, flist_state, null);
        }
        
        /// <remarks/>
        public void InsertOneDirectRelationAsync(int fchannel_id, string fchannel_name, int fdirect, string fphone, string fmemo, int flist_state, object userState) {
            if ((this.InsertOneDirectRelationOperationCompleted == null)) {
                this.InsertOneDirectRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOneDirectRelationOperationCompleted);
            }
            this.InvokeAsync("InsertOneDirectRelation", new object[] {
                        fchannel_id,
                        fchannel_name,
                        fdirect,
                        fphone,
                        fmemo,
                        flist_state}, this.InsertOneDirectRelationOperationCompleted, userState);
        }
        
        private void OnInsertOneDirectRelationOperationCompleted(object arg) {
            if ((this.InsertOneDirectRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOneDirectRelationCompleted(this, new InsertOneDirectRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DelOnePayLimit", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelOnePayLimit(string qqid, string fid, out string msg) {
            object[] results = this.Invoke("DelOnePayLimit", new object[] {
                        qqid,
                        fid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDelOnePayLimit(string qqid, string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DelOnePayLimit", new object[] {
                        qqid,
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDelOnePayLimit(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelOnePayLimitAsync(string qqid, string fid) {
            this.DelOnePayLimitAsync(qqid, fid, null);
        }
        
        /// <remarks/>
        public void DelOnePayLimitAsync(string qqid, string fid, object userState) {
            if ((this.DelOnePayLimitOperationCompleted == null)) {
                this.DelOnePayLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelOnePayLimitOperationCompleted);
            }
            this.InvokeAsync("DelOnePayLimit", new object[] {
                        qqid,
                        fid}, this.DelOnePayLimitOperationCompleted, userState);
        }
        
        private void OnDelOnePayLimitOperationCompleted(object arg) {
            if ((this.DelOnePayLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelOnePayLimitCompleted(this, new DelOnePayLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ReuseOnePayLimit", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReuseOnePayLimit(string qqid, string fid, out string msg) {
            object[] results = this.Invoke("ReuseOnePayLimit", new object[] {
                        qqid,
                        fid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReuseOnePayLimit(string qqid, string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReuseOnePayLimit", new object[] {
                        qqid,
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndReuseOnePayLimit(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReuseOnePayLimitAsync(string qqid, string fid) {
            this.ReuseOnePayLimitAsync(qqid, fid, null);
        }
        
        /// <remarks/>
        public void ReuseOnePayLimitAsync(string qqid, string fid, object userState) {
            if ((this.ReuseOnePayLimitOperationCompleted == null)) {
                this.ReuseOnePayLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReuseOnePayLimitOperationCompleted);
            }
            this.InvokeAsync("ReuseOnePayLimit", new object[] {
                        qqid,
                        fid}, this.ReuseOnePayLimitOperationCompleted, userState);
        }
        
        private void OnReuseOnePayLimitOperationCompleted(object arg) {
            if ((this.ReuseOnePayLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReuseOnePayLimitCompleted(this, new ReuseOnePayLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryPMDicAccName", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryPMDicAccName(string id) {
            object[] results = this.Invoke("QueryPMDicAccName", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryPMDicAccName(string id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryPMDicAccName", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndQueryPMDicAccName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPMDicAccNameAsync(string id) {
            this.QueryPMDicAccNameAsync(id, null);
        }
        
        /// <remarks/>
        public void QueryPMDicAccNameAsync(string id, object userState) {
            if ((this.QueryPMDicAccNameOperationCompleted == null)) {
                this.QueryPMDicAccNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPMDicAccNameOperationCompleted);
            }
            this.InvokeAsync("QueryPMDicAccName", new object[] {
                        id}, this.QueryPMDicAccNameOperationCompleted, userState);
        }
        
        private void OnQueryPMDicAccNameOperationCompleted(object arg) {
            if ((this.QueryPMDicAccNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPMDicAccNameCompleted(this, new QueryPMDicAccNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCFTUserAppealList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCFTUserAppealList(string fuin, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, int ftype, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetCFTUserAppealList", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCFTUserAppealList(string fuin, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, int ftype, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCFTUserAppealList", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCFTUserAppealList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCFTUserAppealListAsync(string fuin, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, int ftype, int iPageStart, int iPageMax) {
            this.GetCFTUserAppealListAsync(fuin, u_BeginTime, u_EndTime, fstate, ftype, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetCFTUserAppealListAsync(string fuin, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, int ftype, int iPageStart, int iPageMax, object userState) {
            if ((this.GetCFTUserAppealListOperationCompleted == null)) {
                this.GetCFTUserAppealListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCFTUserAppealListOperationCompleted);
            }
            this.InvokeAsync("GetCFTUserAppealList", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        iPageStart,
                        iPageMax}, this.GetCFTUserAppealListOperationCompleted, userState);
        }
        
        private void OnGetCFTUserAppealListOperationCompleted(object arg) {
            if ((this.GetCFTUserAppealListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCFTUserAppealListCompleted(this, new GetCFTUserAppealListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCFTUserAppealCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCFTUserAppealCount(string fuin, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, int ftype) {
            object[] results = this.Invoke("GetCFTUserAppealCount", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCFTUserAppealCount(string fuin, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, int ftype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCFTUserAppealCount", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetCFTUserAppealCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCFTUserAppealCountAsync(string fuin, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, int ftype) {
            this.GetCFTUserAppealCountAsync(fuin, u_BeginTime, u_EndTime, fstate, ftype, null);
        }
        
        /// <remarks/>
        public void GetCFTUserAppealCountAsync(string fuin, System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, int ftype, object userState) {
            if ((this.GetCFTUserAppealCountOperationCompleted == null)) {
                this.GetCFTUserAppealCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCFTUserAppealCountOperationCompleted);
            }
            this.InvokeAsync("GetCFTUserAppealCount", new object[] {
                        fuin,
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype}, this.GetCFTUserAppealCountOperationCompleted, userState);
        }
        
        private void OnGetCFTUserAppealCountOperationCompleted(object arg) {
            if ((this.GetCFTUserAppealCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCFTUserAppealCountCompleted(this, new GetCFTUserAppealCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCFTUserAppealDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCFTUserAppealDetail(int fid) {
            object[] results = this.Invoke("GetCFTUserAppealDetail", new object[] {
                        fid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCFTUserAppealDetail(int fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCFTUserAppealDetail", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCFTUserAppealDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCFTUserAppealDetailAsync(int fid) {
            this.GetCFTUserAppealDetailAsync(fid, null);
        }
        
        /// <remarks/>
        public void GetCFTUserAppealDetailAsync(int fid, object userState) {
            if ((this.GetCFTUserAppealDetailOperationCompleted == null)) {
                this.GetCFTUserAppealDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCFTUserAppealDetailOperationCompleted);
            }
            this.InvokeAsync("GetCFTUserAppealDetail", new object[] {
                        fid}, this.GetCFTUserAppealDetailOperationCompleted, userState);
        }
        
        private void OnGetCFTUserAppealDetailOperationCompleted(object arg) {
            if ((this.GetCFTUserAppealDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCFTUserAppealDetailCompleted(this, new GetCFTUserAppealDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAppealUserInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppealUserInfo(string qqid) {
            object[] results = this.Invoke("GetAppealUserInfo", new object[] {
                        qqid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAppealUserInfo(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAppealUserInfo", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAppealUserInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppealUserInfoAsync(string qqid) {
            this.GetAppealUserInfoAsync(qqid, null);
        }
        
        /// <remarks/>
        public void GetAppealUserInfoAsync(string qqid, object userState) {
            if ((this.GetAppealUserInfoOperationCompleted == null)) {
                this.GetAppealUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppealUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetAppealUserInfo", new object[] {
                        qqid}, this.GetAppealUserInfoOperationCompleted, userState);
        }
        
        private void OnGetAppealUserInfoOperationCompleted(object arg) {
            if ((this.GetAppealUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppealUserInfoCompleted(this, new GetAppealUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CFTCancelAppeal", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CFTCancelAppeal(int fid, string reason, string OtherReason, string Fcomment, out string msg) {
            object[] results = this.Invoke("CFTCancelAppeal", new object[] {
                        fid,
                        reason,
                        OtherReason,
                        Fcomment});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCFTCancelAppeal(int fid, string reason, string OtherReason, string Fcomment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CFTCancelAppeal", new object[] {
                        fid,
                        reason,
                        OtherReason,
                        Fcomment}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCFTCancelAppeal(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CFTCancelAppealAsync(int fid, string reason, string OtherReason, string Fcomment) {
            this.CFTCancelAppealAsync(fid, reason, OtherReason, Fcomment, null);
        }
        
        /// <remarks/>
        public void CFTCancelAppealAsync(int fid, string reason, string OtherReason, string Fcomment, object userState) {
            if ((this.CFTCancelAppealOperationCompleted == null)) {
                this.CFTCancelAppealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCFTCancelAppealOperationCompleted);
            }
            this.InvokeAsync("CFTCancelAppeal", new object[] {
                        fid,
                        reason,
                        OtherReason,
                        Fcomment}, this.CFTCancelAppealOperationCompleted, userState);
        }
        
        private void OnCFTCancelAppealOperationCompleted(object arg) {
            if ((this.CFTCancelAppealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CFTCancelAppealCompleted(this, new CFTCancelAppealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CFTConfirmAppeal", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CFTConfirmAppeal(int fid, string Fcomment, out string msg) {
            object[] results = this.Invoke("CFTConfirmAppeal", new object[] {
                        fid,
                        Fcomment});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCFTConfirmAppeal(int fid, string Fcomment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CFTConfirmAppeal", new object[] {
                        fid,
                        Fcomment}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCFTConfirmAppeal(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CFTConfirmAppealAsync(int fid, string Fcomment) {
            this.CFTConfirmAppealAsync(fid, Fcomment, null);
        }
        
        /// <remarks/>
        public void CFTConfirmAppealAsync(int fid, string Fcomment, object userState) {
            if ((this.CFTConfirmAppealOperationCompleted == null)) {
                this.CFTConfirmAppealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCFTConfirmAppealOperationCompleted);
            }
            this.InvokeAsync("CFTConfirmAppeal", new object[] {
                        fid,
                        Fcomment}, this.CFTConfirmAppealOperationCompleted, userState);
        }
        
        private void OnCFTConfirmAppealOperationCompleted(object arg) {
            if ((this.CFTConfirmAppealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CFTConfirmAppealCompleted(this, new CFTConfirmAppealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CFTDelAppeal", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CFTDelAppeal(int fid, string Fcomment, out string msg) {
            object[] results = this.Invoke("CFTDelAppeal", new object[] {
                        fid,
                        Fcomment});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCFTDelAppeal(int fid, string Fcomment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CFTDelAppeal", new object[] {
                        fid,
                        Fcomment}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCFTDelAppeal(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CFTDelAppealAsync(int fid, string Fcomment) {
            this.CFTDelAppealAsync(fid, Fcomment, null);
        }
        
        /// <remarks/>
        public void CFTDelAppealAsync(int fid, string Fcomment, object userState) {
            if ((this.CFTDelAppealOperationCompleted == null)) {
                this.CFTDelAppealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCFTDelAppealOperationCompleted);
            }
            this.InvokeAsync("CFTDelAppeal", new object[] {
                        fid,
                        Fcomment}, this.CFTDelAppealOperationCompleted, userState);
        }
        
        private void OnCFTDelAppealOperationCompleted(object arg) {
            if ((this.CFTDelAppealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CFTDelAppealCompleted(this, new CFTDelAppealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGwqPubStateCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetGwqPubStateCount(string starttime, string endtime, string spid, string pubid) {
            object[] results = this.Invoke("GetGwqPubStateCount", new object[] {
                        starttime,
                        endtime,
                        spid,
                        pubid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGwqPubStateCount(string starttime, string endtime, string spid, string pubid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGwqPubStateCount", new object[] {
                        starttime,
                        endtime,
                        spid,
                        pubid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetGwqPubStateCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetGwqPubStateCountAsync(string starttime, string endtime, string spid, string pubid) {
            this.GetGwqPubStateCountAsync(starttime, endtime, spid, pubid, null);
        }
        
        /// <remarks/>
        public void GetGwqPubStateCountAsync(string starttime, string endtime, string spid, string pubid, object userState) {
            if ((this.GetGwqPubStateCountOperationCompleted == null)) {
                this.GetGwqPubStateCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGwqPubStateCountOperationCompleted);
            }
            this.InvokeAsync("GetGwqPubStateCount", new object[] {
                        starttime,
                        endtime,
                        spid,
                        pubid}, this.GetGwqPubStateCountOperationCompleted, userState);
        }
        
        private void OnGetGwqPubStateCountOperationCompleted(object arg) {
            if ((this.GetGwqPubStateCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGwqPubStateCountCompleted(this, new GetGwqPubStateCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBindList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserBindList(System.DateTime begintime, System.DateTime endtime, string fuid, string creid, string banktype, int bindflag, int bindtype, int bindstatus, int bankstatus, int flag, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetUserBindList", new object[] {
                        begintime,
                        endtime,
                        fuid,
                        creid,
                        banktype,
                        bindflag,
                        bindtype,
                        bindstatus,
                        bankstatus,
                        flag,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBindList(System.DateTime begintime, System.DateTime endtime, string fuid, string creid, string banktype, int bindflag, int bindtype, int bindstatus, int bankstatus, int flag, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBindList", new object[] {
                        begintime,
                        endtime,
                        fuid,
                        creid,
                        banktype,
                        bindflag,
                        bindtype,
                        bindstatus,
                        bankstatus,
                        flag,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserBindList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBindListAsync(System.DateTime begintime, System.DateTime endtime, string fuid, string creid, string banktype, int bindflag, int bindtype, int bindstatus, int bankstatus, int flag, int iPageStart, int iPageMax) {
            this.GetUserBindListAsync(begintime, endtime, fuid, creid, banktype, bindflag, bindtype, bindstatus, bankstatus, flag, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetUserBindListAsync(System.DateTime begintime, System.DateTime endtime, string fuid, string creid, string banktype, int bindflag, int bindtype, int bindstatus, int bankstatus, int flag, int iPageStart, int iPageMax, object userState) {
            if ((this.GetUserBindListOperationCompleted == null)) {
                this.GetUserBindListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBindListOperationCompleted);
            }
            this.InvokeAsync("GetUserBindList", new object[] {
                        begintime,
                        endtime,
                        fuid,
                        creid,
                        banktype,
                        bindflag,
                        bindtype,
                        bindstatus,
                        bankstatus,
                        flag,
                        iPageStart,
                        iPageMax}, this.GetUserBindListOperationCompleted, userState);
        }
        
        private void OnGetUserBindListOperationCompleted(object arg) {
            if ((this.GetUserBindListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBindListCompleted(this, new GetUserBindListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBindCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserBindCount(System.DateTime begintime, System.DateTime endtime, string fuid, string creid, string banktype, int bindflag, int bindtype, int bindstatus, int bankstatus, int flag) {
            object[] results = this.Invoke("GetUserBindCount", new object[] {
                        begintime,
                        endtime,
                        fuid,
                        creid,
                        banktype,
                        bindflag,
                        bindtype,
                        bindstatus,
                        bankstatus,
                        flag});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBindCount(System.DateTime begintime, System.DateTime endtime, string fuid, string creid, string banktype, int bindflag, int bindtype, int bindstatus, int bankstatus, int flag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBindCount", new object[] {
                        begintime,
                        endtime,
                        fuid,
                        creid,
                        banktype,
                        bindflag,
                        bindtype,
                        bindstatus,
                        bankstatus,
                        flag}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetUserBindCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBindCountAsync(System.DateTime begintime, System.DateTime endtime, string fuid, string creid, string banktype, int bindflag, int bindtype, int bindstatus, int bankstatus, int flag) {
            this.GetUserBindCountAsync(begintime, endtime, fuid, creid, banktype, bindflag, bindtype, bindstatus, bankstatus, flag, null);
        }
        
        /// <remarks/>
        public void GetUserBindCountAsync(System.DateTime begintime, System.DateTime endtime, string fuid, string creid, string banktype, int bindflag, int bindtype, int bindstatus, int bankstatus, int flag, object userState) {
            if ((this.GetUserBindCountOperationCompleted == null)) {
                this.GetUserBindCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBindCountOperationCompleted);
            }
            this.InvokeAsync("GetUserBindCount", new object[] {
                        begintime,
                        endtime,
                        fuid,
                        creid,
                        banktype,
                        bindflag,
                        bindtype,
                        bindstatus,
                        bankstatus,
                        flag}, this.GetUserBindCountOperationCompleted, userState);
        }
        
        private void OnGetUserBindCountOperationCompleted(object arg) {
            if ((this.GetUserBindCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBindCountCompleted(this, new GetUserBindCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBindDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserBindDetail(string qqid, string serialno) {
            object[] results = this.Invoke("GetUserBindDetail", new object[] {
                        qqid,
                        serialno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBindDetail(string qqid, string serialno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBindDetail", new object[] {
                        qqid,
                        serialno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserBindDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBindDetailAsync(string qqid, string serialno) {
            this.GetUserBindDetailAsync(qqid, serialno, null);
        }
        
        /// <remarks/>
        public void GetUserBindDetailAsync(string qqid, string serialno, object userState) {
            if ((this.GetUserBindDetailOperationCompleted == null)) {
                this.GetUserBindDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBindDetailOperationCompleted);
            }
            this.InvokeAsync("GetUserBindDetail", new object[] {
                        qqid,
                        serialno}, this.GetUserBindDetailOperationCompleted, userState);
        }
        
        private void OnGetUserBindDetailOperationCompleted(object arg) {
            if ((this.GetUserBindDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBindDetailCompleted(this, new GetUserBindDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGiveBackList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGiveBackList(string batchid, string qqid, int state, int sign, string faname, string flistid, string fbankacc, string fuid, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetGiveBackList", new object[] {
                        batchid,
                        qqid,
                        state,
                        sign,
                        faname,
                        flistid,
                        fbankacc,
                        fuid,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGiveBackList(string batchid, string qqid, int state, int sign, string faname, string flistid, string fbankacc, string fuid, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGiveBackList", new object[] {
                        batchid,
                        qqid,
                        state,
                        sign,
                        faname,
                        flistid,
                        fbankacc,
                        fuid,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetGiveBackList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGiveBackListAsync(string batchid, string qqid, int state, int sign, string faname, string flistid, string fbankacc, string fuid, int iPageStart, int iPageMax) {
            this.GetGiveBackListAsync(batchid, qqid, state, sign, faname, flistid, fbankacc, fuid, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetGiveBackListAsync(string batchid, string qqid, int state, int sign, string faname, string flistid, string fbankacc, string fuid, int iPageStart, int iPageMax, object userState) {
            if ((this.GetGiveBackListOperationCompleted == null)) {
                this.GetGiveBackListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGiveBackListOperationCompleted);
            }
            this.InvokeAsync("GetGiveBackList", new object[] {
                        batchid,
                        qqid,
                        state,
                        sign,
                        faname,
                        flistid,
                        fbankacc,
                        fuid,
                        iPageStart,
                        iPageMax}, this.GetGiveBackListOperationCompleted, userState);
        }
        
        private void OnGetGiveBackListOperationCompleted(object arg) {
            if ((this.GetGiveBackListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGiveBackListCompleted(this, new GetGiveBackListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGiveBackCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetGiveBackCount(string batchid, string qqid, int state, int sign, string faname, string flistid, string fbankacc, string fuid) {
            object[] results = this.Invoke("GetGiveBackCount", new object[] {
                        batchid,
                        qqid,
                        state,
                        sign,
                        faname,
                        flistid,
                        fbankacc,
                        fuid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGiveBackCount(string batchid, string qqid, int state, int sign, string faname, string flistid, string fbankacc, string fuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGiveBackCount", new object[] {
                        batchid,
                        qqid,
                        state,
                        sign,
                        faname,
                        flistid,
                        fbankacc,
                        fuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetGiveBackCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetGiveBackCountAsync(string batchid, string qqid, int state, int sign, string faname, string flistid, string fbankacc, string fuid) {
            this.GetGiveBackCountAsync(batchid, qqid, state, sign, faname, flistid, fbankacc, fuid, null);
        }
        
        /// <remarks/>
        public void GetGiveBackCountAsync(string batchid, string qqid, int state, int sign, string faname, string flistid, string fbankacc, string fuid, object userState) {
            if ((this.GetGiveBackCountOperationCompleted == null)) {
                this.GetGiveBackCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGiveBackCountOperationCompleted);
            }
            this.InvokeAsync("GetGiveBackCount", new object[] {
                        batchid,
                        qqid,
                        state,
                        sign,
                        faname,
                        flistid,
                        fbankacc,
                        fuid}, this.GetGiveBackCountOperationCompleted, userState);
        }
        
        private void OnGetGiveBackCountOperationCompleted(object arg) {
            if ((this.GetGiveBackCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGiveBackCountCompleted(this, new GetGiveBackCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGwqPubStateList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGwqPubStateList(string starttime, string endtime, string spid, string pubid, int start, int max) {
            object[] results = this.Invoke("GetGwqPubStateList", new object[] {
                        starttime,
                        endtime,
                        spid,
                        pubid,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGwqPubStateList(string starttime, string endtime, string spid, string pubid, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGwqPubStateList", new object[] {
                        starttime,
                        endtime,
                        spid,
                        pubid,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetGwqPubStateList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGwqPubStateListAsync(string starttime, string endtime, string spid, string pubid, int start, int max) {
            this.GetGwqPubStateListAsync(starttime, endtime, spid, pubid, start, max, null);
        }
        
        /// <remarks/>
        public void GetGwqPubStateListAsync(string starttime, string endtime, string spid, string pubid, int start, int max, object userState) {
            if ((this.GetGwqPubStateListOperationCompleted == null)) {
                this.GetGwqPubStateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGwqPubStateListOperationCompleted);
            }
            this.InvokeAsync("GetGwqPubStateList", new object[] {
                        starttime,
                        endtime,
                        spid,
                        pubid,
                        start,
                        max}, this.GetGwqPubStateListOperationCompleted, userState);
        }
        
        private void OnGetGwqPubStateListOperationCompleted(object arg) {
            if ((this.GetGwqPubStateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGwqPubStateListCompleted(this, new GetGwqPubStateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/IsFastPayUser", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsFastPayUser(string qqid) {
            object[] results = this.Invoke("IsFastPayUser", new object[] {
                        qqid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsFastPayUser(string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsFastPayUser", new object[] {
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsFastPayUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsFastPayUserAsync(string qqid) {
            this.IsFastPayUserAsync(qqid, null);
        }
        
        /// <remarks/>
        public void IsFastPayUserAsync(string qqid, object userState) {
            if ((this.IsFastPayUserOperationCompleted == null)) {
                this.IsFastPayUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsFastPayUserOperationCompleted);
            }
            this.InvokeAsync("IsFastPayUser", new object[] {
                        qqid}, this.IsFastPayUserOperationCompleted, userState);
        }
        
        private void OnIsFastPayUserOperationCompleted(object arg) {
            if ((this.IsFastPayUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsFastPayUserCompleted(this, new IsFastPayUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetQueryList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQueryList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string u_QueryType, string queryvalue, int fstate, int fcurtype, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        u_QueryType,
                        queryvalue,
                        fstate,
                        fcurtype,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQueryList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string u_QueryType, string queryvalue, int fstate, int fcurtype, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        u_QueryType,
                        queryvalue,
                        fstate,
                        fcurtype,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetQueryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string u_QueryType, string queryvalue, int fstate, int fcurtype, int iPageStart, int iPageMax) {
            this.GetQueryListAsync(u_BeginTime, u_EndTime, buyqq, saleqq, u_QueryType, queryvalue, fstate, fcurtype, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetQueryListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string u_QueryType, string queryvalue, int fstate, int fcurtype, int iPageStart, int iPageMax, object userState) {
            if ((this.GetQueryListOperationCompleted == null)) {
                this.GetQueryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryListOperationCompleted);
            }
            this.InvokeAsync("GetQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        u_QueryType,
                        queryvalue,
                        fstate,
                        fcurtype,
                        iPageStart,
                        iPageMax}, this.GetQueryListOperationCompleted, userState);
        }
        
        private void OnGetQueryListOperationCompleted(object arg) {
            if ((this.GetQueryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryListCompleted(this, new GetQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetQueryListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetQueryListCount(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string u_QueryType, string queryvalue, int fstate, int fcurtype) {
            object[] results = this.Invoke("GetQueryListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        u_QueryType,
                        queryvalue,
                        fstate,
                        fcurtype});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQueryListCount(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string u_QueryType, string queryvalue, int fstate, int fcurtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQueryListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        u_QueryType,
                        queryvalue,
                        fstate,
                        fcurtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetQueryListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryListCountAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string u_QueryType, string queryvalue, int fstate, int fcurtype) {
            this.GetQueryListCountAsync(u_BeginTime, u_EndTime, buyqq, saleqq, u_QueryType, queryvalue, fstate, fcurtype, null);
        }
        
        /// <remarks/>
        public void GetQueryListCountAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string u_QueryType, string queryvalue, int fstate, int fcurtype, object userState) {
            if ((this.GetQueryListCountOperationCompleted == null)) {
                this.GetQueryListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryListCountOperationCompleted);
            }
            this.InvokeAsync("GetQueryListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        u_QueryType,
                        queryvalue,
                        fstate,
                        fcurtype}, this.GetQueryListCountOperationCompleted, userState);
        }
        
        private void OnGetQueryListCountOperationCompleted(object arg) {
            if ((this.GetQueryListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryListCountCompleted(this, new GetQueryListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetQueryListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQueryListDetail(string listid) {
            object[] results = this.Invoke("GetQueryListDetail", new object[] {
                        listid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQueryListDetail(string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQueryListDetail", new object[] {
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetQueryListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryListDetailAsync(string listid) {
            this.GetQueryListDetailAsync(listid, null);
        }
        
        /// <remarks/>
        public void GetQueryListDetailAsync(string listid, object userState) {
            if ((this.GetQueryListDetailOperationCompleted == null)) {
                this.GetQueryListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryListDetailOperationCompleted);
            }
            this.InvokeAsync("GetQueryListDetail", new object[] {
                        listid}, this.GetQueryListDetailOperationCompleted, userState);
        }
        
        private void OnGetQueryListDetailOperationCompleted(object arg) {
            if ((this.GetQueryListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryListDetailCompleted(this, new GetQueryListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAppealQueryList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppealQueryList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetAppealQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        queryvalue,
                        fstate,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAppealQueryList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAppealQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        queryvalue,
                        fstate,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAppealQueryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppealQueryListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate, int iPageStart, int iPageMax) {
            this.GetAppealQueryListAsync(u_BeginTime, u_EndTime, buyqq, saleqq, queryvalue, fstate, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetAppealQueryListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate, int iPageStart, int iPageMax, object userState) {
            if ((this.GetAppealQueryListOperationCompleted == null)) {
                this.GetAppealQueryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppealQueryListOperationCompleted);
            }
            this.InvokeAsync("GetAppealQueryList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        queryvalue,
                        fstate,
                        iPageStart,
                        iPageMax}, this.GetAppealQueryListOperationCompleted, userState);
        }
        
        private void OnGetAppealQueryListOperationCompleted(object arg) {
            if ((this.GetAppealQueryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppealQueryListCompleted(this, new GetAppealQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAppealListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAppealListCount(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate) {
            object[] results = this.Invoke("GetAppealListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        queryvalue,
                        fstate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAppealListCount(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAppealListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        queryvalue,
                        fstate}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetAppealListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppealListCountAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate) {
            this.GetAppealListCountAsync(u_BeginTime, u_EndTime, buyqq, saleqq, queryvalue, fstate, null);
        }
        
        /// <remarks/>
        public void GetAppealListCountAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string buyqq, string saleqq, string queryvalue, int fstate, object userState) {
            if ((this.GetAppealListCountOperationCompleted == null)) {
                this.GetAppealListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppealListCountOperationCompleted);
            }
            this.InvokeAsync("GetAppealListCount", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        buyqq,
                        saleqq,
                        queryvalue,
                        fstate}, this.GetAppealListCountOperationCompleted, userState);
        }
        
        private void OnGetAppealListCountOperationCompleted(object arg) {
            if ((this.GetAppealListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppealListCountCompleted(this, new GetAppealListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAppealListDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppealListDetail(string appealid) {
            object[] results = this.Invoke("GetAppealListDetail", new object[] {
                        appealid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAppealListDetail(string appealid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAppealListDetail", new object[] {
                        appealid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAppealListDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppealListDetailAsync(string appealid) {
            this.GetAppealListDetailAsync(appealid, null);
        }
        
        /// <remarks/>
        public void GetAppealListDetailAsync(string appealid, object userState) {
            if ((this.GetAppealListDetailOperationCompleted == null)) {
                this.GetAppealListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppealListDetailOperationCompleted);
            }
            this.InvokeAsync("GetAppealListDetail", new object[] {
                        appealid}, this.GetAppealListDetailOperationCompleted, userState);
        }
        
        private void OnGetAppealListDetailOperationCompleted(object arg) {
            if ((this.GetAppealListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppealListDetailCompleted(this, new GetAppealListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAppealList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppealList(string listid) {
            object[] results = this.Invoke("GetAppealList", new object[] {
                        listid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAppealList(string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAppealList", new object[] {
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAppealList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppealListAsync(string listid) {
            this.GetAppealListAsync(listid, null);
        }
        
        /// <remarks/>
        public void GetAppealListAsync(string listid, object userState) {
            if ((this.GetAppealListOperationCompleted == null)) {
                this.GetAppealListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppealListOperationCompleted);
            }
            this.InvokeAsync("GetAppealList", new object[] {
                        listid}, this.GetAppealListOperationCompleted, userState);
        }
        
        private void OnGetAppealListOperationCompleted(object arg) {
            if ((this.GetAppealListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppealListCompleted(this, new GetAppealListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserpayList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserpayList(string listid) {
            object[] results = this.Invoke("GetUserpayList", new object[] {
                        listid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserpayList(string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserpayList", new object[] {
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserpayList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserpayListAsync(string listid) {
            this.GetUserpayListAsync(listid, null);
        }
        
        /// <remarks/>
        public void GetUserpayListAsync(string listid, object userState) {
            if ((this.GetUserpayListOperationCompleted == null)) {
                this.GetUserpayListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserpayListOperationCompleted);
            }
            this.InvokeAsync("GetUserpayList", new object[] {
                        listid}, this.GetUserpayListOperationCompleted, userState);
        }
        
        private void OnGetUserpayListOperationCompleted(object arg) {
            if ((this.GetUserpayListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserpayListCompleted(this, new GetUserpayListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetTransportList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransportList(string listid) {
            object[] results = this.Invoke("GetTransportList", new object[] {
                        listid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransportList(string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransportList", new object[] {
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTransportList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransportListAsync(string listid) {
            this.GetTransportListAsync(listid, null);
        }
        
        /// <remarks/>
        public void GetTransportListAsync(string listid, object userState) {
            if ((this.GetTransportListOperationCompleted == null)) {
                this.GetTransportListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransportListOperationCompleted);
            }
            this.InvokeAsync("GetTransportList", new object[] {
                        listid}, this.GetTransportListOperationCompleted, userState);
        }
        
        private void OnGetTransportListOperationCompleted(object arg) {
            if ((this.GetTransportListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransportListCompleted(this, new GetTransportListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/AdjustDirectPayToError", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AdjustDirectPayToError(string flistid, out string msg) {
            object[] results = this.Invoke("AdjustDirectPayToError", new object[] {
                        flistid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAdjustDirectPayToError(string flistid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AdjustDirectPayToError", new object[] {
                        flistid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAdjustDirectPayToError(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustDirectPayToErrorAsync(string flistid) {
            this.AdjustDirectPayToErrorAsync(flistid, null);
        }
        
        /// <remarks/>
        public void AdjustDirectPayToErrorAsync(string flistid, object userState) {
            if ((this.AdjustDirectPayToErrorOperationCompleted == null)) {
                this.AdjustDirectPayToErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustDirectPayToErrorOperationCompleted);
            }
            this.InvokeAsync("AdjustDirectPayToError", new object[] {
                        flistid}, this.AdjustDirectPayToErrorOperationCompleted, userState);
        }
        
        private void OnAdjustDirectPayToErrorOperationCompleted(object arg) {
            if ((this.AdjustDirectPayToErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustDirectPayToErrorCompleted(this, new AdjustDirectPayToErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDirectPayCheckList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDirectPayCheckList() {
            object[] results = this.Invoke("GetDirectPayCheckList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirectPayCheckList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirectPayCheckList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDirectPayCheckList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectPayCheckListAsync() {
            this.GetDirectPayCheckListAsync(null);
        }
        
        /// <remarks/>
        public void GetDirectPayCheckListAsync(object userState) {
            if ((this.GetDirectPayCheckListOperationCompleted == null)) {
                this.GetDirectPayCheckListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectPayCheckListOperationCompleted);
            }
            this.InvokeAsync("GetDirectPayCheckList", new object[0], this.GetDirectPayCheckListOperationCompleted, userState);
        }
        
        private void OnGetDirectPayCheckListOperationCompleted(object arg) {
            if ((this.GetDirectPayCheckListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectPayCheckListCompleted(this, new GetDirectPayCheckListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/UpdateDirectPayCheckInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateDirectPayCheckInfo(string banktype, int levelid, string userid, string checklevel, out string msg) {
            object[] results = this.Invoke("UpdateDirectPayCheckInfo", new object[] {
                        banktype,
                        levelid,
                        userid,
                        checklevel});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateDirectPayCheckInfo(string banktype, int levelid, string userid, string checklevel, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateDirectPayCheckInfo", new object[] {
                        banktype,
                        levelid,
                        userid,
                        checklevel}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateDirectPayCheckInfo(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDirectPayCheckInfoAsync(string banktype, int levelid, string userid, string checklevel) {
            this.UpdateDirectPayCheckInfoAsync(banktype, levelid, userid, checklevel, null);
        }
        
        /// <remarks/>
        public void UpdateDirectPayCheckInfoAsync(string banktype, int levelid, string userid, string checklevel, object userState) {
            if ((this.UpdateDirectPayCheckInfoOperationCompleted == null)) {
                this.UpdateDirectPayCheckInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDirectPayCheckInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateDirectPayCheckInfo", new object[] {
                        banktype,
                        levelid,
                        userid,
                        checklevel}, this.UpdateDirectPayCheckInfoOperationCompleted, userState);
        }
        
        private void OnUpdateDirectPayCheckInfoOperationCompleted(object arg) {
            if ((this.UpdateDirectPayCheckInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDirectPayCheckInfoCompleted(this, new UpdateDirectPayCheckInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBindListX", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserBindListX(System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, string banktype, string spid, string idno, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetUserBindListX", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        banktype,
                        spid,
                        idno,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBindListX(System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, string banktype, string spid, string idno, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBindListX", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        banktype,
                        spid,
                        idno,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserBindListX(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBindListXAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, string banktype, string spid, string idno, int iPageStart, int iPageMax) {
            this.GetUserBindListXAsync(u_BeginTime, u_EndTime, fstate, banktype, spid, idno, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetUserBindListXAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, string banktype, string spid, string idno, int iPageStart, int iPageMax, object userState) {
            if ((this.GetUserBindListXOperationCompleted == null)) {
                this.GetUserBindListXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBindListXOperationCompleted);
            }
            this.InvokeAsync("GetUserBindListX", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        banktype,
                        spid,
                        idno,
                        iPageStart,
                        iPageMax}, this.GetUserBindListXOperationCompleted, userState);
        }
        
        private void OnGetUserBindListXOperationCompleted(object arg) {
            if ((this.GetUserBindListXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBindListXCompleted(this, new GetUserBindListXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBindCountX", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserBindCountX(System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, string banktype, string spid, string idno) {
            object[] results = this.Invoke("GetUserBindCountX", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        banktype,
                        spid,
                        idno});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBindCountX(System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, string banktype, string spid, string idno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBindCountX", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        banktype,
                        spid,
                        idno}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetUserBindCountX(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBindCountXAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, string banktype, string spid, string idno) {
            this.GetUserBindCountXAsync(u_BeginTime, u_EndTime, fstate, banktype, spid, idno, null);
        }
        
        /// <remarks/>
        public void GetUserBindCountXAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, int fstate, string banktype, string spid, string idno, object userState) {
            if ((this.GetUserBindCountXOperationCompleted == null)) {
                this.GetUserBindCountXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBindCountXOperationCompleted);
            }
            this.InvokeAsync("GetUserBindCountX", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        banktype,
                        spid,
                        idno}, this.GetUserBindCountXOperationCompleted, userState);
        }
        
        private void OnGetUserBindCountXOperationCompleted(object arg) {
            if ((this.GetUserBindCountXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBindCountXCompleted(this, new GetUserBindCountXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBindDetailX", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserBindDetailX(string findex) {
            object[] results = this.Invoke("GetUserBindDetailX", new object[] {
                        findex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBindDetailX(string findex, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBindDetailX", new object[] {
                        findex}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserBindDetailX(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBindDetailXAsync(string findex) {
            this.GetUserBindDetailXAsync(findex, null);
        }
        
        /// <remarks/>
        public void GetUserBindDetailXAsync(string findex, object userState) {
            if ((this.GetUserBindDetailXOperationCompleted == null)) {
                this.GetUserBindDetailXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBindDetailXOperationCompleted);
            }
            this.InvokeAsync("GetUserBindDetailX", new object[] {
                        findex}, this.GetUserBindDetailXOperationCompleted, userState);
        }
        
        private void OnGetUserBindDetailXOperationCompleted(object arg) {
            if ((this.GetUserBindDetailXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBindDetailXCompleted(this, new GetUserBindDetailXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRefundList(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid, string viewOldIds, string bankListid, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetRefundList", new object[] {
                        batchid,
                        ifromtype,
                        irefundtype,
                        irefundstate,
                        ireturnstate,
                        listid,
                        viewOldIds,
                        bankListid,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundList(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid, string viewOldIds, string bankListid, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefundList", new object[] {
                        batchid,
                        ifromtype,
                        irefundtype,
                        irefundstate,
                        ireturnstate,
                        listid,
                        viewOldIds,
                        bankListid,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRefundList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundListAsync(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid, string viewOldIds, string bankListid, int iPageStart, int iPageMax) {
            this.GetRefundListAsync(batchid, ifromtype, irefundtype, irefundstate, ireturnstate, listid, viewOldIds, bankListid, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetRefundListAsync(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid, string viewOldIds, string bankListid, int iPageStart, int iPageMax, object userState) {
            if ((this.GetRefundListOperationCompleted == null)) {
                this.GetRefundListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundListOperationCompleted);
            }
            this.InvokeAsync("GetRefundList", new object[] {
                        batchid,
                        ifromtype,
                        irefundtype,
                        irefundstate,
                        ireturnstate,
                        listid,
                        viewOldIds,
                        bankListid,
                        iPageStart,
                        iPageMax}, this.GetRefundListOperationCompleted, userState);
        }
        
        private void OnGetRefundListOperationCompleted(object arg) {
            if ((this.GetRefundListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundListCompleted(this, new GetRefundListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRefundListCount(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid, string viewOldIds, string bankListid) {
            object[] results = this.Invoke("GetRefundListCount", new object[] {
                        batchid,
                        ifromtype,
                        irefundtype,
                        irefundstate,
                        ireturnstate,
                        listid,
                        viewOldIds,
                        bankListid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundListCount(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid, string viewOldIds, string bankListid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefundListCount", new object[] {
                        batchid,
                        ifromtype,
                        irefundtype,
                        irefundstate,
                        ireturnstate,
                        listid,
                        viewOldIds,
                        bankListid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetRefundListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundListCountAsync(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid, string viewOldIds, string bankListid) {
            this.GetRefundListCountAsync(batchid, ifromtype, irefundtype, irefundstate, ireturnstate, listid, viewOldIds, bankListid, null);
        }
        
        /// <remarks/>
        public void GetRefundListCountAsync(string batchid, int ifromtype, int irefundtype, int irefundstate, int ireturnstate, string listid, string viewOldIds, string bankListid, object userState) {
            if ((this.GetRefundListCountOperationCompleted == null)) {
                this.GetRefundListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundListCountOperationCompleted);
            }
            this.InvokeAsync("GetRefundListCount", new object[] {
                        batchid,
                        ifromtype,
                        irefundtype,
                        irefundstate,
                        ireturnstate,
                        listid,
                        viewOldIds,
                        bankListid}, this.GetRefundListCountOperationCompleted, userState);
        }
        
        private void OnGetRefundListCountOperationCompleted(object arg) {
            if ((this.GetRefundListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundListCountCompleted(this, new GetRefundListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryForFile", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool QueryForFile(string dbstr, string strSql, string filetype, string fieldsplit, string filename) {
            object[] results = this.Invoke("QueryForFile", new object[] {
                        dbstr,
                        strSql,
                        filetype,
                        fieldsplit,
                        filename});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryForFile(string dbstr, string strSql, string filetype, string fieldsplit, string filename, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryForFile", new object[] {
                        dbstr,
                        strSql,
                        filetype,
                        fieldsplit,
                        filename}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndQueryForFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void QueryForFileAsync(string dbstr, string strSql, string filetype, string fieldsplit, string filename) {
            this.QueryForFileAsync(dbstr, strSql, filetype, fieldsplit, filename, null);
        }
        
        /// <remarks/>
        public void QueryForFileAsync(string dbstr, string strSql, string filetype, string fieldsplit, string filename, object userState) {
            if ((this.QueryForFileOperationCompleted == null)) {
                this.QueryForFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryForFileOperationCompleted);
            }
            this.InvokeAsync("QueryForFile", new object[] {
                        dbstr,
                        strSql,
                        filetype,
                        fieldsplit,
                        filename}, this.QueryForFileOperationCompleted, userState);
        }
        
        private void OnQueryForFileOperationCompleted(object arg) {
            if ((this.QueryForFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryForFileCompleted(this, new QueryForFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryForXATenpayFile", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool QueryForXATenpayFile(string dbstr, string strSqlSum, string strSql, string filetype, string fieldsplit, string filename, out string msg) {
            object[] results = this.Invoke("QueryForXATenpayFile", new object[] {
                        dbstr,
                        strSqlSum,
                        strSql,
                        filetype,
                        fieldsplit,
                        filename});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryForXATenpayFile(string dbstr, string strSqlSum, string strSql, string filetype, string fieldsplit, string filename, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryForXATenpayFile", new object[] {
                        dbstr,
                        strSqlSum,
                        strSql,
                        filetype,
                        fieldsplit,
                        filename}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndQueryForXATenpayFile(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void QueryForXATenpayFileAsync(string dbstr, string strSqlSum, string strSql, string filetype, string fieldsplit, string filename) {
            this.QueryForXATenpayFileAsync(dbstr, strSqlSum, strSql, filetype, fieldsplit, filename, null);
        }
        
        /// <remarks/>
        public void QueryForXATenpayFileAsync(string dbstr, string strSqlSum, string strSql, string filetype, string fieldsplit, string filename, object userState) {
            if ((this.QueryForXATenpayFileOperationCompleted == null)) {
                this.QueryForXATenpayFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryForXATenpayFileOperationCompleted);
            }
            this.InvokeAsync("QueryForXATenpayFile", new object[] {
                        dbstr,
                        strSqlSum,
                        strSql,
                        filetype,
                        fieldsplit,
                        filename}, this.QueryForXATenpayFileOperationCompleted, userState);
        }
        
        private void OnQueryForXATenpayFileOperationCompleted(object arg) {
            if ((this.QueryForXATenpayFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryForXATenpayFileCompleted(this, new QueryForXATenpayFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBankRollList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserBankRollList(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string spid, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetUserBankRollList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        spid,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBankRollList(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string spid, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBankRollList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        spid,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserBankRollList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBankRollListAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string spid, int iPageStart, int iPageMax) {
            this.GetUserBankRollListAsync(u_ID, u_BeginTime, u_EndTime, spid, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetUserBankRollListAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string spid, int iPageStart, int iPageMax, object userState) {
            if ((this.GetUserBankRollListOperationCompleted == null)) {
                this.GetUserBankRollListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBankRollListOperationCompleted);
            }
            this.InvokeAsync("GetUserBankRollList", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        spid,
                        iPageStart,
                        iPageMax}, this.GetUserBankRollListOperationCompleted, userState);
        }
        
        private void OnGetUserBankRollListOperationCompleted(object arg) {
            if ((this.GetUserBankRollListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBankRollListCompleted(this, new GetUserBankRollListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBankRollList_all", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserBankRollList_all(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string spid) {
            object[] results = this.Invoke("GetUserBankRollList_all", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        spid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBankRollList_all(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBankRollList_all", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserBankRollList_all(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBankRollList_allAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string spid) {
            this.GetUserBankRollList_allAsync(u_ID, u_BeginTime, u_EndTime, spid, null);
        }
        
        /// <remarks/>
        public void GetUserBankRollList_allAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string spid, object userState) {
            if ((this.GetUserBankRollList_allOperationCompleted == null)) {
                this.GetUserBankRollList_allOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBankRollList_allOperationCompleted);
            }
            this.InvokeAsync("GetUserBankRollList_all", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        spid}, this.GetUserBankRollList_allOperationCompleted, userState);
        }
        
        private void OnGetUserBankRollList_allOperationCompleted(object arg) {
            if ((this.GetUserBankRollList_allCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBankRollList_allCompleted(this, new GetUserBankRollList_allCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBankRollCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserBankRollCount(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string spid, out string custominfo) {
            object[] results = this.Invoke("GetUserBankRollCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        spid});
            custominfo = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBankRollCount(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBankRollCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetUserBankRollCount(System.IAsyncResult asyncResult, out string custominfo) {
            object[] results = this.EndInvoke(asyncResult);
            custominfo = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBankRollCountAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string spid) {
            this.GetUserBankRollCountAsync(u_ID, u_BeginTime, u_EndTime, spid, null);
        }
        
        /// <remarks/>
        public void GetUserBankRollCountAsync(string u_ID, System.DateTime u_BeginTime, System.DateTime u_EndTime, string spid, object userState) {
            if ((this.GetUserBankRollCountOperationCompleted == null)) {
                this.GetUserBankRollCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBankRollCountOperationCompleted);
            }
            this.InvokeAsync("GetUserBankRollCount", new object[] {
                        u_ID,
                        u_BeginTime,
                        u_EndTime,
                        spid}, this.GetUserBankRollCountOperationCompleted, userState);
        }
        
        private void OnGetUserBankRollCountOperationCompleted(object arg) {
            if ((this.GetUserBankRollCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBankRollCountCompleted(this, new GetUserBankRollCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMediUserChange", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMediUserChange(string fspid, bool newMediInfo) {
            object[] results = this.Invoke("GetMediUserChange", new object[] {
                        fspid,
                        newMediInfo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediUserChange(string fspid, bool newMediInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediUserChange", new object[] {
                        fspid,
                        newMediInfo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMediUserChange(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediUserChangeAsync(string fspid, bool newMediInfo) {
            this.GetMediUserChangeAsync(fspid, newMediInfo, null);
        }
        
        /// <remarks/>
        public void GetMediUserChangeAsync(string fspid, bool newMediInfo, object userState) {
            if ((this.GetMediUserChangeOperationCompleted == null)) {
                this.GetMediUserChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediUserChangeOperationCompleted);
            }
            this.InvokeAsync("GetMediUserChange", new object[] {
                        fspid,
                        newMediInfo}, this.GetMediUserChangeOperationCompleted, userState);
        }
        
        private void OnGetMediUserChangeOperationCompleted(object arg) {
            if ((this.GetMediUserChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediUserChangeCompleted(this, new GetMediUserChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGiveBackList_Check", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGiveBackList_Check(string batchid, string tdeidlist) {
            object[] results = this.Invoke("GetGiveBackList_Check", new object[] {
                        batchid,
                        tdeidlist});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGiveBackList_Check(string batchid, string tdeidlist, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGiveBackList_Check", new object[] {
                        batchid,
                        tdeidlist}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetGiveBackList_Check(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGiveBackList_CheckAsync(string batchid, string tdeidlist) {
            this.GetGiveBackList_CheckAsync(batchid, tdeidlist, null);
        }
        
        /// <remarks/>
        public void GetGiveBackList_CheckAsync(string batchid, string tdeidlist, object userState) {
            if ((this.GetGiveBackList_CheckOperationCompleted == null)) {
                this.GetGiveBackList_CheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGiveBackList_CheckOperationCompleted);
            }
            this.InvokeAsync("GetGiveBackList_Check", new object[] {
                        batchid,
                        tdeidlist}, this.GetGiveBackList_CheckOperationCompleted, userState);
        }
        
        private void OnGetGiveBackList_CheckOperationCompleted(object arg) {
            if ((this.GetGiveBackList_CheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGiveBackList_CheckCompleted(this, new GetGiveBackList_CheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CheckTraderRefund", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckTraderRefund(string listid, long refundAmt, out string msg) {
            object[] results = this.Invoke("CheckTraderRefund", new object[] {
                        listid,
                        refundAmt});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckTraderRefund(string listid, long refundAmt, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckTraderRefund", new object[] {
                        listid,
                        refundAmt}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckTraderRefund(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTraderRefundAsync(string listid, long refundAmt) {
            this.CheckTraderRefundAsync(listid, refundAmt, null);
        }
        
        /// <remarks/>
        public void CheckTraderRefundAsync(string listid, long refundAmt, object userState) {
            if ((this.CheckTraderRefundOperationCompleted == null)) {
                this.CheckTraderRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTraderRefundOperationCompleted);
            }
            this.InvokeAsync("CheckTraderRefund", new object[] {
                        listid,
                        refundAmt}, this.CheckTraderRefundOperationCompleted, userState);
        }
        
        private void OnCheckTraderRefundOperationCompleted(object arg) {
            if ((this.CheckTraderRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTraderRefundCompleted(this, new CheckTraderRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CanStartTraderRefund", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanStartTraderRefund(string listid, long refundAmt, out string msg) {
            object[] results = this.Invoke("CanStartTraderRefund", new object[] {
                        listid,
                        refundAmt});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCanStartTraderRefund(string listid, long refundAmt, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CanStartTraderRefund", new object[] {
                        listid,
                        refundAmt}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCanStartTraderRefund(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanStartTraderRefundAsync(string listid, long refundAmt) {
            this.CanStartTraderRefundAsync(listid, refundAmt, null);
        }
        
        /// <remarks/>
        public void CanStartTraderRefundAsync(string listid, long refundAmt, object userState) {
            if ((this.CanStartTraderRefundOperationCompleted == null)) {
                this.CanStartTraderRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanStartTraderRefundOperationCompleted);
            }
            this.InvokeAsync("CanStartTraderRefund", new object[] {
                        listid,
                        refundAmt}, this.CanStartTraderRefundOperationCompleted, userState);
        }
        
        private void OnCanStartTraderRefundOperationCompleted(object arg) {
            if ((this.CanStartTraderRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanStartTraderRefundCompleted(this, new CanStartTraderRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetMerchantMidUid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetMerchantMidUid(string spid, out string midUid, out string msg) {
            object[] results = this.Invoke("GetMerchantMidUid", new object[] {
                        spid});
            midUid = ((string)(results[1]));
            msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMerchantMidUid(string spid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMerchantMidUid", new object[] {
                        spid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetMerchantMidUid(System.IAsyncResult asyncResult, out string midUid, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            midUid = ((string)(results[1]));
            msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetMerchantMidUidAsync(string spid) {
            this.GetMerchantMidUidAsync(spid, null);
        }
        
        /// <remarks/>
        public void GetMerchantMidUidAsync(string spid, object userState) {
            if ((this.GetMerchantMidUidOperationCompleted == null)) {
                this.GetMerchantMidUidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMerchantMidUidOperationCompleted);
            }
            this.InvokeAsync("GetMerchantMidUid", new object[] {
                        spid}, this.GetMerchantMidUidOperationCompleted, userState);
        }
        
        private void OnGetMerchantMidUidOperationCompleted(object arg) {
            if ((this.GetMerchantMidUidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMerchantMidUidCompleted(this, new GetMerchantMidUidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSpidByMidUid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetSpidByMidUid(string midUid, out string spid, out string msg) {
            object[] results = this.Invoke("GetSpidByMidUid", new object[] {
                        midUid});
            spid = ((string)(results[1]));
            msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSpidByMidUid(string midUid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSpidByMidUid", new object[] {
                        midUid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetSpidByMidUid(System.IAsyncResult asyncResult, out string spid, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            spid = ((string)(results[1]));
            msg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpidByMidUidAsync(string midUid) {
            this.GetSpidByMidUidAsync(midUid, null);
        }
        
        /// <remarks/>
        public void GetSpidByMidUidAsync(string midUid, object userState) {
            if ((this.GetSpidByMidUidOperationCompleted == null)) {
                this.GetSpidByMidUidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpidByMidUidOperationCompleted);
            }
            this.InvokeAsync("GetSpidByMidUid", new object[] {
                        midUid}, this.GetSpidByMidUidOperationCompleted, userState);
        }
        
        private void OnGetSpidByMidUidOperationCompleted(object arg) {
            if ((this.GetSpidByMidUidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpidByMidUidCompleted(this, new GetSpidByMidUidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchTransferCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBatchTransferCount(string batchid, string outAccNo, string inAccNo, string tranState) {
            object[] results = this.Invoke("GetBatchTransferCount", new object[] {
                        batchid,
                        outAccNo,
                        inAccNo,
                        tranState});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchTransferCount(string batchid, string outAccNo, string inAccNo, string tranState, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchTransferCount", new object[] {
                        batchid,
                        outAccNo,
                        inAccNo,
                        tranState}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetBatchTransferCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchTransferCountAsync(string batchid, string outAccNo, string inAccNo, string tranState) {
            this.GetBatchTransferCountAsync(batchid, outAccNo, inAccNo, tranState, null);
        }
        
        /// <remarks/>
        public void GetBatchTransferCountAsync(string batchid, string outAccNo, string inAccNo, string tranState, object userState) {
            if ((this.GetBatchTransferCountOperationCompleted == null)) {
                this.GetBatchTransferCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchTransferCountOperationCompleted);
            }
            this.InvokeAsync("GetBatchTransferCount", new object[] {
                        batchid,
                        outAccNo,
                        inAccNo,
                        tranState}, this.GetBatchTransferCountOperationCompleted, userState);
        }
        
        private void OnGetBatchTransferCountOperationCompleted(object arg) {
            if ((this.GetBatchTransferCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchTransferCountCompleted(this, new GetBatchTransferCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchTransferList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBatchTransferList(string batchid, string outAccNo, string inAccNo, string tranState, int istart, int imax) {
            object[] results = this.Invoke("GetBatchTransferList", new object[] {
                        batchid,
                        outAccNo,
                        inAccNo,
                        tranState,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchTransferList(string batchid, string outAccNo, string inAccNo, string tranState, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchTransferList", new object[] {
                        batchid,
                        outAccNo,
                        inAccNo,
                        tranState,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBatchTransferList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchTransferListAsync(string batchid, string outAccNo, string inAccNo, string tranState, int istart, int imax) {
            this.GetBatchTransferListAsync(batchid, outAccNo, inAccNo, tranState, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetBatchTransferListAsync(string batchid, string outAccNo, string inAccNo, string tranState, int istart, int imax, object userState) {
            if ((this.GetBatchTransferListOperationCompleted == null)) {
                this.GetBatchTransferListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchTransferListOperationCompleted);
            }
            this.InvokeAsync("GetBatchTransferList", new object[] {
                        batchid,
                        outAccNo,
                        inAccNo,
                        tranState,
                        istart,
                        imax}, this.GetBatchTransferListOperationCompleted, userState);
        }
        
        private void OnGetBatchTransferListOperationCompleted(object arg) {
            if ((this.GetBatchTransferListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchTransferListCompleted(this, new GetBatchTransferListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchTransferTotal", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBatchTransferTotal(string batchid, string outAccNo, string inAccNo) {
            object[] results = this.Invoke("GetBatchTransferTotal", new object[] {
                        batchid,
                        outAccNo,
                        inAccNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchTransferTotal(string batchid, string outAccNo, string inAccNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchTransferTotal", new object[] {
                        batchid,
                        outAccNo,
                        inAccNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBatchTransferTotal(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchTransferTotalAsync(string batchid, string outAccNo, string inAccNo) {
            this.GetBatchTransferTotalAsync(batchid, outAccNo, inAccNo, null);
        }
        
        /// <remarks/>
        public void GetBatchTransferTotalAsync(string batchid, string outAccNo, string inAccNo, object userState) {
            if ((this.GetBatchTransferTotalOperationCompleted == null)) {
                this.GetBatchTransferTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchTransferTotalOperationCompleted);
            }
            this.InvokeAsync("GetBatchTransferTotal", new object[] {
                        batchid,
                        outAccNo,
                        inAccNo}, this.GetBatchTransferTotalOperationCompleted, userState);
        }
        
        private void OnGetBatchTransferTotalOperationCompleted(object arg) {
            if ((this.GetBatchTransferTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchTransferTotalCompleted(this, new GetBatchTransferTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetRefundHistoryDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRefundHistoryDetail(string foldid) {
            object[] results = this.Invoke("GetRefundHistoryDetail", new object[] {
                        foldid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRefundHistoryDetail(string foldid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRefundHistoryDetail", new object[] {
                        foldid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRefundHistoryDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundHistoryDetailAsync(string foldid) {
            this.GetRefundHistoryDetailAsync(foldid, null);
        }
        
        /// <remarks/>
        public void GetRefundHistoryDetailAsync(string foldid, object userState) {
            if ((this.GetRefundHistoryDetailOperationCompleted == null)) {
                this.GetRefundHistoryDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundHistoryDetailOperationCompleted);
            }
            this.InvokeAsync("GetRefundHistoryDetail", new object[] {
                        foldid}, this.GetRefundHistoryDetailOperationCompleted, userState);
        }
        
        private void OnGetRefundHistoryDetailOperationCompleted(object arg) {
            if ((this.GetRefundHistoryDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundHistoryDetailCompleted(this, new GetRefundHistoryDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayInfoForRefund", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayInfoForRefund(string foldid) {
            object[] results = this.Invoke("GetPayInfoForRefund", new object[] {
                        foldid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayInfoForRefund(string foldid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayInfoForRefund", new object[] {
                        foldid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayInfoForRefund(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayInfoForRefundAsync(string foldid) {
            this.GetPayInfoForRefundAsync(foldid, null);
        }
        
        /// <remarks/>
        public void GetPayInfoForRefundAsync(string foldid, object userState) {
            if ((this.GetPayInfoForRefundOperationCompleted == null)) {
                this.GetPayInfoForRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayInfoForRefundOperationCompleted);
            }
            this.InvokeAsync("GetPayInfoForRefund", new object[] {
                        foldid}, this.GetPayInfoForRefundOperationCompleted, userState);
        }
        
        private void OnGetPayInfoForRefundOperationCompleted(object arg) {
            if ((this.GetPayInfoForRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayInfoForRefundCompleted(this, new GetPayInfoForRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayInfoForDataList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayInfoForDataList(string banktype, string payfronttime, string bankorder, string famt, string checkdate) {
            object[] results = this.Invoke("GetPayInfoForDataList", new object[] {
                        banktype,
                        payfronttime,
                        bankorder,
                        famt,
                        checkdate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayInfoForDataList(string banktype, string payfronttime, string bankorder, string famt, string checkdate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayInfoForDataList", new object[] {
                        banktype,
                        payfronttime,
                        bankorder,
                        famt,
                        checkdate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayInfoForDataList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayInfoForDataListAsync(string banktype, string payfronttime, string bankorder, string famt, string checkdate) {
            this.GetPayInfoForDataListAsync(banktype, payfronttime, bankorder, famt, checkdate, null);
        }
        
        /// <remarks/>
        public void GetPayInfoForDataListAsync(string banktype, string payfronttime, string bankorder, string famt, string checkdate, object userState) {
            if ((this.GetPayInfoForDataListOperationCompleted == null)) {
                this.GetPayInfoForDataListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayInfoForDataListOperationCompleted);
            }
            this.InvokeAsync("GetPayInfoForDataList", new object[] {
                        banktype,
                        payfronttime,
                        bankorder,
                        famt,
                        checkdate}, this.GetPayInfoForDataListOperationCompleted, userState);
        }
        
        private void OnGetPayInfoForDataListOperationCompleted(object arg) {
            if ((this.GetPayInfoForDataListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayInfoForDataListCompleted(this, new GetPayInfoForDataListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryExportBank", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryExportBank(string bankType, string curType, string exportType, out string msg) {
            object[] results = this.Invoke("QueryExportBank", new object[] {
                        bankType,
                        curType,
                        exportType});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryExportBank(string bankType, string curType, string exportType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryExportBank", new object[] {
                        bankType,
                        curType,
                        exportType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryExportBank(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryExportBankAsync(string bankType, string curType, string exportType) {
            this.QueryExportBankAsync(bankType, curType, exportType, null);
        }
        
        /// <remarks/>
        public void QueryExportBankAsync(string bankType, string curType, string exportType, object userState) {
            if ((this.QueryExportBankOperationCompleted == null)) {
                this.QueryExportBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryExportBankOperationCompleted);
            }
            this.InvokeAsync("QueryExportBank", new object[] {
                        bankType,
                        curType,
                        exportType}, this.QueryExportBankOperationCompleted, userState);
        }
        
        private void OnQueryExportBankOperationCompleted(object arg) {
            if ((this.QueryExportBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryExportBankCompleted(this, new QueryExportBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryExportBankById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_Export_Bank QueryExportBankById(string fid, out string msg) {
            object[] results = this.Invoke("QueryExportBankById", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((T_Export_Bank)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryExportBankById(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryExportBankById", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_Export_Bank EndQueryExportBankById(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_Export_Bank)(results[0]));
        }
        
        /// <remarks/>
        public void QueryExportBankByIdAsync(string fid) {
            this.QueryExportBankByIdAsync(fid, null);
        }
        
        /// <remarks/>
        public void QueryExportBankByIdAsync(string fid, object userState) {
            if ((this.QueryExportBankByIdOperationCompleted == null)) {
                this.QueryExportBankByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryExportBankByIdOperationCompleted);
            }
            this.InvokeAsync("QueryExportBankById", new object[] {
                        fid}, this.QueryExportBankByIdOperationCompleted, userState);
        }
        
        private void OnQueryExportBankByIdOperationCompleted(object arg) {
            if ((this.QueryExportBankByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryExportBankByIdCompleted(this, new QueryExportBankByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryExportBankByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_Export_Bank QueryExportBankByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryExportBankByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_Export_Bank)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryExportBankByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryExportBankByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_Export_Bank EndQueryExportBankByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_Export_Bank)(results[0]));
        }
        
        /// <remarks/>
        public void QueryExportBankByObjidAsync(string objid, string checkType) {
            this.QueryExportBankByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryExportBankByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryExportBankByObjidOperationCompleted == null)) {
                this.QueryExportBankByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryExportBankByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryExportBankByObjid", new object[] {
                        objid,
                        checkType}, this.QueryExportBankByObjidOperationCompleted, userState);
        }
        
        private void OnQueryExportBankByObjidOperationCompleted(object arg) {
            if ((this.QueryExportBankByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryExportBankByObjidCompleted(this, new QueryExportBankByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryExportTaskComm", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryExportTaskComm(string bankType, string exportType, string curType, string schedualId, out string msg) {
            object[] results = this.Invoke("QueryExportTaskComm", new object[] {
                        bankType,
                        exportType,
                        curType,
                        schedualId});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryExportTaskComm(string bankType, string exportType, string curType, string schedualId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryExportTaskComm", new object[] {
                        bankType,
                        exportType,
                        curType,
                        schedualId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryExportTaskComm(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryExportTaskCommAsync(string bankType, string exportType, string curType, string schedualId) {
            this.QueryExportTaskCommAsync(bankType, exportType, curType, schedualId, null);
        }
        
        /// <remarks/>
        public void QueryExportTaskCommAsync(string bankType, string exportType, string curType, string schedualId, object userState) {
            if ((this.QueryExportTaskCommOperationCompleted == null)) {
                this.QueryExportTaskCommOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryExportTaskCommOperationCompleted);
            }
            this.InvokeAsync("QueryExportTaskComm", new object[] {
                        bankType,
                        exportType,
                        curType,
                        schedualId}, this.QueryExportTaskCommOperationCompleted, userState);
        }
        
        private void OnQueryExportTaskCommOperationCompleted(object arg) {
            if ((this.QueryExportTaskCommCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryExportTaskCommCompleted(this, new QueryExportTaskCommCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryExportTaskCommByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_Export_Task_Comm QueryExportTaskCommByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryExportTaskCommByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_Export_Task_Comm)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryExportTaskCommByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryExportTaskCommByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_Export_Task_Comm EndQueryExportTaskCommByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_Export_Task_Comm)(results[0]));
        }
        
        /// <remarks/>
        public void QueryExportTaskCommByObjidAsync(string objid, string checkType) {
            this.QueryExportTaskCommByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryExportTaskCommByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryExportTaskCommByObjidOperationCompleted == null)) {
                this.QueryExportTaskCommByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryExportTaskCommByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryExportTaskCommByObjid", new object[] {
                        objid,
                        checkType}, this.QueryExportTaskCommByObjidOperationCompleted, userState);
        }
        
        private void OnQueryExportTaskCommByObjidOperationCompleted(object arg) {
            if ((this.QueryExportTaskCommByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryExportTaskCommByObjidCompleted(this, new QueryExportTaskCommByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryExportTaskCommById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_Export_Task_Comm QueryExportTaskCommById(string fid, out string msg) {
            object[] results = this.Invoke("QueryExportTaskCommById", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((T_Export_Task_Comm)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryExportTaskCommById(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryExportTaskCommById", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_Export_Task_Comm EndQueryExportTaskCommById(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_Export_Task_Comm)(results[0]));
        }
        
        /// <remarks/>
        public void QueryExportTaskCommByIdAsync(string fid) {
            this.QueryExportTaskCommByIdAsync(fid, null);
        }
        
        /// <remarks/>
        public void QueryExportTaskCommByIdAsync(string fid, object userState) {
            if ((this.QueryExportTaskCommByIdOperationCompleted == null)) {
                this.QueryExportTaskCommByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryExportTaskCommByIdOperationCompleted);
            }
            this.InvokeAsync("QueryExportTaskCommById", new object[] {
                        fid}, this.QueryExportTaskCommByIdOperationCompleted, userState);
        }
        
        private void OnQueryExportTaskCommByIdOperationCompleted(object arg) {
            if ((this.QueryExportTaskCommByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryExportTaskCommByIdCompleted(this, new QueryExportTaskCommByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryExportTaskTmp", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryExportTaskTmp(string bankType, string exportType, string curType, string schedualId, string exportDateBegin, string exportDateEnd, string valueEnable, out string msg) {
            object[] results = this.Invoke("QueryExportTaskTmp", new object[] {
                        bankType,
                        exportType,
                        curType,
                        schedualId,
                        exportDateBegin,
                        exportDateEnd,
                        valueEnable});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryExportTaskTmp(string bankType, string exportType, string curType, string schedualId, string exportDateBegin, string exportDateEnd, string valueEnable, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryExportTaskTmp", new object[] {
                        bankType,
                        exportType,
                        curType,
                        schedualId,
                        exportDateBegin,
                        exportDateEnd,
                        valueEnable}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryExportTaskTmp(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryExportTaskTmpAsync(string bankType, string exportType, string curType, string schedualId, string exportDateBegin, string exportDateEnd, string valueEnable) {
            this.QueryExportTaskTmpAsync(bankType, exportType, curType, schedualId, exportDateBegin, exportDateEnd, valueEnable, null);
        }
        
        /// <remarks/>
        public void QueryExportTaskTmpAsync(string bankType, string exportType, string curType, string schedualId, string exportDateBegin, string exportDateEnd, string valueEnable, object userState) {
            if ((this.QueryExportTaskTmpOperationCompleted == null)) {
                this.QueryExportTaskTmpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryExportTaskTmpOperationCompleted);
            }
            this.InvokeAsync("QueryExportTaskTmp", new object[] {
                        bankType,
                        exportType,
                        curType,
                        schedualId,
                        exportDateBegin,
                        exportDateEnd,
                        valueEnable}, this.QueryExportTaskTmpOperationCompleted, userState);
        }
        
        private void OnQueryExportTaskTmpOperationCompleted(object arg) {
            if ((this.QueryExportTaskTmpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryExportTaskTmpCompleted(this, new QueryExportTaskTmpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryExportTaskTmpByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_Export_Task_Tmp QueryExportTaskTmpByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryExportTaskTmpByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_Export_Task_Tmp)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryExportTaskTmpByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryExportTaskTmpByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_Export_Task_Tmp EndQueryExportTaskTmpByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_Export_Task_Tmp)(results[0]));
        }
        
        /// <remarks/>
        public void QueryExportTaskTmpByObjidAsync(string objid, string checkType) {
            this.QueryExportTaskTmpByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryExportTaskTmpByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryExportTaskTmpByObjidOperationCompleted == null)) {
                this.QueryExportTaskTmpByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryExportTaskTmpByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryExportTaskTmpByObjid", new object[] {
                        objid,
                        checkType}, this.QueryExportTaskTmpByObjidOperationCompleted, userState);
        }
        
        private void OnQueryExportTaskTmpByObjidOperationCompleted(object arg) {
            if ((this.QueryExportTaskTmpByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryExportTaskTmpByObjidCompleted(this, new QueryExportTaskTmpByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryExportTaskTmpById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_Export_Task_Tmp QueryExportTaskTmpById(string fid, out string msg) {
            object[] results = this.Invoke("QueryExportTaskTmpById", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((T_Export_Task_Tmp)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryExportTaskTmpById(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryExportTaskTmpById", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_Export_Task_Tmp EndQueryExportTaskTmpById(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_Export_Task_Tmp)(results[0]));
        }
        
        /// <remarks/>
        public void QueryExportTaskTmpByIdAsync(string fid) {
            this.QueryExportTaskTmpByIdAsync(fid, null);
        }
        
        /// <remarks/>
        public void QueryExportTaskTmpByIdAsync(string fid, object userState) {
            if ((this.QueryExportTaskTmpByIdOperationCompleted == null)) {
                this.QueryExportTaskTmpByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryExportTaskTmpByIdOperationCompleted);
            }
            this.InvokeAsync("QueryExportTaskTmpById", new object[] {
                        fid}, this.QueryExportTaskTmpByIdOperationCompleted, userState);
        }
        
        private void OnQueryExportTaskTmpByIdOperationCompleted(object arg) {
            if ((this.QueryExportTaskTmpByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryExportTaskTmpByIdCompleted(this, new QueryExportTaskTmpByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryExportBankrest", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryExportBankrest(string bankType, string enableType, out string msg) {
            object[] results = this.Invoke("QueryExportBankrest", new object[] {
                        bankType,
                        enableType});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryExportBankrest(string bankType, string enableType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryExportBankrest", new object[] {
                        bankType,
                        enableType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryExportBankrest(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryExportBankrestAsync(string bankType, string enableType) {
            this.QueryExportBankrestAsync(bankType, enableType, null);
        }
        
        /// <remarks/>
        public void QueryExportBankrestAsync(string bankType, string enableType, object userState) {
            if ((this.QueryExportBankrestOperationCompleted == null)) {
                this.QueryExportBankrestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryExportBankrestOperationCompleted);
            }
            this.InvokeAsync("QueryExportBankrest", new object[] {
                        bankType,
                        enableType}, this.QueryExportBankrestOperationCompleted, userState);
        }
        
        private void OnQueryExportBankrestOperationCompleted(object arg) {
            if ((this.QueryExportBankrestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryExportBankrestCompleted(this, new QueryExportBankrestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryExportBankrestById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_Export_Bankrest QueryExportBankrestById(string fid, out string msg) {
            object[] results = this.Invoke("QueryExportBankrestById", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((T_Export_Bankrest)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryExportBankrestById(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryExportBankrestById", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_Export_Bankrest EndQueryExportBankrestById(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_Export_Bankrest)(results[0]));
        }
        
        /// <remarks/>
        public void QueryExportBankrestByIdAsync(string fid) {
            this.QueryExportBankrestByIdAsync(fid, null);
        }
        
        /// <remarks/>
        public void QueryExportBankrestByIdAsync(string fid, object userState) {
            if ((this.QueryExportBankrestByIdOperationCompleted == null)) {
                this.QueryExportBankrestByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryExportBankrestByIdOperationCompleted);
            }
            this.InvokeAsync("QueryExportBankrestById", new object[] {
                        fid}, this.QueryExportBankrestByIdOperationCompleted, userState);
        }
        
        private void OnQueryExportBankrestByIdOperationCompleted(object arg) {
            if ((this.QueryExportBankrestByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryExportBankrestByIdCompleted(this, new QueryExportBankrestByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryExportBankrestByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_Export_Bankrest QueryExportBankrestByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryExportBankrestByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_Export_Bankrest)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryExportBankrestByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryExportBankrestByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_Export_Bankrest EndQueryExportBankrestByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_Export_Bankrest)(results[0]));
        }
        
        /// <remarks/>
        public void QueryExportBankrestByObjidAsync(string objid, string checkType) {
            this.QueryExportBankrestByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryExportBankrestByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryExportBankrestByObjidOperationCompleted == null)) {
                this.QueryExportBankrestByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryExportBankrestByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryExportBankrestByObjid", new object[] {
                        objid,
                        checkType}, this.QueryExportBankrestByObjidOperationCompleted, userState);
        }
        
        private void OnQueryExportBankrestByObjidOperationCompleted(object arg) {
            if ((this.QueryExportBankrestByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryExportBankrestByObjidCompleted(this, new QueryExportBankrestByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryGWQAccountInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryGWQAccountInfo(string fid, string depId, string qqid, string spid, string useState, int start, int max, out string msg) {
            object[] results = this.Invoke("QueryGWQAccountInfo", new object[] {
                        fid,
                        depId,
                        qqid,
                        spid,
                        useState,
                        start,
                        max});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryGWQAccountInfo(string fid, string depId, string qqid, string spid, string useState, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryGWQAccountInfo", new object[] {
                        fid,
                        depId,
                        qqid,
                        spid,
                        useState,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryGWQAccountInfo(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryGWQAccountInfoAsync(string fid, string depId, string qqid, string spid, string useState, int start, int max) {
            this.QueryGWQAccountInfoAsync(fid, depId, qqid, spid, useState, start, max, null);
        }
        
        /// <remarks/>
        public void QueryGWQAccountInfoAsync(string fid, string depId, string qqid, string spid, string useState, int start, int max, object userState) {
            if ((this.QueryGWQAccountInfoOperationCompleted == null)) {
                this.QueryGWQAccountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryGWQAccountInfoOperationCompleted);
            }
            this.InvokeAsync("QueryGWQAccountInfo", new object[] {
                        fid,
                        depId,
                        qqid,
                        spid,
                        useState,
                        start,
                        max}, this.QueryGWQAccountInfoOperationCompleted, userState);
        }
        
        private void OnQueryGWQAccountInfoOperationCompleted(object arg) {
            if ((this.QueryGWQAccountInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryGWQAccountInfoCompleted(this, new QueryGWQAccountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryGWQAccountInfoCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryGWQAccountInfoCount(string fid, string depId, string qqid, string spid, string useState, out string msg) {
            object[] results = this.Invoke("QueryGWQAccountInfoCount", new object[] {
                        fid,
                        depId,
                        qqid,
                        spid,
                        useState});
            msg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryGWQAccountInfoCount(string fid, string depId, string qqid, string spid, string useState, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryGWQAccountInfoCount", new object[] {
                        fid,
                        depId,
                        qqid,
                        spid,
                        useState}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndQueryGWQAccountInfoCount(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryGWQAccountInfoCountAsync(string fid, string depId, string qqid, string spid, string useState) {
            this.QueryGWQAccountInfoCountAsync(fid, depId, qqid, spid, useState, null);
        }
        
        /// <remarks/>
        public void QueryGWQAccountInfoCountAsync(string fid, string depId, string qqid, string spid, string useState, object userState) {
            if ((this.QueryGWQAccountInfoCountOperationCompleted == null)) {
                this.QueryGWQAccountInfoCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryGWQAccountInfoCountOperationCompleted);
            }
            this.InvokeAsync("QueryGWQAccountInfoCount", new object[] {
                        fid,
                        depId,
                        qqid,
                        spid,
                        useState}, this.QueryGWQAccountInfoCountOperationCompleted, userState);
        }
        
        private void OnQueryGWQAccountInfoCountOperationCompleted(object arg) {
            if ((this.QueryGWQAccountInfoCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryGWQAccountInfoCountCompleted(this, new QueryGWQAccountInfoCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryGWQAccountById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_GWQ_Account QueryGWQAccountById(string fid, out string msg) {
            object[] results = this.Invoke("QueryGWQAccountById", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((T_GWQ_Account)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryGWQAccountById(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryGWQAccountById", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_GWQ_Account EndQueryGWQAccountById(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_GWQ_Account)(results[0]));
        }
        
        /// <remarks/>
        public void QueryGWQAccountByIdAsync(string fid) {
            this.QueryGWQAccountByIdAsync(fid, null);
        }
        
        /// <remarks/>
        public void QueryGWQAccountByIdAsync(string fid, object userState) {
            if ((this.QueryGWQAccountByIdOperationCompleted == null)) {
                this.QueryGWQAccountByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryGWQAccountByIdOperationCompleted);
            }
            this.InvokeAsync("QueryGWQAccountById", new object[] {
                        fid}, this.QueryGWQAccountByIdOperationCompleted, userState);
        }
        
        private void OnQueryGWQAccountByIdOperationCompleted(object arg) {
            if ((this.QueryGWQAccountByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryGWQAccountByIdCompleted(this, new QueryGWQAccountByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryGWQUseInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryGWQUseInfo(string fid, string MKT_no, string dep_id, string qq_id, string state, int start, int max, out string msg) {
            object[] results = this.Invoke("QueryGWQUseInfo", new object[] {
                        fid,
                        MKT_no,
                        dep_id,
                        qq_id,
                        state,
                        start,
                        max});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryGWQUseInfo(string fid, string MKT_no, string dep_id, string qq_id, string state, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryGWQUseInfo", new object[] {
                        fid,
                        MKT_no,
                        dep_id,
                        qq_id,
                        state,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryGWQUseInfo(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryGWQUseInfoAsync(string fid, string MKT_no, string dep_id, string qq_id, string state, int start, int max) {
            this.QueryGWQUseInfoAsync(fid, MKT_no, dep_id, qq_id, state, start, max, null);
        }
        
        /// <remarks/>
        public void QueryGWQUseInfoAsync(string fid, string MKT_no, string dep_id, string qq_id, string state, int start, int max, object userState) {
            if ((this.QueryGWQUseInfoOperationCompleted == null)) {
                this.QueryGWQUseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryGWQUseInfoOperationCompleted);
            }
            this.InvokeAsync("QueryGWQUseInfo", new object[] {
                        fid,
                        MKT_no,
                        dep_id,
                        qq_id,
                        state,
                        start,
                        max}, this.QueryGWQUseInfoOperationCompleted, userState);
        }
        
        private void OnQueryGWQUseInfoOperationCompleted(object arg) {
            if ((this.QueryGWQUseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryGWQUseInfoCompleted(this, new QueryGWQUseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryRecoverGWQAccount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryRecoverGWQAccount(string MKT_no, string dep_id, string qq_id, out string msg) {
            object[] results = this.Invoke("QueryRecoverGWQAccount", new object[] {
                        MKT_no,
                        dep_id,
                        qq_id});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryRecoverGWQAccount(string MKT_no, string dep_id, string qq_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryRecoverGWQAccount", new object[] {
                        MKT_no,
                        dep_id,
                        qq_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryRecoverGWQAccount(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryRecoverGWQAccountAsync(string MKT_no, string dep_id, string qq_id) {
            this.QueryRecoverGWQAccountAsync(MKT_no, dep_id, qq_id, null);
        }
        
        /// <remarks/>
        public void QueryRecoverGWQAccountAsync(string MKT_no, string dep_id, string qq_id, object userState) {
            if ((this.QueryRecoverGWQAccountOperationCompleted == null)) {
                this.QueryRecoverGWQAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRecoverGWQAccountOperationCompleted);
            }
            this.InvokeAsync("QueryRecoverGWQAccount", new object[] {
                        MKT_no,
                        dep_id,
                        qq_id}, this.QueryRecoverGWQAccountOperationCompleted, userState);
        }
        
        private void OnQueryRecoverGWQAccountOperationCompleted(object arg) {
            if ((this.QueryRecoverGWQAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRecoverGWQAccountCompleted(this, new QueryRecoverGWQAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryZWDicInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryZWDicInfo(string dicKey, string operUser, string dicValue, int start, int max, out string msg) {
            object[] results = this.Invoke("QueryZWDicInfo", new object[] {
                        dicKey,
                        operUser,
                        dicValue,
                        start,
                        max});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryZWDicInfo(string dicKey, string operUser, string dicValue, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryZWDicInfo", new object[] {
                        dicKey,
                        operUser,
                        dicValue,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryZWDicInfo(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryZWDicInfoAsync(string dicKey, string operUser, string dicValue, int start, int max) {
            this.QueryZWDicInfoAsync(dicKey, operUser, dicValue, start, max, null);
        }
        
        /// <remarks/>
        public void QueryZWDicInfoAsync(string dicKey, string operUser, string dicValue, int start, int max, object userState) {
            if ((this.QueryZWDicInfoOperationCompleted == null)) {
                this.QueryZWDicInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryZWDicInfoOperationCompleted);
            }
            this.InvokeAsync("QueryZWDicInfo", new object[] {
                        dicKey,
                        operUser,
                        dicValue,
                        start,
                        max}, this.QueryZWDicInfoOperationCompleted, userState);
        }
        
        private void OnQueryZWDicInfoOperationCompleted(object arg) {
            if ((this.QueryZWDicInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryZWDicInfoCompleted(this, new QueryZWDicInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryZWDicById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_ZWDic_Info QueryZWDicById(string fid, out string msg) {
            object[] results = this.Invoke("QueryZWDicById", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((T_ZWDic_Info)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryZWDicById(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryZWDicById", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_ZWDic_Info EndQueryZWDicById(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_ZWDic_Info)(results[0]));
        }
        
        /// <remarks/>
        public void QueryZWDicByIdAsync(string fid) {
            this.QueryZWDicByIdAsync(fid, null);
        }
        
        /// <remarks/>
        public void QueryZWDicByIdAsync(string fid, object userState) {
            if ((this.QueryZWDicByIdOperationCompleted == null)) {
                this.QueryZWDicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryZWDicByIdOperationCompleted);
            }
            this.InvokeAsync("QueryZWDicById", new object[] {
                        fid}, this.QueryZWDicByIdOperationCompleted, userState);
        }
        
        private void OnQueryZWDicByIdOperationCompleted(object arg) {
            if ((this.QueryZWDicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryZWDicByIdCompleted(this, new QueryZWDicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundDispatchList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundDispatchList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string fstate, string ftype, string frombanktype) {
            object[] results = this.Invoke("GetFundDispatchList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        frombanktype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundDispatchList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string fstate, string ftype, string frombanktype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundDispatchList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        frombanktype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundDispatchList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundDispatchListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string fstate, string ftype, string frombanktype) {
            this.GetFundDispatchListAsync(u_BeginTime, u_EndTime, fstate, ftype, frombanktype, null);
        }
        
        /// <remarks/>
        public void GetFundDispatchListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string fstate, string ftype, string frombanktype, object userState) {
            if ((this.GetFundDispatchListOperationCompleted == null)) {
                this.GetFundDispatchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundDispatchListOperationCompleted);
            }
            this.InvokeAsync("GetFundDispatchList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype,
                        frombanktype}, this.GetFundDispatchListOperationCompleted, userState);
        }
        
        private void OnGetFundDispatchListOperationCompleted(object arg) {
            if ((this.GetFundDispatchListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundDispatchListCompleted(this, new GetFundDispatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetpospDispatchList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetpospDispatchList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string fstate, string ftype) {
            object[] results = this.Invoke("GetpospDispatchList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetpospDispatchList(System.DateTime u_BeginTime, System.DateTime u_EndTime, string fstate, string ftype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetpospDispatchList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetpospDispatchList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetpospDispatchListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string fstate, string ftype) {
            this.GetpospDispatchListAsync(u_BeginTime, u_EndTime, fstate, ftype, null);
        }
        
        /// <remarks/>
        public void GetpospDispatchListAsync(System.DateTime u_BeginTime, System.DateTime u_EndTime, string fstate, string ftype, object userState) {
            if ((this.GetpospDispatchListOperationCompleted == null)) {
                this.GetpospDispatchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetpospDispatchListOperationCompleted);
            }
            this.InvokeAsync("GetpospDispatchList", new object[] {
                        u_BeginTime,
                        u_EndTime,
                        fstate,
                        ftype}, this.GetpospDispatchListOperationCompleted, userState);
        }
        
        private void OnGetpospDispatchListOperationCompleted(object arg) {
            if ((this.GetpospDispatchListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetpospDispatchListCompleted(this, new GetpospDispatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryConfigBankTypeInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryConfigBankTypeInfo(string bankType, string curType, string queryType, int start, int max, out string msg) {
            object[] results = this.Invoke("QueryConfigBankTypeInfo", new object[] {
                        bankType,
                        curType,
                        queryType,
                        start,
                        max});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryConfigBankTypeInfo(string bankType, string curType, string queryType, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryConfigBankTypeInfo", new object[] {
                        bankType,
                        curType,
                        queryType,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryConfigBankTypeInfo(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryConfigBankTypeInfoAsync(string bankType, string curType, string queryType, int start, int max) {
            this.QueryConfigBankTypeInfoAsync(bankType, curType, queryType, start, max, null);
        }
        
        /// <remarks/>
        public void QueryConfigBankTypeInfoAsync(string bankType, string curType, string queryType, int start, int max, object userState) {
            if ((this.QueryConfigBankTypeInfoOperationCompleted == null)) {
                this.QueryConfigBankTypeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryConfigBankTypeInfoOperationCompleted);
            }
            this.InvokeAsync("QueryConfigBankTypeInfo", new object[] {
                        bankType,
                        curType,
                        queryType,
                        start,
                        max}, this.QueryConfigBankTypeInfoOperationCompleted, userState);
        }
        
        private void OnQueryConfigBankTypeInfoOperationCompleted(object arg) {
            if ((this.QueryConfigBankTypeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryConfigBankTypeInfoCompleted(this, new QueryConfigBankTypeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTDICInfoByValue", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_DIC QueryTDICInfoByValue(string bankType, out string msg) {
            object[] results = this.Invoke("QueryTDICInfoByValue", new object[] {
                        bankType});
            msg = ((string)(results[1]));
            return ((T_DIC)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTDICInfoByValue(string bankType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTDICInfoByValue", new object[] {
                        bankType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_DIC EndQueryTDICInfoByValue(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_DIC)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTDICInfoByValueAsync(string bankType) {
            this.QueryTDICInfoByValueAsync(bankType, null);
        }
        
        /// <remarks/>
        public void QueryTDICInfoByValueAsync(string bankType, object userState) {
            if ((this.QueryTDICInfoByValueOperationCompleted == null)) {
                this.QueryTDICInfoByValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTDICInfoByValueOperationCompleted);
            }
            this.InvokeAsync("QueryTDICInfoByValue", new object[] {
                        bankType}, this.QueryTDICInfoByValueOperationCompleted, userState);
        }
        
        private void OnQueryTDICInfoByValueOperationCompleted(object arg) {
            if ((this.QueryTDICInfoByValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTDICInfoByValueCompleted(this, new QueryTDICInfoByValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTCBANKInfoByValue", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public C2CDB_T_TC_BANK QueryTCBANKInfoByValue(string bankType, string curType, out string msg) {
            object[] results = this.Invoke("QueryTCBANKInfoByValue", new object[] {
                        bankType,
                        curType});
            msg = ((string)(results[1]));
            return ((C2CDB_T_TC_BANK)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTCBANKInfoByValue(string bankType, string curType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTCBANKInfoByValue", new object[] {
                        bankType,
                        curType}, callback, asyncState);
        }
        
        /// <remarks/>
        public C2CDB_T_TC_BANK EndQueryTCBANKInfoByValue(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((C2CDB_T_TC_BANK)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTCBANKInfoByValueAsync(string bankType, string curType) {
            this.QueryTCBANKInfoByValueAsync(bankType, curType, null);
        }
        
        /// <remarks/>
        public void QueryTCBANKInfoByValueAsync(string bankType, string curType, object userState) {
            if ((this.QueryTCBANKInfoByValueOperationCompleted == null)) {
                this.QueryTCBANKInfoByValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTCBANKInfoByValueOperationCompleted);
            }
            this.InvokeAsync("QueryTCBANKInfoByValue", new object[] {
                        bankType,
                        curType}, this.QueryTCBANKInfoByValueOperationCompleted, userState);
        }
        
        private void OnQueryTCBANKInfoByValueOperationCompleted(object arg) {
            if ((this.QueryTCBANKInfoByValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTCBANKInfoByValueCompleted(this, new QueryTCBANKInfoByValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTSUBJECTInfoByValue", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_SUBJECT QueryTSUBJECTInfoByValue(string fItem, out string msg) {
            object[] results = this.Invoke("QueryTSUBJECTInfoByValue", new object[] {
                        fItem});
            msg = ((string)(results[1]));
            return ((T_SUBJECT)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTSUBJECTInfoByValue(string fItem, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTSUBJECTInfoByValue", new object[] {
                        fItem}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_SUBJECT EndQueryTSUBJECTInfoByValue(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_SUBJECT)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTSUBJECTInfoByValueAsync(string fItem) {
            this.QueryTSUBJECTInfoByValueAsync(fItem, null);
        }
        
        /// <remarks/>
        public void QueryTSUBJECTInfoByValueAsync(string fItem, object userState) {
            if ((this.QueryTSUBJECTInfoByValueOperationCompleted == null)) {
                this.QueryTSUBJECTInfoByValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTSUBJECTInfoByValueOperationCompleted);
            }
            this.InvokeAsync("QueryTSUBJECTInfoByValue", new object[] {
                        fItem}, this.QueryTSUBJECTInfoByValueOperationCompleted, userState);
        }
        
        private void OnQueryTSUBJECTInfoByValueOperationCompleted(object arg) {
            if ((this.QueryTSUBJECTInfoByValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTSUBJECTInfoByValueCompleted(this, new QueryTSUBJECTInfoByValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTPRODUCTInfoByValue", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_PRODUCT QueryTPRODUCTInfoByValue(string fProductNo, out string msg) {
            object[] results = this.Invoke("QueryTPRODUCTInfoByValue", new object[] {
                        fProductNo});
            msg = ((string)(results[1]));
            return ((T_PRODUCT)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTPRODUCTInfoByValue(string fProductNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTPRODUCTInfoByValue", new object[] {
                        fProductNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_PRODUCT EndQueryTPRODUCTInfoByValue(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_PRODUCT)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTPRODUCTInfoByValueAsync(string fProductNo) {
            this.QueryTPRODUCTInfoByValueAsync(fProductNo, null);
        }
        
        /// <remarks/>
        public void QueryTPRODUCTInfoByValueAsync(string fProductNo, object userState) {
            if ((this.QueryTPRODUCTInfoByValueOperationCompleted == null)) {
                this.QueryTPRODUCTInfoByValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTPRODUCTInfoByValueOperationCompleted);
            }
            this.InvokeAsync("QueryTPRODUCTInfoByValue", new object[] {
                        fProductNo}, this.QueryTPRODUCTInfoByValueOperationCompleted, userState);
        }
        
        private void OnQueryTPRODUCTInfoByValueOperationCompleted(object arg) {
            if ((this.QueryTPRODUCTInfoByValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTPRODUCTInfoByValueCompleted(this, new QueryTPRODUCTInfoByValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTBANKInfoByValue", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANK_INFO QueryTBANKInfoByValue(string bank_type, out string msg) {
            object[] results = this.Invoke("QueryTBANKInfoByValue", new object[] {
                        bank_type});
            msg = ((string)(results[1]));
            return ((T_BANK_INFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTBANKInfoByValue(string bank_type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTBANKInfoByValue", new object[] {
                        bank_type}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANK_INFO EndQueryTBANKInfoByValue(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANK_INFO)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTBANKInfoByValueAsync(string bank_type) {
            this.QueryTBANKInfoByValueAsync(bank_type, null);
        }
        
        /// <remarks/>
        public void QueryTBANKInfoByValueAsync(string bank_type, object userState) {
            if ((this.QueryTBANKInfoByValueOperationCompleted == null)) {
                this.QueryTBANKInfoByValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTBANKInfoByValueOperationCompleted);
            }
            this.InvokeAsync("QueryTBANKInfoByValue", new object[] {
                        bank_type}, this.QueryTBANKInfoByValueOperationCompleted, userState);
        }
        
        private void OnQueryTBANKInfoByValueOperationCompleted(object arg) {
            if ((this.QueryTBANKInfoByValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTBANKInfoByValueCompleted(this, new QueryTBANKInfoByValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTBANKKEYSByValue", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANK_KEYS QueryTBANKKEYSByValue(string key_id, out string msg) {
            object[] results = this.Invoke("QueryTBANKKEYSByValue", new object[] {
                        key_id});
            msg = ((string)(results[1]));
            return ((T_BANK_KEYS)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTBANKKEYSByValue(string key_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTBANKKEYSByValue", new object[] {
                        key_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANK_KEYS EndQueryTBANKKEYSByValue(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANK_KEYS)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTBANKKEYSByValueAsync(string key_id) {
            this.QueryTBANKKEYSByValueAsync(key_id, null);
        }
        
        /// <remarks/>
        public void QueryTBANKKEYSByValueAsync(string key_id, object userState) {
            if ((this.QueryTBANKKEYSByValueOperationCompleted == null)) {
                this.QueryTBANKKEYSByValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTBANKKEYSByValueOperationCompleted);
            }
            this.InvokeAsync("QueryTBANKKEYSByValue", new object[] {
                        key_id}, this.QueryTBANKKEYSByValueOperationCompleted, userState);
        }
        
        private void OnQueryTBANKKEYSByValueOperationCompleted(object arg) {
            if ((this.QueryTBANKKEYSByValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTBANKKEYSByValueCompleted(this, new QueryTBANKKEYSByValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTBANKCODEBytype", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANK_CODE QueryTBANKCODEBytype(string fbank_char_code, string fbank_num_code, out string msg) {
            object[] results = this.Invoke("QueryTBANKCODEBytype", new object[] {
                        fbank_char_code,
                        fbank_num_code});
            msg = ((string)(results[1]));
            return ((T_BANK_CODE)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTBANKCODEBytype(string fbank_char_code, string fbank_num_code, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTBANKCODEBytype", new object[] {
                        fbank_char_code,
                        fbank_num_code}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANK_CODE EndQueryTBANKCODEBytype(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANK_CODE)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTBANKCODEBytypeAsync(string fbank_char_code, string fbank_num_code) {
            this.QueryTBANKCODEBytypeAsync(fbank_char_code, fbank_num_code, null);
        }
        
        /// <remarks/>
        public void QueryTBANKCODEBytypeAsync(string fbank_char_code, string fbank_num_code, object userState) {
            if ((this.QueryTBANKCODEBytypeOperationCompleted == null)) {
                this.QueryTBANKCODEBytypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTBANKCODEBytypeOperationCompleted);
            }
            this.InvokeAsync("QueryTBANKCODEBytype", new object[] {
                        fbank_char_code,
                        fbank_num_code}, this.QueryTBANKCODEBytypeOperationCompleted, userState);
        }
        
        private void OnQueryTBANKCODEBytypeOperationCompleted(object arg) {
            if ((this.QueryTBANKCODEBytypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTBANKCODEBytypeCompleted(this, new QueryTBANKCODEBytypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTBANKCLASSBytype", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANK_CLASS QueryTBANKCLASSBytype(string key_id, out string msg) {
            object[] results = this.Invoke("QueryTBANKCLASSBytype", new object[] {
                        key_id});
            msg = ((string)(results[1]));
            return ((T_BANK_CLASS)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTBANKCLASSBytype(string key_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTBANKCLASSBytype", new object[] {
                        key_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANK_CLASS EndQueryTBANKCLASSBytype(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANK_CLASS)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTBANKCLASSBytypeAsync(string key_id) {
            this.QueryTBANKCLASSBytypeAsync(key_id, null);
        }
        
        /// <remarks/>
        public void QueryTBANKCLASSBytypeAsync(string key_id, object userState) {
            if ((this.QueryTBANKCLASSBytypeOperationCompleted == null)) {
                this.QueryTBANKCLASSBytypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTBANKCLASSBytypeOperationCompleted);
            }
            this.InvokeAsync("QueryTBANKCLASSBytype", new object[] {
                        key_id}, this.QueryTBANKCLASSBytypeOperationCompleted, userState);
        }
        
        private void OnQueryTBANKCLASSBytypeOperationCompleted(object arg) {
            if ((this.QueryTBANKCLASSBytypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTBANKCLASSBytypeCompleted(this, new QueryTBANKCLASSBytypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTFile_Model_Relation_Byt" +
            "ype", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_FILE_MODEL_RELATION QueryTFile_Model_Relation_Bytype(string key_id, out string msg) {
            object[] results = this.Invoke("QueryTFile_Model_Relation_Bytype", new object[] {
                        key_id});
            msg = ((string)(results[1]));
            return ((T_FILE_MODEL_RELATION)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTFile_Model_Relation_Bytype(string key_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTFile_Model_Relation_Bytype", new object[] {
                        key_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_FILE_MODEL_RELATION EndQueryTFile_Model_Relation_Bytype(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_FILE_MODEL_RELATION)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTFile_Model_Relation_BytypeAsync(string key_id) {
            this.QueryTFile_Model_Relation_BytypeAsync(key_id, null);
        }
        
        /// <remarks/>
        public void QueryTFile_Model_Relation_BytypeAsync(string key_id, object userState) {
            if ((this.QueryTFile_Model_Relation_BytypeOperationCompleted == null)) {
                this.QueryTFile_Model_Relation_BytypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTFile_Model_Relation_BytypeOperationCompleted);
            }
            this.InvokeAsync("QueryTFile_Model_Relation_Bytype", new object[] {
                        key_id}, this.QueryTFile_Model_Relation_BytypeOperationCompleted, userState);
        }
        
        private void OnQueryTFile_Model_Relation_BytypeOperationCompleted(object arg) {
            if ((this.QueryTFile_Model_Relation_BytypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTFile_Model_Relation_BytypeCompleted(this, new QueryTFile_Model_Relation_BytypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTDICInfoByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_DIC QueryTDICInfoByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryTDICInfoByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_DIC)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTDICInfoByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTDICInfoByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_DIC EndQueryTDICInfoByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_DIC)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTDICInfoByObjidAsync(string objid, string checkType) {
            this.QueryTDICInfoByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryTDICInfoByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryTDICInfoByObjidOperationCompleted == null)) {
                this.QueryTDICInfoByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTDICInfoByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryTDICInfoByObjid", new object[] {
                        objid,
                        checkType}, this.QueryTDICInfoByObjidOperationCompleted, userState);
        }
        
        private void OnQueryTDICInfoByObjidOperationCompleted(object arg) {
            if ((this.QueryTDICInfoByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTDICInfoByObjidCompleted(this, new QueryTDICInfoByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTCBANKInfoByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public C2CDB_T_TC_BANK QueryTCBANKInfoByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryTCBANKInfoByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((C2CDB_T_TC_BANK)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTCBANKInfoByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTCBANKInfoByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public C2CDB_T_TC_BANK EndQueryTCBANKInfoByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((C2CDB_T_TC_BANK)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTCBANKInfoByObjidAsync(string objid, string checkType) {
            this.QueryTCBANKInfoByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryTCBANKInfoByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryTCBANKInfoByObjidOperationCompleted == null)) {
                this.QueryTCBANKInfoByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTCBANKInfoByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryTCBANKInfoByObjid", new object[] {
                        objid,
                        checkType}, this.QueryTCBANKInfoByObjidOperationCompleted, userState);
        }
        
        private void OnQueryTCBANKInfoByObjidOperationCompleted(object arg) {
            if ((this.QueryTCBANKInfoByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTCBANKInfoByObjidCompleted(this, new QueryTCBANKInfoByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTSUBJECTInfoByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_SUBJECT QueryTSUBJECTInfoByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryTSUBJECTInfoByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_SUBJECT)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTSUBJECTInfoByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTSUBJECTInfoByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_SUBJECT EndQueryTSUBJECTInfoByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_SUBJECT)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTSUBJECTInfoByObjidAsync(string objid, string checkType) {
            this.QueryTSUBJECTInfoByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryTSUBJECTInfoByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryTSUBJECTInfoByObjidOperationCompleted == null)) {
                this.QueryTSUBJECTInfoByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTSUBJECTInfoByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryTSUBJECTInfoByObjid", new object[] {
                        objid,
                        checkType}, this.QueryTSUBJECTInfoByObjidOperationCompleted, userState);
        }
        
        private void OnQueryTSUBJECTInfoByObjidOperationCompleted(object arg) {
            if ((this.QueryTSUBJECTInfoByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTSUBJECTInfoByObjidCompleted(this, new QueryTSUBJECTInfoByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTPRODUCTInfoByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_PRODUCT QueryTPRODUCTInfoByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryTPRODUCTInfoByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_PRODUCT)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTPRODUCTInfoByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTPRODUCTInfoByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_PRODUCT EndQueryTPRODUCTInfoByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_PRODUCT)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTPRODUCTInfoByObjidAsync(string objid, string checkType) {
            this.QueryTPRODUCTInfoByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryTPRODUCTInfoByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryTPRODUCTInfoByObjidOperationCompleted == null)) {
                this.QueryTPRODUCTInfoByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTPRODUCTInfoByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryTPRODUCTInfoByObjid", new object[] {
                        objid,
                        checkType}, this.QueryTPRODUCTInfoByObjidOperationCompleted, userState);
        }
        
        private void OnQueryTPRODUCTInfoByObjidOperationCompleted(object arg) {
            if ((this.QueryTPRODUCTInfoByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTPRODUCTInfoByObjidCompleted(this, new QueryTPRODUCTInfoByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTBANKInfoByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANK_INFO QueryTBANKInfoByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryTBANKInfoByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_BANK_INFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTBANKInfoByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTBANKInfoByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANK_INFO EndQueryTBANKInfoByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANK_INFO)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTBANKInfoByObjidAsync(string objid, string checkType) {
            this.QueryTBANKInfoByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryTBANKInfoByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryTBANKInfoByObjidOperationCompleted == null)) {
                this.QueryTBANKInfoByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTBANKInfoByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryTBANKInfoByObjid", new object[] {
                        objid,
                        checkType}, this.QueryTBANKInfoByObjidOperationCompleted, userState);
        }
        
        private void OnQueryTBANKInfoByObjidOperationCompleted(object arg) {
            if ((this.QueryTBANKInfoByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTBANKInfoByObjidCompleted(this, new QueryTBANKInfoByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTBANKKEYSByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANK_KEYS QueryTBANKKEYSByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryTBANKKEYSByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_BANK_KEYS)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTBANKKEYSByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTBANKKEYSByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANK_KEYS EndQueryTBANKKEYSByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANK_KEYS)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTBANKKEYSByObjidAsync(string objid, string checkType) {
            this.QueryTBANKKEYSByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryTBANKKEYSByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryTBANKKEYSByObjidOperationCompleted == null)) {
                this.QueryTBANKKEYSByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTBANKKEYSByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryTBANKKEYSByObjid", new object[] {
                        objid,
                        checkType}, this.QueryTBANKKEYSByObjidOperationCompleted, userState);
        }
        
        private void OnQueryTBANKKEYSByObjidOperationCompleted(object arg) {
            if ((this.QueryTBANKKEYSByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTBANKKEYSByObjidCompleted(this, new QueryTBANKKEYSByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTBANKCLASSByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANK_CLASS QueryTBANKCLASSByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryTBANKCLASSByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_BANK_CLASS)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTBANKCLASSByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTBANKCLASSByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANK_CLASS EndQueryTBANKCLASSByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANK_CLASS)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTBANKCLASSByObjidAsync(string objid, string checkType) {
            this.QueryTBANKCLASSByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryTBANKCLASSByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryTBANKCLASSByObjidOperationCompleted == null)) {
                this.QueryTBANKCLASSByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTBANKCLASSByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryTBANKCLASSByObjid", new object[] {
                        objid,
                        checkType}, this.QueryTBANKCLASSByObjidOperationCompleted, userState);
        }
        
        private void OnQueryTBANKCLASSByObjidOperationCompleted(object arg) {
            if ((this.QueryTBANKCLASSByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTBANKCLASSByObjidCompleted(this, new QueryTBANKCLASSByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTbankcodeByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANK_CODE QueryTbankcodeByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryTbankcodeByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_BANK_CODE)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTbankcodeByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTbankcodeByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANK_CODE EndQueryTbankcodeByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANK_CODE)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTbankcodeByObjidAsync(string objid, string checkType) {
            this.QueryTbankcodeByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryTbankcodeByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryTbankcodeByObjidOperationCompleted == null)) {
                this.QueryTbankcodeByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTbankcodeByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryTbankcodeByObjid", new object[] {
                        objid,
                        checkType}, this.QueryTbankcodeByObjidOperationCompleted, userState);
        }
        
        private void OnQueryTbankcodeByObjidOperationCompleted(object arg) {
            if ((this.QueryTbankcodeByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTbankcodeByObjidCompleted(this, new QueryTbankcodeByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryFileModelInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryFileModelInfo(int istart, int imax) {
            object[] results = this.Invoke("QueryFileModelInfo", new object[] {
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryFileModelInfo(int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryFileModelInfo", new object[] {
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryFileModelInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryFileModelInfoAsync(int istart, int imax) {
            this.QueryFileModelInfoAsync(istart, imax, null);
        }
        
        /// <remarks/>
        public void QueryFileModelInfoAsync(int istart, int imax, object userState) {
            if ((this.QueryFileModelInfoOperationCompleted == null)) {
                this.QueryFileModelInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryFileModelInfoOperationCompleted);
            }
            this.InvokeAsync("QueryFileModelInfo", new object[] {
                        istart,
                        imax}, this.QueryFileModelInfoOperationCompleted, userState);
        }
        
        private void OnQueryFileModelInfoOperationCompleted(object arg) {
            if ((this.QueryFileModelInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryFileModelInfoCompleted(this, new QueryFileModelInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetAllFileModelName", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllFileModelName() {
            object[] results = this.Invoke("GetAllFileModelName", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllFileModelName(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllFileModelName", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAllFileModelName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllFileModelNameAsync() {
            this.GetAllFileModelNameAsync(null);
        }
        
        /// <remarks/>
        public void GetAllFileModelNameAsync(object userState) {
            if ((this.GetAllFileModelNameOperationCompleted == null)) {
                this.GetAllFileModelNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllFileModelNameOperationCompleted);
            }
            this.InvokeAsync("GetAllFileModelName", new object[0], this.GetAllFileModelNameOperationCompleted, userState);
        }
        
        private void OnGetAllFileModelNameOperationCompleted(object arg) {
            if ((this.GetAllFileModelNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllFileModelNameCompleted(this, new GetAllFileModelNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryTFile_Model_Relation_ByO" +
            "bjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_FILE_MODEL_RELATION QueryTFile_Model_Relation_ByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryTFile_Model_Relation_ByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_FILE_MODEL_RELATION)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryTFile_Model_Relation_ByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryTFile_Model_Relation_ByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_FILE_MODEL_RELATION EndQueryTFile_Model_Relation_ByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_FILE_MODEL_RELATION)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTFile_Model_Relation_ByObjidAsync(string objid, string checkType) {
            this.QueryTFile_Model_Relation_ByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryTFile_Model_Relation_ByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryTFile_Model_Relation_ByObjidOperationCompleted == null)) {
                this.QueryTFile_Model_Relation_ByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTFile_Model_Relation_ByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryTFile_Model_Relation_ByObjid", new object[] {
                        objid,
                        checkType}, this.QueryTFile_Model_Relation_ByObjidOperationCompleted, userState);
        }
        
        private void OnQueryTFile_Model_Relation_ByObjidOperationCompleted(object arg) {
            if ((this.QueryTFile_Model_Relation_ByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTFile_Model_Relation_ByObjidCompleted(this, new QueryTFile_Model_Relation_ByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchpayZCCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBatchpayZCCount(string bankType, string batchid, string useState, out string msg) {
            object[] results = this.Invoke("GetBatchpayZCCount", new object[] {
                        bankType,
                        batchid,
                        useState});
            msg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchpayZCCount(string bankType, string batchid, string useState, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchpayZCCount", new object[] {
                        bankType,
                        batchid,
                        useState}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetBatchpayZCCount(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchpayZCCountAsync(string bankType, string batchid, string useState) {
            this.GetBatchpayZCCountAsync(bankType, batchid, useState, null);
        }
        
        /// <remarks/>
        public void GetBatchpayZCCountAsync(string bankType, string batchid, string useState, object userState) {
            if ((this.GetBatchpayZCCountOperationCompleted == null)) {
                this.GetBatchpayZCCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchpayZCCountOperationCompleted);
            }
            this.InvokeAsync("GetBatchpayZCCount", new object[] {
                        bankType,
                        batchid,
                        useState}, this.GetBatchpayZCCountOperationCompleted, userState);
        }
        
        private void OnGetBatchpayZCCountOperationCompleted(object arg) {
            if ((this.GetBatchpayZCCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchpayZCCountCompleted(this, new GetBatchpayZCCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBatchpayZCInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBatchpayZCInfo(string bankType, string batchid, string useState, int istart, int imax, out string msg) {
            object[] results = this.Invoke("QueryBatchpayZCInfo", new object[] {
                        bankType,
                        batchid,
                        useState,
                        istart,
                        imax});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBatchpayZCInfo(string bankType, string batchid, string useState, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBatchpayZCInfo", new object[] {
                        bankType,
                        batchid,
                        useState,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryBatchpayZCInfo(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBatchpayZCInfoAsync(string bankType, string batchid, string useState, int istart, int imax) {
            this.QueryBatchpayZCInfoAsync(bankType, batchid, useState, istart, imax, null);
        }
        
        /// <remarks/>
        public void QueryBatchpayZCInfoAsync(string bankType, string batchid, string useState, int istart, int imax, object userState) {
            if ((this.QueryBatchpayZCInfoOperationCompleted == null)) {
                this.QueryBatchpayZCInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBatchpayZCInfoOperationCompleted);
            }
            this.InvokeAsync("QueryBatchpayZCInfo", new object[] {
                        bankType,
                        batchid,
                        useState,
                        istart,
                        imax}, this.QueryBatchpayZCInfoOperationCompleted, userState);
        }
        
        private void OnQueryBatchpayZCInfoOperationCompleted(object arg) {
            if ((this.QueryBatchpayZCInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBatchpayZCInfoCompleted(this, new QueryBatchpayZCInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchRefundCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBatchRefundCount(string batchid, string listId, string refundState) {
            object[] results = this.Invoke("GetBatchRefundCount", new object[] {
                        batchid,
                        listId,
                        refundState});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchRefundCount(string batchid, string listId, string refundState, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchRefundCount", new object[] {
                        batchid,
                        listId,
                        refundState}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetBatchRefundCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchRefundCountAsync(string batchid, string listId, string refundState) {
            this.GetBatchRefundCountAsync(batchid, listId, refundState, null);
        }
        
        /// <remarks/>
        public void GetBatchRefundCountAsync(string batchid, string listId, string refundState, object userState) {
            if ((this.GetBatchRefundCountOperationCompleted == null)) {
                this.GetBatchRefundCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchRefundCountOperationCompleted);
            }
            this.InvokeAsync("GetBatchRefundCount", new object[] {
                        batchid,
                        listId,
                        refundState}, this.GetBatchRefundCountOperationCompleted, userState);
        }
        
        private void OnGetBatchRefundCountOperationCompleted(object arg) {
            if ((this.GetBatchRefundCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchRefundCountCompleted(this, new GetBatchRefundCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchRefundList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBatchRefundList(string batchid, string listId, string refundState, int istart, int imax) {
            object[] results = this.Invoke("GetBatchRefundList", new object[] {
                        batchid,
                        listId,
                        refundState,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchRefundList(string batchid, string listId, string refundState, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchRefundList", new object[] {
                        batchid,
                        listId,
                        refundState,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBatchRefundList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchRefundListAsync(string batchid, string listId, string refundState, int istart, int imax) {
            this.GetBatchRefundListAsync(batchid, listId, refundState, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetBatchRefundListAsync(string batchid, string listId, string refundState, int istart, int imax, object userState) {
            if ((this.GetBatchRefundListOperationCompleted == null)) {
                this.GetBatchRefundListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchRefundListOperationCompleted);
            }
            this.InvokeAsync("GetBatchRefundList", new object[] {
                        batchid,
                        listId,
                        refundState,
                        istart,
                        imax}, this.GetBatchRefundListOperationCompleted, userState);
        }
        
        private void OnGetBatchRefundListOperationCompleted(object arg) {
            if ((this.GetBatchRefundListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchRefundListCompleted(this, new GetBatchRefundListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchRefundTotal", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBatchRefundTotal(string batchid, string listid) {
            object[] results = this.Invoke("GetBatchRefundTotal", new object[] {
                        batchid,
                        listid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchRefundTotal(string batchid, string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchRefundTotal", new object[] {
                        batchid,
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBatchRefundTotal(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchRefundTotalAsync(string batchid, string listid) {
            this.GetBatchRefundTotalAsync(batchid, listid, null);
        }
        
        /// <remarks/>
        public void GetBatchRefundTotalAsync(string batchid, string listid, object userState) {
            if ((this.GetBatchRefundTotalOperationCompleted == null)) {
                this.GetBatchRefundTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchRefundTotalOperationCompleted);
            }
            this.InvokeAsync("GetBatchRefundTotal", new object[] {
                        batchid,
                        listid}, this.GetBatchRefundTotalOperationCompleted, userState);
        }
        
        private void OnGetBatchRefundTotalOperationCompleted(object arg) {
            if ((this.GetBatchRefundTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchRefundTotalCompleted(this, new GetBatchRefundTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DownMediCertById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DownMediCertById(string autoid, out string msg) {
            object[] results = this.Invoke("DownMediCertById", new object[] {
                        autoid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDownMediCertById(string autoid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DownMediCertById", new object[] {
                        autoid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDownMediCertById(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DownMediCertByIdAsync(string autoid) {
            this.DownMediCertByIdAsync(autoid, null);
        }
        
        /// <remarks/>
        public void DownMediCertByIdAsync(string autoid, object userState) {
            if ((this.DownMediCertByIdOperationCompleted == null)) {
                this.DownMediCertByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownMediCertByIdOperationCompleted);
            }
            this.InvokeAsync("DownMediCertById", new object[] {
                        autoid}, this.DownMediCertByIdOperationCompleted, userState);
        }
        
        private void OnDownMediCertByIdOperationCompleted(object arg) {
            if ((this.DownMediCertByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownMediCertByIdCompleted(this, new DownMediCertByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/BatchSynPayState", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatchSynPayState(string transIds, int counts, out string msg) {
            object[] results = this.Invoke("BatchSynPayState", new object[] {
                        transIds,
                        counts});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatchSynPayState(string transIds, int counts, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatchSynPayState", new object[] {
                        transIds,
                        counts}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndBatchSynPayState(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BatchSynPayStateAsync(string transIds, int counts) {
            this.BatchSynPayStateAsync(transIds, counts, null);
        }
        
        /// <remarks/>
        public void BatchSynPayStateAsync(string transIds, int counts, object userState) {
            if ((this.BatchSynPayStateOperationCompleted == null)) {
                this.BatchSynPayStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchSynPayStateOperationCompleted);
            }
            this.InvokeAsync("BatchSynPayState", new object[] {
                        transIds,
                        counts}, this.BatchSynPayStateOperationCompleted, userState);
        }
        
        private void OnBatchSynPayStateOperationCompleted(object arg) {
            if ((this.BatchSynPayStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchSynPayStateCompleted(this, new BatchSynPayStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetHongBaoPubData", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHongBaoPubData(string fbatchid) {
            object[] results = this.Invoke("GetHongBaoPubData", new object[] {
                        fbatchid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHongBaoPubData(string fbatchid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHongBaoPubData", new object[] {
                        fbatchid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetHongBaoPubData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHongBaoPubDataAsync(string fbatchid) {
            this.GetHongBaoPubDataAsync(fbatchid, null);
        }
        
        /// <remarks/>
        public void GetHongBaoPubDataAsync(string fbatchid, object userState) {
            if ((this.GetHongBaoPubDataOperationCompleted == null)) {
                this.GetHongBaoPubDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHongBaoPubDataOperationCompleted);
            }
            this.InvokeAsync("GetHongBaoPubData", new object[] {
                        fbatchid}, this.GetHongBaoPubDataOperationCompleted, userState);
        }
        
        private void OnGetHongBaoPubDataOperationCompleted(object arg) {
            if ((this.GetHongBaoPubDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHongBaoPubDataCompleted(this, new GetHongBaoPubDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetHongBaoDetailData", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHongBaoDetailData(string fbatchid, string state, int istart, int imax) {
            object[] results = this.Invoke("GetHongBaoDetailData", new object[] {
                        fbatchid,
                        state,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHongBaoDetailData(string fbatchid, string state, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHongBaoDetailData", new object[] {
                        fbatchid,
                        state,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetHongBaoDetailData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHongBaoDetailDataAsync(string fbatchid, string state, int istart, int imax) {
            this.GetHongBaoDetailDataAsync(fbatchid, state, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetHongBaoDetailDataAsync(string fbatchid, string state, int istart, int imax, object userState) {
            if ((this.GetHongBaoDetailDataOperationCompleted == null)) {
                this.GetHongBaoDetailDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHongBaoDetailDataOperationCompleted);
            }
            this.InvokeAsync("GetHongBaoDetailData", new object[] {
                        fbatchid,
                        state,
                        istart,
                        imax}, this.GetHongBaoDetailDataOperationCompleted, userState);
        }
        
        private void OnGetHongBaoDetailDataOperationCompleted(object arg) {
            if ((this.GetHongBaoDetailDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHongBaoDetailDataCompleted(this, new GetHongBaoDetailDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetHongBaoData", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHongBaoData(string fbatchid, string fromtime, string totime, bool ischeck, int istart, int imax) {
            object[] results = this.Invoke("GetHongBaoData", new object[] {
                        fbatchid,
                        fromtime,
                        totime,
                        ischeck,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHongBaoData(string fbatchid, string fromtime, string totime, bool ischeck, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHongBaoData", new object[] {
                        fbatchid,
                        fromtime,
                        totime,
                        ischeck,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetHongBaoData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHongBaoDataAsync(string fbatchid, string fromtime, string totime, bool ischeck, int istart, int imax) {
            this.GetHongBaoDataAsync(fbatchid, fromtime, totime, ischeck, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetHongBaoDataAsync(string fbatchid, string fromtime, string totime, bool ischeck, int istart, int imax, object userState) {
            if ((this.GetHongBaoDataOperationCompleted == null)) {
                this.GetHongBaoDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHongBaoDataOperationCompleted);
            }
            this.InvokeAsync("GetHongBaoData", new object[] {
                        fbatchid,
                        fromtime,
                        totime,
                        ischeck,
                        istart,
                        imax}, this.GetHongBaoDataOperationCompleted, userState);
        }
        
        private void OnGetHongBaoDataOperationCompleted(object arg) {
            if ((this.GetHongBaoDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHongBaoDataCompleted(this, new GetHongBaoDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCreditAllInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCreditAllInfo(string cardid, string qqid, int start, int max) {
            object[] results = this.Invoke("QueryCreditAllInfo", new object[] {
                        cardid,
                        qqid,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCreditAllInfo(string cardid, string qqid, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCreditAllInfo", new object[] {
                        cardid,
                        qqid,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryCreditAllInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCreditAllInfoAsync(string cardid, string qqid, int start, int max) {
            this.QueryCreditAllInfoAsync(cardid, qqid, start, max, null);
        }
        
        /// <remarks/>
        public void QueryCreditAllInfoAsync(string cardid, string qqid, int start, int max, object userState) {
            if ((this.QueryCreditAllInfoOperationCompleted == null)) {
                this.QueryCreditAllInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCreditAllInfoOperationCompleted);
            }
            this.InvokeAsync("QueryCreditAllInfo", new object[] {
                        cardid,
                        qqid,
                        start,
                        max}, this.QueryCreditAllInfoOperationCompleted, userState);
        }
        
        private void OnQueryCreditAllInfoOperationCompleted(object arg) {
            if ((this.QueryCreditAllInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCreditAllInfoCompleted(this, new QueryCreditAllInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCreditAllInfo_count", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryCreditAllInfo_count(string cardid, string qqid) {
            object[] results = this.Invoke("QueryCreditAllInfo_count", new object[] {
                        cardid,
                        qqid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCreditAllInfo_count(string cardid, string qqid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCreditAllInfo_count", new object[] {
                        cardid,
                        qqid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndQueryCreditAllInfo_count(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCreditAllInfo_countAsync(string cardid, string qqid) {
            this.QueryCreditAllInfo_countAsync(cardid, qqid, null);
        }
        
        /// <remarks/>
        public void QueryCreditAllInfo_countAsync(string cardid, string qqid, object userState) {
            if ((this.QueryCreditAllInfo_countOperationCompleted == null)) {
                this.QueryCreditAllInfo_countOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCreditAllInfo_countOperationCompleted);
            }
            this.InvokeAsync("QueryCreditAllInfo_count", new object[] {
                        cardid,
                        qqid}, this.QueryCreditAllInfo_countOperationCompleted, userState);
        }
        
        private void OnQueryCreditAllInfo_countOperationCompleted(object arg) {
            if ((this.QueryCreditAllInfo_countCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCreditAllInfo_countCompleted(this, new QueryCreditAllInfo_countCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCreditSendList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCreditSendList(string cardid, string qqid, System.DateTime begindate, System.DateTime enddate, int start, int max) {
            object[] results = this.Invoke("QueryCreditSendList", new object[] {
                        cardid,
                        qqid,
                        begindate,
                        enddate,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCreditSendList(string cardid, string qqid, System.DateTime begindate, System.DateTime enddate, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCreditSendList", new object[] {
                        cardid,
                        qqid,
                        begindate,
                        enddate,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryCreditSendList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCreditSendListAsync(string cardid, string qqid, System.DateTime begindate, System.DateTime enddate, int start, int max) {
            this.QueryCreditSendListAsync(cardid, qqid, begindate, enddate, start, max, null);
        }
        
        /// <remarks/>
        public void QueryCreditSendListAsync(string cardid, string qqid, System.DateTime begindate, System.DateTime enddate, int start, int max, object userState) {
            if ((this.QueryCreditSendListOperationCompleted == null)) {
                this.QueryCreditSendListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCreditSendListOperationCompleted);
            }
            this.InvokeAsync("QueryCreditSendList", new object[] {
                        cardid,
                        qqid,
                        begindate,
                        enddate,
                        start,
                        max}, this.QueryCreditSendListOperationCompleted, userState);
        }
        
        private void OnQueryCreditSendListOperationCompleted(object arg) {
            if ((this.QueryCreditSendListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCreditSendListCompleted(this, new QueryCreditSendListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCreditSendList_count", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryCreditSendList_count(string cardid, string qqid, System.DateTime begindate, System.DateTime enddate) {
            object[] results = this.Invoke("QueryCreditSendList_count", new object[] {
                        cardid,
                        qqid,
                        begindate,
                        enddate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCreditSendList_count(string cardid, string qqid, System.DateTime begindate, System.DateTime enddate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCreditSendList_count", new object[] {
                        cardid,
                        qqid,
                        begindate,
                        enddate}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndQueryCreditSendList_count(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCreditSendList_countAsync(string cardid, string qqid, System.DateTime begindate, System.DateTime enddate) {
            this.QueryCreditSendList_countAsync(cardid, qqid, begindate, enddate, null);
        }
        
        /// <remarks/>
        public void QueryCreditSendList_countAsync(string cardid, string qqid, System.DateTime begindate, System.DateTime enddate, object userState) {
            if ((this.QueryCreditSendList_countOperationCompleted == null)) {
                this.QueryCreditSendList_countOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCreditSendList_countOperationCompleted);
            }
            this.InvokeAsync("QueryCreditSendList_count", new object[] {
                        cardid,
                        qqid,
                        begindate,
                        enddate}, this.QueryCreditSendList_countOperationCompleted, userState);
        }
        
        private void OnQueryCreditSendList_countOperationCompleted(object arg) {
            if ((this.QueryCreditSendList_countCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCreditSendList_countCompleted(this, new QueryCreditSendList_countCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPOSBankrollCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPOSBankrollCount(string PAN, string RETRIREFNUM, string TRACE, string ACCOUNT2, string TRANS_TYPE, string RECOVER_FLAG, string CANCEL_FLAG, string BankType, string date) {
            object[] results = this.Invoke("GetPOSBankrollCount", new object[] {
                        PAN,
                        RETRIREFNUM,
                        TRACE,
                        ACCOUNT2,
                        TRANS_TYPE,
                        RECOVER_FLAG,
                        CANCEL_FLAG,
                        BankType,
                        date});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPOSBankrollCount(string PAN, string RETRIREFNUM, string TRACE, string ACCOUNT2, string TRANS_TYPE, string RECOVER_FLAG, string CANCEL_FLAG, string BankType, string date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPOSBankrollCount", new object[] {
                        PAN,
                        RETRIREFNUM,
                        TRACE,
                        ACCOUNT2,
                        TRANS_TYPE,
                        RECOVER_FLAG,
                        CANCEL_FLAG,
                        BankType,
                        date}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetPOSBankrollCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPOSBankrollCountAsync(string PAN, string RETRIREFNUM, string TRACE, string ACCOUNT2, string TRANS_TYPE, string RECOVER_FLAG, string CANCEL_FLAG, string BankType, string date) {
            this.GetPOSBankrollCountAsync(PAN, RETRIREFNUM, TRACE, ACCOUNT2, TRANS_TYPE, RECOVER_FLAG, CANCEL_FLAG, BankType, date, null);
        }
        
        /// <remarks/>
        public void GetPOSBankrollCountAsync(string PAN, string RETRIREFNUM, string TRACE, string ACCOUNT2, string TRANS_TYPE, string RECOVER_FLAG, string CANCEL_FLAG, string BankType, string date, object userState) {
            if ((this.GetPOSBankrollCountOperationCompleted == null)) {
                this.GetPOSBankrollCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPOSBankrollCountOperationCompleted);
            }
            this.InvokeAsync("GetPOSBankrollCount", new object[] {
                        PAN,
                        RETRIREFNUM,
                        TRACE,
                        ACCOUNT2,
                        TRANS_TYPE,
                        RECOVER_FLAG,
                        CANCEL_FLAG,
                        BankType,
                        date}, this.GetPOSBankrollCountOperationCompleted, userState);
        }
        
        private void OnGetPOSBankrollCountOperationCompleted(object arg) {
            if ((this.GetPOSBankrollCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPOSBankrollCountCompleted(this, new GetPOSBankrollCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPOSBankrollList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPOSBankrollList(string PAN, string RETRIREFNUM, string TRACE, string ACCOUNT2, string TRANS_TYPE, string RECOVER_FLAG, string CANCEL_FLAG, string BankType, string date, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetPOSBankrollList", new object[] {
                        PAN,
                        RETRIREFNUM,
                        TRACE,
                        ACCOUNT2,
                        TRANS_TYPE,
                        RECOVER_FLAG,
                        CANCEL_FLAG,
                        BankType,
                        date,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPOSBankrollList(string PAN, string RETRIREFNUM, string TRACE, string ACCOUNT2, string TRANS_TYPE, string RECOVER_FLAG, string CANCEL_FLAG, string BankType, string date, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPOSBankrollList", new object[] {
                        PAN,
                        RETRIREFNUM,
                        TRACE,
                        ACCOUNT2,
                        TRANS_TYPE,
                        RECOVER_FLAG,
                        CANCEL_FLAG,
                        BankType,
                        date,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPOSBankrollList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPOSBankrollListAsync(string PAN, string RETRIREFNUM, string TRACE, string ACCOUNT2, string TRANS_TYPE, string RECOVER_FLAG, string CANCEL_FLAG, string BankType, string date, int iPageStart, int iPageMax) {
            this.GetPOSBankrollListAsync(PAN, RETRIREFNUM, TRACE, ACCOUNT2, TRANS_TYPE, RECOVER_FLAG, CANCEL_FLAG, BankType, date, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetPOSBankrollListAsync(string PAN, string RETRIREFNUM, string TRACE, string ACCOUNT2, string TRANS_TYPE, string RECOVER_FLAG, string CANCEL_FLAG, string BankType, string date, int iPageStart, int iPageMax, object userState) {
            if ((this.GetPOSBankrollListOperationCompleted == null)) {
                this.GetPOSBankrollListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPOSBankrollListOperationCompleted);
            }
            this.InvokeAsync("GetPOSBankrollList", new object[] {
                        PAN,
                        RETRIREFNUM,
                        TRACE,
                        ACCOUNT2,
                        TRANS_TYPE,
                        RECOVER_FLAG,
                        CANCEL_FLAG,
                        BankType,
                        date,
                        iPageStart,
                        iPageMax}, this.GetPOSBankrollListOperationCompleted, userState);
        }
        
        private void OnGetPOSBankrollListOperationCompleted(object arg) {
            if ((this.GetPOSBankrollListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPOSBankrollListCompleted(this, new GetPOSBankrollListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchPOSBankrollInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBatchPOSBankrollInfo(string TRANS_TYPE, string BankType, string date) {
            object[] results = this.Invoke("GetBatchPOSBankrollInfo", new object[] {
                        TRANS_TYPE,
                        BankType,
                        date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchPOSBankrollInfo(string TRANS_TYPE, string BankType, string date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchPOSBankrollInfo", new object[] {
                        TRANS_TYPE,
                        BankType,
                        date}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBatchPOSBankrollInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchPOSBankrollInfoAsync(string TRANS_TYPE, string BankType, string date) {
            this.GetBatchPOSBankrollInfoAsync(TRANS_TYPE, BankType, date, null);
        }
        
        /// <remarks/>
        public void GetBatchPOSBankrollInfoAsync(string TRANS_TYPE, string BankType, string date, object userState) {
            if ((this.GetBatchPOSBankrollInfoOperationCompleted == null)) {
                this.GetBatchPOSBankrollInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchPOSBankrollInfoOperationCompleted);
            }
            this.InvokeAsync("GetBatchPOSBankrollInfo", new object[] {
                        TRANS_TYPE,
                        BankType,
                        date}, this.GetBatchPOSBankrollInfoOperationCompleted, userState);
        }
        
        private void OnGetBatchPOSBankrollInfoOperationCompleted(object arg) {
            if ((this.GetBatchPOSBankrollInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchPOSBankrollInfoCompleted(this, new GetBatchPOSBankrollInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPOSCheckResultCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPOSCheckResultCount(string date, string date2, string bank, string state, string errtype) {
            object[] results = this.Invoke("GetPOSCheckResultCount", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        errtype});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPOSCheckResultCount(string date, string date2, string bank, string state, string errtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPOSCheckResultCount", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        errtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetPOSCheckResultCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPOSCheckResultCountAsync(string date, string date2, string bank, string state, string errtype) {
            this.GetPOSCheckResultCountAsync(date, date2, bank, state, errtype, null);
        }
        
        /// <remarks/>
        public void GetPOSCheckResultCountAsync(string date, string date2, string bank, string state, string errtype, object userState) {
            if ((this.GetPOSCheckResultCountOperationCompleted == null)) {
                this.GetPOSCheckResultCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPOSCheckResultCountOperationCompleted);
            }
            this.InvokeAsync("GetPOSCheckResultCount", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        errtype}, this.GetPOSCheckResultCountOperationCompleted, userState);
        }
        
        private void OnGetPOSCheckResultCountOperationCompleted(object arg) {
            if ((this.GetPOSCheckResultCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPOSCheckResultCountCompleted(this, new GetPOSCheckResultCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPOSCheckResultList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPOSCheckResultList(string date, string date2, string bank, string state, string errtype, int istart, int imax) {
            object[] results = this.Invoke("GetPOSCheckResultList", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        errtype,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPOSCheckResultList(string date, string date2, string bank, string state, string errtype, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPOSCheckResultList", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        errtype,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPOSCheckResultList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPOSCheckResultListAsync(string date, string date2, string bank, string state, string errtype, int istart, int imax) {
            this.GetPOSCheckResultListAsync(date, date2, bank, state, errtype, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetPOSCheckResultListAsync(string date, string date2, string bank, string state, string errtype, int istart, int imax, object userState) {
            if ((this.GetPOSCheckResultListOperationCompleted == null)) {
                this.GetPOSCheckResultListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPOSCheckResultListOperationCompleted);
            }
            this.InvokeAsync("GetPOSCheckResultList", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        errtype,
                        istart,
                        imax}, this.GetPOSCheckResultListOperationCompleted, userState);
        }
        
        private void OnGetPOSCheckResultListOperationCompleted(object arg) {
            if ((this.GetPOSCheckResultListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPOSCheckResultListCompleted(this, new GetPOSCheckResultListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPOSCheckResultList2", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPOSCheckResultList2(string doBatchid, int istart, int imax) {
            object[] results = this.Invoke("GetPOSCheckResultList2", new object[] {
                        doBatchid,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPOSCheckResultList2(string doBatchid, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPOSCheckResultList2", new object[] {
                        doBatchid,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPOSCheckResultList2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPOSCheckResultList2Async(string doBatchid, int istart, int imax) {
            this.GetPOSCheckResultList2Async(doBatchid, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetPOSCheckResultList2Async(string doBatchid, int istart, int imax, object userState) {
            if ((this.GetPOSCheckResultList2OperationCompleted == null)) {
                this.GetPOSCheckResultList2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPOSCheckResultList2OperationCompleted);
            }
            this.InvokeAsync("GetPOSCheckResultList2", new object[] {
                        doBatchid,
                        istart,
                        imax}, this.GetPOSCheckResultList2OperationCompleted, userState);
        }
        
        private void OnGetPOSCheckResultList2OperationCompleted(object arg) {
            if ((this.GetPOSCheckResultList2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPOSCheckResultList2Completed(this, new GetPOSCheckResultList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SetPOSResultDoing", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetPOSResultDoing(string ids, string batchid, int count, out string msg) {
            object[] results = this.Invoke("SetPOSResultDoing", new object[] {
                        ids,
                        batchid,
                        count});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetPOSResultDoing(string ids, string batchid, int count, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetPOSResultDoing", new object[] {
                        ids,
                        batchid,
                        count}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSetPOSResultDoing(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetPOSResultDoingAsync(string ids, string batchid, int count) {
            this.SetPOSResultDoingAsync(ids, batchid, count, null);
        }
        
        /// <remarks/>
        public void SetPOSResultDoingAsync(string ids, string batchid, int count, object userState) {
            if ((this.SetPOSResultDoingOperationCompleted == null)) {
                this.SetPOSResultDoingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPOSResultDoingOperationCompleted);
            }
            this.InvokeAsync("SetPOSResultDoing", new object[] {
                        ids,
                        batchid,
                        count}, this.SetPOSResultDoingOperationCompleted, userState);
        }
        
        private void OnSetPOSResultDoingOperationCompleted(object arg) {
            if ((this.SetPOSResultDoingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPOSResultDoingCompleted(this, new SetPOSResultDoingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPOSResultTotal", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetPOSResultTotal(string ids, out double totalAmt, out int count, out string msg) {
            object[] results = this.Invoke("GetPOSResultTotal", new object[] {
                        ids});
            totalAmt = ((double)(results[1]));
            count = ((int)(results[2]));
            msg = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPOSResultTotal(string ids, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPOSResultTotal", new object[] {
                        ids}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetPOSResultTotal(System.IAsyncResult asyncResult, out double totalAmt, out int count, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            totalAmt = ((double)(results[1]));
            count = ((int)(results[2]));
            msg = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetPOSResultTotalAsync(string ids) {
            this.GetPOSResultTotalAsync(ids, null);
        }
        
        /// <remarks/>
        public void GetPOSResultTotalAsync(string ids, object userState) {
            if ((this.GetPOSResultTotalOperationCompleted == null)) {
                this.GetPOSResultTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPOSResultTotalOperationCompleted);
            }
            this.InvokeAsync("GetPOSResultTotal", new object[] {
                        ids}, this.GetPOSResultTotalOperationCompleted, userState);
        }
        
        private void OnGetPOSResultTotalOperationCompleted(object arg) {
            if ((this.GetPOSResultTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPOSResultTotalCompleted(this, new GetPOSResultTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetSysBankBulletin", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSysBankBulletin(string banktype, out string msg) {
            object[] results = this.Invoke("GetSysBankBulletin", new object[] {
                        banktype});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSysBankBulletin(string banktype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSysBankBulletin", new object[] {
                        banktype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSysBankBulletin(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSysBankBulletinAsync(string banktype) {
            this.GetSysBankBulletinAsync(banktype, null);
        }
        
        /// <remarks/>
        public void GetSysBankBulletinAsync(string banktype, object userState) {
            if ((this.GetSysBankBulletinOperationCompleted == null)) {
                this.GetSysBankBulletinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSysBankBulletinOperationCompleted);
            }
            this.InvokeAsync("GetSysBankBulletin", new object[] {
                        banktype}, this.GetSysBankBulletinOperationCompleted, userState);
        }
        
        private void OnGetSysBankBulletinOperationCompleted(object arg) {
            if ((this.GetSysBankBulletinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSysBankBulletinCompleted(this, new GetSysBankBulletinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankBulletinById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANKBULLETIN_INFO QueryBankBulletinById(string fid, out string msg) {
            object[] results = this.Invoke("QueryBankBulletinById", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((T_BANKBULLETIN_INFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankBulletinById(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankBulletinById", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_INFO EndQueryBankBulletinById(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANKBULLETIN_INFO)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankBulletinByIdAsync(string fid) {
            this.QueryBankBulletinByIdAsync(fid, null);
        }
        
        /// <remarks/>
        public void QueryBankBulletinByIdAsync(string fid, object userState) {
            if ((this.QueryBankBulletinByIdOperationCompleted == null)) {
                this.QueryBankBulletinByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankBulletinByIdOperationCompleted);
            }
            this.InvokeAsync("QueryBankBulletinById", new object[] {
                        fid}, this.QueryBankBulletinByIdOperationCompleted, userState);
        }
        
        private void OnQueryBankBulletinByIdOperationCompleted(object arg) {
            if ((this.QueryBankBulletinByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankBulletinByIdCompleted(this, new QueryBankBulletinByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankBulletinInfoByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_BANKBULLETIN_INFO QueryBankBulletinInfoByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryBankBulletinInfoByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_BANKBULLETIN_INFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankBulletinInfoByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankBulletinInfoByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_INFO EndQueryBankBulletinInfoByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_BANKBULLETIN_INFO)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankBulletinInfoByObjidAsync(string objid, string checkType) {
            this.QueryBankBulletinInfoByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryBankBulletinInfoByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryBankBulletinInfoByObjidOperationCompleted == null)) {
                this.QueryBankBulletinInfoByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankBulletinInfoByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryBankBulletinInfoByObjid", new object[] {
                        objid,
                        checkType}, this.QueryBankBulletinInfoByObjidOperationCompleted, userState);
        }
        
        private void OnQueryBankBulletinInfoByObjidOperationCompleted(object arg) {
            if ((this.QueryBankBulletinInfoByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankBulletinInfoByObjidCompleted(this, new QueryBankBulletinInfoByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBankByType", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankByType(string typename, string flag) {
            object[] results = this.Invoke("GetBankByType", new object[] {
                        typename,
                        flag});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankByType(string typename, string flag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankByType", new object[] {
                        typename,
                        flag}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankByType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankByTypeAsync(string typename, string flag) {
            this.GetBankByTypeAsync(typename, flag, null);
        }
        
        /// <remarks/>
        public void GetBankByTypeAsync(string typename, string flag, object userState) {
            if ((this.GetBankByTypeOperationCompleted == null)) {
                this.GetBankByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankByTypeOperationCompleted);
            }
            this.InvokeAsync("GetBankByType", new object[] {
                        typename,
                        flag}, this.GetBankByTypeOperationCompleted, userState);
        }
        
        private void OnGetBankByTypeOperationCompleted(object arg) {
            if ((this.GetBankByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankByTypeCompleted(this, new GetBankByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/FuncUserList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FuncUserList(string user, string bankType, string funcType, int start, int max) {
            object[] results = this.Invoke("FuncUserList", new object[] {
                        user,
                        bankType,
                        funcType,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFuncUserList(string user, string bankType, string funcType, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FuncUserList", new object[] {
                        user,
                        bankType,
                        funcType,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndFuncUserList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FuncUserListAsync(string user, string bankType, string funcType, int start, int max) {
            this.FuncUserListAsync(user, bankType, funcType, start, max, null);
        }
        
        /// <remarks/>
        public void FuncUserListAsync(string user, string bankType, string funcType, int start, int max, object userState) {
            if ((this.FuncUserListOperationCompleted == null)) {
                this.FuncUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFuncUserListOperationCompleted);
            }
            this.InvokeAsync("FuncUserList", new object[] {
                        user,
                        bankType,
                        funcType,
                        start,
                        max}, this.FuncUserListOperationCompleted, userState);
        }
        
        private void OnFuncUserListOperationCompleted(object arg) {
            if ((this.FuncUserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FuncUserListCompleted(this, new FuncUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/FuncUserListCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FuncUserListCount(string user, string bankType, string funcType) {
            object[] results = this.Invoke("FuncUserListCount", new object[] {
                        user,
                        bankType,
                        funcType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFuncUserListCount(string user, string bankType, string funcType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FuncUserListCount", new object[] {
                        user,
                        bankType,
                        funcType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndFuncUserListCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FuncUserListCountAsync(string user, string bankType, string funcType) {
            this.FuncUserListCountAsync(user, bankType, funcType, null);
        }
        
        /// <remarks/>
        public void FuncUserListCountAsync(string user, string bankType, string funcType, object userState) {
            if ((this.FuncUserListCountOperationCompleted == null)) {
                this.FuncUserListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFuncUserListCountOperationCompleted);
            }
            this.InvokeAsync("FuncUserListCount", new object[] {
                        user,
                        bankType,
                        funcType}, this.FuncUserListCountOperationCompleted, userState);
        }
        
        private void OnFuncUserListCountOperationCompleted(object arg) {
            if ((this.FuncUserListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FuncUserListCountCompleted(this, new FuncUserListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/FileModelISExist", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FileModelISExist(string filename) {
            object[] results = this.Invoke("FileModelISExist", new object[] {
                        filename});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFileModelISExist(string filename, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FileModelISExist", new object[] {
                        filename}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndFileModelISExist(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FileModelISExistAsync(string filename) {
            this.FileModelISExistAsync(filename, null);
        }
        
        /// <remarks/>
        public void FileModelISExistAsync(string filename, object userState) {
            if ((this.FileModelISExistOperationCompleted == null)) {
                this.FileModelISExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileModelISExistOperationCompleted);
            }
            this.InvokeAsync("FileModelISExist", new object[] {
                        filename}, this.FileModelISExistOperationCompleted, userState);
        }
        
        private void OnFileModelISExistOperationCompleted(object arg) {
            if ((this.FileModelISExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileModelISExistCompleted(this, new FileModelISExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/InsertFileModel", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertFileModel(string modelname, string filename, string md5, string memo) {
            object[] results = this.Invoke("InsertFileModel", new object[] {
                        modelname,
                        filename,
                        md5,
                        memo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertFileModel(string modelname, string filename, string md5, string memo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertFileModel", new object[] {
                        modelname,
                        filename,
                        md5,
                        memo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndInsertFileModel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertFileModelAsync(string modelname, string filename, string md5, string memo) {
            this.InsertFileModelAsync(modelname, filename, md5, memo, null);
        }
        
        /// <remarks/>
        public void InsertFileModelAsync(string modelname, string filename, string md5, string memo, object userState) {
            if ((this.InsertFileModelOperationCompleted == null)) {
                this.InsertFileModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFileModelOperationCompleted);
            }
            this.InvokeAsync("InsertFileModel", new object[] {
                        modelname,
                        filename,
                        md5,
                        memo}, this.InsertFileModelOperationCompleted, userState);
        }
        
        private void OnInsertFileModelOperationCompleted(object arg) {
            if ((this.InsertFileModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFileModelCompleted(this, new InsertFileModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/DeleteFileModel", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFileModel(string modelid) {
            object[] results = this.Invoke("DeleteFileModel", new object[] {
                        modelid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFileModel(string modelid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFileModel", new object[] {
                        modelid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDeleteFileModel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileModelAsync(string modelid) {
            this.DeleteFileModelAsync(modelid, null);
        }
        
        /// <remarks/>
        public void DeleteFileModelAsync(string modelid, object userState) {
            if ((this.DeleteFileModelOperationCompleted == null)) {
                this.DeleteFileModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileModelOperationCompleted);
            }
            this.InvokeAsync("DeleteFileModel", new object[] {
                        modelid}, this.DeleteFileModelOperationCompleted, userState);
        }
        
        private void OnDeleteFileModelOperationCompleted(object arg) {
            if ((this.DeleteFileModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileModelCompleted(this, new DeleteFileModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/IsQuickPayBankType", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsQuickPayBankType(string banktype, out string payInfo) {
            object[] results = this.Invoke("IsQuickPayBankType", new object[] {
                        banktype});
            payInfo = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsQuickPayBankType(string banktype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsQuickPayBankType", new object[] {
                        banktype}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsQuickPayBankType(System.IAsyncResult asyncResult, out string payInfo) {
            object[] results = this.EndInvoke(asyncResult);
            payInfo = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsQuickPayBankTypeAsync(string banktype) {
            this.IsQuickPayBankTypeAsync(banktype, null);
        }
        
        /// <remarks/>
        public void IsQuickPayBankTypeAsync(string banktype, object userState) {
            if ((this.IsQuickPayBankTypeOperationCompleted == null)) {
                this.IsQuickPayBankTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsQuickPayBankTypeOperationCompleted);
            }
            this.InvokeAsync("IsQuickPayBankType", new object[] {
                        banktype}, this.IsQuickPayBankTypeOperationCompleted, userState);
        }
        
        private void OnIsQuickPayBankTypeOperationCompleted(object arg) {
            if ((this.IsQuickPayBankTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsQuickPayBankTypeCompleted(this, new IsQuickPayBankTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundWaterList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundWaterList(string state, string detailNo, string batchid, string accName, string accNo, string saveListid, string notifyState, string checkState, int start, int max) {
            object[] results = this.Invoke("GetFundWaterList", new object[] {
                        state,
                        detailNo,
                        batchid,
                        accName,
                        accNo,
                        saveListid,
                        notifyState,
                        checkState,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundWaterList(string state, string detailNo, string batchid, string accName, string accNo, string saveListid, string notifyState, string checkState, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundWaterList", new object[] {
                        state,
                        detailNo,
                        batchid,
                        accName,
                        accNo,
                        saveListid,
                        notifyState,
                        checkState,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundWaterList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundWaterListAsync(string state, string detailNo, string batchid, string accName, string accNo, string saveListid, string notifyState, string checkState, int start, int max) {
            this.GetFundWaterListAsync(state, detailNo, batchid, accName, accNo, saveListid, notifyState, checkState, start, max, null);
        }
        
        /// <remarks/>
        public void GetFundWaterListAsync(string state, string detailNo, string batchid, string accName, string accNo, string saveListid, string notifyState, string checkState, int start, int max, object userState) {
            if ((this.GetFundWaterListOperationCompleted == null)) {
                this.GetFundWaterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundWaterListOperationCompleted);
            }
            this.InvokeAsync("GetFundWaterList", new object[] {
                        state,
                        detailNo,
                        batchid,
                        accName,
                        accNo,
                        saveListid,
                        notifyState,
                        checkState,
                        start,
                        max}, this.GetFundWaterListOperationCompleted, userState);
        }
        
        private void OnGetFundWaterListOperationCompleted(object arg) {
            if ((this.GetFundWaterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundWaterListCompleted(this, new GetFundWaterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundWaterCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFundWaterCount(string state, string detailNo, string batchid, string accName, string accNo, string saveListid, string notifyState, string checkState) {
            object[] results = this.Invoke("GetFundWaterCount", new object[] {
                        state,
                        detailNo,
                        batchid,
                        accName,
                        accNo,
                        saveListid,
                        notifyState,
                        checkState});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundWaterCount(string state, string detailNo, string batchid, string accName, string accNo, string saveListid, string notifyState, string checkState, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundWaterCount", new object[] {
                        state,
                        detailNo,
                        batchid,
                        accName,
                        accNo,
                        saveListid,
                        notifyState,
                        checkState}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetFundWaterCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundWaterCountAsync(string state, string detailNo, string batchid, string accName, string accNo, string saveListid, string notifyState, string checkState) {
            this.GetFundWaterCountAsync(state, detailNo, batchid, accName, accNo, saveListid, notifyState, checkState, null);
        }
        
        /// <remarks/>
        public void GetFundWaterCountAsync(string state, string detailNo, string batchid, string accName, string accNo, string saveListid, string notifyState, string checkState, object userState) {
            if ((this.GetFundWaterCountOperationCompleted == null)) {
                this.GetFundWaterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundWaterCountOperationCompleted);
            }
            this.InvokeAsync("GetFundWaterCount", new object[] {
                        state,
                        detailNo,
                        batchid,
                        accName,
                        accNo,
                        saveListid,
                        notifyState,
                        checkState}, this.GetFundWaterCountOperationCompleted, userState);
        }
        
        private void OnGetFundWaterCountOperationCompleted(object arg) {
            if ((this.GetFundWaterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundWaterCountCompleted(this, new GetFundWaterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundWaterErrorCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFundWaterErrorCount(string date, string date2, string bank, string state, string errId, string doBatchid) {
            object[] results = this.Invoke("GetFundWaterErrorCount", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        errId,
                        doBatchid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundWaterErrorCount(string date, string date2, string bank, string state, string errId, string doBatchid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundWaterErrorCount", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        errId,
                        doBatchid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetFundWaterErrorCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundWaterErrorCountAsync(string date, string date2, string bank, string state, string errId, string doBatchid) {
            this.GetFundWaterErrorCountAsync(date, date2, bank, state, errId, doBatchid, null);
        }
        
        /// <remarks/>
        public void GetFundWaterErrorCountAsync(string date, string date2, string bank, string state, string errId, string doBatchid, object userState) {
            if ((this.GetFundWaterErrorCountOperationCompleted == null)) {
                this.GetFundWaterErrorCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundWaterErrorCountOperationCompleted);
            }
            this.InvokeAsync("GetFundWaterErrorCount", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        errId,
                        doBatchid}, this.GetFundWaterErrorCountOperationCompleted, userState);
        }
        
        private void OnGetFundWaterErrorCountOperationCompleted(object arg) {
            if ((this.GetFundWaterErrorCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundWaterErrorCountCompleted(this, new GetFundWaterErrorCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundWaterErrorList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFundWaterErrorList(string date, string date2, string bank, string state, string errId, string doBatchid, int start, int max) {
            object[] results = this.Invoke("GetFundWaterErrorList", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        errId,
                        doBatchid,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundWaterErrorList(string date, string date2, string bank, string state, string errId, string doBatchid, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundWaterErrorList", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        errId,
                        doBatchid,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFundWaterErrorList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundWaterErrorListAsync(string date, string date2, string bank, string state, string errId, string doBatchid, int start, int max) {
            this.GetFundWaterErrorListAsync(date, date2, bank, state, errId, doBatchid, start, max, null);
        }
        
        /// <remarks/>
        public void GetFundWaterErrorListAsync(string date, string date2, string bank, string state, string errId, string doBatchid, int start, int max, object userState) {
            if ((this.GetFundWaterErrorListOperationCompleted == null)) {
                this.GetFundWaterErrorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundWaterErrorListOperationCompleted);
            }
            this.InvokeAsync("GetFundWaterErrorList", new object[] {
                        date,
                        date2,
                        bank,
                        state,
                        errId,
                        doBatchid,
                        start,
                        max}, this.GetFundWaterErrorListOperationCompleted, userState);
        }
        
        private void OnGetFundWaterErrorListOperationCompleted(object arg) {
            if ((this.GetFundWaterErrorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundWaterErrorListCompleted(this, new GetFundWaterErrorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetFundWaterErrorTotal", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetFundWaterErrorTotal(string ids, out double totalAmt, out int count, out string msg) {
            object[] results = this.Invoke("GetFundWaterErrorTotal", new object[] {
                        ids});
            totalAmt = ((double)(results[1]));
            count = ((int)(results[2]));
            msg = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundWaterErrorTotal(string ids, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundWaterErrorTotal", new object[] {
                        ids}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetFundWaterErrorTotal(System.IAsyncResult asyncResult, out double totalAmt, out int count, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            totalAmt = ((double)(results[1]));
            count = ((int)(results[2]));
            msg = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundWaterErrorTotalAsync(string ids) {
            this.GetFundWaterErrorTotalAsync(ids, null);
        }
        
        /// <remarks/>
        public void GetFundWaterErrorTotalAsync(string ids, object userState) {
            if ((this.GetFundWaterErrorTotalOperationCompleted == null)) {
                this.GetFundWaterErrorTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundWaterErrorTotalOperationCompleted);
            }
            this.InvokeAsync("GetFundWaterErrorTotal", new object[] {
                        ids}, this.GetFundWaterErrorTotalOperationCompleted, userState);
        }
        
        private void OnGetFundWaterErrorTotalOperationCompleted(object arg) {
            if ((this.GetFundWaterErrorTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundWaterErrorTotalCompleted(this, new GetFundWaterErrorTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/SetFundWaterErrorDoing", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetFundWaterErrorDoing(string ids, string batchid, int count, out string msg) {
            object[] results = this.Invoke("SetFundWaterErrorDoing", new object[] {
                        ids,
                        batchid,
                        count});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetFundWaterErrorDoing(string ids, string batchid, int count, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetFundWaterErrorDoing", new object[] {
                        ids,
                        batchid,
                        count}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSetFundWaterErrorDoing(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetFundWaterErrorDoingAsync(string ids, string batchid, int count) {
            this.SetFundWaterErrorDoingAsync(ids, batchid, count, null);
        }
        
        /// <remarks/>
        public void SetFundWaterErrorDoingAsync(string ids, string batchid, int count, object userState) {
            if ((this.SetFundWaterErrorDoingOperationCompleted == null)) {
                this.SetFundWaterErrorDoingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFundWaterErrorDoingOperationCompleted);
            }
            this.InvokeAsync("SetFundWaterErrorDoing", new object[] {
                        ids,
                        batchid,
                        count}, this.SetFundWaterErrorDoingOperationCompleted, userState);
        }
        
        private void OnSetFundWaterErrorDoingOperationCompleted(object arg) {
            if ((this.SetFundWaterErrorDoingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetFundWaterErrorDoingCompleted(this, new SetFundWaterErrorDoingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/FundWaterRefundCheck", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FundWaterRefundCheck(string ids, int totalCount, out string msg) {
            object[] results = this.Invoke("FundWaterRefundCheck", new object[] {
                        ids,
                        totalCount});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFundWaterRefundCheck(string ids, int totalCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FundWaterRefundCheck", new object[] {
                        ids,
                        totalCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndFundWaterRefundCheck(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FundWaterRefundCheckAsync(string ids, int totalCount) {
            this.FundWaterRefundCheckAsync(ids, totalCount, null);
        }
        
        /// <remarks/>
        public void FundWaterRefundCheckAsync(string ids, int totalCount, object userState) {
            if ((this.FundWaterRefundCheckOperationCompleted == null)) {
                this.FundWaterRefundCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFundWaterRefundCheckOperationCompleted);
            }
            this.InvokeAsync("FundWaterRefundCheck", new object[] {
                        ids,
                        totalCount}, this.FundWaterRefundCheckOperationCompleted, userState);
        }
        
        private void OnFundWaterRefundCheckOperationCompleted(object arg) {
            if ((this.FundWaterRefundCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FundWaterRefundCheckCompleted(this, new FundWaterRefundCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDirectSpmRefundList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDirectSpmRefundList(string spid, string listid, string draw_id, string checkType, string status, string beginDate, string endDate, string bankType, string handleBatchid, int iPageStart, int iPageMax) {
            object[] results = this.Invoke("GetDirectSpmRefundList", new object[] {
                        spid,
                        listid,
                        draw_id,
                        checkType,
                        status,
                        beginDate,
                        endDate,
                        bankType,
                        handleBatchid,
                        iPageStart,
                        iPageMax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirectSpmRefundList(string spid, string listid, string draw_id, string checkType, string status, string beginDate, string endDate, string bankType, string handleBatchid, int iPageStart, int iPageMax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirectSpmRefundList", new object[] {
                        spid,
                        listid,
                        draw_id,
                        checkType,
                        status,
                        beginDate,
                        endDate,
                        bankType,
                        handleBatchid,
                        iPageStart,
                        iPageMax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDirectSpmRefundList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectSpmRefundListAsync(string spid, string listid, string draw_id, string checkType, string status, string beginDate, string endDate, string bankType, string handleBatchid, int iPageStart, int iPageMax) {
            this.GetDirectSpmRefundListAsync(spid, listid, draw_id, checkType, status, beginDate, endDate, bankType, handleBatchid, iPageStart, iPageMax, null);
        }
        
        /// <remarks/>
        public void GetDirectSpmRefundListAsync(string spid, string listid, string draw_id, string checkType, string status, string beginDate, string endDate, string bankType, string handleBatchid, int iPageStart, int iPageMax, object userState) {
            if ((this.GetDirectSpmRefundListOperationCompleted == null)) {
                this.GetDirectSpmRefundListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectSpmRefundListOperationCompleted);
            }
            this.InvokeAsync("GetDirectSpmRefundList", new object[] {
                        spid,
                        listid,
                        draw_id,
                        checkType,
                        status,
                        beginDate,
                        endDate,
                        bankType,
                        handleBatchid,
                        iPageStart,
                        iPageMax}, this.GetDirectSpmRefundListOperationCompleted, userState);
        }
        
        private void OnGetDirectSpmRefundListOperationCompleted(object arg) {
            if ((this.GetDirectSpmRefundListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectSpmRefundListCompleted(this, new GetDirectSpmRefundListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetDirectSpmRefundCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDirectSpmRefundCount(string spid, string listid, string draw_id, string checkType, string status, string beginDate, string endDate, string bankType, string handleBatchid) {
            object[] results = this.Invoke("GetDirectSpmRefundCount", new object[] {
                        spid,
                        listid,
                        draw_id,
                        checkType,
                        status,
                        beginDate,
                        endDate,
                        bankType,
                        handleBatchid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirectSpmRefundCount(string spid, string listid, string draw_id, string checkType, string status, string beginDate, string endDate, string bankType, string handleBatchid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirectSpmRefundCount", new object[] {
                        spid,
                        listid,
                        draw_id,
                        checkType,
                        status,
                        beginDate,
                        endDate,
                        bankType,
                        handleBatchid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetDirectSpmRefundCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectSpmRefundCountAsync(string spid, string listid, string draw_id, string checkType, string status, string beginDate, string endDate, string bankType, string handleBatchid) {
            this.GetDirectSpmRefundCountAsync(spid, listid, draw_id, checkType, status, beginDate, endDate, bankType, handleBatchid, null);
        }
        
        /// <remarks/>
        public void GetDirectSpmRefundCountAsync(string spid, string listid, string draw_id, string checkType, string status, string beginDate, string endDate, string bankType, string handleBatchid, object userState) {
            if ((this.GetDirectSpmRefundCountOperationCompleted == null)) {
                this.GetDirectSpmRefundCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectSpmRefundCountOperationCompleted);
            }
            this.InvokeAsync("GetDirectSpmRefundCount", new object[] {
                        spid,
                        listid,
                        draw_id,
                        checkType,
                        status,
                        beginDate,
                        endDate,
                        bankType,
                        handleBatchid}, this.GetDirectSpmRefundCountOperationCompleted, userState);
        }
        
        private void OnGetDirectSpmRefundCountOperationCompleted(object arg) {
            if ((this.GetDirectSpmRefundCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectSpmRefundCountCompleted(this, new GetDirectSpmRefundCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchDirectSpmRefundList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBatchDirectSpmRefundList(string BankType, string beginDate, string endDate, string queryType) {
            object[] results = this.Invoke("GetBatchDirectSpmRefundList", new object[] {
                        BankType,
                        beginDate,
                        endDate,
                        queryType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchDirectSpmRefundList(string BankType, string beginDate, string endDate, string queryType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchDirectSpmRefundList", new object[] {
                        BankType,
                        beginDate,
                        endDate,
                        queryType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBatchDirectSpmRefundList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchDirectSpmRefundListAsync(string BankType, string beginDate, string endDate, string queryType) {
            this.GetBatchDirectSpmRefundListAsync(BankType, beginDate, endDate, queryType, null);
        }
        
        /// <remarks/>
        public void GetBatchDirectSpmRefundListAsync(string BankType, string beginDate, string endDate, string queryType, object userState) {
            if ((this.GetBatchDirectSpmRefundListOperationCompleted == null)) {
                this.GetBatchDirectSpmRefundListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchDirectSpmRefundListOperationCompleted);
            }
            this.InvokeAsync("GetBatchDirectSpmRefundList", new object[] {
                        BankType,
                        beginDate,
                        endDate,
                        queryType}, this.GetBatchDirectSpmRefundListOperationCompleted, userState);
        }
        
        private void OnGetBatchDirectSpmRefundListOperationCompleted(object arg) {
            if ((this.GetBatchDirectSpmRefundListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchDirectSpmRefundListCompleted(this, new GetBatchDirectSpmRefundListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCepBankInfo_List", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCepBankInfo_List(string banktype, string bankchannel, int start, int max, out string msg) {
            object[] results = this.Invoke("QueryCepBankInfo_List", new object[] {
                        banktype,
                        bankchannel,
                        start,
                        max});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCepBankInfo_List(string banktype, string bankchannel, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCepBankInfo_List", new object[] {
                        banktype,
                        bankchannel,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryCepBankInfo_List(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCepBankInfo_ListAsync(string banktype, string bankchannel, int start, int max) {
            this.QueryCepBankInfo_ListAsync(banktype, bankchannel, start, max, null);
        }
        
        /// <remarks/>
        public void QueryCepBankInfo_ListAsync(string banktype, string bankchannel, int start, int max, object userState) {
            if ((this.QueryCepBankInfo_ListOperationCompleted == null)) {
                this.QueryCepBankInfo_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCepBankInfo_ListOperationCompleted);
            }
            this.InvokeAsync("QueryCepBankInfo_List", new object[] {
                        banktype,
                        bankchannel,
                        start,
                        max}, this.QueryCepBankInfo_ListOperationCompleted, userState);
        }
        
        private void OnQueryCepBankInfo_ListOperationCompleted(object arg) {
            if ((this.QueryCepBankInfo_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCepBankInfo_ListCompleted(this, new QueryCepBankInfo_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCepBankInfo_Detail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_CEP_BANKCHANNEL_CLASS QueryCepBankInfo_Detail(string findex, out string msg) {
            object[] results = this.Invoke("QueryCepBankInfo_Detail", new object[] {
                        findex});
            msg = ((string)(results[1]));
            return ((T_CEP_BANKCHANNEL_CLASS)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCepBankInfo_Detail(string findex, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCepBankInfo_Detail", new object[] {
                        findex}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_CEP_BANKCHANNEL_CLASS EndQueryCepBankInfo_Detail(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_CEP_BANKCHANNEL_CLASS)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCepBankInfo_DetailAsync(string findex) {
            this.QueryCepBankInfo_DetailAsync(findex, null);
        }
        
        /// <remarks/>
        public void QueryCepBankInfo_DetailAsync(string findex, object userState) {
            if ((this.QueryCepBankInfo_DetailOperationCompleted == null)) {
                this.QueryCepBankInfo_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCepBankInfo_DetailOperationCompleted);
            }
            this.InvokeAsync("QueryCepBankInfo_Detail", new object[] {
                        findex}, this.QueryCepBankInfo_DetailOperationCompleted, userState);
        }
        
        private void OnQueryCepBankInfo_DetailOperationCompleted(object arg) {
            if ((this.QueryCepBankInfo_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCepBankInfo_DetailCompleted(this, new QueryCepBankInfo_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCepBankInfo_Detail_Check" +
            "", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_CEP_BANKCHANNEL_CLASS QueryCepBankInfo_Detail_Check(string findex, out string msg) {
            object[] results = this.Invoke("QueryCepBankInfo_Detail_Check", new object[] {
                        findex});
            msg = ((string)(results[1]));
            return ((T_CEP_BANKCHANNEL_CLASS)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCepBankInfo_Detail_Check(string findex, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCepBankInfo_Detail_Check", new object[] {
                        findex}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_CEP_BANKCHANNEL_CLASS EndQueryCepBankInfo_Detail_Check(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_CEP_BANKCHANNEL_CLASS)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCepBankInfo_Detail_CheckAsync(string findex) {
            this.QueryCepBankInfo_Detail_CheckAsync(findex, null);
        }
        
        /// <remarks/>
        public void QueryCepBankInfo_Detail_CheckAsync(string findex, object userState) {
            if ((this.QueryCepBankInfo_Detail_CheckOperationCompleted == null)) {
                this.QueryCepBankInfo_Detail_CheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCepBankInfo_Detail_CheckOperationCompleted);
            }
            this.InvokeAsync("QueryCepBankInfo_Detail_Check", new object[] {
                        findex}, this.QueryCepBankInfo_Detail_CheckOperationCompleted, userState);
        }
        
        private void OnQueryCepBankInfo_Detail_CheckOperationCompleted(object arg) {
            if ((this.QueryCepBankInfo_Detail_CheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCepBankInfo_Detail_CheckCompleted(this, new QueryCepBankInfo_Detail_CheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayMatch_BankaccList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayMatch_BankaccList() {
            object[] results = this.Invoke("GetPayMatch_BankaccList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayMatch_BankaccList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayMatch_BankaccList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayMatch_BankaccList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayMatch_BankaccListAsync() {
            this.GetPayMatch_BankaccListAsync(null);
        }
        
        /// <remarks/>
        public void GetPayMatch_BankaccListAsync(object userState) {
            if ((this.GetPayMatch_BankaccListOperationCompleted == null)) {
                this.GetPayMatch_BankaccListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayMatch_BankaccListOperationCompleted);
            }
            this.InvokeAsync("GetPayMatch_BankaccList", new object[0], this.GetPayMatch_BankaccListOperationCompleted, userState);
        }
        
        private void OnGetPayMatch_BankaccListOperationCompleted(object arg) {
            if ((this.GetPayMatch_BankaccListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayMatch_BankaccListCompleted(this, new GetPayMatch_BankaccListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayMatch_BankaccBatchList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayMatch_BankaccBatchList(string bankaccno) {
            object[] results = this.Invoke("GetPayMatch_BankaccBatchList", new object[] {
                        bankaccno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayMatch_BankaccBatchList(string bankaccno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayMatch_BankaccBatchList", new object[] {
                        bankaccno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayMatch_BankaccBatchList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayMatch_BankaccBatchListAsync(string bankaccno) {
            this.GetPayMatch_BankaccBatchListAsync(bankaccno, null);
        }
        
        /// <remarks/>
        public void GetPayMatch_BankaccBatchListAsync(string bankaccno, object userState) {
            if ((this.GetPayMatch_BankaccBatchListOperationCompleted == null)) {
                this.GetPayMatch_BankaccBatchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayMatch_BankaccBatchListOperationCompleted);
            }
            this.InvokeAsync("GetPayMatch_BankaccBatchList", new object[] {
                        bankaccno}, this.GetPayMatch_BankaccBatchListOperationCompleted, userState);
        }
        
        private void OnGetPayMatch_BankaccBatchListOperationCompleted(object arg) {
            if ((this.GetPayMatch_BankaccBatchListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayMatch_BankaccBatchListCompleted(this, new GetPayMatch_BankaccBatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayMatch_BankDetailList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayMatch_BankDetailList(string bankaccno, string date, int istart, int imax, out string errMsg) {
            object[] results = this.Invoke("GetPayMatch_BankDetailList", new object[] {
                        bankaccno,
                        date,
                        istart,
                        imax});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayMatch_BankDetailList(string bankaccno, string date, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayMatch_BankDetailList", new object[] {
                        bankaccno,
                        date,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayMatch_BankDetailList(System.IAsyncResult asyncResult, out string errMsg) {
            object[] results = this.EndInvoke(asyncResult);
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayMatch_BankDetailListAsync(string bankaccno, string date, int istart, int imax) {
            this.GetPayMatch_BankDetailListAsync(bankaccno, date, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetPayMatch_BankDetailListAsync(string bankaccno, string date, int istart, int imax, object userState) {
            if ((this.GetPayMatch_BankDetailListOperationCompleted == null)) {
                this.GetPayMatch_BankDetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayMatch_BankDetailListOperationCompleted);
            }
            this.InvokeAsync("GetPayMatch_BankDetailList", new object[] {
                        bankaccno,
                        date,
                        istart,
                        imax}, this.GetPayMatch_BankDetailListOperationCompleted, userState);
        }
        
        private void OnGetPayMatch_BankDetailListOperationCompleted(object arg) {
            if ((this.GetPayMatch_BankDetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayMatch_BankDetailListCompleted(this, new GetPayMatch_BankDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayMatch_TaskState", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPayMatch_TaskState(string taskid) {
            object[] results = this.Invoke("GetPayMatch_TaskState", new object[] {
                        taskid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayMatch_TaskState(string taskid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayMatch_TaskState", new object[] {
                        taskid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetPayMatch_TaskState(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayMatch_TaskStateAsync(string taskid) {
            this.GetPayMatch_TaskStateAsync(taskid, null);
        }
        
        /// <remarks/>
        public void GetPayMatch_TaskStateAsync(string taskid, object userState) {
            if ((this.GetPayMatch_TaskStateOperationCompleted == null)) {
                this.GetPayMatch_TaskStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayMatch_TaskStateOperationCompleted);
            }
            this.InvokeAsync("GetPayMatch_TaskState", new object[] {
                        taskid}, this.GetPayMatch_TaskStateOperationCompleted, userState);
        }
        
        private void OnGetPayMatch_TaskStateOperationCompleted(object arg) {
            if ((this.GetPayMatch_TaskStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayMatch_TaskStateCompleted(this, new GetPayMatch_TaskStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayMatch_TaskList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayMatch_TaskList(string state, string user, int istart, int imax) {
            object[] results = this.Invoke("GetPayMatch_TaskList", new object[] {
                        state,
                        user,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayMatch_TaskList(string state, string user, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayMatch_TaskList", new object[] {
                        state,
                        user,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayMatch_TaskList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayMatch_TaskListAsync(string state, string user, int istart, int imax) {
            this.GetPayMatch_TaskListAsync(state, user, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetPayMatch_TaskListAsync(string state, string user, int istart, int imax, object userState) {
            if ((this.GetPayMatch_TaskListOperationCompleted == null)) {
                this.GetPayMatch_TaskListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayMatch_TaskListOperationCompleted);
            }
            this.InvokeAsync("GetPayMatch_TaskList", new object[] {
                        state,
                        user,
                        istart,
                        imax}, this.GetPayMatch_TaskListOperationCompleted, userState);
        }
        
        private void OnGetPayMatch_TaskListOperationCompleted(object arg) {
            if ((this.GetPayMatch_TaskListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayMatch_TaskListCompleted(this, new GetPayMatch_TaskListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/HasPayMatchDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasPayMatchDetail(string bankaccno, string date) {
            object[] results = this.Invoke("HasPayMatchDetail", new object[] {
                        bankaccno,
                        date});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHasPayMatchDetail(string bankaccno, string date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HasPayMatchDetail", new object[] {
                        bankaccno,
                        date}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndHasPayMatchDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasPayMatchDetailAsync(string bankaccno, string date) {
            this.HasPayMatchDetailAsync(bankaccno, date, null);
        }
        
        /// <remarks/>
        public void HasPayMatchDetailAsync(string bankaccno, string date, object userState) {
            if ((this.HasPayMatchDetailOperationCompleted == null)) {
                this.HasPayMatchDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasPayMatchDetailOperationCompleted);
            }
            this.InvokeAsync("HasPayMatchDetail", new object[] {
                        bankaccno,
                        date}, this.HasPayMatchDetailOperationCompleted, userState);
        }
        
        private void OnHasPayMatchDetailOperationCompleted(object arg) {
            if ((this.HasPayMatchDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasPayMatchDetailCompleted(this, new HasPayMatchDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/HasPayMatchTask", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasPayMatchTask(string bankaccno, string date) {
            object[] results = this.Invoke("HasPayMatchTask", new object[] {
                        bankaccno,
                        date});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHasPayMatchTask(string bankaccno, string date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HasPayMatchTask", new object[] {
                        bankaccno,
                        date}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndHasPayMatchTask(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasPayMatchTaskAsync(string bankaccno, string date) {
            this.HasPayMatchTaskAsync(bankaccno, date, null);
        }
        
        /// <remarks/>
        public void HasPayMatchTaskAsync(string bankaccno, string date, object userState) {
            if ((this.HasPayMatchTaskOperationCompleted == null)) {
                this.HasPayMatchTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasPayMatchTaskOperationCompleted);
            }
            this.InvokeAsync("HasPayMatchTask", new object[] {
                        bankaccno,
                        date}, this.HasPayMatchTaskOperationCompleted, userState);
        }
        
        private void OnHasPayMatchTaskOperationCompleted(object arg) {
            if ((this.HasPayMatchTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasPayMatchTaskCompleted(this, new HasPayMatchTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetPayMatch_TaskDetail", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayMatch_TaskDetail(string taskid, string type, int istart, int imax) {
            object[] results = this.Invoke("GetPayMatch_TaskDetail", new object[] {
                        taskid,
                        type,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayMatch_TaskDetail(string taskid, string type, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayMatch_TaskDetail", new object[] {
                        taskid,
                        type,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayMatch_TaskDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayMatch_TaskDetailAsync(string taskid, string type, int istart, int imax) {
            this.GetPayMatch_TaskDetailAsync(taskid, type, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetPayMatch_TaskDetailAsync(string taskid, string type, int istart, int imax, object userState) {
            if ((this.GetPayMatch_TaskDetailOperationCompleted == null)) {
                this.GetPayMatch_TaskDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayMatch_TaskDetailOperationCompleted);
            }
            this.InvokeAsync("GetPayMatch_TaskDetail", new object[] {
                        taskid,
                        type,
                        istart,
                        imax}, this.GetPayMatch_TaskDetailOperationCompleted, userState);
        }
        
        private void OnGetPayMatch_TaskDetailOperationCompleted(object arg) {
            if ((this.GetPayMatch_TaskDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayMatch_TaskDetailCompleted(this, new GetPayMatch_TaskDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/PayMatch_Detail2Error", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PayMatch_Detail2Error(string taskid, out string Msg) {
            object[] results = this.Invoke("PayMatch_Detail2Error", new object[] {
                        taskid});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPayMatch_Detail2Error(string taskid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PayMatch_Detail2Error", new object[] {
                        taskid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndPayMatch_Detail2Error(System.IAsyncResult asyncResult, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PayMatch_Detail2ErrorAsync(string taskid) {
            this.PayMatch_Detail2ErrorAsync(taskid, null);
        }
        
        /// <remarks/>
        public void PayMatch_Detail2ErrorAsync(string taskid, object userState) {
            if ((this.PayMatch_Detail2ErrorOperationCompleted == null)) {
                this.PayMatch_Detail2ErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayMatch_Detail2ErrorOperationCompleted);
            }
            this.InvokeAsync("PayMatch_Detail2Error", new object[] {
                        taskid}, this.PayMatch_Detail2ErrorOperationCompleted, userState);
        }
        
        private void OnPayMatch_Detail2ErrorOperationCompleted(object arg) {
            if ((this.PayMatch_Detail2ErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayMatch_Detail2ErrorCompleted(this, new PayMatch_Detail2ErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchRefundForCompensation" +
            "List", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBatchRefundForCompensationList(string batchid, string listId, string refundState, int istart, int imax) {
            object[] results = this.Invoke("GetBatchRefundForCompensationList", new object[] {
                        batchid,
                        listId,
                        refundState,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchRefundForCompensationList(string batchid, string listId, string refundState, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchRefundForCompensationList", new object[] {
                        batchid,
                        listId,
                        refundState,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBatchRefundForCompensationList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchRefundForCompensationListAsync(string batchid, string listId, string refundState, int istart, int imax) {
            this.GetBatchRefundForCompensationListAsync(batchid, listId, refundState, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetBatchRefundForCompensationListAsync(string batchid, string listId, string refundState, int istart, int imax, object userState) {
            if ((this.GetBatchRefundForCompensationListOperationCompleted == null)) {
                this.GetBatchRefundForCompensationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchRefundForCompensationListOperationCompleted);
            }
            this.InvokeAsync("GetBatchRefundForCompensationList", new object[] {
                        batchid,
                        listId,
                        refundState,
                        istart,
                        imax}, this.GetBatchRefundForCompensationListOperationCompleted, userState);
        }
        
        private void OnGetBatchRefundForCompensationListOperationCompleted(object arg) {
            if ((this.GetBatchRefundForCompensationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchRefundForCompensationListCompleted(this, new GetBatchRefundForCompensationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchRefundForCompensation" +
            "Total", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBatchRefundForCompensationTotal(string batchid, string listid) {
            object[] results = this.Invoke("GetBatchRefundForCompensationTotal", new object[] {
                        batchid,
                        listid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchRefundForCompensationTotal(string batchid, string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchRefundForCompensationTotal", new object[] {
                        batchid,
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBatchRefundForCompensationTotal(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchRefundForCompensationTotalAsync(string batchid, string listid) {
            this.GetBatchRefundForCompensationTotalAsync(batchid, listid, null);
        }
        
        /// <remarks/>
        public void GetBatchRefundForCompensationTotalAsync(string batchid, string listid, object userState) {
            if ((this.GetBatchRefundForCompensationTotalOperationCompleted == null)) {
                this.GetBatchRefundForCompensationTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchRefundForCompensationTotalOperationCompleted);
            }
            this.InvokeAsync("GetBatchRefundForCompensationTotal", new object[] {
                        batchid,
                        listid}, this.GetBatchRefundForCompensationTotalOperationCompleted, userState);
        }
        
        private void OnGetBatchRefundForCompensationTotalOperationCompleted(object arg) {
            if ((this.GetBatchRefundForCompensationTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchRefundForCompensationTotalCompleted(this, new GetBatchRefundForCompensationTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetBatchRefundForCompensation" +
            "Count", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBatchRefundForCompensationCount(string batchid, string listId, string refundState) {
            object[] results = this.Invoke("GetBatchRefundForCompensationCount", new object[] {
                        batchid,
                        listId,
                        refundState});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchRefundForCompensationCount(string batchid, string listId, string refundState, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchRefundForCompensationCount", new object[] {
                        batchid,
                        listId,
                        refundState}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetBatchRefundForCompensationCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchRefundForCompensationCountAsync(string batchid, string listId, string refundState) {
            this.GetBatchRefundForCompensationCountAsync(batchid, listId, refundState, null);
        }
        
        /// <remarks/>
        public void GetBatchRefundForCompensationCountAsync(string batchid, string listId, string refundState, object userState) {
            if ((this.GetBatchRefundForCompensationCountOperationCompleted == null)) {
                this.GetBatchRefundForCompensationCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchRefundForCompensationCountOperationCompleted);
            }
            this.InvokeAsync("GetBatchRefundForCompensationCount", new object[] {
                        batchid,
                        listId,
                        refundState}, this.GetBatchRefundForCompensationCountOperationCompleted, userState);
        }
        
        private void OnGetBatchRefundForCompensationCountOperationCompleted(object arg) {
            if ((this.GetBatchRefundForCompensationCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchRefundForCompensationCountCompleted(this, new GetBatchRefundForCompensationCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CheckCompensationRefund", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckCompensationRefund(string listid, long refundAmt, string bank_type, string bank_listid, long saveAmt, string Fid, out string msg) {
            object[] results = this.Invoke("CheckCompensationRefund", new object[] {
                        listid,
                        refundAmt,
                        bank_type,
                        bank_listid,
                        saveAmt,
                        Fid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckCompensationRefund(string listid, long refundAmt, string bank_type, string bank_listid, long saveAmt, string Fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckCompensationRefund", new object[] {
                        listid,
                        refundAmt,
                        bank_type,
                        bank_listid,
                        saveAmt,
                        Fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckCompensationRefund(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCompensationRefundAsync(string listid, long refundAmt, string bank_type, string bank_listid, long saveAmt, string Fid) {
            this.CheckCompensationRefundAsync(listid, refundAmt, bank_type, bank_listid, saveAmt, Fid, null);
        }
        
        /// <remarks/>
        public void CheckCompensationRefundAsync(string listid, long refundAmt, string bank_type, string bank_listid, long saveAmt, string Fid, object userState) {
            if ((this.CheckCompensationRefundOperationCompleted == null)) {
                this.CheckCompensationRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCompensationRefundOperationCompleted);
            }
            this.InvokeAsync("CheckCompensationRefund", new object[] {
                        listid,
                        refundAmt,
                        bank_type,
                        bank_listid,
                        saveAmt,
                        Fid}, this.CheckCompensationRefundOperationCompleted, userState);
        }
        
        private void OnCheckCompensationRefundOperationCompleted(object arg) {
            if ((this.CheckCompensationRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCompensationRefundCompleted(this, new CheckCompensationRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetLog", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLog(string wherestr, int type, string year, int start, int max) {
            object[] results = this.Invoke("GetLog", new object[] {
                        wherestr,
                        type,
                        year,
                        start,
                        max});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLog(string wherestr, int type, string year, int start, int max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLog", new object[] {
                        wherestr,
                        type,
                        year,
                        start,
                        max}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogAsync(string wherestr, int type, string year, int start, int max) {
            this.GetLogAsync(wherestr, type, year, start, max, null);
        }
        
        /// <remarks/>
        public void GetLogAsync(string wherestr, int type, string year, int start, int max, object userState) {
            if ((this.GetLogOperationCompleted == null)) {
                this.GetLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogOperationCompleted);
            }
            this.InvokeAsync("GetLog", new object[] {
                        wherestr,
                        type,
                        year,
                        start,
                        max}, this.GetLogOperationCompleted, userState);
        }
        
        private void OnGetLogOperationCompleted(object arg) {
            if ((this.GetLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogCompleted(this, new GetLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUtility_charge", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUtility_charge(string servicecode, out string msg) {
            object[] results = this.Invoke("GetUtility_charge", new object[] {
                        servicecode});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUtility_charge(string servicecode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUtility_charge", new object[] {
                        servicecode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUtility_charge(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUtility_chargeAsync(string servicecode) {
            this.GetUtility_chargeAsync(servicecode, null);
        }
        
        /// <remarks/>
        public void GetUtility_chargeAsync(string servicecode, object userState) {
            if ((this.GetUtility_chargeOperationCompleted == null)) {
                this.GetUtility_chargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUtility_chargeOperationCompleted);
            }
            this.InvokeAsync("GetUtility_charge", new object[] {
                        servicecode}, this.GetUtility_chargeOperationCompleted, userState);
        }
        
        private void OnGetUtility_chargeOperationCompleted(object arg) {
            if ((this.GetUtility_chargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUtility_chargeCompleted(this, new GetUtility_chargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryUCBulletinById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_PUCNEWSERVICE_INFO QueryUCBulletinById(string fid, string uctype, out string msg) {
            object[] results = this.Invoke("QueryUCBulletinById", new object[] {
                        fid,
                        uctype});
            msg = ((string)(results[1]));
            return ((T_PUCNEWSERVICE_INFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryUCBulletinById(string fid, string uctype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryUCBulletinById", new object[] {
                        fid,
                        uctype}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_PUCNEWSERVICE_INFO EndQueryUCBulletinById(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_PUCNEWSERVICE_INFO)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUCBulletinByIdAsync(string fid, string uctype) {
            this.QueryUCBulletinByIdAsync(fid, uctype, null);
        }
        
        /// <remarks/>
        public void QueryUCBulletinByIdAsync(string fid, string uctype, object userState) {
            if ((this.QueryUCBulletinByIdOperationCompleted == null)) {
                this.QueryUCBulletinByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUCBulletinByIdOperationCompleted);
            }
            this.InvokeAsync("QueryUCBulletinById", new object[] {
                        fid,
                        uctype}, this.QueryUCBulletinByIdOperationCompleted, userState);
        }
        
        private void OnQueryUCBulletinByIdOperationCompleted(object arg) {
            if ((this.QueryUCBulletinByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUCBulletinByIdCompleted(this, new QueryUCBulletinByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryUCBulletinInfoByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_PUCNEWSERVICE_INFO QueryUCBulletinInfoByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryUCBulletinInfoByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_PUCNEWSERVICE_INFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryUCBulletinInfoByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryUCBulletinInfoByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_PUCNEWSERVICE_INFO EndQueryUCBulletinInfoByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_PUCNEWSERVICE_INFO)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUCBulletinInfoByObjidAsync(string objid, string checkType) {
            this.QueryUCBulletinInfoByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryUCBulletinInfoByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryUCBulletinInfoByObjidOperationCompleted == null)) {
                this.QueryUCBulletinInfoByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUCBulletinInfoByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryUCBulletinInfoByObjid", new object[] {
                        objid,
                        checkType}, this.QueryUCBulletinInfoByObjidOperationCompleted, userState);
        }
        
        private void OnQueryUCBulletinInfoByObjidOperationCompleted(object arg) {
            if ((this.QueryUCBulletinInfoByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUCBulletinInfoByObjidCompleted(this, new QueryUCBulletinInfoByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/CheckExecuteSql", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckExecuteSql(string selectSqlBase64, string updateSqlBase64, string dataBase, int exeCount, out string msg) {
            object[] results = this.Invoke("CheckExecuteSql", new object[] {
                        selectSqlBase64,
                        updateSqlBase64,
                        dataBase,
                        exeCount});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckExecuteSql(string selectSqlBase64, string updateSqlBase64, string dataBase, int exeCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckExecuteSql", new object[] {
                        selectSqlBase64,
                        updateSqlBase64,
                        dataBase,
                        exeCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckExecuteSql(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckExecuteSqlAsync(string selectSqlBase64, string updateSqlBase64, string dataBase, int exeCount) {
            this.CheckExecuteSqlAsync(selectSqlBase64, updateSqlBase64, dataBase, exeCount, null);
        }
        
        /// <remarks/>
        public void CheckExecuteSqlAsync(string selectSqlBase64, string updateSqlBase64, string dataBase, int exeCount, object userState) {
            if ((this.CheckExecuteSqlOperationCompleted == null)) {
                this.CheckExecuteSqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckExecuteSqlOperationCompleted);
            }
            this.InvokeAsync("CheckExecuteSql", new object[] {
                        selectSqlBase64,
                        updateSqlBase64,
                        dataBase,
                        exeCount}, this.CheckExecuteSqlOperationCompleted, userState);
        }
        
        private void OnCheckExecuteSqlOperationCompleted(object arg) {
            if ((this.CheckExecuteSqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckExecuteSqlCompleted(this, new CheckExecuteSqlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("Finance_HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryCheckParamInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCheckParamInfo(string objId, string checkType, out string msg) {
            object[] results = this.Invoke("QueryCheckParamInfo", new object[] {
                        objId,
                        checkType});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryCheckParamInfo(string objId, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryCheckParamInfo", new object[] {
                        objId,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryCheckParamInfo(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCheckParamInfoAsync(string objId, string checkType) {
            this.QueryCheckParamInfoAsync(objId, checkType, null);
        }
        
        /// <remarks/>
        public void QueryCheckParamInfoAsync(string objId, string checkType, object userState) {
            if ((this.QueryCheckParamInfoOperationCompleted == null)) {
                this.QueryCheckParamInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCheckParamInfoOperationCompleted);
            }
            this.InvokeAsync("QueryCheckParamInfo", new object[] {
                        objId,
                        checkType}, this.QueryCheckParamInfoOperationCompleted, userState);
        }
        
        private void OnQueryCheckParamInfoOperationCompleted(object arg) {
            if ((this.QueryCheckParamInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCheckParamInfoCompleted(this, new QueryCheckParamInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBalance", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetUserBalance(string qqid, int curtype, out string Msg) {
            object[] results = this.Invoke("GetUserBalance", new object[] {
                        qqid,
                        curtype});
            Msg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBalance(string qqid, int curtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBalance", new object[] {
                        qqid,
                        curtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public long EndGetUserBalance(System.IAsyncResult asyncResult, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            Msg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBalanceAsync(string qqid, int curtype) {
            this.GetUserBalanceAsync(qqid, curtype, null);
        }
        
        /// <remarks/>
        public void GetUserBalanceAsync(string qqid, int curtype, object userState) {
            if ((this.GetUserBalanceOperationCompleted == null)) {
                this.GetUserBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBalanceOperationCompleted);
            }
            this.InvokeAsync("GetUserBalance", new object[] {
                        qqid,
                        curtype}, this.GetUserBalanceOperationCompleted, userState);
        }
        
        private void OnGetUserBalanceOperationCompleted(object arg) {
            if ((this.GetUserBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBalanceCompleted(this, new GetUserBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetUserBalanceByUId", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetUserBalanceByUId(string fuid, int curtype, out string Msg) {
            object[] results = this.Invoke("GetUserBalanceByUId", new object[] {
                        fuid,
                        curtype});
            Msg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserBalanceByUId(string fuid, int curtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserBalanceByUId", new object[] {
                        fuid,
                        curtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public long EndGetUserBalanceByUId(System.IAsyncResult asyncResult, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            Msg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBalanceByUIdAsync(string fuid, int curtype) {
            this.GetUserBalanceByUIdAsync(fuid, curtype, null);
        }
        
        /// <remarks/>
        public void GetUserBalanceByUIdAsync(string fuid, int curtype, object userState) {
            if ((this.GetUserBalanceByUIdOperationCompleted == null)) {
                this.GetUserBalanceByUIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBalanceByUIdOperationCompleted);
            }
            this.InvokeAsync("GetUserBalanceByUId", new object[] {
                        fuid,
                        curtype}, this.GetUserBalanceByUIdOperationCompleted, userState);
        }
        
        private void OnGetUserBalanceByUIdOperationCompleted(object arg) {
            if ((this.GetUserBalanceByUIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBalanceByUIdCompleted(this, new GetUserBalanceByUIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/FeeContractQuery", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FeeContractQuery(string filter, int iStart, int iLen) {
            object[] results = this.Invoke("FeeContractQuery", new object[] {
                        filter,
                        iStart,
                        iLen});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFeeContractQuery(string filter, int iStart, int iLen, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FeeContractQuery", new object[] {
                        filter,
                        iStart,
                        iLen}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndFeeContractQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FeeContractQueryAsync(string filter, int iStart, int iLen) {
            this.FeeContractQueryAsync(filter, iStart, iLen, null);
        }
        
        /// <remarks/>
        public void FeeContractQueryAsync(string filter, int iStart, int iLen, object userState) {
            if ((this.FeeContractQueryOperationCompleted == null)) {
                this.FeeContractQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFeeContractQueryOperationCompleted);
            }
            this.InvokeAsync("FeeContractQuery", new object[] {
                        filter,
                        iStart,
                        iLen}, this.FeeContractQueryOperationCompleted, userState);
        }
        
        private void OnFeeContractQueryOperationCompleted(object arg) {
            if ((this.FeeContractQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FeeContractQueryCompleted(this, new FeeContractQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetInsureAccount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInsureAccount(string spid, string insureUIn, out string msg) {
            object[] results = this.Invoke("GetInsureAccount", new object[] {
                        spid,
                        insureUIn});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInsureAccount(string spid, string insureUIn, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInsureAccount", new object[] {
                        spid,
                        insureUIn}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetInsureAccount(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInsureAccountAsync(string spid, string insureUIn) {
            this.GetInsureAccountAsync(spid, insureUIn, null);
        }
        
        /// <remarks/>
        public void GetInsureAccountAsync(string spid, string insureUIn, object userState) {
            if ((this.GetInsureAccountOperationCompleted == null)) {
                this.GetInsureAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInsureAccountOperationCompleted);
            }
            this.InvokeAsync("GetInsureAccount", new object[] {
                        spid,
                        insureUIn}, this.GetInsureAccountOperationCompleted, userState);
        }
        
        private void OnGetInsureAccountOperationCompleted(object arg) {
            if ((this.GetInsureAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInsureAccountCompleted(this, new GetInsureAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetOutPayCBList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOutPayCBList(string refundInfos, string transid, string spid, string begindate, string enddate, int lstate, int check_state, int sp_process_state, int risk_process_state, int zw_process_state, int istart, int imax) {
            object[] results = this.Invoke("GetOutPayCBList", new object[] {
                        refundInfos,
                        transid,
                        spid,
                        begindate,
                        enddate,
                        lstate,
                        check_state,
                        sp_process_state,
                        risk_process_state,
                        zw_process_state,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOutPayCBList(string refundInfos, string transid, string spid, string begindate, string enddate, int lstate, int check_state, int sp_process_state, int risk_process_state, int zw_process_state, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOutPayCBList", new object[] {
                        refundInfos,
                        transid,
                        spid,
                        begindate,
                        enddate,
                        lstate,
                        check_state,
                        sp_process_state,
                        risk_process_state,
                        zw_process_state,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetOutPayCBList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutPayCBListAsync(string refundInfos, string transid, string spid, string begindate, string enddate, int lstate, int check_state, int sp_process_state, int risk_process_state, int zw_process_state, int istart, int imax) {
            this.GetOutPayCBListAsync(refundInfos, transid, spid, begindate, enddate, lstate, check_state, sp_process_state, risk_process_state, zw_process_state, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetOutPayCBListAsync(string refundInfos, string transid, string spid, string begindate, string enddate, int lstate, int check_state, int sp_process_state, int risk_process_state, int zw_process_state, int istart, int imax, object userState) {
            if ((this.GetOutPayCBListOperationCompleted == null)) {
                this.GetOutPayCBListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutPayCBListOperationCompleted);
            }
            this.InvokeAsync("GetOutPayCBList", new object[] {
                        refundInfos,
                        transid,
                        spid,
                        begindate,
                        enddate,
                        lstate,
                        check_state,
                        sp_process_state,
                        risk_process_state,
                        zw_process_state,
                        istart,
                        imax}, this.GetOutPayCBListOperationCompleted, userState);
        }
        
        private void OnGetOutPayCBListOperationCompleted(object arg) {
            if ((this.GetOutPayCBListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutPayCBListCompleted(this, new GetOutPayCBListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetOutPayCBCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOutPayCBCount(string refundInfos, string transid, string spid, string begindate, string enddate, int lstate, int check_state, int sp_process_state, int risk_process_state, int zw_process_state) {
            object[] results = this.Invoke("GetOutPayCBCount", new object[] {
                        refundInfos,
                        transid,
                        spid,
                        begindate,
                        enddate,
                        lstate,
                        check_state,
                        sp_process_state,
                        risk_process_state,
                        zw_process_state});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOutPayCBCount(string refundInfos, string transid, string spid, string begindate, string enddate, int lstate, int check_state, int sp_process_state, int risk_process_state, int zw_process_state, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOutPayCBCount", new object[] {
                        refundInfos,
                        transid,
                        spid,
                        begindate,
                        enddate,
                        lstate,
                        check_state,
                        sp_process_state,
                        risk_process_state,
                        zw_process_state}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetOutPayCBCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutPayCBCountAsync(string refundInfos, string transid, string spid, string begindate, string enddate, int lstate, int check_state, int sp_process_state, int risk_process_state, int zw_process_state) {
            this.GetOutPayCBCountAsync(refundInfos, transid, spid, begindate, enddate, lstate, check_state, sp_process_state, risk_process_state, zw_process_state, null);
        }
        
        /// <remarks/>
        public void GetOutPayCBCountAsync(string refundInfos, string transid, string spid, string begindate, string enddate, int lstate, int check_state, int sp_process_state, int risk_process_state, int zw_process_state, object userState) {
            if ((this.GetOutPayCBCountOperationCompleted == null)) {
                this.GetOutPayCBCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutPayCBCountOperationCompleted);
            }
            this.InvokeAsync("GetOutPayCBCount", new object[] {
                        refundInfos,
                        transid,
                        spid,
                        begindate,
                        enddate,
                        lstate,
                        check_state,
                        sp_process_state,
                        risk_process_state,
                        zw_process_state}, this.GetOutPayCBCountOperationCompleted, userState);
        }
        
        private void OnGetOutPayCBCountOperationCompleted(object arg) {
            if ((this.GetOutPayCBCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutPayCBCountCompleted(this, new GetOutPayCBCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetOutPayCBSumAmount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOutPayCBSumAmount(string refundInfos, string transid, string spid, string begindate, string enddate, int lstate, int check_state, int sp_process_state, int risk_process_state, int zw_process_state) {
            object[] results = this.Invoke("GetOutPayCBSumAmount", new object[] {
                        refundInfos,
                        transid,
                        spid,
                        begindate,
                        enddate,
                        lstate,
                        check_state,
                        sp_process_state,
                        risk_process_state,
                        zw_process_state});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOutPayCBSumAmount(string refundInfos, string transid, string spid, string begindate, string enddate, int lstate, int check_state, int sp_process_state, int risk_process_state, int zw_process_state, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOutPayCBSumAmount", new object[] {
                        refundInfos,
                        transid,
                        spid,
                        begindate,
                        enddate,
                        lstate,
                        check_state,
                        sp_process_state,
                        risk_process_state,
                        zw_process_state}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetOutPayCBSumAmount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutPayCBSumAmountAsync(string refundInfos, string transid, string spid, string begindate, string enddate, int lstate, int check_state, int sp_process_state, int risk_process_state, int zw_process_state) {
            this.GetOutPayCBSumAmountAsync(refundInfos, transid, spid, begindate, enddate, lstate, check_state, sp_process_state, risk_process_state, zw_process_state, null);
        }
        
        /// <remarks/>
        public void GetOutPayCBSumAmountAsync(string refundInfos, string transid, string spid, string begindate, string enddate, int lstate, int check_state, int sp_process_state, int risk_process_state, int zw_process_state, object userState) {
            if ((this.GetOutPayCBSumAmountOperationCompleted == null)) {
                this.GetOutPayCBSumAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutPayCBSumAmountOperationCompleted);
            }
            this.InvokeAsync("GetOutPayCBSumAmount", new object[] {
                        refundInfos,
                        transid,
                        spid,
                        begindate,
                        enddate,
                        lstate,
                        check_state,
                        sp_process_state,
                        risk_process_state,
                        zw_process_state}, this.GetOutPayCBSumAmountOperationCompleted, userState);
        }
        
        private void OnGetOutPayCBSumAmountOperationCompleted(object arg) {
            if ((this.GetOutPayCBSumAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutPayCBSumAmountCompleted(this, new GetOutPayCBSumAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetXinHuaBankTransactionList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetXinHuaBankTransactionList(string chargeids, string bank_transid, string listid, string ref_charge_id, string sourceCardno, string begindate, string enddate, int state, int transType, int zwState, int zwStartcheck, int istart, int imax) {
            object[] results = this.Invoke("GetXinHuaBankTransactionList", new object[] {
                        chargeids,
                        bank_transid,
                        listid,
                        ref_charge_id,
                        sourceCardno,
                        begindate,
                        enddate,
                        state,
                        transType,
                        zwState,
                        zwStartcheck,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetXinHuaBankTransactionList(string chargeids, string bank_transid, string listid, string ref_charge_id, string sourceCardno, string begindate, string enddate, int state, int transType, int zwState, int zwStartcheck, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetXinHuaBankTransactionList", new object[] {
                        chargeids,
                        bank_transid,
                        listid,
                        ref_charge_id,
                        sourceCardno,
                        begindate,
                        enddate,
                        state,
                        transType,
                        zwState,
                        zwStartcheck,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetXinHuaBankTransactionList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetXinHuaBankTransactionListAsync(string chargeids, string bank_transid, string listid, string ref_charge_id, string sourceCardno, string begindate, string enddate, int state, int transType, int zwState, int zwStartcheck, int istart, int imax) {
            this.GetXinHuaBankTransactionListAsync(chargeids, bank_transid, listid, ref_charge_id, sourceCardno, begindate, enddate, state, transType, zwState, zwStartcheck, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetXinHuaBankTransactionListAsync(string chargeids, string bank_transid, string listid, string ref_charge_id, string sourceCardno, string begindate, string enddate, int state, int transType, int zwState, int zwStartcheck, int istart, int imax, object userState) {
            if ((this.GetXinHuaBankTransactionListOperationCompleted == null)) {
                this.GetXinHuaBankTransactionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXinHuaBankTransactionListOperationCompleted);
            }
            this.InvokeAsync("GetXinHuaBankTransactionList", new object[] {
                        chargeids,
                        bank_transid,
                        listid,
                        ref_charge_id,
                        sourceCardno,
                        begindate,
                        enddate,
                        state,
                        transType,
                        zwState,
                        zwStartcheck,
                        istart,
                        imax}, this.GetXinHuaBankTransactionListOperationCompleted, userState);
        }
        
        private void OnGetXinHuaBankTransactionListOperationCompleted(object arg) {
            if ((this.GetXinHuaBankTransactionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXinHuaBankTransactionListCompleted(this, new GetXinHuaBankTransactionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetXinHuaBankTransactionCount" +
            "", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetXinHuaBankTransactionCount(string chargeids, string bank_transid, string listid, string ref_charge_id, string sourceCardno, string begindate, string enddate, int state, int transType, int zwState, int zwStartcheck) {
            object[] results = this.Invoke("GetXinHuaBankTransactionCount", new object[] {
                        chargeids,
                        bank_transid,
                        listid,
                        ref_charge_id,
                        sourceCardno,
                        begindate,
                        enddate,
                        state,
                        transType,
                        zwState,
                        zwStartcheck});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetXinHuaBankTransactionCount(string chargeids, string bank_transid, string listid, string ref_charge_id, string sourceCardno, string begindate, string enddate, int state, int transType, int zwState, int zwStartcheck, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetXinHuaBankTransactionCount", new object[] {
                        chargeids,
                        bank_transid,
                        listid,
                        ref_charge_id,
                        sourceCardno,
                        begindate,
                        enddate,
                        state,
                        transType,
                        zwState,
                        zwStartcheck}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetXinHuaBankTransactionCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetXinHuaBankTransactionCountAsync(string chargeids, string bank_transid, string listid, string ref_charge_id, string sourceCardno, string begindate, string enddate, int state, int transType, int zwState, int zwStartcheck) {
            this.GetXinHuaBankTransactionCountAsync(chargeids, bank_transid, listid, ref_charge_id, sourceCardno, begindate, enddate, state, transType, zwState, zwStartcheck, null);
        }
        
        /// <remarks/>
        public void GetXinHuaBankTransactionCountAsync(string chargeids, string bank_transid, string listid, string ref_charge_id, string sourceCardno, string begindate, string enddate, int state, int transType, int zwState, int zwStartcheck, object userState) {
            if ((this.GetXinHuaBankTransactionCountOperationCompleted == null)) {
                this.GetXinHuaBankTransactionCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXinHuaBankTransactionCountOperationCompleted);
            }
            this.InvokeAsync("GetXinHuaBankTransactionCount", new object[] {
                        chargeids,
                        bank_transid,
                        listid,
                        ref_charge_id,
                        sourceCardno,
                        begindate,
                        enddate,
                        state,
                        transType,
                        zwState,
                        zwStartcheck}, this.GetXinHuaBankTransactionCountOperationCompleted, userState);
        }
        
        private void OnGetXinHuaBankTransactionCountOperationCompleted(object arg) {
            if ((this.GetXinHuaBankTransactionCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXinHuaBankTransactionCountCompleted(this, new GetXinHuaBankTransactionCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBauPaySourceByList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBauPaySourceByList(string listid, string uid, out string msg) {
            object[] results = this.Invoke("QueryBauPaySourceByList", new object[] {
                        listid,
                        uid});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBauPaySourceByList(string listid, string uid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBauPaySourceByList", new object[] {
                        listid,
                        uid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryBauPaySourceByList(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBauPaySourceByListAsync(string listid, string uid) {
            this.QueryBauPaySourceByListAsync(listid, uid, null);
        }
        
        /// <remarks/>
        public void QueryBauPaySourceByListAsync(string listid, string uid, object userState) {
            if ((this.QueryBauPaySourceByListOperationCompleted == null)) {
                this.QueryBauPaySourceByListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBauPaySourceByListOperationCompleted);
            }
            this.InvokeAsync("QueryBauPaySourceByList", new object[] {
                        listid,
                        uid}, this.QueryBauPaySourceByListOperationCompleted, userState);
        }
        
        private void OnQueryBauPaySourceByListOperationCompleted(object arg) {
            if ((this.QueryBauPaySourceByListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBauPaySourceByListCompleted(this, new QueryBauPaySourceByListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGiveBackResultList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGiveBackResultList(string begindate, string enddate, int datatype, int banktype, int handletype, string listid, int istart, int imax) {
            object[] results = this.Invoke("GetGiveBackResultList", new object[] {
                        begindate,
                        enddate,
                        datatype,
                        banktype,
                        handletype,
                        listid,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGiveBackResultList(string begindate, string enddate, int datatype, int banktype, int handletype, string listid, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGiveBackResultList", new object[] {
                        begindate,
                        enddate,
                        datatype,
                        banktype,
                        handletype,
                        listid,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetGiveBackResultList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGiveBackResultListAsync(string begindate, string enddate, int datatype, int banktype, int handletype, string listid, int istart, int imax) {
            this.GetGiveBackResultListAsync(begindate, enddate, datatype, banktype, handletype, listid, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetGiveBackResultListAsync(string begindate, string enddate, int datatype, int banktype, int handletype, string listid, int istart, int imax, object userState) {
            if ((this.GetGiveBackResultListOperationCompleted == null)) {
                this.GetGiveBackResultListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGiveBackResultListOperationCompleted);
            }
            this.InvokeAsync("GetGiveBackResultList", new object[] {
                        begindate,
                        enddate,
                        datatype,
                        banktype,
                        handletype,
                        listid,
                        istart,
                        imax}, this.GetGiveBackResultListOperationCompleted, userState);
        }
        
        private void OnGetGiveBackResultListOperationCompleted(object arg) {
            if ((this.GetGiveBackResultListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGiveBackResultListCompleted(this, new GetGiveBackResultListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetGiveBackResultCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetGiveBackResultCount(string begindate, string enddate, int datatype, int banktype, int handletype, string listid) {
            object[] results = this.Invoke("GetGiveBackResultCount", new object[] {
                        begindate,
                        enddate,
                        datatype,
                        banktype,
                        handletype,
                        listid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGiveBackResultCount(string begindate, string enddate, int datatype, int banktype, int handletype, string listid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGiveBackResultCount", new object[] {
                        begindate,
                        enddate,
                        datatype,
                        banktype,
                        handletype,
                        listid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetGiveBackResultCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetGiveBackResultCountAsync(string begindate, string enddate, int datatype, int banktype, int handletype, string listid) {
            this.GetGiveBackResultCountAsync(begindate, enddate, datatype, banktype, handletype, listid, null);
        }
        
        /// <remarks/>
        public void GetGiveBackResultCountAsync(string begindate, string enddate, int datatype, int banktype, int handletype, string listid, object userState) {
            if ((this.GetGiveBackResultCountOperationCompleted == null)) {
                this.GetGiveBackResultCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGiveBackResultCountOperationCompleted);
            }
            this.InvokeAsync("GetGiveBackResultCount", new object[] {
                        begindate,
                        enddate,
                        datatype,
                        banktype,
                        handletype,
                        listid}, this.GetGiveBackResultCountOperationCompleted, userState);
        }
        
        private void OnGetGiveBackResultCountOperationCompleted(object arg) {
            if ((this.GetGiveBackResultCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGiveBackResultCountCompleted(this, new GetGiveBackResultCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDirectPayNCInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryDirectPayNCInfo(string bankType, string ncType, out string msg) {
            object[] results = this.Invoke("QueryDirectPayNCInfo", new object[] {
                        bankType,
                        ncType});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDirectPayNCInfo(string bankType, string ncType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDirectPayNCInfo", new object[] {
                        bankType,
                        ncType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryDirectPayNCInfo(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDirectPayNCInfoAsync(string bankType, string ncType) {
            this.QueryDirectPayNCInfoAsync(bankType, ncType, null);
        }
        
        /// <remarks/>
        public void QueryDirectPayNCInfoAsync(string bankType, string ncType, object userState) {
            if ((this.QueryDirectPayNCInfoOperationCompleted == null)) {
                this.QueryDirectPayNCInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDirectPayNCInfoOperationCompleted);
            }
            this.InvokeAsync("QueryDirectPayNCInfo", new object[] {
                        bankType,
                        ncType}, this.QueryDirectPayNCInfoOperationCompleted, userState);
        }
        
        private void OnQueryDirectPayNCInfoOperationCompleted(object arg) {
            if ((this.QueryDirectPayNCInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDirectPayNCInfoCompleted(this, new QueryDirectPayNCInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDirectNCInfoById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_DIRECTPAY_NCINFO QueryDirectNCInfoById(string fid, out string msg) {
            object[] results = this.Invoke("QueryDirectNCInfoById", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((T_DIRECTPAY_NCINFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDirectNCInfoById(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDirectNCInfoById", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_DIRECTPAY_NCINFO EndQueryDirectNCInfoById(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_DIRECTPAY_NCINFO)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDirectNCInfoByIdAsync(string fid) {
            this.QueryDirectNCInfoByIdAsync(fid, null);
        }
        
        /// <remarks/>
        public void QueryDirectNCInfoByIdAsync(string fid, object userState) {
            if ((this.QueryDirectNCInfoByIdOperationCompleted == null)) {
                this.QueryDirectNCInfoByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDirectNCInfoByIdOperationCompleted);
            }
            this.InvokeAsync("QueryDirectNCInfoById", new object[] {
                        fid}, this.QueryDirectNCInfoByIdOperationCompleted, userState);
        }
        
        private void OnQueryDirectNCInfoByIdOperationCompleted(object arg) {
            if ((this.QueryDirectNCInfoByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDirectNCInfoByIdCompleted(this, new QueryDirectNCInfoByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDirectNCInfoByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_DIRECTPAY_NCINFO QueryDirectNCInfoByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryDirectNCInfoByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_DIRECTPAY_NCINFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDirectNCInfoByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDirectNCInfoByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_DIRECTPAY_NCINFO EndQueryDirectNCInfoByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_DIRECTPAY_NCINFO)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDirectNCInfoByObjidAsync(string objid, string checkType) {
            this.QueryDirectNCInfoByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryDirectNCInfoByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryDirectNCInfoByObjidOperationCompleted == null)) {
                this.QueryDirectNCInfoByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDirectNCInfoByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryDirectNCInfoByObjid", new object[] {
                        objid,
                        checkType}, this.QueryDirectNCInfoByObjidOperationCompleted, userState);
        }
        
        private void OnQueryDirectNCInfoByObjidOperationCompleted(object arg) {
            if ((this.QueryDirectNCInfoByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDirectNCInfoByObjidCompleted(this, new QueryDirectNCInfoByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCBZWBillList", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCBZWBillList(string cblist, string banktype, string begindate, string enddate, string bankaccno, int checkstate, int istart, int imax) {
            object[] results = this.Invoke("GetCBZWBillList", new object[] {
                        cblist,
                        banktype,
                        begindate,
                        enddate,
                        bankaccno,
                        checkstate,
                        istart,
                        imax});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCBZWBillList(string cblist, string banktype, string begindate, string enddate, string bankaccno, int checkstate, int istart, int imax, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCBZWBillList", new object[] {
                        cblist,
                        banktype,
                        begindate,
                        enddate,
                        bankaccno,
                        checkstate,
                        istart,
                        imax}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCBZWBillList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCBZWBillListAsync(string cblist, string banktype, string begindate, string enddate, string bankaccno, int checkstate, int istart, int imax) {
            this.GetCBZWBillListAsync(cblist, banktype, begindate, enddate, bankaccno, checkstate, istart, imax, null);
        }
        
        /// <remarks/>
        public void GetCBZWBillListAsync(string cblist, string banktype, string begindate, string enddate, string bankaccno, int checkstate, int istart, int imax, object userState) {
            if ((this.GetCBZWBillListOperationCompleted == null)) {
                this.GetCBZWBillListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCBZWBillListOperationCompleted);
            }
            this.InvokeAsync("GetCBZWBillList", new object[] {
                        cblist,
                        banktype,
                        begindate,
                        enddate,
                        bankaccno,
                        checkstate,
                        istart,
                        imax}, this.GetCBZWBillListOperationCompleted, userState);
        }
        
        private void OnGetCBZWBillListOperationCompleted(object arg) {
            if ((this.GetCBZWBillListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCBZWBillListCompleted(this, new GetCBZWBillListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCBZWBillCount", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCBZWBillCount(string cblist, string banktype, string begindate, string enddate, string bankaccno, int checkstate) {
            object[] results = this.Invoke("GetCBZWBillCount", new object[] {
                        cblist,
                        banktype,
                        begindate,
                        enddate,
                        bankaccno,
                        checkstate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCBZWBillCount(string cblist, string banktype, string begindate, string enddate, string bankaccno, int checkstate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCBZWBillCount", new object[] {
                        cblist,
                        banktype,
                        begindate,
                        enddate,
                        bankaccno,
                        checkstate}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetCBZWBillCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCBZWBillCountAsync(string cblist, string banktype, string begindate, string enddate, string bankaccno, int checkstate) {
            this.GetCBZWBillCountAsync(cblist, banktype, begindate, enddate, bankaccno, checkstate, null);
        }
        
        /// <remarks/>
        public void GetCBZWBillCountAsync(string cblist, string banktype, string begindate, string enddate, string bankaccno, int checkstate, object userState) {
            if ((this.GetCBZWBillCountOperationCompleted == null)) {
                this.GetCBZWBillCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCBZWBillCountOperationCompleted);
            }
            this.InvokeAsync("GetCBZWBillCount", new object[] {
                        cblist,
                        banktype,
                        begindate,
                        enddate,
                        bankaccno,
                        checkstate}, this.GetCBZWBillCountOperationCompleted, userState);
        }
        
        private void OnGetCBZWBillCountOperationCompleted(object arg) {
            if ((this.GetCBZWBillCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCBZWBillCountCompleted(this, new GetCBZWBillCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/GetCBZWBillSumAmt", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCBZWBillSumAmt(string cblist, string banktype, string begindate, string enddate, string bankaccno, int checkstate) {
            object[] results = this.Invoke("GetCBZWBillSumAmt", new object[] {
                        cblist,
                        banktype,
                        begindate,
                        enddate,
                        bankaccno,
                        checkstate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCBZWBillSumAmt(string cblist, string banktype, string begindate, string enddate, string bankaccno, int checkstate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCBZWBillSumAmt", new object[] {
                        cblist,
                        banktype,
                        begindate,
                        enddate,
                        bankaccno,
                        checkstate}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetCBZWBillSumAmt(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCBZWBillSumAmtAsync(string cblist, string banktype, string begindate, string enddate, string bankaccno, int checkstate) {
            this.GetCBZWBillSumAmtAsync(cblist, banktype, begindate, enddate, bankaccno, checkstate, null);
        }
        
        /// <remarks/>
        public void GetCBZWBillSumAmtAsync(string cblist, string banktype, string begindate, string enddate, string bankaccno, int checkstate, object userState) {
            if ((this.GetCBZWBillSumAmtOperationCompleted == null)) {
                this.GetCBZWBillSumAmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCBZWBillSumAmtOperationCompleted);
            }
            this.InvokeAsync("GetCBZWBillSumAmt", new object[] {
                        cblist,
                        banktype,
                        begindate,
                        enddate,
                        bankaccno,
                        checkstate}, this.GetCBZWBillSumAmtOperationCompleted, userState);
        }
        
        private void OnGetCBZWBillSumAmtOperationCompleted(object arg) {
            if ((this.GetCBZWBillSumAmtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCBZWBillSumAmtCompleted(this, new GetCBZWBillSumAmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDirectErrCodeInfo", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryDirectErrCodeInfo(string bankType, string errCode, string errMsg, out string msg) {
            object[] results = this.Invoke("QueryDirectErrCodeInfo", new object[] {
                        bankType,
                        errCode,
                        errMsg});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDirectErrCodeInfo(string bankType, string errCode, string errMsg, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDirectErrCodeInfo", new object[] {
                        bankType,
                        errCode,
                        errMsg}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryDirectErrCodeInfo(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDirectErrCodeInfoAsync(string bankType, string errCode, string errMsg) {
            this.QueryDirectErrCodeInfoAsync(bankType, errCode, errMsg, null);
        }
        
        /// <remarks/>
        public void QueryDirectErrCodeInfoAsync(string bankType, string errCode, string errMsg, object userState) {
            if ((this.QueryDirectErrCodeInfoOperationCompleted == null)) {
                this.QueryDirectErrCodeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDirectErrCodeInfoOperationCompleted);
            }
            this.InvokeAsync("QueryDirectErrCodeInfo", new object[] {
                        bankType,
                        errCode,
                        errMsg}, this.QueryDirectErrCodeInfoOperationCompleted, userState);
        }
        
        private void OnQueryDirectErrCodeInfoOperationCompleted(object arg) {
            if ((this.QueryDirectErrCodeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDirectErrCodeInfoCompleted(this, new QueryDirectErrCodeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDirectErrCodeById", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_DIRECTPAY_ERRCODEINFO QueryDirectErrCodeById(string fid, out string msg) {
            object[] results = this.Invoke("QueryDirectErrCodeById", new object[] {
                        fid});
            msg = ((string)(results[1]));
            return ((T_DIRECTPAY_ERRCODEINFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDirectErrCodeById(string fid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDirectErrCodeById", new object[] {
                        fid}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_DIRECTPAY_ERRCODEINFO EndQueryDirectErrCodeById(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_DIRECTPAY_ERRCODEINFO)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDirectErrCodeByIdAsync(string fid) {
            this.QueryDirectErrCodeByIdAsync(fid, null);
        }
        
        /// <remarks/>
        public void QueryDirectErrCodeByIdAsync(string fid, object userState) {
            if ((this.QueryDirectErrCodeByIdOperationCompleted == null)) {
                this.QueryDirectErrCodeByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDirectErrCodeByIdOperationCompleted);
            }
            this.InvokeAsync("QueryDirectErrCodeById", new object[] {
                        fid}, this.QueryDirectErrCodeByIdOperationCompleted, userState);
        }
        
        private void OnQueryDirectErrCodeByIdOperationCompleted(object arg) {
            if ((this.QueryDirectErrCodeByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDirectErrCodeByIdCompleted(this, new QueryDirectErrCodeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryDirectErrCodeByObjid", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_DIRECTPAY_ERRCODEINFO QueryDirectErrCodeByObjid(string objid, string checkType, out string msg) {
            object[] results = this.Invoke("QueryDirectErrCodeByObjid", new object[] {
                        objid,
                        checkType});
            msg = ((string)(results[1]));
            return ((T_DIRECTPAY_ERRCODEINFO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDirectErrCodeByObjid(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDirectErrCodeByObjid", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public T_DIRECTPAY_ERRCODEINFO EndQueryDirectErrCodeByObjid(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((T_DIRECTPAY_ERRCODEINFO)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDirectErrCodeByObjidAsync(string objid, string checkType) {
            this.QueryDirectErrCodeByObjidAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryDirectErrCodeByObjidAsync(string objid, string checkType, object userState) {
            if ((this.QueryDirectErrCodeByObjidOperationCompleted == null)) {
                this.QueryDirectErrCodeByObjidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDirectErrCodeByObjidOperationCompleted);
            }
            this.InvokeAsync("QueryDirectErrCodeByObjid", new object[] {
                        objid,
                        checkType}, this.QueryDirectErrCodeByObjidOperationCompleted, userState);
        }
        
        private void OnQueryDirectErrCodeByObjidOperationCompleted(object arg) {
            if ((this.QueryDirectErrCodeByObjidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDirectErrCodeByObjidCompleted(this, new QueryDirectErrCodeByObjidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankPayAbility", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBankPayAbility(string bankType) {
            object[] results = this.Invoke("QueryBankPayAbility", new object[] {
                        bankType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankPayAbility(string bankType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankPayAbility", new object[] {
                        bankType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryBankPayAbility(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankPayAbilityAsync(string bankType) {
            this.QueryBankPayAbilityAsync(bankType, null);
        }
        
        /// <remarks/>
        public void QueryBankPayAbilityAsync(string bankType, object userState) {
            if ((this.QueryBankPayAbilityOperationCompleted == null)) {
                this.QueryBankPayAbilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankPayAbilityOperationCompleted);
            }
            this.InvokeAsync("QueryBankPayAbility", new object[] {
                        bankType}, this.QueryBankPayAbilityOperationCompleted, userState);
        }
        
        private void OnQueryBankPayAbilityOperationCompleted(object arg) {
            if ((this.QueryBankPayAbilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankPayAbilityCompleted(this, new QueryBankPayAbilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ListBankPayAbilities", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListBankPayAbilities(int pageIndex, int pageCount) {
            object[] results = this.Invoke("ListBankPayAbilities", new object[] {
                        pageIndex,
                        pageCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListBankPayAbilities(int pageIndex, int pageCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListBankPayAbilities", new object[] {
                        pageIndex,
                        pageCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndListBankPayAbilities(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListBankPayAbilitiesAsync(int pageIndex, int pageCount) {
            this.ListBankPayAbilitiesAsync(pageIndex, pageCount, null);
        }
        
        /// <remarks/>
        public void ListBankPayAbilitiesAsync(int pageIndex, int pageCount, object userState) {
            if ((this.ListBankPayAbilitiesOperationCompleted == null)) {
                this.ListBankPayAbilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListBankPayAbilitiesOperationCompleted);
            }
            this.InvokeAsync("ListBankPayAbilities", new object[] {
                        pageIndex,
                        pageCount}, this.ListBankPayAbilitiesOperationCompleted, userState);
        }
        
        private void OnListBankPayAbilitiesOperationCompleted(object arg) {
            if ((this.ListBankPayAbilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListBankPayAbilitiesCompleted(this, new ListBankPayAbilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankRefundAbility", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBankRefundAbility(string bankType) {
            object[] results = this.Invoke("QueryBankRefundAbility", new object[] {
                        bankType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankRefundAbility(string bankType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankRefundAbility", new object[] {
                        bankType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryBankRefundAbility(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankRefundAbilityAsync(string bankType) {
            this.QueryBankRefundAbilityAsync(bankType, null);
        }
        
        /// <remarks/>
        public void QueryBankRefundAbilityAsync(string bankType, object userState) {
            if ((this.QueryBankRefundAbilityOperationCompleted == null)) {
                this.QueryBankRefundAbilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankRefundAbilityOperationCompleted);
            }
            this.InvokeAsync("QueryBankRefundAbility", new object[] {
                        bankType}, this.QueryBankRefundAbilityOperationCompleted, userState);
        }
        
        private void OnQueryBankRefundAbilityOperationCompleted(object arg) {
            if ((this.QueryBankRefundAbilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankRefundAbilityCompleted(this, new QueryBankRefundAbilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/ListBankRefundAbilities", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListBankRefundAbilities(int pageIndex, int pageCount) {
            object[] results = this.Invoke("ListBankRefundAbilities", new object[] {
                        pageIndex,
                        pageCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListBankRefundAbilities(int pageIndex, int pageCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListBankRefundAbilities", new object[] {
                        pageIndex,
                        pageCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndListBankRefundAbilities(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListBankRefundAbilitiesAsync(int pageIndex, int pageCount) {
            this.ListBankRefundAbilitiesAsync(pageIndex, pageCount, null);
        }
        
        /// <remarks/>
        public void ListBankRefundAbilitiesAsync(int pageIndex, int pageCount, object userState) {
            if ((this.ListBankRefundAbilitiesOperationCompleted == null)) {
                this.ListBankRefundAbilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListBankRefundAbilitiesOperationCompleted);
            }
            this.InvokeAsync("ListBankRefundAbilities", new object[] {
                        pageIndex,
                        pageCount}, this.ListBankRefundAbilitiesOperationCompleted, userState);
        }
        
        private void OnListBankRefundAbilitiesOperationCompleted(object arg) {
            if ((this.ListBankRefundAbilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListBankRefundAbilitiesCompleted(this, new ListBankRefundAbilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankPayAbilityFromCheckP" +
            "arams", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PayProcessAbility QueryBankPayAbilityFromCheckParams(string objid, string checkType) {
            object[] results = this.Invoke("QueryBankPayAbilityFromCheckParams", new object[] {
                        objid,
                        checkType});
            return ((PayProcessAbility)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankPayAbilityFromCheckParams(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankPayAbilityFromCheckParams", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public PayProcessAbility EndQueryBankPayAbilityFromCheckParams(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PayProcessAbility)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankPayAbilityFromCheckParamsAsync(string objid, string checkType) {
            this.QueryBankPayAbilityFromCheckParamsAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryBankPayAbilityFromCheckParamsAsync(string objid, string checkType, object userState) {
            if ((this.QueryBankPayAbilityFromCheckParamsOperationCompleted == null)) {
                this.QueryBankPayAbilityFromCheckParamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankPayAbilityFromCheckParamsOperationCompleted);
            }
            this.InvokeAsync("QueryBankPayAbilityFromCheckParams", new object[] {
                        objid,
                        checkType}, this.QueryBankPayAbilityFromCheckParamsOperationCompleted, userState);
        }
        
        private void OnQueryBankPayAbilityFromCheckParamsOperationCompleted(object arg) {
            if ((this.QueryBankPayAbilityFromCheckParamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankPayAbilityFromCheckParamsCompleted(this, new QueryBankPayAbilityFromCheckParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryBankRefundAbilityFromChe" +
            "ckParams", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RefundProcessAbility QueryBankRefundAbilityFromCheckParams(string objid, string checkType) {
            object[] results = this.Invoke("QueryBankRefundAbilityFromCheckParams", new object[] {
                        objid,
                        checkType});
            return ((RefundProcessAbility)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryBankRefundAbilityFromCheckParams(string objid, string checkType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryBankRefundAbilityFromCheckParams", new object[] {
                        objid,
                        checkType}, callback, asyncState);
        }
        
        /// <remarks/>
        public RefundProcessAbility EndQueryBankRefundAbilityFromCheckParams(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RefundProcessAbility)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBankRefundAbilityFromCheckParamsAsync(string objid, string checkType) {
            this.QueryBankRefundAbilityFromCheckParamsAsync(objid, checkType, null);
        }
        
        /// <remarks/>
        public void QueryBankRefundAbilityFromCheckParamsAsync(string objid, string checkType, object userState) {
            if ((this.QueryBankRefundAbilityFromCheckParamsOperationCompleted == null)) {
                this.QueryBankRefundAbilityFromCheckParamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBankRefundAbilityFromCheckParamsOperationCompleted);
            }
            this.InvokeAsync("QueryBankRefundAbilityFromCheckParams", new object[] {
                        objid,
                        checkType}, this.QueryBankRefundAbilityFromCheckParamsOperationCompleted, userState);
        }
        
        private void OnQueryBankRefundAbilityFromCheckParamsOperationCompleted(object arg) {
            if ((this.QueryBankRefundAbilityFromCheckParamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBankRefundAbilityFromCheckParamsCompleted(this, new QueryBankRefundAbilityFromCheckParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryPaymentReturnStatistics", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryPaymentReturnStatistics(string bankType, string StatisticTime, int pageIndex, int pageSize) {
            object[] results = this.Invoke("QueryPaymentReturnStatistics", new object[] {
                        bankType,
                        StatisticTime,
                        pageIndex,
                        pageSize});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryPaymentReturnStatistics(string bankType, string StatisticTime, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryPaymentReturnStatistics", new object[] {
                        bankType,
                        StatisticTime,
                        pageIndex,
                        pageSize}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryPaymentReturnStatistics(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPaymentReturnStatisticsAsync(string bankType, string StatisticTime, int pageIndex, int pageSize) {
            this.QueryPaymentReturnStatisticsAsync(bankType, StatisticTime, pageIndex, pageSize, null);
        }
        
        /// <remarks/>
        public void QueryPaymentReturnStatisticsAsync(string bankType, string StatisticTime, int pageIndex, int pageSize, object userState) {
            if ((this.QueryPaymentReturnStatisticsOperationCompleted == null)) {
                this.QueryPaymentReturnStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPaymentReturnStatisticsOperationCompleted);
            }
            this.InvokeAsync("QueryPaymentReturnStatistics", new object[] {
                        bankType,
                        StatisticTime,
                        pageIndex,
                        pageSize}, this.QueryPaymentReturnStatisticsOperationCompleted, userState);
        }
        
        private void OnQueryPaymentReturnStatisticsOperationCompleted(object arg) {
            if ((this.QueryPaymentReturnStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPaymentReturnStatisticsCompleted(this, new QueryPaymentReturnStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryPaymentReturnDetails", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryPaymentReturnDetails(string bankType, System.DateTime applicationTime, string status, string buy_bank_type, int pageIndex, int pageSize) {
            object[] results = this.Invoke("QueryPaymentReturnDetails", new object[] {
                        bankType,
                        applicationTime,
                        status,
                        buy_bank_type,
                        pageIndex,
                        pageSize});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryPaymentReturnDetails(string bankType, System.DateTime applicationTime, string status, string buy_bank_type, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryPaymentReturnDetails", new object[] {
                        bankType,
                        applicationTime,
                        status,
                        buy_bank_type,
                        pageIndex,
                        pageSize}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryPaymentReturnDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPaymentReturnDetailsAsync(string bankType, System.DateTime applicationTime, string status, string buy_bank_type, int pageIndex, int pageSize) {
            this.QueryPaymentReturnDetailsAsync(bankType, applicationTime, status, buy_bank_type, pageIndex, pageSize, null);
        }
        
        /// <remarks/>
        public void QueryPaymentReturnDetailsAsync(string bankType, System.DateTime applicationTime, string status, string buy_bank_type, int pageIndex, int pageSize, object userState) {
            if ((this.QueryPaymentReturnDetailsOperationCompleted == null)) {
                this.QueryPaymentReturnDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPaymentReturnDetailsOperationCompleted);
            }
            this.InvokeAsync("QueryPaymentReturnDetails", new object[] {
                        bankType,
                        applicationTime,
                        status,
                        buy_bank_type,
                        pageIndex,
                        pageSize}, this.QueryPaymentReturnDetailsOperationCompleted, userState);
        }
        
        private void OnQueryPaymentReturnDetailsOperationCompleted(object arg) {
            if ((this.QueryPaymentReturnDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPaymentReturnDetailsCompleted(this, new QueryPaymentReturnDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryPaymentReturnDetailsSumT" +
            "otalAmt", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryPaymentReturnDetailsSumTotalAmt(string bankType, System.DateTime applicationTime, string status) {
            object[] results = this.Invoke("QueryPaymentReturnDetailsSumTotalAmt", new object[] {
                        bankType,
                        applicationTime,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryPaymentReturnDetailsSumTotalAmt(string bankType, System.DateTime applicationTime, string status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryPaymentReturnDetailsSumTotalAmt", new object[] {
                        bankType,
                        applicationTime,
                        status}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndQueryPaymentReturnDetailsSumTotalAmt(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPaymentReturnDetailsSumTotalAmtAsync(string bankType, System.DateTime applicationTime, string status) {
            this.QueryPaymentReturnDetailsSumTotalAmtAsync(bankType, applicationTime, status, null);
        }
        
        /// <remarks/>
        public void QueryPaymentReturnDetailsSumTotalAmtAsync(string bankType, System.DateTime applicationTime, string status, object userState) {
            if ((this.QueryPaymentReturnDetailsSumTotalAmtOperationCompleted == null)) {
                this.QueryPaymentReturnDetailsSumTotalAmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPaymentReturnDetailsSumTotalAmtOperationCompleted);
            }
            this.InvokeAsync("QueryPaymentReturnDetailsSumTotalAmt", new object[] {
                        bankType,
                        applicationTime,
                        status}, this.QueryPaymentReturnDetailsSumTotalAmtOperationCompleted, userState);
        }
        
        private void OnQueryPaymentReturnDetailsSumTotalAmtOperationCompleted(object arg) {
            if ((this.QueryPaymentReturnDetailsSumTotalAmtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPaymentReturnDetailsSumTotalAmtCompleted(this, new QueryPaymentReturnDetailsSumTotalAmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryPaymentReturnDetailsBank" +
            "Type", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryPaymentReturnDetailsBankType(string bankType, System.DateTime applicationTime, string status) {
            object[] results = this.Invoke("QueryPaymentReturnDetailsBankType", new object[] {
                        bankType,
                        applicationTime,
                        status});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryPaymentReturnDetailsBankType(string bankType, System.DateTime applicationTime, string status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryPaymentReturnDetailsBankType", new object[] {
                        bankType,
                        applicationTime,
                        status}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryPaymentReturnDetailsBankType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPaymentReturnDetailsBankTypeAsync(string bankType, System.DateTime applicationTime, string status) {
            this.QueryPaymentReturnDetailsBankTypeAsync(bankType, applicationTime, status, null);
        }
        
        /// <remarks/>
        public void QueryPaymentReturnDetailsBankTypeAsync(string bankType, System.DateTime applicationTime, string status, object userState) {
            if ((this.QueryPaymentReturnDetailsBankTypeOperationCompleted == null)) {
                this.QueryPaymentReturnDetailsBankTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPaymentReturnDetailsBankTypeOperationCompleted);
            }
            this.InvokeAsync("QueryPaymentReturnDetailsBankType", new object[] {
                        bankType,
                        applicationTime,
                        status}, this.QueryPaymentReturnDetailsBankTypeOperationCompleted, userState);
        }
        
        private void OnQueryPaymentReturnDetailsBankTypeOperationCompleted(object arg) {
            if ((this.QueryPaymentReturnDetailsBankTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPaymentReturnDetailsBankTypeCompleted(this, new QueryPaymentReturnDetailsBankTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Tencent.com/OSS/C2C/Finance/Query_WebService/QueryRefundSnopShotLog", RequestNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", ResponseNamespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryRefundSnopShotLog(out string msg) {
            object[] results = this.Invoke("QueryRefundSnopShotLog", new object[0]);
            msg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryRefundSnopShotLog(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryRefundSnopShotLog", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndQueryRefundSnopShotLog(System.IAsyncResult asyncResult, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryRefundSnopShotLogAsync() {
            this.QueryRefundSnopShotLogAsync(null);
        }
        
        /// <remarks/>
        public void QueryRefundSnopShotLogAsync(object userState) {
            if ((this.QueryRefundSnopShotLogOperationCompleted == null)) {
                this.QueryRefundSnopShotLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRefundSnopShotLogOperationCompleted);
            }
            this.InvokeAsync("QueryRefundSnopShotLog", new object[0], this.QueryRefundSnopShotLogOperationCompleted, userState);
        }
        
        private void OnQueryRefundSnopShotLogOperationCompleted(object arg) {
            if ((this.QueryRefundSnopShotLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRefundSnopShotLogCompleted(this, new QueryRefundSnopShotLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService", IsNullable=false)]
    public partial class Finance_Header : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string userPasswordField;
        
        private string userIPField;
        
        private string szKeyField;
        
        private int operIDField;
        
        private string rightStringField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string UserIP {
            get {
                return this.userIPField;
            }
            set {
                this.userIPField = value;
            }
        }
        
        /// <remarks/>
        public string SzKey {
            get {
                return this.szKeyField;
            }
            set {
                this.szKeyField = value;
            }
        }
        
        /// <remarks/>
        public int OperID {
            get {
                return this.operIDField;
            }
            set {
                this.operIDField = value;
            }
        }
        
        /// <remarks/>
        public string RightString {
            get {
                return this.rightStringField;
            }
            set {
                this.rightStringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefundProcessAbility))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PayProcessAbility))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public abstract partial class Ability {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class RefundProcessAbility : Ability {
        
        private string bankTypeField;
        
        private int refundMaxAmountField;
        
        private string cutDayField;
        
        private int supportRefundDayField;
        
        private RefundApproach majorRefundTypeField;
        
        private RefundInterfaceReqQuantity iReqQuantityField;
        
        private RefundInterfaceResultImport iImportTypeField;
        
        private RefundApproach minorRefundTypeField;
        
        private int maxPackagePerDayField;
        
        private int maxPackageCountField;
        
        private int refundAmountField;
        
        private string payBankNameField;
        
        private string payBankProvinceField;
        
        private string payBankCityField;
        
        private string payBankTypeField;
        
        private BankCardType payBankCardTypeField;
        
        private BankAccountType payBankAccontTypeField;
        
        private POSDBPosition pOSDBPositionField;
        
        private string createUserField;
        
        private System.DateTime createTimeField;
        
        private string updateUserField;
        
        private System.DateTime updateTimeField;
        
        /// <remarks/>
        public string BankType {
            get {
                return this.bankTypeField;
            }
            set {
                this.bankTypeField = value;
            }
        }
        
        /// <remarks/>
        public int RefundMaxAmount {
            get {
                return this.refundMaxAmountField;
            }
            set {
                this.refundMaxAmountField = value;
            }
        }
        
        /// <remarks/>
        public string CutDay {
            get {
                return this.cutDayField;
            }
            set {
                this.cutDayField = value;
            }
        }
        
        /// <remarks/>
        public int SupportRefundDay {
            get {
                return this.supportRefundDayField;
            }
            set {
                this.supportRefundDayField = value;
            }
        }
        
        /// <remarks/>
        public RefundApproach MajorRefundType {
            get {
                return this.majorRefundTypeField;
            }
            set {
                this.majorRefundTypeField = value;
            }
        }
        
        /// <remarks/>
        public RefundInterfaceReqQuantity IReqQuantity {
            get {
                return this.iReqQuantityField;
            }
            set {
                this.iReqQuantityField = value;
            }
        }
        
        /// <remarks/>
        public RefundInterfaceResultImport IImportType {
            get {
                return this.iImportTypeField;
            }
            set {
                this.iImportTypeField = value;
            }
        }
        
        /// <remarks/>
        public RefundApproach MinorRefundType {
            get {
                return this.minorRefundTypeField;
            }
            set {
                this.minorRefundTypeField = value;
            }
        }
        
        /// <remarks/>
        public int MaxPackagePerDay {
            get {
                return this.maxPackagePerDayField;
            }
            set {
                this.maxPackagePerDayField = value;
            }
        }
        
        /// <remarks/>
        public int MaxPackageCount {
            get {
                return this.maxPackageCountField;
            }
            set {
                this.maxPackageCountField = value;
            }
        }
        
        /// <remarks/>
        public int RefundAmount {
            get {
                return this.refundAmountField;
            }
            set {
                this.refundAmountField = value;
            }
        }
        
        /// <remarks/>
        public string PayBankName {
            get {
                return this.payBankNameField;
            }
            set {
                this.payBankNameField = value;
            }
        }
        
        /// <remarks/>
        public string PayBankProvince {
            get {
                return this.payBankProvinceField;
            }
            set {
                this.payBankProvinceField = value;
            }
        }
        
        /// <remarks/>
        public string PayBankCity {
            get {
                return this.payBankCityField;
            }
            set {
                this.payBankCityField = value;
            }
        }
        
        /// <remarks/>
        public string PayBankType {
            get {
                return this.payBankTypeField;
            }
            set {
                this.payBankTypeField = value;
            }
        }
        
        /// <remarks/>
        public BankCardType PayBankCardType {
            get {
                return this.payBankCardTypeField;
            }
            set {
                this.payBankCardTypeField = value;
            }
        }
        
        /// <remarks/>
        public BankAccountType PayBankAccontType {
            get {
                return this.payBankAccontTypeField;
            }
            set {
                this.payBankAccontTypeField = value;
            }
        }
        
        /// <remarks/>
        public POSDBPosition POSDBPosition {
            get {
                return this.pOSDBPositionField;
            }
            set {
                this.pOSDBPositionField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateUser {
            get {
                return this.updateUserField;
            }
            set {
                this.updateUserField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UpdateTime {
            get {
                return this.updateTimeField;
            }
            set {
                this.updateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public enum RefundApproach {
        
        /// <remarks/>
        NoSupport,
        
        /// <remarks/>
        Interface,
        
        /// <remarks/>
        NetBank,
        
        /// <remarks/>
        Authorization,
        
        /// <remarks/>
        Payment,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public enum RefundInterfaceReqQuantity {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        Single,
        
        /// <remarks/>
        Batch,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public enum RefundInterfaceResultImport {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        RealTime,
        
        /// <remarks/>
        Query,
        
        /// <remarks/>
        ByBatch,
        
        /// <remarks/>
        ByDay,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public enum BankCardType {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        DebitCard,
        
        /// <remarks/>
        CreditCard,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public enum BankAccountType {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        Person,
        
        /// <remarks/>
        Company,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public enum POSDBPosition {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        Legacy,
        
        /// <remarks/>
        New,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class PayProcessAbility : Ability {
        
        private string bankTypeField;
        
        private PayApproach supportPayTypeField;
        
        private SupportSelfPayment ownPayTypeField;
        
        private int payMaxAmtField;
        
        private int payMaxCountField;
        
        private BankCardType cardTypeField;
        
        private long payAmtField;
        
        private int payCountField;
        
        private string createUserField;
        
        private System.DateTime createTimeField;
        
        private string updateUserField;
        
        private System.DateTime updateTimeField;
        
        /// <remarks/>
        public string BankType {
            get {
                return this.bankTypeField;
            }
            set {
                this.bankTypeField = value;
            }
        }
        
        /// <remarks/>
        public PayApproach SupportPayType {
            get {
                return this.supportPayTypeField;
            }
            set {
                this.supportPayTypeField = value;
            }
        }
        
        /// <remarks/>
        public SupportSelfPayment OwnPayType {
            get {
                return this.ownPayTypeField;
            }
            set {
                this.ownPayTypeField = value;
            }
        }
        
        /// <remarks/>
        public int PayMaxAmt {
            get {
                return this.payMaxAmtField;
            }
            set {
                this.payMaxAmtField = value;
            }
        }
        
        /// <remarks/>
        public int PayMaxCount {
            get {
                return this.payMaxCountField;
            }
            set {
                this.payMaxCountField = value;
            }
        }
        
        /// <remarks/>
        public BankCardType CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        public long PayAmt {
            get {
                return this.payAmtField;
            }
            set {
                this.payAmtField = value;
            }
        }
        
        /// <remarks/>
        public int PayCount {
            get {
                return this.payCountField;
            }
            set {
                this.payCountField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateUser {
            get {
                return this.updateUserField;
            }
            set {
                this.updateUserField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UpdateTime {
            get {
                return this.updateTimeField;
            }
            set {
                this.updateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public enum PayApproach {
        
        /// <remarks/>
        NetBank,
        
        /// <remarks/>
        DirectPay,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public enum SupportSelfPayment {
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        Yes,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class SysBulletinClass {
        
        private int fIDField;
        
        private int fSysIDField;
        
        private int fIsNewField;
        
        private string fTitleField;
        
        private string fUrlField;
        
        private string fissueTimeField;
        
        private string fLastTimeField;
        
        private string fuserIdField;
        
        private int fIsRedField;
        
        /// <remarks/>
        public int FID {
            get {
                return this.fIDField;
            }
            set {
                this.fIDField = value;
            }
        }
        
        /// <remarks/>
        public int FSysID {
            get {
                return this.fSysIDField;
            }
            set {
                this.fSysIDField = value;
            }
        }
        
        /// <remarks/>
        public int FIsNew {
            get {
                return this.fIsNewField;
            }
            set {
                this.fIsNewField = value;
            }
        }
        
        /// <remarks/>
        public string FTitle {
            get {
                return this.fTitleField;
            }
            set {
                this.fTitleField = value;
            }
        }
        
        /// <remarks/>
        public string FUrl {
            get {
                return this.fUrlField;
            }
            set {
                this.fUrlField = value;
            }
        }
        
        /// <remarks/>
        public string FissueTime {
            get {
                return this.fissueTimeField;
            }
            set {
                this.fissueTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FLastTime {
            get {
                return this.fLastTimeField;
            }
            set {
                this.fLastTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FuserId {
            get {
                return this.fuserIdField;
            }
            set {
                this.fuserIdField = value;
            }
        }
        
        /// <remarks/>
        public int FIsRed {
            get {
                return this.fIsRedField;
            }
            set {
                this.fIsRedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class FreezeInfo {
        
        private string fidField;
        
        private string usernameField;
        
        private string contactField;
        
        private int fFreezeTypeField;
        
        private string fFreezeIDField;
        
        private string fFreezeReasonField;
        
        private string fHandleResultField;
        
        /// <remarks/>
        public string fid {
            get {
                return this.fidField;
            }
            set {
                this.fidField = value;
            }
        }
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public int FFreezeType {
            get {
                return this.fFreezeTypeField;
            }
            set {
                this.fFreezeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FFreezeID {
            get {
                return this.fFreezeIDField;
            }
            set {
                this.fFreezeIDField = value;
            }
        }
        
        /// <remarks/>
        public string FFreezeReason {
            get {
                return this.fFreezeReasonField;
            }
            set {
                this.fFreezeReasonField = value;
            }
        }
        
        /// <remarks/>
        public string FHandleResult {
            get {
                return this.fHandleResultField;
            }
            set {
                this.fHandleResultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class CheckLevelInfo {
        
        private int fLevelIndexField;
        
        private string fUserIDField;
        
        private string fLevelNameField;
        
        private string fCheckField;
        
        /// <remarks/>
        public int FLevelIndex {
            get {
                return this.fLevelIndexField;
            }
            set {
                this.fLevelIndexField = value;
            }
        }
        
        /// <remarks/>
        public string FUserID {
            get {
                return this.fUserIDField;
            }
            set {
                this.fUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string FLevelName {
            get {
                return this.fLevelNameField;
            }
            set {
                this.fLevelNameField = value;
            }
        }
        
        /// <remarks/>
        public string FCheck {
            get {
                return this.fCheckField;
            }
            set {
                this.fCheckField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_CheckType {
        
        private bool isNewField;
        
        private string fTypeIDField;
        
        private string fTypeNameField;
        
        private int fRoadTypeField;
        
        private int fActionTypeField;
        
        private CheckLevelInfo[] levelInfoField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string FTypeID {
            get {
                return this.fTypeIDField;
            }
            set {
                this.fTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string FTypeName {
            get {
                return this.fTypeNameField;
            }
            set {
                this.fTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public int FRoadType {
            get {
                return this.fRoadTypeField;
            }
            set {
                this.fRoadTypeField = value;
            }
        }
        
        /// <remarks/>
        public int FActionType {
            get {
                return this.fActionTypeField;
            }
            set {
                this.fActionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public CheckLevelInfo[] LevelInfo {
            get {
                return this.levelInfoField;
            }
            set {
                this.levelInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class TCreateSessionReply {
        
        private int opResultField;
        
        private string szKeyField;
        
        private int operIdField;
        
        private string rightStringField;
        
        /// <remarks/>
        public int OpResult {
            get {
                return this.opResultField;
            }
            set {
                this.opResultField = value;
            }
        }
        
        /// <remarks/>
        public string szKey {
            get {
                return this.szKeyField;
            }
            set {
                this.szKeyField = value;
            }
        }
        
        /// <remarks/>
        public int OperId {
            get {
                return this.operIdField;
            }
            set {
                this.operIdField = value;
            }
        }
        
        /// <remarks/>
        public string RightString {
            get {
                return this.rightStringField;
            }
            set {
                this.rightStringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_DIRECTPAY_ERRCODEINFO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_DIRECTPAY_NCINFO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_PUCNEWSERVICE_INFO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_CEP_BANKCHANNEL_CLASS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_BANKBULLETIN_INFO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_FILE_MODEL_RELATION))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_BANK_CLASS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_BANK_CODE))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_BANK_KEYS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_BANK_INFO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_PRODUCT))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_SUBJECT))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(C2CDB_T_TC_BANK))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_DIC))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_ZWDic_Info))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_GWQ_Account))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_Export_Bankrest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_Export_Task_Tmp))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_Export_Task_Comm))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_Export_Bank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_GWQ))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_COIN_PUB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(T_USER_MED))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_CLASS_BASIC {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_DIRECTPAY_ERRCODEINFO : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fIdField;
        
        private string fBankTypeField;
        
        private string fCodeTypeField;
        
        private string ferrCodeField;
        
        private string ferrMsgField;
        
        private string fTrueStateField;
        
        private string fAddUserField;
        
        private string fAddIPField;
        
        private string fAddTimeField;
        
        private string fModifyTimeField;
        
        private string fstandby1Field;
        
        private string fstandby2Field;
        
        private string fstandby3Field;
        
        private string fstandby4Field;
        
        private string returnUrlField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string FId {
            get {
                return this.fIdField;
            }
            set {
                this.fIdField = value;
            }
        }
        
        /// <remarks/>
        public string FBankType {
            get {
                return this.fBankTypeField;
            }
            set {
                this.fBankTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FCodeType {
            get {
                return this.fCodeTypeField;
            }
            set {
                this.fCodeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FerrCode {
            get {
                return this.ferrCodeField;
            }
            set {
                this.ferrCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FerrMsg {
            get {
                return this.ferrMsgField;
            }
            set {
                this.ferrMsgField = value;
            }
        }
        
        /// <remarks/>
        public string FTrueState {
            get {
                return this.fTrueStateField;
            }
            set {
                this.fTrueStateField = value;
            }
        }
        
        /// <remarks/>
        public string FAddUser {
            get {
                return this.fAddUserField;
            }
            set {
                this.fAddUserField = value;
            }
        }
        
        /// <remarks/>
        public string FAddIP {
            get {
                return this.fAddIPField;
            }
            set {
                this.fAddIPField = value;
            }
        }
        
        /// <remarks/>
        public string FAddTime {
            get {
                return this.fAddTimeField;
            }
            set {
                this.fAddTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FModifyTime {
            get {
                return this.fModifyTimeField;
            }
            set {
                this.fModifyTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Fstandby1 {
            get {
                return this.fstandby1Field;
            }
            set {
                this.fstandby1Field = value;
            }
        }
        
        /// <remarks/>
        public string Fstandby2 {
            get {
                return this.fstandby2Field;
            }
            set {
                this.fstandby2Field = value;
            }
        }
        
        /// <remarks/>
        public string Fstandby3 {
            get {
                return this.fstandby3Field;
            }
            set {
                this.fstandby3Field = value;
            }
        }
        
        /// <remarks/>
        public string Fstandby4 {
            get {
                return this.fstandby4Field;
            }
            set {
                this.fstandby4Field = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_DIRECTPAY_NCINFO : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fIdField;
        
        private string fBankTypeField;
        
        private string fCurrUseNCField;
        
        private string fMainNCInfoField;
        
        private string fStandbbyNCInfoField;
        
        private string fModifyInfoField;
        
        private string fModifyUserField;
        
        private string fModifyTimeField;
        
        private string fEnabelFlagField;
        
        private string returnUrlField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string FId {
            get {
                return this.fIdField;
            }
            set {
                this.fIdField = value;
            }
        }
        
        /// <remarks/>
        public string FBankType {
            get {
                return this.fBankTypeField;
            }
            set {
                this.fBankTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FCurrUseNC {
            get {
                return this.fCurrUseNCField;
            }
            set {
                this.fCurrUseNCField = value;
            }
        }
        
        /// <remarks/>
        public string FMainNCInfo {
            get {
                return this.fMainNCInfoField;
            }
            set {
                this.fMainNCInfoField = value;
            }
        }
        
        /// <remarks/>
        public string FStandbbyNCInfo {
            get {
                return this.fStandbbyNCInfoField;
            }
            set {
                this.fStandbbyNCInfoField = value;
            }
        }
        
        /// <remarks/>
        public string FModifyInfo {
            get {
                return this.fModifyInfoField;
            }
            set {
                this.fModifyInfoField = value;
            }
        }
        
        /// <remarks/>
        public string FModifyUser {
            get {
                return this.fModifyUserField;
            }
            set {
                this.fModifyUserField = value;
            }
        }
        
        /// <remarks/>
        public string FModifyTime {
            get {
                return this.fModifyTimeField;
            }
            set {
                this.fModifyTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FEnabelFlag {
            get {
                return this.fEnabelFlagField;
            }
            set {
                this.fEnabelFlagField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_PUCNEWSERVICE_INFO : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fservicecodeField;
        
        private string fuctypeField;
        
        private string ftipsField;
        
        private string fstartimeField;
        
        private string fendtimeField;
        
        private string fupdatetimeField;
        
        private string returnUrlField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string Fservicecode {
            get {
                return this.fservicecodeField;
            }
            set {
                this.fservicecodeField = value;
            }
        }
        
        /// <remarks/>
        public string Fuctype {
            get {
                return this.fuctypeField;
            }
            set {
                this.fuctypeField = value;
            }
        }
        
        /// <remarks/>
        public string Ftips {
            get {
                return this.ftipsField;
            }
            set {
                this.ftipsField = value;
            }
        }
        
        /// <remarks/>
        public string Fstartime {
            get {
                return this.fstartimeField;
            }
            set {
                this.fstartimeField = value;
            }
        }
        
        /// <remarks/>
        public string Fendtime {
            get {
                return this.fendtimeField;
            }
            set {
                this.fendtimeField = value;
            }
        }
        
        /// <remarks/>
        public string Fupdatetime {
            get {
                return this.fupdatetimeField;
            }
            set {
                this.fupdatetimeField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_CEP_BANKCHANNEL_CLASS : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string findexField;
        
        private string fbank_snameField;
        
        private string fbank_channelField;
        
        private string fbank_typeField;
        
        private string fchannelField;
        
        private string fbank_valitypeField;
        
        private string finterface_maskField;
        
        private string fbankacc_typeField;
        
        private string fbankacc_attrField;
        
        private string fiterface_typeField;
        
        private string fenable_flagField;
        
        private string fbank_feeField;
        
        private string ftimeoutField;
        
        private string frsp_timeField;
        
        private string fstandby1Field;
        
        private string fstandby2Field;
        
        private string fstandby4Field;
        
        private string returnUrlField;
        
        private string fcheck_allField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string Findex {
            get {
                return this.findexField;
            }
            set {
                this.findexField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_sname {
            get {
                return this.fbank_snameField;
            }
            set {
                this.fbank_snameField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_channel {
            get {
                return this.fbank_channelField;
            }
            set {
                this.fbank_channelField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_type {
            get {
                return this.fbank_typeField;
            }
            set {
                this.fbank_typeField = value;
            }
        }
        
        /// <remarks/>
        public string Fchannel {
            get {
                return this.fchannelField;
            }
            set {
                this.fchannelField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_valitype {
            get {
                return this.fbank_valitypeField;
            }
            set {
                this.fbank_valitypeField = value;
            }
        }
        
        /// <remarks/>
        public string Finterface_mask {
            get {
                return this.finterface_maskField;
            }
            set {
                this.finterface_maskField = value;
            }
        }
        
        /// <remarks/>
        public string Fbankacc_type {
            get {
                return this.fbankacc_typeField;
            }
            set {
                this.fbankacc_typeField = value;
            }
        }
        
        /// <remarks/>
        public string Fbankacc_attr {
            get {
                return this.fbankacc_attrField;
            }
            set {
                this.fbankacc_attrField = value;
            }
        }
        
        /// <remarks/>
        public string Fiterface_type {
            get {
                return this.fiterface_typeField;
            }
            set {
                this.fiterface_typeField = value;
            }
        }
        
        /// <remarks/>
        public string Fenable_flag {
            get {
                return this.fenable_flagField;
            }
            set {
                this.fenable_flagField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_fee {
            get {
                return this.fbank_feeField;
            }
            set {
                this.fbank_feeField = value;
            }
        }
        
        /// <remarks/>
        public string Ftimeout {
            get {
                return this.ftimeoutField;
            }
            set {
                this.ftimeoutField = value;
            }
        }
        
        /// <remarks/>
        public string Frsp_time {
            get {
                return this.frsp_timeField;
            }
            set {
                this.frsp_timeField = value;
            }
        }
        
        /// <remarks/>
        public string Fstandby1 {
            get {
                return this.fstandby1Field;
            }
            set {
                this.fstandby1Field = value;
            }
        }
        
        /// <remarks/>
        public string Fstandby2 {
            get {
                return this.fstandby2Field;
            }
            set {
                this.fstandby2Field = value;
            }
        }
        
        /// <remarks/>
        public string Fstandby4 {
            get {
                return this.fstandby4Field;
            }
            set {
                this.fstandby4Field = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public string Fcheck_all {
            get {
                return this.fcheck_allField;
            }
            set {
                this.fcheck_allField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_BANKBULLETIN_INFO : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private bool isOPenField;
        
        private string fbanktypeField;
        
        private string ftitleField;
        
        private string fmaintextField;
        
        private string fstartimeField;
        
        private string fendtimeField;
        
        private string fcreateuserField;
        
        private string fcreatetimeField;
        
        private string fupdateuserField;
        
        private string fupdatetimeField;
        
        private string returnUrlField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOPen {
            get {
                return this.isOPenField;
            }
            set {
                this.isOPenField = value;
            }
        }
        
        /// <remarks/>
        public string Fbanktype {
            get {
                return this.fbanktypeField;
            }
            set {
                this.fbanktypeField = value;
            }
        }
        
        /// <remarks/>
        public string Ftitle {
            get {
                return this.ftitleField;
            }
            set {
                this.ftitleField = value;
            }
        }
        
        /// <remarks/>
        public string Fmaintext {
            get {
                return this.fmaintextField;
            }
            set {
                this.fmaintextField = value;
            }
        }
        
        /// <remarks/>
        public string Fstartime {
            get {
                return this.fstartimeField;
            }
            set {
                this.fstartimeField = value;
            }
        }
        
        /// <remarks/>
        public string Fendtime {
            get {
                return this.fendtimeField;
            }
            set {
                this.fendtimeField = value;
            }
        }
        
        /// <remarks/>
        public string Fcreateuser {
            get {
                return this.fcreateuserField;
            }
            set {
                this.fcreateuserField = value;
            }
        }
        
        /// <remarks/>
        public string Fcreatetime {
            get {
                return this.fcreatetimeField;
            }
            set {
                this.fcreatetimeField = value;
            }
        }
        
        /// <remarks/>
        public string Fupdateuser {
            get {
                return this.fupdateuserField;
            }
            set {
                this.fupdateuserField = value;
            }
        }
        
        /// <remarks/>
        public string Fupdatetime {
            get {
                return this.fupdatetimeField;
            }
            set {
                this.fupdatetimeField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_FILE_MODEL_RELATION : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fRelationIDField;
        
        private string fBank_TypeField;
        
        private string fFile_TypeField;
        
        private string fUser_TypeField;
        
        private string fModel_NameField;
        
        private string fValid_StartTimeField;
        
        private string fValid_EndTimeField;
        
        private string returnUrlField;
        
        private string operTypeField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string FRelationID {
            get {
                return this.fRelationIDField;
            }
            set {
                this.fRelationIDField = value;
            }
        }
        
        /// <remarks/>
        public string FBank_Type {
            get {
                return this.fBank_TypeField;
            }
            set {
                this.fBank_TypeField = value;
            }
        }
        
        /// <remarks/>
        public string FFile_Type {
            get {
                return this.fFile_TypeField;
            }
            set {
                this.fFile_TypeField = value;
            }
        }
        
        /// <remarks/>
        public string FUser_Type {
            get {
                return this.fUser_TypeField;
            }
            set {
                this.fUser_TypeField = value;
            }
        }
        
        /// <remarks/>
        public string FModel_Name {
            get {
                return this.fModel_NameField;
            }
            set {
                this.fModel_NameField = value;
            }
        }
        
        /// <remarks/>
        public string FValid_StartTime {
            get {
                return this.fValid_StartTimeField;
            }
            set {
                this.fValid_StartTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FValid_EndTime {
            get {
                return this.fValid_EndTimeField;
            }
            set {
                this.fValid_EndTimeField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public string OperType {
            get {
                return this.operTypeField;
            }
            set {
                this.operTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_BANK_CLASS : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fbank_typeField;
        
        private string fbank_nameField;
        
        private string fFlag1Field;
        
        private string fFlag1_1Field;
        
        private string fFlag2Field;
        
        private string fFlag2_1Field;
        
        private string fFlag2_2Field;
        
        private string fvalid_flagField;
        
        private string returnUrlField;
        
        private string operTypeField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_type {
            get {
                return this.fbank_typeField;
            }
            set {
                this.fbank_typeField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_name {
            get {
                return this.fbank_nameField;
            }
            set {
                this.fbank_nameField = value;
            }
        }
        
        /// <remarks/>
        public string FFlag1 {
            get {
                return this.fFlag1Field;
            }
            set {
                this.fFlag1Field = value;
            }
        }
        
        /// <remarks/>
        public string FFlag1_1 {
            get {
                return this.fFlag1_1Field;
            }
            set {
                this.fFlag1_1Field = value;
            }
        }
        
        /// <remarks/>
        public string FFlag2 {
            get {
                return this.fFlag2Field;
            }
            set {
                this.fFlag2Field = value;
            }
        }
        
        /// <remarks/>
        public string FFlag2_1 {
            get {
                return this.fFlag2_1Field;
            }
            set {
                this.fFlag2_1Field = value;
            }
        }
        
        /// <remarks/>
        public string FFlag2_2 {
            get {
                return this.fFlag2_2Field;
            }
            set {
                this.fFlag2_2Field = value;
            }
        }
        
        /// <remarks/>
        public string Fvalid_flag {
            get {
                return this.fvalid_flagField;
            }
            set {
                this.fvalid_flagField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public string OperType {
            get {
                return this.operTypeField;
            }
            set {
                this.operTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_BANK_CODE : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fbank_char_codeField;
        
        private string fbank_parent_charField;
        
        private string fpriorityField;
        
        private string fbank_num_codeField;
        
        private string returnUrlField;
        
        private string operTypeField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_char_code {
            get {
                return this.fbank_char_codeField;
            }
            set {
                this.fbank_char_codeField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_parent_char {
            get {
                return this.fbank_parent_charField;
            }
            set {
                this.fbank_parent_charField = value;
            }
        }
        
        /// <remarks/>
        public string Fpriority {
            get {
                return this.fpriorityField;
            }
            set {
                this.fpriorityField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_num_code {
            get {
                return this.fbank_num_codeField;
            }
            set {
                this.fbank_num_codeField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public string OperType {
            get {
                return this.operTypeField;
            }
            set {
                this.operTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_BANK_KEYS : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fbank_typeField;
        
        private string fkey_idField;
        
        private string fkey_flagField;
        
        private string fkey_statusField;
        
        private string fpublic_keyField;
        
        private string fprivate_keyField;
        
        private string fenable_dateField;
        
        private string fexpire_dateField;
        
        private string fdisable_dateField;
        
        private string fmodify_dateField;
        
        private string returnUrlField;
        
        private string operTypeField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_type {
            get {
                return this.fbank_typeField;
            }
            set {
                this.fbank_typeField = value;
            }
        }
        
        /// <remarks/>
        public string Fkey_id {
            get {
                return this.fkey_idField;
            }
            set {
                this.fkey_idField = value;
            }
        }
        
        /// <remarks/>
        public string Fkey_flag {
            get {
                return this.fkey_flagField;
            }
            set {
                this.fkey_flagField = value;
            }
        }
        
        /// <remarks/>
        public string Fkey_status {
            get {
                return this.fkey_statusField;
            }
            set {
                this.fkey_statusField = value;
            }
        }
        
        /// <remarks/>
        public string Fpublic_key {
            get {
                return this.fpublic_keyField;
            }
            set {
                this.fpublic_keyField = value;
            }
        }
        
        /// <remarks/>
        public string Fprivate_key {
            get {
                return this.fprivate_keyField;
            }
            set {
                this.fprivate_keyField = value;
            }
        }
        
        /// <remarks/>
        public string Fenable_date {
            get {
                return this.fenable_dateField;
            }
            set {
                this.fenable_dateField = value;
            }
        }
        
        /// <remarks/>
        public string Fexpire_date {
            get {
                return this.fexpire_dateField;
            }
            set {
                this.fexpire_dateField = value;
            }
        }
        
        /// <remarks/>
        public string Fdisable_date {
            get {
                return this.fdisable_dateField;
            }
            set {
                this.fdisable_dateField = value;
            }
        }
        
        /// <remarks/>
        public string Fmodify_date {
            get {
                return this.fmodify_dateField;
            }
            set {
                this.fmodify_dateField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public string OperType {
            get {
                return this.operTypeField;
            }
            set {
                this.operTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_BANK_INFO : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fbank_typeField;
        
        private string finst_idField;
        
        private string fmerch_codeField;
        
        private string fbank_nameField;
        
        private string fop_statusField;
        
        private string fservice_urlField;
        
        private string fnet_bank_flagField;
        
        private string fnet_bank_urlField;
        
        private string fop_support_flagField;
        
        private string fmax_card_countField;
        
        private string fbind_card_typeField;
        
        private string fsingle_pay_quotaField;
        
        private string fday_pay_quotaField;
        
        private string fop_start_timeField;
        
        private string fop_end_timeField;
        
        private string fmodify_timeField;
        
        private string fi_standbyField;
        
        private string returnUrlField;
        
        private string operTypeField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_type {
            get {
                return this.fbank_typeField;
            }
            set {
                this.fbank_typeField = value;
            }
        }
        
        /// <remarks/>
        public string Finst_id {
            get {
                return this.finst_idField;
            }
            set {
                this.finst_idField = value;
            }
        }
        
        /// <remarks/>
        public string Fmerch_code {
            get {
                return this.fmerch_codeField;
            }
            set {
                this.fmerch_codeField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_name {
            get {
                return this.fbank_nameField;
            }
            set {
                this.fbank_nameField = value;
            }
        }
        
        /// <remarks/>
        public string Fop_status {
            get {
                return this.fop_statusField;
            }
            set {
                this.fop_statusField = value;
            }
        }
        
        /// <remarks/>
        public string Fservice_url {
            get {
                return this.fservice_urlField;
            }
            set {
                this.fservice_urlField = value;
            }
        }
        
        /// <remarks/>
        public string Fnet_bank_flag {
            get {
                return this.fnet_bank_flagField;
            }
            set {
                this.fnet_bank_flagField = value;
            }
        }
        
        /// <remarks/>
        public string Fnet_bank_url {
            get {
                return this.fnet_bank_urlField;
            }
            set {
                this.fnet_bank_urlField = value;
            }
        }
        
        /// <remarks/>
        public string Fop_support_flag {
            get {
                return this.fop_support_flagField;
            }
            set {
                this.fop_support_flagField = value;
            }
        }
        
        /// <remarks/>
        public string Fmax_card_count {
            get {
                return this.fmax_card_countField;
            }
            set {
                this.fmax_card_countField = value;
            }
        }
        
        /// <remarks/>
        public string Fbind_card_type {
            get {
                return this.fbind_card_typeField;
            }
            set {
                this.fbind_card_typeField = value;
            }
        }
        
        /// <remarks/>
        public string Fsingle_pay_quota {
            get {
                return this.fsingle_pay_quotaField;
            }
            set {
                this.fsingle_pay_quotaField = value;
            }
        }
        
        /// <remarks/>
        public string Fday_pay_quota {
            get {
                return this.fday_pay_quotaField;
            }
            set {
                this.fday_pay_quotaField = value;
            }
        }
        
        /// <remarks/>
        public string Fop_start_time {
            get {
                return this.fop_start_timeField;
            }
            set {
                this.fop_start_timeField = value;
            }
        }
        
        /// <remarks/>
        public string Fop_end_time {
            get {
                return this.fop_end_timeField;
            }
            set {
                this.fop_end_timeField = value;
            }
        }
        
        /// <remarks/>
        public string Fmodify_time {
            get {
                return this.fmodify_timeField;
            }
            set {
                this.fmodify_timeField = value;
            }
        }
        
        /// <remarks/>
        public string Fi_standby {
            get {
                return this.fi_standbyField;
            }
            set {
                this.fi_standbyField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public string OperType {
            get {
                return this.operTypeField;
            }
            set {
                this.operTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_PRODUCT : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fProductNoField;
        
        private string fNameField;
        
        private string fcurtypeField;
        
        private string fItemField;
        
        private string fMinValueField;
        
        private string fMaxValueField;
        
        private string fStartDateField;
        
        private string fEndDateField;
        
        private string fInUseField;
        
        private string fmodifyTimeField;
        
        private string returnUrlField;
        
        private string operTypeField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string FProductNo {
            get {
                return this.fProductNoField;
            }
            set {
                this.fProductNoField = value;
            }
        }
        
        /// <remarks/>
        public string FName {
            get {
                return this.fNameField;
            }
            set {
                this.fNameField = value;
            }
        }
        
        /// <remarks/>
        public string Fcurtype {
            get {
                return this.fcurtypeField;
            }
            set {
                this.fcurtypeField = value;
            }
        }
        
        /// <remarks/>
        public string FItem {
            get {
                return this.fItemField;
            }
            set {
                this.fItemField = value;
            }
        }
        
        /// <remarks/>
        public string FMinValue {
            get {
                return this.fMinValueField;
            }
            set {
                this.fMinValueField = value;
            }
        }
        
        /// <remarks/>
        public string FMaxValue {
            get {
                return this.fMaxValueField;
            }
            set {
                this.fMaxValueField = value;
            }
        }
        
        /// <remarks/>
        public string FStartDate {
            get {
                return this.fStartDateField;
            }
            set {
                this.fStartDateField = value;
            }
        }
        
        /// <remarks/>
        public string FEndDate {
            get {
                return this.fEndDateField;
            }
            set {
                this.fEndDateField = value;
            }
        }
        
        /// <remarks/>
        public string FInUse {
            get {
                return this.fInUseField;
            }
            set {
                this.fInUseField = value;
            }
        }
        
        /// <remarks/>
        public string FmodifyTime {
            get {
                return this.fmodifyTimeField;
            }
            set {
                this.fmodifyTimeField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public string OperType {
            get {
                return this.operTypeField;
            }
            set {
                this.operTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_SUBJECT : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fItemField;
        
        private string fNameField;
        
        private string fAttributeField;
        
        private string fLevelField;
        
        private string fBlanceAttributeField;
        
        private string fInUseField;
        
        private string fForReportField;
        
        private string fmodifyTimeField;
        
        private string returnUrlField;
        
        private string operTypeField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string FItem {
            get {
                return this.fItemField;
            }
            set {
                this.fItemField = value;
            }
        }
        
        /// <remarks/>
        public string FName {
            get {
                return this.fNameField;
            }
            set {
                this.fNameField = value;
            }
        }
        
        /// <remarks/>
        public string FAttribute {
            get {
                return this.fAttributeField;
            }
            set {
                this.fAttributeField = value;
            }
        }
        
        /// <remarks/>
        public string FLevel {
            get {
                return this.fLevelField;
            }
            set {
                this.fLevelField = value;
            }
        }
        
        /// <remarks/>
        public string FBlanceAttribute {
            get {
                return this.fBlanceAttributeField;
            }
            set {
                this.fBlanceAttributeField = value;
            }
        }
        
        /// <remarks/>
        public string FInUse {
            get {
                return this.fInUseField;
            }
            set {
                this.fInUseField = value;
            }
        }
        
        /// <remarks/>
        public string FForReport {
            get {
                return this.fForReportField;
            }
            set {
                this.fForReportField = value;
            }
        }
        
        /// <remarks/>
        public string FmodifyTime {
            get {
                return this.fmodifyTimeField;
            }
            set {
                this.fmodifyTimeField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public string OperType {
            get {
                return this.operTypeField;
            }
            set {
                this.operTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class C2CDB_T_TC_BANK : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fbankidField;
        
        private string fstateField;
        
        private string fbank_nameField;
        
        private string fbank_typeField;
        
        private string ftruenameField;
        
        private string fareaField;
        
        private string fcityField;
        
        private string fcurtypeField;
        
        private string fcreate_timeField;
        
        private string fipField;
        
        private string fmemoField;
        
        private string fmodify_timeField;
        
        private string returnUrlField;
        
        private string operTypeField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string Fbankid {
            get {
                return this.fbankidField;
            }
            set {
                this.fbankidField = value;
            }
        }
        
        /// <remarks/>
        public string Fstate {
            get {
                return this.fstateField;
            }
            set {
                this.fstateField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_name {
            get {
                return this.fbank_nameField;
            }
            set {
                this.fbank_nameField = value;
            }
        }
        
        /// <remarks/>
        public string Fbank_type {
            get {
                return this.fbank_typeField;
            }
            set {
                this.fbank_typeField = value;
            }
        }
        
        /// <remarks/>
        public string Ftruename {
            get {
                return this.ftruenameField;
            }
            set {
                this.ftruenameField = value;
            }
        }
        
        /// <remarks/>
        public string Farea {
            get {
                return this.fareaField;
            }
            set {
                this.fareaField = value;
            }
        }
        
        /// <remarks/>
        public string Fcity {
            get {
                return this.fcityField;
            }
            set {
                this.fcityField = value;
            }
        }
        
        /// <remarks/>
        public string Fcurtype {
            get {
                return this.fcurtypeField;
            }
            set {
                this.fcurtypeField = value;
            }
        }
        
        /// <remarks/>
        public string Fcreate_time {
            get {
                return this.fcreate_timeField;
            }
            set {
                this.fcreate_timeField = value;
            }
        }
        
        /// <remarks/>
        public string Fip {
            get {
                return this.fipField;
            }
            set {
                this.fipField = value;
            }
        }
        
        /// <remarks/>
        public string Fmemo {
            get {
                return this.fmemoField;
            }
            set {
                this.fmemoField = value;
            }
        }
        
        /// <remarks/>
        public string Fmodify_time {
            get {
                return this.fmodify_timeField;
            }
            set {
                this.fmodify_timeField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public string OperType {
            get {
                return this.operTypeField;
            }
            set {
                this.operTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_DIC : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fnoField;
        
        private string ftypeField;
        
        private string fvalueField;
        
        private string fmemoField;
        
        private string fsymbolField;
        
        private string returnUrlField;
        
        private string operTypeField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string fno {
            get {
                return this.fnoField;
            }
            set {
                this.fnoField = value;
            }
        }
        
        /// <remarks/>
        public string ftype {
            get {
                return this.ftypeField;
            }
            set {
                this.ftypeField = value;
            }
        }
        
        /// <remarks/>
        public string fvalue {
            get {
                return this.fvalueField;
            }
            set {
                this.fvalueField = value;
            }
        }
        
        /// <remarks/>
        public string fmemo {
            get {
                return this.fmemoField;
            }
            set {
                this.fmemoField = value;
            }
        }
        
        /// <remarks/>
        public string fsymbol {
            get {
                return this.fsymbolField;
            }
            set {
                this.fsymbolField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public string OperType {
            get {
                return this.operTypeField;
            }
            set {
                this.operTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_ZWDic_Info : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fidField;
        
        private string fDicKeyField;
        
        private string fDicValueField;
        
        private string fOperUserField;
        
        private string fModifyTimeField;
        
        private string fMemoField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string Fid {
            get {
                return this.fidField;
            }
            set {
                this.fidField = value;
            }
        }
        
        /// <remarks/>
        public string FDicKey {
            get {
                return this.fDicKeyField;
            }
            set {
                this.fDicKeyField = value;
            }
        }
        
        /// <remarks/>
        public string FDicValue {
            get {
                return this.fDicValueField;
            }
            set {
                this.fDicValueField = value;
            }
        }
        
        /// <remarks/>
        public string FOperUser {
            get {
                return this.fOperUserField;
            }
            set {
                this.fOperUserField = value;
            }
        }
        
        /// <remarks/>
        public string FModifyTime {
            get {
                return this.fModifyTimeField;
            }
            set {
                this.fModifyTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FMemo {
            get {
                return this.fMemoField;
            }
            set {
                this.fMemoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_GWQ_Account : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private bool isDeleteField;
        
        private string fidField;
        
        private string fdep_idField;
        
        private string fqq_idField;
        
        private string fspidField;
        
        private string fsy_idField;
        
        private string fstateField;
        
        private string fcreate_timeField;
        
        private string fmodify_timeField;
        
        private string foper_userField;
        
        private string fMemoField;
        
        private string fstandby1Field;
        
        private string fstandby2Field;
        
        private string fstandby3Field;
        
        private string fstandby4Field;
        
        private string returnUrlField;
        
        private string fac_uinField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDelete {
            get {
                return this.isDeleteField;
            }
            set {
                this.isDeleteField = value;
            }
        }
        
        /// <remarks/>
        public string Fid {
            get {
                return this.fidField;
            }
            set {
                this.fidField = value;
            }
        }
        
        /// <remarks/>
        public string fdep_id {
            get {
                return this.fdep_idField;
            }
            set {
                this.fdep_idField = value;
            }
        }
        
        /// <remarks/>
        public string fqq_id {
            get {
                return this.fqq_idField;
            }
            set {
                this.fqq_idField = value;
            }
        }
        
        /// <remarks/>
        public string Fspid {
            get {
                return this.fspidField;
            }
            set {
                this.fspidField = value;
            }
        }
        
        /// <remarks/>
        public string Fsy_id {
            get {
                return this.fsy_idField;
            }
            set {
                this.fsy_idField = value;
            }
        }
        
        /// <remarks/>
        public string Fstate {
            get {
                return this.fstateField;
            }
            set {
                this.fstateField = value;
            }
        }
        
        /// <remarks/>
        public string Fcreate_time {
            get {
                return this.fcreate_timeField;
            }
            set {
                this.fcreate_timeField = value;
            }
        }
        
        /// <remarks/>
        public string Fmodify_time {
            get {
                return this.fmodify_timeField;
            }
            set {
                this.fmodify_timeField = value;
            }
        }
        
        /// <remarks/>
        public string Foper_user {
            get {
                return this.foper_userField;
            }
            set {
                this.foper_userField = value;
            }
        }
        
        /// <remarks/>
        public string FMemo {
            get {
                return this.fMemoField;
            }
            set {
                this.fMemoField = value;
            }
        }
        
        /// <remarks/>
        public string Fstandby1 {
            get {
                return this.fstandby1Field;
            }
            set {
                this.fstandby1Field = value;
            }
        }
        
        /// <remarks/>
        public string Fstandby2 {
            get {
                return this.fstandby2Field;
            }
            set {
                this.fstandby2Field = value;
            }
        }
        
        /// <remarks/>
        public string Fstandby3 {
            get {
                return this.fstandby3Field;
            }
            set {
                this.fstandby3Field = value;
            }
        }
        
        /// <remarks/>
        public string Fstandby4 {
            get {
                return this.fstandby4Field;
            }
            set {
                this.fstandby4Field = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public string fac_uin {
            get {
                return this.fac_uinField;
            }
            set {
                this.fac_uinField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_Export_Bankrest : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fIdField;
        
        private string fBankTypeField;
        
        private string fRestDayBeginField;
        
        private string fRestDayEndField;
        
        private string fStandby1Field;
        
        private string fStandby2Field;
        
        private string fStandby3Field;
        
        private string fStandby4Field;
        
        private string returnUrlField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string FId {
            get {
                return this.fIdField;
            }
            set {
                this.fIdField = value;
            }
        }
        
        /// <remarks/>
        public string FBankType {
            get {
                return this.fBankTypeField;
            }
            set {
                this.fBankTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FRestDayBegin {
            get {
                return this.fRestDayBeginField;
            }
            set {
                this.fRestDayBeginField = value;
            }
        }
        
        /// <remarks/>
        public string FRestDayEnd {
            get {
                return this.fRestDayEndField;
            }
            set {
                this.fRestDayEndField = value;
            }
        }
        
        /// <remarks/>
        public string FStandby1 {
            get {
                return this.fStandby1Field;
            }
            set {
                this.fStandby1Field = value;
            }
        }
        
        /// <remarks/>
        public string FStandby2 {
            get {
                return this.fStandby2Field;
            }
            set {
                this.fStandby2Field = value;
            }
        }
        
        /// <remarks/>
        public string FStandby3 {
            get {
                return this.fStandby3Field;
            }
            set {
                this.fStandby3Field = value;
            }
        }
        
        /// <remarks/>
        public string FStandby4 {
            get {
                return this.fStandby4Field;
            }
            set {
                this.fStandby4Field = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_Export_Task_Tmp : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fIdField;
        
        private string fExportTypeField;
        
        private string fCurTypeField;
        
        private string fSchedualIdField;
        
        private string fExportDateBeginField;
        
        private string fExportDateEndField;
        
        private string fDescField;
        
        private string fSingleExportBankField;
        
        private string fIgnorBankField;
        
        private string fExport9999Field;
        
        private string fModifyTimeField;
        
        private string fStandby1Field;
        
        private string fStandby2Field;
        
        private string fStandby3Field;
        
        private string fStandby4Field;
        
        private string fEnableField;
        
        private string returnUrlField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string FId {
            get {
                return this.fIdField;
            }
            set {
                this.fIdField = value;
            }
        }
        
        /// <remarks/>
        public string FExportType {
            get {
                return this.fExportTypeField;
            }
            set {
                this.fExportTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FCurType {
            get {
                return this.fCurTypeField;
            }
            set {
                this.fCurTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FSchedualId {
            get {
                return this.fSchedualIdField;
            }
            set {
                this.fSchedualIdField = value;
            }
        }
        
        /// <remarks/>
        public string FExportDateBegin {
            get {
                return this.fExportDateBeginField;
            }
            set {
                this.fExportDateBeginField = value;
            }
        }
        
        /// <remarks/>
        public string FExportDateEnd {
            get {
                return this.fExportDateEndField;
            }
            set {
                this.fExportDateEndField = value;
            }
        }
        
        /// <remarks/>
        public string FDesc {
            get {
                return this.fDescField;
            }
            set {
                this.fDescField = value;
            }
        }
        
        /// <remarks/>
        public string FSingleExportBank {
            get {
                return this.fSingleExportBankField;
            }
            set {
                this.fSingleExportBankField = value;
            }
        }
        
        /// <remarks/>
        public string FIgnorBank {
            get {
                return this.fIgnorBankField;
            }
            set {
                this.fIgnorBankField = value;
            }
        }
        
        /// <remarks/>
        public string FExport9999 {
            get {
                return this.fExport9999Field;
            }
            set {
                this.fExport9999Field = value;
            }
        }
        
        /// <remarks/>
        public string FModifyTime {
            get {
                return this.fModifyTimeField;
            }
            set {
                this.fModifyTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FStandby1 {
            get {
                return this.fStandby1Field;
            }
            set {
                this.fStandby1Field = value;
            }
        }
        
        /// <remarks/>
        public string FStandby2 {
            get {
                return this.fStandby2Field;
            }
            set {
                this.fStandby2Field = value;
            }
        }
        
        /// <remarks/>
        public string FStandby3 {
            get {
                return this.fStandby3Field;
            }
            set {
                this.fStandby3Field = value;
            }
        }
        
        /// <remarks/>
        public string FStandby4 {
            get {
                return this.fStandby4Field;
            }
            set {
                this.fStandby4Field = value;
            }
        }
        
        /// <remarks/>
        public string FEnable {
            get {
                return this.fEnableField;
            }
            set {
                this.fEnableField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_Export_Task_Comm : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fIdField;
        
        private string fExportTypeField;
        
        private string fCurTypeField;
        
        private string fSchedualIdField;
        
        private string fSingleExportBankField;
        
        private string fExport9999Field;
        
        private string fDescField;
        
        private string fModifyTimeField;
        
        private string fStandby1Field;
        
        private string fStandby2Field;
        
        private string fStandby3Field;
        
        private string fStandby4Field;
        
        private string fEnableField;
        
        private string fIgnorBankField;
        
        private string returnUrlField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string FId {
            get {
                return this.fIdField;
            }
            set {
                this.fIdField = value;
            }
        }
        
        /// <remarks/>
        public string FExportType {
            get {
                return this.fExportTypeField;
            }
            set {
                this.fExportTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FCurType {
            get {
                return this.fCurTypeField;
            }
            set {
                this.fCurTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FSchedualId {
            get {
                return this.fSchedualIdField;
            }
            set {
                this.fSchedualIdField = value;
            }
        }
        
        /// <remarks/>
        public string FSingleExportBank {
            get {
                return this.fSingleExportBankField;
            }
            set {
                this.fSingleExportBankField = value;
            }
        }
        
        /// <remarks/>
        public string FExport9999 {
            get {
                return this.fExport9999Field;
            }
            set {
                this.fExport9999Field = value;
            }
        }
        
        /// <remarks/>
        public string FDesc {
            get {
                return this.fDescField;
            }
            set {
                this.fDescField = value;
            }
        }
        
        /// <remarks/>
        public string FModifyTime {
            get {
                return this.fModifyTimeField;
            }
            set {
                this.fModifyTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FStandby1 {
            get {
                return this.fStandby1Field;
            }
            set {
                this.fStandby1Field = value;
            }
        }
        
        /// <remarks/>
        public string FStandby2 {
            get {
                return this.fStandby2Field;
            }
            set {
                this.fStandby2Field = value;
            }
        }
        
        /// <remarks/>
        public string FStandby3 {
            get {
                return this.fStandby3Field;
            }
            set {
                this.fStandby3Field = value;
            }
        }
        
        /// <remarks/>
        public string FStandby4 {
            get {
                return this.fStandby4Field;
            }
            set {
                this.fStandby4Field = value;
            }
        }
        
        /// <remarks/>
        public string FEnable {
            get {
                return this.fEnableField;
            }
            set {
                this.fEnableField = value;
            }
        }
        
        /// <remarks/>
        public string FIgnorBank {
            get {
                return this.fIgnorBankField;
            }
            set {
                this.fIgnorBankField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_Export_Bank : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fIdField;
        
        private string fBankTypeField;
        
        private string fExportTypeField;
        
        private string fDescField;
        
        private string fCurTypeField;
        
        private string fPayBankField;
        
        private string fCorpSingleField;
        
        private string fPersSingleField;
        
        private string fPackLimitCorpField;
        
        private string fPackLimitPersField;
        
        private string fSingleLimitCorpField;
        
        private string fSingleLimitPersField;
        
        private string fCardLengthLimitCorpField;
        
        private string fCardLengthLimitPersField;
        
        private string fBNameCanEmptyCorpField;
        
        private string fBNameCanEmptyPersField;
        
        private string fWeekendCanPayField;
        
        private string fModifyTimeField;
        
        private string fStandby1Field;
        
        private string fStandby2Field;
        
        private string fStandby3Field;
        
        private string fStandby4Field;
        
        private string fEnableField;
        
        private string returnUrlField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string FId {
            get {
                return this.fIdField;
            }
            set {
                this.fIdField = value;
            }
        }
        
        /// <remarks/>
        public string FBankType {
            get {
                return this.fBankTypeField;
            }
            set {
                this.fBankTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FExportType {
            get {
                return this.fExportTypeField;
            }
            set {
                this.fExportTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FDesc {
            get {
                return this.fDescField;
            }
            set {
                this.fDescField = value;
            }
        }
        
        /// <remarks/>
        public string FCurType {
            get {
                return this.fCurTypeField;
            }
            set {
                this.fCurTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FPayBank {
            get {
                return this.fPayBankField;
            }
            set {
                this.fPayBankField = value;
            }
        }
        
        /// <remarks/>
        public string FCorpSingle {
            get {
                return this.fCorpSingleField;
            }
            set {
                this.fCorpSingleField = value;
            }
        }
        
        /// <remarks/>
        public string FPersSingle {
            get {
                return this.fPersSingleField;
            }
            set {
                this.fPersSingleField = value;
            }
        }
        
        /// <remarks/>
        public string FPackLimitCorp {
            get {
                return this.fPackLimitCorpField;
            }
            set {
                this.fPackLimitCorpField = value;
            }
        }
        
        /// <remarks/>
        public string FPackLimitPers {
            get {
                return this.fPackLimitPersField;
            }
            set {
                this.fPackLimitPersField = value;
            }
        }
        
        /// <remarks/>
        public string FSingleLimitCorp {
            get {
                return this.fSingleLimitCorpField;
            }
            set {
                this.fSingleLimitCorpField = value;
            }
        }
        
        /// <remarks/>
        public string FSingleLimitPers {
            get {
                return this.fSingleLimitPersField;
            }
            set {
                this.fSingleLimitPersField = value;
            }
        }
        
        /// <remarks/>
        public string FCardLengthLimitCorp {
            get {
                return this.fCardLengthLimitCorpField;
            }
            set {
                this.fCardLengthLimitCorpField = value;
            }
        }
        
        /// <remarks/>
        public string FCardLengthLimitPers {
            get {
                return this.fCardLengthLimitPersField;
            }
            set {
                this.fCardLengthLimitPersField = value;
            }
        }
        
        /// <remarks/>
        public string FBNameCanEmptyCorp {
            get {
                return this.fBNameCanEmptyCorpField;
            }
            set {
                this.fBNameCanEmptyCorpField = value;
            }
        }
        
        /// <remarks/>
        public string FBNameCanEmptyPers {
            get {
                return this.fBNameCanEmptyPersField;
            }
            set {
                this.fBNameCanEmptyPersField = value;
            }
        }
        
        /// <remarks/>
        public string FWeekendCanPay {
            get {
                return this.fWeekendCanPayField;
            }
            set {
                this.fWeekendCanPayField = value;
            }
        }
        
        /// <remarks/>
        public string FModifyTime {
            get {
                return this.fModifyTimeField;
            }
            set {
                this.fModifyTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FStandby1 {
            get {
                return this.fStandby1Field;
            }
            set {
                this.fStandby1Field = value;
            }
        }
        
        /// <remarks/>
        public string FStandby2 {
            get {
                return this.fStandby2Field;
            }
            set {
                this.fStandby2Field = value;
            }
        }
        
        /// <remarks/>
        public string FStandby3 {
            get {
                return this.fStandby3Field;
            }
            set {
                this.fStandby3Field = value;
            }
        }
        
        /// <remarks/>
        public string FStandby4 {
            get {
                return this.fStandby4Field;
            }
            set {
                this.fStandby4Field = value;
            }
        }
        
        /// <remarks/>
        public string FEnable {
            get {
                return this.fEnableField;
            }
            set {
                this.fEnableField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_GWQ : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string fauto_idField;
        
        private string fticket_idField;
        
        private string ftde_idField;
        
        private string fson_idField;
        
        private string fuser_idField;
        
        private string fuser_uidField;
        
        private string fpub_idField;
        
        private string fpub_uidField;
        
        private string flistidField;
        
        private string fspidField;
        
        private string fatt_nameField;
        
        private string fmer_idField;
        
        private string fdonate_typeField;
        
        private string fdonate_numField;
        
        private string ftypeField;
        
        private string fpub_typeField;
        
        private string fstateField;
        
        private string flist_stateField;
        
        private string fadjust_flagField;
        
        private string ffeeField;
        
        private string fuse_proField;
        
        private string fmin_feeField;
        
        private string fmax_numField;
        
        private string ffact_feeField;
        
        private string fstimeField;
        
        private string fetimeField;
        
        private string fpub_timeField;
        
        private string fuse_timeField;
        
        private string furlField;
        
        private string fpub_userField;
        
        private string fuser_ipField;
        
        private string fpub_ipField;
        
        private string fstandby1Field;
        
        private string fstandby2Field;
        
        private string fstandby3Field;
        
        private string fstandby4Field;
        
        private string fmemoField;
        
        private string fmodify_timeField;
        
        private string fpub_nameField;
        
        private string fdonate_idField;
        
        private string fdonate_uidField;
        
        private string fdonate_timeField;
        
        private string fuse_listidField;
        
        private string fac_stimeField;
        
        private string fac_etimeField;
        
        private string fac_flagField;
        
        private string fac_numField;
        
        private string fac_uinField;
        
        private string fac_uidField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string fauto_id {
            get {
                return this.fauto_idField;
            }
            set {
                this.fauto_idField = value;
            }
        }
        
        /// <remarks/>
        public string fticket_id {
            get {
                return this.fticket_idField;
            }
            set {
                this.fticket_idField = value;
            }
        }
        
        /// <remarks/>
        public string ftde_id {
            get {
                return this.ftde_idField;
            }
            set {
                this.ftde_idField = value;
            }
        }
        
        /// <remarks/>
        public string fson_id {
            get {
                return this.fson_idField;
            }
            set {
                this.fson_idField = value;
            }
        }
        
        /// <remarks/>
        public string fuser_id {
            get {
                return this.fuser_idField;
            }
            set {
                this.fuser_idField = value;
            }
        }
        
        /// <remarks/>
        public string fuser_uid {
            get {
                return this.fuser_uidField;
            }
            set {
                this.fuser_uidField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_id {
            get {
                return this.fpub_idField;
            }
            set {
                this.fpub_idField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_uid {
            get {
                return this.fpub_uidField;
            }
            set {
                this.fpub_uidField = value;
            }
        }
        
        /// <remarks/>
        public string flistid {
            get {
                return this.flistidField;
            }
            set {
                this.flistidField = value;
            }
        }
        
        /// <remarks/>
        public string fspid {
            get {
                return this.fspidField;
            }
            set {
                this.fspidField = value;
            }
        }
        
        /// <remarks/>
        public string fatt_name {
            get {
                return this.fatt_nameField;
            }
            set {
                this.fatt_nameField = value;
            }
        }
        
        /// <remarks/>
        public string fmer_id {
            get {
                return this.fmer_idField;
            }
            set {
                this.fmer_idField = value;
            }
        }
        
        /// <remarks/>
        public string fdonate_type {
            get {
                return this.fdonate_typeField;
            }
            set {
                this.fdonate_typeField = value;
            }
        }
        
        /// <remarks/>
        public string fdonate_num {
            get {
                return this.fdonate_numField;
            }
            set {
                this.fdonate_numField = value;
            }
        }
        
        /// <remarks/>
        public string ftype {
            get {
                return this.ftypeField;
            }
            set {
                this.ftypeField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_type {
            get {
                return this.fpub_typeField;
            }
            set {
                this.fpub_typeField = value;
            }
        }
        
        /// <remarks/>
        public string fstate {
            get {
                return this.fstateField;
            }
            set {
                this.fstateField = value;
            }
        }
        
        /// <remarks/>
        public string flist_state {
            get {
                return this.flist_stateField;
            }
            set {
                this.flist_stateField = value;
            }
        }
        
        /// <remarks/>
        public string fadjust_flag {
            get {
                return this.fadjust_flagField;
            }
            set {
                this.fadjust_flagField = value;
            }
        }
        
        /// <remarks/>
        public string ffee {
            get {
                return this.ffeeField;
            }
            set {
                this.ffeeField = value;
            }
        }
        
        /// <remarks/>
        public string fuse_pro {
            get {
                return this.fuse_proField;
            }
            set {
                this.fuse_proField = value;
            }
        }
        
        /// <remarks/>
        public string fmin_fee {
            get {
                return this.fmin_feeField;
            }
            set {
                this.fmin_feeField = value;
            }
        }
        
        /// <remarks/>
        public string fmax_num {
            get {
                return this.fmax_numField;
            }
            set {
                this.fmax_numField = value;
            }
        }
        
        /// <remarks/>
        public string ffact_fee {
            get {
                return this.ffact_feeField;
            }
            set {
                this.ffact_feeField = value;
            }
        }
        
        /// <remarks/>
        public string fstime {
            get {
                return this.fstimeField;
            }
            set {
                this.fstimeField = value;
            }
        }
        
        /// <remarks/>
        public string fetime {
            get {
                return this.fetimeField;
            }
            set {
                this.fetimeField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_time {
            get {
                return this.fpub_timeField;
            }
            set {
                this.fpub_timeField = value;
            }
        }
        
        /// <remarks/>
        public string fuse_time {
            get {
                return this.fuse_timeField;
            }
            set {
                this.fuse_timeField = value;
            }
        }
        
        /// <remarks/>
        public string furl {
            get {
                return this.furlField;
            }
            set {
                this.furlField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_user {
            get {
                return this.fpub_userField;
            }
            set {
                this.fpub_userField = value;
            }
        }
        
        /// <remarks/>
        public string fuser_ip {
            get {
                return this.fuser_ipField;
            }
            set {
                this.fuser_ipField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_ip {
            get {
                return this.fpub_ipField;
            }
            set {
                this.fpub_ipField = value;
            }
        }
        
        /// <remarks/>
        public string fstandby1 {
            get {
                return this.fstandby1Field;
            }
            set {
                this.fstandby1Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby2 {
            get {
                return this.fstandby2Field;
            }
            set {
                this.fstandby2Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby3 {
            get {
                return this.fstandby3Field;
            }
            set {
                this.fstandby3Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby4 {
            get {
                return this.fstandby4Field;
            }
            set {
                this.fstandby4Field = value;
            }
        }
        
        /// <remarks/>
        public string fmemo {
            get {
                return this.fmemoField;
            }
            set {
                this.fmemoField = value;
            }
        }
        
        /// <remarks/>
        public string fmodify_time {
            get {
                return this.fmodify_timeField;
            }
            set {
                this.fmodify_timeField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_name {
            get {
                return this.fpub_nameField;
            }
            set {
                this.fpub_nameField = value;
            }
        }
        
        /// <remarks/>
        public string fdonate_id {
            get {
                return this.fdonate_idField;
            }
            set {
                this.fdonate_idField = value;
            }
        }
        
        /// <remarks/>
        public string fdonate_uid {
            get {
                return this.fdonate_uidField;
            }
            set {
                this.fdonate_uidField = value;
            }
        }
        
        /// <remarks/>
        public string fdonate_time {
            get {
                return this.fdonate_timeField;
            }
            set {
                this.fdonate_timeField = value;
            }
        }
        
        /// <remarks/>
        public string fuse_listid {
            get {
                return this.fuse_listidField;
            }
            set {
                this.fuse_listidField = value;
            }
        }
        
        /// <remarks/>
        public string fac_stime {
            get {
                return this.fac_stimeField;
            }
            set {
                this.fac_stimeField = value;
            }
        }
        
        /// <remarks/>
        public string fac_etime {
            get {
                return this.fac_etimeField;
            }
            set {
                this.fac_etimeField = value;
            }
        }
        
        /// <remarks/>
        public string fac_flag {
            get {
                return this.fac_flagField;
            }
            set {
                this.fac_flagField = value;
            }
        }
        
        /// <remarks/>
        public string fac_num {
            get {
                return this.fac_numField;
            }
            set {
                this.fac_numField = value;
            }
        }
        
        /// <remarks/>
        public string fac_uin {
            get {
                return this.fac_uinField;
            }
            set {
                this.fac_uinField = value;
            }
        }
        
        /// <remarks/>
        public string fac_uid {
            get {
                return this.fac_uidField;
            }
            set {
                this.fac_uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_COIN_PUB : T_CLASS_BASIC {
        
        private bool isNewField;
        
        private string ftde_idField;
        
        private string fspidField;
        
        private string fatt_nameField;
        
        private string fqqidField;
        
        private string fuidField;
        
        private string fmer_idField;
        
        private string ftypeField;
        
        private string fpub_typeField;
        
        private string fstateField;
        
        private string flist_stateField;
        
        private string fstimeField;
        
        private string fetimeField;
        
        private string fpub_timeField;
        
        private string fpub_numField;
        
        private string ffact_numField;
        
        private string fdonate_typeField;
        
        private string ffeeField;
        
        private string fpre_feeField;
        
        private string ffact_feeField;
        
        private string fuse_proField;
        
        private string fmin_feeField;
        
        private string fmax_numField;
        
        private string furlField;
        
        private string fpub_userField;
        
        private string fex_user1Field;
        
        private string fex_user2Field;
        
        private string fuser_ipField;
        
        private string fpub_ipField;
        
        private string fstandby1Field;
        
        private string fstandby2Field;
        
        private string fstandby3Field;
        
        private string fstandby4Field;
        
        private string fstandby5Field;
        
        private string fstandby6Field;
        
        private string fstandby7Field;
        
        private string fstandby8Field;
        
        private string fmemoField;
        
        private string fmodify_timeField;
        
        private string fpub_nameField;
        
        private string fac_stimeField;
        
        private string fac_etimeField;
        
        private string fac_flagField;
        
        private string fac_numField;
        
        private string fac_uinField;
        
        private string fac_uidField;
        
        private string returnUrlField;
        
        private string limitsField;
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string ftde_id {
            get {
                return this.ftde_idField;
            }
            set {
                this.ftde_idField = value;
            }
        }
        
        /// <remarks/>
        public string fspid {
            get {
                return this.fspidField;
            }
            set {
                this.fspidField = value;
            }
        }
        
        /// <remarks/>
        public string fatt_name {
            get {
                return this.fatt_nameField;
            }
            set {
                this.fatt_nameField = value;
            }
        }
        
        /// <remarks/>
        public string fqqid {
            get {
                return this.fqqidField;
            }
            set {
                this.fqqidField = value;
            }
        }
        
        /// <remarks/>
        public string fuid {
            get {
                return this.fuidField;
            }
            set {
                this.fuidField = value;
            }
        }
        
        /// <remarks/>
        public string fmer_id {
            get {
                return this.fmer_idField;
            }
            set {
                this.fmer_idField = value;
            }
        }
        
        /// <remarks/>
        public string ftype {
            get {
                return this.ftypeField;
            }
            set {
                this.ftypeField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_type {
            get {
                return this.fpub_typeField;
            }
            set {
                this.fpub_typeField = value;
            }
        }
        
        /// <remarks/>
        public string fstate {
            get {
                return this.fstateField;
            }
            set {
                this.fstateField = value;
            }
        }
        
        /// <remarks/>
        public string flist_state {
            get {
                return this.flist_stateField;
            }
            set {
                this.flist_stateField = value;
            }
        }
        
        /// <remarks/>
        public string fstime {
            get {
                return this.fstimeField;
            }
            set {
                this.fstimeField = value;
            }
        }
        
        /// <remarks/>
        public string fetime {
            get {
                return this.fetimeField;
            }
            set {
                this.fetimeField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_time {
            get {
                return this.fpub_timeField;
            }
            set {
                this.fpub_timeField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_num {
            get {
                return this.fpub_numField;
            }
            set {
                this.fpub_numField = value;
            }
        }
        
        /// <remarks/>
        public string ffact_num {
            get {
                return this.ffact_numField;
            }
            set {
                this.ffact_numField = value;
            }
        }
        
        /// <remarks/>
        public string fdonate_type {
            get {
                return this.fdonate_typeField;
            }
            set {
                this.fdonate_typeField = value;
            }
        }
        
        /// <remarks/>
        public string ffee {
            get {
                return this.ffeeField;
            }
            set {
                this.ffeeField = value;
            }
        }
        
        /// <remarks/>
        public string fpre_fee {
            get {
                return this.fpre_feeField;
            }
            set {
                this.fpre_feeField = value;
            }
        }
        
        /// <remarks/>
        public string ffact_fee {
            get {
                return this.ffact_feeField;
            }
            set {
                this.ffact_feeField = value;
            }
        }
        
        /// <remarks/>
        public string fuse_pro {
            get {
                return this.fuse_proField;
            }
            set {
                this.fuse_proField = value;
            }
        }
        
        /// <remarks/>
        public string fmin_fee {
            get {
                return this.fmin_feeField;
            }
            set {
                this.fmin_feeField = value;
            }
        }
        
        /// <remarks/>
        public string fmax_num {
            get {
                return this.fmax_numField;
            }
            set {
                this.fmax_numField = value;
            }
        }
        
        /// <remarks/>
        public string furl {
            get {
                return this.furlField;
            }
            set {
                this.furlField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_user {
            get {
                return this.fpub_userField;
            }
            set {
                this.fpub_userField = value;
            }
        }
        
        /// <remarks/>
        public string fex_user1 {
            get {
                return this.fex_user1Field;
            }
            set {
                this.fex_user1Field = value;
            }
        }
        
        /// <remarks/>
        public string fex_user2 {
            get {
                return this.fex_user2Field;
            }
            set {
                this.fex_user2Field = value;
            }
        }
        
        /// <remarks/>
        public string fuser_ip {
            get {
                return this.fuser_ipField;
            }
            set {
                this.fuser_ipField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_ip {
            get {
                return this.fpub_ipField;
            }
            set {
                this.fpub_ipField = value;
            }
        }
        
        /// <remarks/>
        public string fstandby1 {
            get {
                return this.fstandby1Field;
            }
            set {
                this.fstandby1Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby2 {
            get {
                return this.fstandby2Field;
            }
            set {
                this.fstandby2Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby3 {
            get {
                return this.fstandby3Field;
            }
            set {
                this.fstandby3Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby4 {
            get {
                return this.fstandby4Field;
            }
            set {
                this.fstandby4Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby5 {
            get {
                return this.fstandby5Field;
            }
            set {
                this.fstandby5Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby6 {
            get {
                return this.fstandby6Field;
            }
            set {
                this.fstandby6Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby7 {
            get {
                return this.fstandby7Field;
            }
            set {
                this.fstandby7Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby8 {
            get {
                return this.fstandby8Field;
            }
            set {
                this.fstandby8Field = value;
            }
        }
        
        /// <remarks/>
        public string fmemo {
            get {
                return this.fmemoField;
            }
            set {
                this.fmemoField = value;
            }
        }
        
        /// <remarks/>
        public string fmodify_time {
            get {
                return this.fmodify_timeField;
            }
            set {
                this.fmodify_timeField = value;
            }
        }
        
        /// <remarks/>
        public string fpub_name {
            get {
                return this.fpub_nameField;
            }
            set {
                this.fpub_nameField = value;
            }
        }
        
        /// <remarks/>
        public string fac_stime {
            get {
                return this.fac_stimeField;
            }
            set {
                this.fac_stimeField = value;
            }
        }
        
        /// <remarks/>
        public string fac_etime {
            get {
                return this.fac_etimeField;
            }
            set {
                this.fac_etimeField = value;
            }
        }
        
        /// <remarks/>
        public string fac_flag {
            get {
                return this.fac_flagField;
            }
            set {
                this.fac_flagField = value;
            }
        }
        
        /// <remarks/>
        public string fac_num {
            get {
                return this.fac_numField;
            }
            set {
                this.fac_numField = value;
            }
        }
        
        /// <remarks/>
        public string fac_uin {
            get {
                return this.fac_uinField;
            }
            set {
                this.fac_uinField = value;
            }
        }
        
        /// <remarks/>
        public string fac_uid {
            get {
                return this.fac_uidField;
            }
            set {
                this.fac_uidField = value;
            }
        }
        
        /// <remarks/>
        public string returnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public string Limits {
            get {
                return this.limitsField;
            }
            set {
                this.limitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tencent.com/OSS/C2C/Finance/Query_WebService")]
    public partial class T_USER_MED : T_CLASS_BASIC {
        
        private string fuidField;
        
        private bool isNewField;
        
        private string fcurtypeField;
        
        private string fqqidField;
        
        private string fuser_typeField;
        
        private string fspidField;
        
        private string fbalanceField;
        
        private string ftruenameField;
        
        private string fcompany_nameField;
        
        private string fsexField;
        
        private string fageField;
        
        private string fphoneField;
        
        private string fmobileField;
        
        private string fcre_typeField;
        
        private string fcreidField;
        
        private string fpcodeField;
        
        private string femailField;
        
        private string fareaField;
        
        private string fcityField;
        
        private string faddressField;
        
        private string fmemoField;
        
        private string fbindqqidField;
        
        private string fbinduidField;
        
        private string ffeecontractField;
        
        private string fcontractField;
        
        private string fmodifyuserField;
        
        private string fmodifytimeField;
        
        private string fmer_keyField;
        
        private string fstateField;
        
        private string flist_stateField;
        
        private string fstandby1Field;
        
        private string fstandby2Field;
        
        private string fstandby3Field;
        
        private string fstandby4Field;
        
        private string fstandby5Field;
        
        private string fstandby6Field;
        
        private string fstandby7Field;
        
        private string fstandby8Field;
        
        private string fstandby9Field;
        
        private string fstandby10Field;
        
        private string fextmemoField;
        
        private string fmodifyipField;
        
        private string fatt_idField;
        
        private string finsure_conf_amountField;
        
        private string finsure_add_typeField;
        
        /// <remarks/>
        public string fuid {
            get {
                return this.fuidField;
            }
            set {
                this.fuidField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public string fcurtype {
            get {
                return this.fcurtypeField;
            }
            set {
                this.fcurtypeField = value;
            }
        }
        
        /// <remarks/>
        public string fqqid {
            get {
                return this.fqqidField;
            }
            set {
                this.fqqidField = value;
            }
        }
        
        /// <remarks/>
        public string fuser_type {
            get {
                return this.fuser_typeField;
            }
            set {
                this.fuser_typeField = value;
            }
        }
        
        /// <remarks/>
        public string fspid {
            get {
                return this.fspidField;
            }
            set {
                this.fspidField = value;
            }
        }
        
        /// <remarks/>
        public string fbalance {
            get {
                return this.fbalanceField;
            }
            set {
                this.fbalanceField = value;
            }
        }
        
        /// <remarks/>
        public string ftruename {
            get {
                return this.ftruenameField;
            }
            set {
                this.ftruenameField = value;
            }
        }
        
        /// <remarks/>
        public string fcompany_name {
            get {
                return this.fcompany_nameField;
            }
            set {
                this.fcompany_nameField = value;
            }
        }
        
        /// <remarks/>
        public string fsex {
            get {
                return this.fsexField;
            }
            set {
                this.fsexField = value;
            }
        }
        
        /// <remarks/>
        public string fage {
            get {
                return this.fageField;
            }
            set {
                this.fageField = value;
            }
        }
        
        /// <remarks/>
        public string fphone {
            get {
                return this.fphoneField;
            }
            set {
                this.fphoneField = value;
            }
        }
        
        /// <remarks/>
        public string fmobile {
            get {
                return this.fmobileField;
            }
            set {
                this.fmobileField = value;
            }
        }
        
        /// <remarks/>
        public string fcre_type {
            get {
                return this.fcre_typeField;
            }
            set {
                this.fcre_typeField = value;
            }
        }
        
        /// <remarks/>
        public string fcreid {
            get {
                return this.fcreidField;
            }
            set {
                this.fcreidField = value;
            }
        }
        
        /// <remarks/>
        public string fpcode {
            get {
                return this.fpcodeField;
            }
            set {
                this.fpcodeField = value;
            }
        }
        
        /// <remarks/>
        public string femail {
            get {
                return this.femailField;
            }
            set {
                this.femailField = value;
            }
        }
        
        /// <remarks/>
        public string farea {
            get {
                return this.fareaField;
            }
            set {
                this.fareaField = value;
            }
        }
        
        /// <remarks/>
        public string fcity {
            get {
                return this.fcityField;
            }
            set {
                this.fcityField = value;
            }
        }
        
        /// <remarks/>
        public string faddress {
            get {
                return this.faddressField;
            }
            set {
                this.faddressField = value;
            }
        }
        
        /// <remarks/>
        public string fmemo {
            get {
                return this.fmemoField;
            }
            set {
                this.fmemoField = value;
            }
        }
        
        /// <remarks/>
        public string fbindqqid {
            get {
                return this.fbindqqidField;
            }
            set {
                this.fbindqqidField = value;
            }
        }
        
        /// <remarks/>
        public string fbinduid {
            get {
                return this.fbinduidField;
            }
            set {
                this.fbinduidField = value;
            }
        }
        
        /// <remarks/>
        public string ffeecontract {
            get {
                return this.ffeecontractField;
            }
            set {
                this.ffeecontractField = value;
            }
        }
        
        /// <remarks/>
        public string fcontract {
            get {
                return this.fcontractField;
            }
            set {
                this.fcontractField = value;
            }
        }
        
        /// <remarks/>
        public string fmodifyuser {
            get {
                return this.fmodifyuserField;
            }
            set {
                this.fmodifyuserField = value;
            }
        }
        
        /// <remarks/>
        public string fmodifytime {
            get {
                return this.fmodifytimeField;
            }
            set {
                this.fmodifytimeField = value;
            }
        }
        
        /// <remarks/>
        public string fmer_key {
            get {
                return this.fmer_keyField;
            }
            set {
                this.fmer_keyField = value;
            }
        }
        
        /// <remarks/>
        public string fstate {
            get {
                return this.fstateField;
            }
            set {
                this.fstateField = value;
            }
        }
        
        /// <remarks/>
        public string flist_state {
            get {
                return this.flist_stateField;
            }
            set {
                this.flist_stateField = value;
            }
        }
        
        /// <remarks/>
        public string fstandby1 {
            get {
                return this.fstandby1Field;
            }
            set {
                this.fstandby1Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby2 {
            get {
                return this.fstandby2Field;
            }
            set {
                this.fstandby2Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby3 {
            get {
                return this.fstandby3Field;
            }
            set {
                this.fstandby3Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby4 {
            get {
                return this.fstandby4Field;
            }
            set {
                this.fstandby4Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby5 {
            get {
                return this.fstandby5Field;
            }
            set {
                this.fstandby5Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby6 {
            get {
                return this.fstandby6Field;
            }
            set {
                this.fstandby6Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby7 {
            get {
                return this.fstandby7Field;
            }
            set {
                this.fstandby7Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby8 {
            get {
                return this.fstandby8Field;
            }
            set {
                this.fstandby8Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby9 {
            get {
                return this.fstandby9Field;
            }
            set {
                this.fstandby9Field = value;
            }
        }
        
        /// <remarks/>
        public string fstandby10 {
            get {
                return this.fstandby10Field;
            }
            set {
                this.fstandby10Field = value;
            }
        }
        
        /// <remarks/>
        public string fextmemo {
            get {
                return this.fextmemoField;
            }
            set {
                this.fextmemoField = value;
            }
        }
        
        /// <remarks/>
        public string fmodifyip {
            get {
                return this.fmodifyipField;
            }
            set {
                this.fmodifyipField = value;
            }
        }
        
        /// <remarks/>
        public string Fatt_id {
            get {
                return this.fatt_idField;
            }
            set {
                this.fatt_idField = value;
            }
        }
        
        /// <remarks/>
        public string Finsure_conf_amount {
            get {
                return this.finsure_conf_amountField;
            }
            set {
                this.finsure_conf_amountField = value;
            }
        }
        
        /// <remarks/>
        public string Finsure_add_type {
            get {
                return this.finsure_add_typeField;
            }
            set {
                this.finsure_add_typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserAccountCompletedEventHandler(object sender, GetUserAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserAccountFromWechatCompletedEventHandler(object sender, GetUserAccountFromWechatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAccountFromWechatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAccountFromWechatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChildrenInfoCompletedEventHandler(object sender, GetChildrenInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildrenInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildrenInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChildrenFreezeOrUnfreezeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChildrenFlistListCompletedEventHandler(object sender, GetChildrenFlistListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildrenFlistListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildrenFlistListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserMedInfoCompletedEventHandler(object sender, GetUserMedInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserMedInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserMedInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_USER_MED Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_USER_MED)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserMedInfoListCompletedEventHandler(object sender, GetUserMedInfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserMedInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserMedInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBankAccountCompletedEventHandler(object sender, GetUserBankAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchUserBankAccountCompletedEventHandler(object sender, GetBatchUserBankAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchUserBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchUserBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayListCompletedEventHandler(object sender, GetPayListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserOPLogCompletedEventHandler(object sender, GetUserOPLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserOPLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserOPLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayList_ListCompletedEventHandler(object sender, GetPayList_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayList_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayList_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayList_PayCompletedEventHandler(object sender, GetPayList_PayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayList_PayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayList_PayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayList_PickCompletedEventHandler(object sender, GetPayList_PickCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayList_PickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayList_PickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankRollListCompletedEventHandler(object sender, GetBankRollListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankRollListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankRollListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankRollList_withIDCompletedEventHandler(object sender, GetBankRollList_withIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankRollList_withIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankRollList_withIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserPayListCompletedEventHandler(object sender, GetUserPayListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPayListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPayListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserPayList_withIDCompletedEventHandler(object sender, GetUserPayList_withIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPayList_withIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPayList_withIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTCBankAccountCompletedEventHandler(object sender, GetTCBankAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTCBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTCBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTCBankRollListCompletedEventHandler(object sender, GetTCBankRollListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTCBankRollListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTCBankRollListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTCBankPAYListCompletedEventHandler(object sender, GetTCBankPAYListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTCBankPAYListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTCBankPAYListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundCompletedEventHandler(object sender, GetRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayListByTypeCompletedEventHandler(object sender, GetPayListByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayListByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayListByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void returnListIDCompletedEventHandler(object sender, returnListIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class returnListIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal returnListIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidUserCompletedEventHandler(object sender, ValidUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TCreateSessionReply Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TCreateSessionReply)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeUserPasswordCompletedEventHandler(object sender, ChangeUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLoanListCompletedEventHandler(object sender, GetLoanListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoanListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoanListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundListCompletedEventHandler(object sender, GetFundListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundTotalCompletedEventHandler(object sender, GetFundTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundListCountCompletedEventHandler(object sender, GetFundListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundListDetail_NewCompletedEventHandler(object sender, GetFundListDetail_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundListDetail_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundListDetail_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string mesgg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsNewOrderCZDataCompletedEventHandler(object sender, IsNewOrderCZDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsNewOrderCZDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsNewOrderCZDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankRollListByListIdCompletedEventHandler(object sender, GetBankRollListByListIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankRollListByListIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankRollListByListIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundListDetailCompletedEventHandler(object sender, GetFundListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundListDetail_SubaccCompletedEventHandler(object sender, GetFundListDetail_SubaccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundListDetail_SubaccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundListDetail_SubaccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResp {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundCardListDetailCompletedEventHandler(object sender, GetFundCardListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundCardListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundCardListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPickListCompletedEventHandler(object sender, GetPickListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPickListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPickListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPickListCountCompletedEventHandler(object sender, GetPickListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPickListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPickListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPickListDetailCompletedEventHandler(object sender, GetPickListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPickListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPickListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPickListDetail_SubaccCompletedEventHandler(object sender, GetPickListDetail_SubaccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPickListDetail_SubaccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPickListDetail_SubaccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDirectPickList_PriorCompletedEventHandler(object sender, GetDirectPickList_PriorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectPickList_PriorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectPickList_PriorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDirectPickListCount_PriorCompletedEventHandler(object sender, GetDirectPickListCount_PriorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectPickListCount_PriorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectPickListCount_PriorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PickDirectPickList_PriorCompletedEventHandler(object sender, PickDirectPickList_PriorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PickDirectPickList_PriorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PickDirectPickList_PriorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDirectPickList_CheckCompletedEventHandler(object sender, GetDirectPickList_CheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectPickList_CheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectPickList_CheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDirectPickListCount_CheckCompletedEventHandler(object sender, GetDirectPickListCount_CheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectPickListCount_CheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectPickListCount_CheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PickDirectPickList_CheckCompletedEventHandler(object sender, PickDirectPickList_CheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PickDirectPickList_CheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PickDirectPickList_CheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDirectPickList_PayCompletedEventHandler(object sender, GetDirectPickList_PayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectPickList_PayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectPickList_PayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDirectPickListCount_PayCompletedEventHandler(object sender, GetDirectPickListCount_PayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectPickListCount_PayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectPickListCount_PayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DirectPickRePayCompletedEventHandler(object sender, DirectPickRePayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DirectPickRePayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DirectPickRePayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGiveBackListXCompletedEventHandler(object sender, GetGiveBackListXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGiveBackListXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGiveBackListXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGiveBackListCountCompletedEventHandler(object sender, GetGiveBackListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGiveBackListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGiveBackListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediListXCompletedEventHandler(object sender, GetMediListXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediListXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediListXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediListCompletedEventHandler(object sender, GetMediListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediListCountCompletedEventHandler(object sender, GetMediListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQuickTradeListDetailCompletedEventHandler(object sender, GetQuickTradeListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuickTradeListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuickTradeListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StartTraderRefundCompletedEventHandler(object sender, StartTraderRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartTraderRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartTraderRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StartTraderRefund_KFCompletedEventHandler(object sender, StartTraderRefund_KFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartTraderRefund_KFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartTraderRefund_KFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCheckTypeListCompletedEventHandler(object sender, GetCheckTypeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCheckTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCheckTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_CheckType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_CheckType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCheckTypeDetailCompletedEventHandler(object sender, GetCheckTypeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCheckTypeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCheckTypeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_CheckType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_CheckType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetCheckTypeCompletedEventHandler(object sender, SetCheckTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCheckTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCheckTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFreezeListCompletedEventHandler(object sender, GetFreezeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreezeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreezeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetExistFreezeCompletedEventHandler(object sender, GetExistFreezeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExistFreezeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExistFreezeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FreezeInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FreezeInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateNewFreezeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateFreezeInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFreezeListCountCompletedEventHandler(object sender, GetFreezeListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreezeListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreezeListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFreezeListDetailCompletedEventHandler(object sender, GetFreezeListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreezeListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreezeListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOrderListCompletedEventHandler(object sender, GetOrderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOrderListCountCompletedEventHandler(object sender, GetOrderListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMerSettleTableCompletedEventHandler(object sender, GetMerSettleTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMerSettleTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMerSettleTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMerSettleDetailCompletedEventHandler(object sender, GetMerSettleDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMerSettleDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMerSettleDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChangeQQListCompletedEventHandler(object sender, GetChangeQQListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangeQQListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangeQQListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChangeQQListCountCompletedEventHandler(object sender, GetChangeQQListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangeQQListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangeQQListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataErrorCountCompletedEventHandler(object sender, GetBankDataErrorCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataErrorCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataErrorCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataErrorListCompletedEventHandler(object sender, GetBankDataErrorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataErrorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataErrorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataErrList_Subacc_DeatailCompletedEventHandler(object sender, GetBankDataErrList_Subacc_DeatailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataErrList_Subacc_DeatailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataErrList_Subacc_DeatailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataErrList_DeatailCompletedEventHandler(object sender, GetBankDataErrList_DeatailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataErrList_DeatailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataErrList_DeatailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataErrList_PreviewCompletedEventHandler(object sender, GetBankDataErrList_PreviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataErrList_PreviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataErrList_PreviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankCheckErrorCountCompletedEventHandler(object sender, GetBankCheckErrorCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankCheckErrorCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankCheckErrorCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankCheckErrorListCompletedEventHandler(object sender, GetBankCheckErrorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankCheckErrorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankCheckErrorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataGenCountCompletedEventHandler(object sender, GetBankDataGenCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataGenCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataGenCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataGenListCompletedEventHandler(object sender, GetBankDataGenListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataGenListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataGenListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetHandleResultCountCompletedEventHandler(object sender, GetHandleResultCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHandleResultCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHandleResultCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetHandleResultListCompletedEventHandler(object sender, GetHandleResultListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHandleResultListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHandleResultListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetHandleResultCompletedEventHandler(object sender, GetHandleResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHandleResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHandleResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReturnTicketCountCompletedEventHandler(object sender, GetReturnTicketCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReturnTicketCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReturnTicketCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReturnTicketCount_FileCompletedEventHandler(object sender, GetReturnTicketCount_FileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReturnTicketCount_FileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReturnTicketCount_FileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReturnTicketListCompletedEventHandler(object sender, GetReturnTicketListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReturnTicketListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReturnTicketListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayExceptionCountCompletedEventHandler(object sender, GetPayExceptionCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayExceptionCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayExceptionCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayExceptionListCompletedEventHandler(object sender, GetPayExceptionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayExceptionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayExceptionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataErrCountCompletedEventHandler(object sender, GetBankDataErrCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataErrCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataErrCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataErrCountXCompletedEventHandler(object sender, GetBankDataErrCountXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataErrCountXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataErrCountXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayMatchErrCountCompletedEventHandler(object sender, GetPayMatchErrCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayMatchErrCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayMatchErrCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayMatchErrListCompletedEventHandler(object sender, GetPayMatchErrListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayMatchErrListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayMatchErrListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayMatchErrList_CheckCompletedEventHandler(object sender, GetPayMatchErrList_CheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayMatchErrList_CheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayMatchErrList_CheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataErrCountX_SubaccCompletedEventHandler(object sender, GetBankDataErrCountX_SubaccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataErrCountX_SubaccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataErrCountX_SubaccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataErrListCompletedEventHandler(object sender, GetBankDataErrListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataErrListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataErrListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataErrList_SubaccCompletedEventHandler(object sender, GetBankDataErrList_SubaccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataErrList_SubaccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataErrList_SubaccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataErrListXCompletedEventHandler(object sender, GetBankDataErrListXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataErrListXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataErrListXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataErrListX_SubaccCompletedEventHandler(object sender, GetBankDataErrListX_SubaccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataErrListX_SubaccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataErrListX_SubaccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAutoTwoCheckBankDataErrListCompletedEventHandler(object sender, GetAutoTwoCheckBankDataErrListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAutoTwoCheckBankDataErrListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAutoTwoCheckBankDataErrListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataErrList1CompletedEventHandler(object sender, GetBankDataErrList1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataErrList1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataErrList1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankDataErrList_Subacc1CompletedEventHandler(object sender, GetBankDataErrList_Subacc1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDataErrList_Subacc1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDataErrList_Subacc1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCoinPubCompletedEventHandler(object sender, GetCoinPubCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoinPubCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoinPubCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCoinPubCountCompletedEventHandler(object sender, GetCoinPubCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoinPubCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoinPubCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCoinPubInfoCompletedEventHandler(object sender, GetCoinPubInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoinPubInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoinPubInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_COIN_PUB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_COIN_PUB)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCoinPubInForPubCompletedEventHandler(object sender, GetCoinPubInForPubCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoinPubInForPubCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoinPubInForPubCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGwqCompletedEventHandler(object sender, GetGwqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGwqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGwqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGwqStatCompletedEventHandler(object sender, GetGwqStatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGwqStatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGwqStatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGwqRollCompletedEventHandler(object sender, GetGwqRollCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGwqRollCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGwqRollCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGwqCountCompletedEventHandler(object sender, GetGwqCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGwqCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGwqCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGwqInfoCompletedEventHandler(object sender, GetGwqInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGwqInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGwqInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_GWQ Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_GWQ)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCoinPubInCompletedEventHandler(object sender, GetCoinPubInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoinPubInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoinPubInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCoinPubInCountCompletedEventHandler(object sender, GetCoinPubInCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoinPubInCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoinPubInCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTokenHangCountCompletedEventHandler(object sender, GetTokenHangCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTokenHangCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTokenHangCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTokenHangListCompletedEventHandler(object sender, GetTokenHangListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTokenHangListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTokenHangListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetHaoYeCountCompletedEventHandler(object sender, GetHaoYeCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHaoYeCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHaoYeCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetHaoYeListCompletedEventHandler(object sender, GetHaoYeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHaoYeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHaoYeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getProxyFetchRequestCompletedEventHandler(object sender, getProxyFetchRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProxyFetchRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProxyFetchRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getProxyFetchCompletedEventHandler(object sender, getProxyFetchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProxyFetchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProxyFetchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsGen {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSynRecordQueryCountCompletedEventHandler(object sender, GetSynRecordQueryCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSynRecordQueryCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSynRecordQueryCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ResetSynRecordStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SynPayStateCompletedEventHandler(object sender, SynPayStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SynPayStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SynPayStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSynRecordQueryListCompletedEventHandler(object sender, GetSynRecordQueryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSynRecordQueryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSynRecordQueryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSynRecordQueryDetailCompletedEventHandler(object sender, GetSynRecordQueryDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSynRecordQueryDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSynRecordQueryDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediCertManageCountCompletedEventHandler(object sender, GetMediCertManageCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediCertManageCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediCertManageCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediCertManageListCompletedEventHandler(object sender, GetMediCertManageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediCertManageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediCertManageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediCertListStatusCompletedEventHandler(object sender, GetMediCertListStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediCertListStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediCertListStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediCertStatusCompletedEventHandler(object sender, GetMediCertStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediCertStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediCertStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MediCertApplyCompletedEventHandler(object sender, MediCertApplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediCertApplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediCertApplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MediCertDownloadCompletedEventHandler(object sender, MediCertDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediCertDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediCertDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MediCertUpdateStateCompletedEventHandler(object sender, MediCertUpdateStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediCertUpdateStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediCertUpdateStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetB2cReturnCountCompletedEventHandler(object sender, GetB2cReturnCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetB2cReturnCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetB2cReturnCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetB2cReturnListCompletedEventHandler(object sender, GetB2cReturnListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetB2cReturnListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetB2cReturnListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetB2CReturnList_GSCompletedEventHandler(object sender, GetB2CReturnList_GSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetB2CReturnList_GSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetB2CReturnList_GSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundTotalCountCompletedEventHandler(object sender, GetRefundTotalCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundTotalCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundTotalCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundErrorCountCompletedEventHandler(object sender, GetRefundErrorCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundErrorCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundErrorCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundTotalListCompletedEventHandler(object sender, GetRefundTotalListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundTotalListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundTotalListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundErrorListCompletedEventHandler(object sender, GetRefundErrorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundErrorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundErrorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DownRefundErrorListCompletedEventHandler(object sender, DownRefundErrorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownRefundErrorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownRefundErrorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundTotalByIdsCompletedEventHandler(object sender, GetRefundTotalByIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundTotalByIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundTotalByIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundParamListCompletedEventHandler(object sender, GetRefundParamListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundParamListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundParamListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundTotalDetailCompletedEventHandler(object sender, GetRefundTotalDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundTotalDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundTotalDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundErrorDetailCompletedEventHandler(object sender, GetRefundErrorDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundErrorDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundErrorDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundParamCompletedEventHandler(object sender, GetRefundParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetB2cReturnDetailCompletedEventHandler(object sender, GetB2cReturnDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetB2cReturnDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetB2cReturnDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetB2cReturnFileListCompletedEventHandler(object sender, GetB2cReturnFileListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetB2cReturnFileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetB2cReturnFileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void B2CReturnStartCheck_GSCompletedEventHandler(object sender, B2CReturnStartCheck_GSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2CReturnStartCheck_GSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2CReturnStartCheck_GSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetB2cReturnDetail_GSCompletedEventHandler(object sender, GetB2cReturnDetail_GSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetB2cReturnDetail_GSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetB2cReturnDetail_GSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void B2CReturnRefundAsyncCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AgreeSuspendRefundmentCompletedEventHandler(object sender, AgreeSuspendRefundmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgreeSuspendRefundmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgreeSuspendRefundmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void B2CReturnUpdateToSuccessCompletedEventHandler(object sender, B2CReturnUpdateToSuccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2CReturnUpdateToSuccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2CReturnUpdateToSuccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SuspendRefundmentCompletedEventHandler(object sender, SuspendRefundmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuspendRefundmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuspendRefundmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DisagreeSuspendCompletedEventHandler(object sender, DisagreeSuspendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisagreeSuspendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisagreeSuspendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void B2CReturnUpdateToHangCompletedEventHandler(object sender, B2CReturnUpdateToHangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2CReturnUpdateToHangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2CReturnUpdateToHangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void B2CReturnUpdateToRestoreCompletedEventHandler(object sender, B2CReturnUpdateToRestoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2CReturnUpdateToRestoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2CReturnUpdateToRestoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getUserModifyCompletedEventHandler(object sender, getUserModifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserModifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserModifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getQueryDataCompletedEventHandler(object sender, getQueryDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQueryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQueryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void updateRefoundStateCompletedEventHandler(object sender, updateRefoundStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateRefoundStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateRefoundStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getbankTypeCompletedEventHandler(object sender, getbankTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getbankTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getbankTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSaveIdInfoCompletedEventHandler(object sender, GetSaveIdInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSaveIdInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSaveIdInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediOperatorManageCountCompletedEventHandler(object sender, GetMediOperatorManageCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediOperatorManageCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediOperatorManageCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediOperatorManageListCompletedEventHandler(object sender, GetMediOperatorManageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediOperatorManageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediOperatorManageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediOperatorRoleCompletedEventHandler(object sender, GetMediOperatorRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediOperatorRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediOperatorRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetMediOperatorRoleCompletedEventHandler(object sender, SetMediOperatorRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMediOperatorRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMediOperatorRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediQueryPickCountCompletedEventHandler(object sender, GetMediQueryPickCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediQueryPickCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediQueryPickCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediQueryPickListCompletedEventHandler(object sender, GetMediQueryPickListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediQueryPickListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediQueryPickListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediQueryRefundCountCompletedEventHandler(object sender, GetMediQueryRefundCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediQueryRefundCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediQueryRefundCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediQueryRefundListCompletedEventHandler(object sender, GetMediQueryRefundListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediQueryRefundListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediQueryRefundListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediQueryTransferCountCompletedEventHandler(object sender, GetMediQueryTransferCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediQueryTransferCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediQueryTransferCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediQueryTransferListCompletedEventHandler(object sender, GetMediQueryTransferListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediQueryTransferListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediQueryTransferListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediQueryBatchTransferCountCompletedEventHandler(object sender, GetMediQueryBatchTransferCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediQueryBatchTransferCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediQueryBatchTransferCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediQueryBatchTransferListCompletedEventHandler(object sender, GetMediQueryBatchTransferListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediQueryBatchTransferListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediQueryBatchTransferListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediQueryBatchTransferList_DetailCompletedEventHandler(object sender, GetMediQueryBatchTransferList_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediQueryBatchTransferList_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediQueryBatchTransferList_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QQ2UidCompletedEventHandler(object sender, QQ2UidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QQ2UidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QQ2UidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QQ2UidXCompletedEventHandler(object sender, QQ2UidXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QQ2UidXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QQ2UidXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Uid2QQCompletedEventHandler(object sender, Uid2QQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Uid2QQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Uid2QQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetBatchIDForSettleCompletedEventHandler(object sender, SetBatchIDForSettleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetBatchIDForSettleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetBatchIDForSettleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string levelvalue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchSettleDataCompletedEventHandler(object sender, GetBatchSettleDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchSettleDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchSettleDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSysBulletinCompletedEventHandler(object sender, GetSysBulletinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSysBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSysBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SysBulletinIssueCompletedEventHandler(object sender, SysBulletinIssueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SysBulletinIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SysBulletinIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SysBulletinGoPriorCompletedEventHandler(object sender, SysBulletinGoPriorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SysBulletinGoPriorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SysBulletinGoPriorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SysBulletinGoNextCompletedEventHandler(object sender, SysBulletinGoNextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SysBulletinGoNextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SysBulletinGoNextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SysBulletinDelCompletedEventHandler(object sender, SysBulletinDelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SysBulletinDelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SysBulletinDelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SysBulletinGoHistoryCompletedEventHandler(object sender, SysBulletinGoHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SysBulletinGoHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SysBulletinGoHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOneSysBulletinCompletedEventHandler(object sender, GetOneSysBulletinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOneSysBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOneSysBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SysBulletinClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SysBulletinClass)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddOneSysBulletinCompletedEventHandler(object sender, AddOneSysBulletinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOneSysBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOneSysBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeOneSysBulletinCompletedEventHandler(object sender, ChangeOneSysBulletinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeOneSysBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeOneSysBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDirectRelationCountCompletedEventHandler(object sender, GetDirectRelationCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectRelationCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectRelationCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDirectRelationListCompletedEventHandler(object sender, GetDirectRelationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectRelationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectRelationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllChannelListCompletedEventHandler(object sender, GetAllChannelListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllChannelListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllChannelListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayLimitCountCompletedEventHandler(object sender, GetPayLimitCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayLimitCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayLimitCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayLimitListCompletedEventHandler(object sender, GetPayLimitListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayLimitListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayLimitListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDirectRelationDetailCompletedEventHandler(object sender, GetDirectRelationDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectRelationDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectRelationDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeOneDirectRelationCompletedEventHandler(object sender, ChangeOneDirectRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeOneDirectRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeOneDirectRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertOneDirectRelationCompletedEventHandler(object sender, InsertOneDirectRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOneDirectRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOneDirectRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DelOnePayLimitCompletedEventHandler(object sender, DelOnePayLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelOnePayLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelOnePayLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReuseOnePayLimitCompletedEventHandler(object sender, ReuseOnePayLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReuseOnePayLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReuseOnePayLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryPMDicAccNameCompletedEventHandler(object sender, QueryPMDicAccNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPMDicAccNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPMDicAccNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCFTUserAppealListCompletedEventHandler(object sender, GetCFTUserAppealListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCFTUserAppealListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCFTUserAppealListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCFTUserAppealCountCompletedEventHandler(object sender, GetCFTUserAppealCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCFTUserAppealCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCFTUserAppealCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCFTUserAppealDetailCompletedEventHandler(object sender, GetCFTUserAppealDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCFTUserAppealDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCFTUserAppealDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAppealUserInfoCompletedEventHandler(object sender, GetAppealUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppealUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppealUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CFTCancelAppealCompletedEventHandler(object sender, CFTCancelAppealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CFTCancelAppealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CFTCancelAppealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CFTConfirmAppealCompletedEventHandler(object sender, CFTConfirmAppealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CFTConfirmAppealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CFTConfirmAppealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CFTDelAppealCompletedEventHandler(object sender, CFTDelAppealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CFTDelAppealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CFTDelAppealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGwqPubStateCountCompletedEventHandler(object sender, GetGwqPubStateCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGwqPubStateCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGwqPubStateCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBindListCompletedEventHandler(object sender, GetUserBindListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBindListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBindListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBindCountCompletedEventHandler(object sender, GetUserBindCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBindCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBindCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBindDetailCompletedEventHandler(object sender, GetUserBindDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBindDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBindDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGiveBackListCompletedEventHandler(object sender, GetGiveBackListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGiveBackListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGiveBackListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGiveBackCountCompletedEventHandler(object sender, GetGiveBackCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGiveBackCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGiveBackCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGwqPubStateListCompletedEventHandler(object sender, GetGwqPubStateListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGwqPubStateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGwqPubStateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsFastPayUserCompletedEventHandler(object sender, IsFastPayUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsFastPayUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsFastPayUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQueryListCompletedEventHandler(object sender, GetQueryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQueryListCountCompletedEventHandler(object sender, GetQueryListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQueryListDetailCompletedEventHandler(object sender, GetQueryListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAppealQueryListCompletedEventHandler(object sender, GetAppealQueryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppealQueryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppealQueryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAppealListCountCompletedEventHandler(object sender, GetAppealListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppealListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppealListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAppealListDetailCompletedEventHandler(object sender, GetAppealListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppealListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppealListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAppealListCompletedEventHandler(object sender, GetAppealListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppealListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppealListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserpayListCompletedEventHandler(object sender, GetUserpayListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserpayListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserpayListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTransportListCompletedEventHandler(object sender, GetTransportListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransportListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransportListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AdjustDirectPayToErrorCompletedEventHandler(object sender, AdjustDirectPayToErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustDirectPayToErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustDirectPayToErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDirectPayCheckListCompletedEventHandler(object sender, GetDirectPayCheckListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectPayCheckListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectPayCheckListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateDirectPayCheckInfoCompletedEventHandler(object sender, UpdateDirectPayCheckInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDirectPayCheckInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDirectPayCheckInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBindListXCompletedEventHandler(object sender, GetUserBindListXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBindListXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBindListXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBindCountXCompletedEventHandler(object sender, GetUserBindCountXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBindCountXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBindCountXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBindDetailXCompletedEventHandler(object sender, GetUserBindDetailXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBindDetailXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBindDetailXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundListCompletedEventHandler(object sender, GetRefundListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundListCountCompletedEventHandler(object sender, GetRefundListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryForFileCompletedEventHandler(object sender, QueryForFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryForFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryForFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryForXATenpayFileCompletedEventHandler(object sender, QueryForXATenpayFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryForXATenpayFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryForXATenpayFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBankRollListCompletedEventHandler(object sender, GetUserBankRollListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBankRollListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBankRollListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBankRollList_allCompletedEventHandler(object sender, GetUserBankRollList_allCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBankRollList_allCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBankRollList_allCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBankRollCountCompletedEventHandler(object sender, GetUserBankRollCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBankRollCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBankRollCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string custominfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediUserChangeCompletedEventHandler(object sender, GetMediUserChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediUserChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediUserChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGiveBackList_CheckCompletedEventHandler(object sender, GetGiveBackList_CheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGiveBackList_CheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGiveBackList_CheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckTraderRefundCompletedEventHandler(object sender, CheckTraderRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTraderRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTraderRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CanStartTraderRefundCompletedEventHandler(object sender, CanStartTraderRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanStartTraderRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanStartTraderRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMerchantMidUidCompletedEventHandler(object sender, GetMerchantMidUidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMerchantMidUidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMerchantMidUidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string midUid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSpidByMidUidCompletedEventHandler(object sender, GetSpidByMidUidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpidByMidUidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpidByMidUidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string spid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchTransferCountCompletedEventHandler(object sender, GetBatchTransferCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchTransferCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchTransferCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchTransferListCompletedEventHandler(object sender, GetBatchTransferListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchTransferListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchTransferListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchTransferTotalCompletedEventHandler(object sender, GetBatchTransferTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchTransferTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchTransferTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRefundHistoryDetailCompletedEventHandler(object sender, GetRefundHistoryDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundHistoryDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundHistoryDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayInfoForRefundCompletedEventHandler(object sender, GetPayInfoForRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayInfoForRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayInfoForRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayInfoForDataListCompletedEventHandler(object sender, GetPayInfoForDataListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayInfoForDataListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayInfoForDataListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryExportBankCompletedEventHandler(object sender, QueryExportBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryExportBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryExportBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryExportBankByIdCompletedEventHandler(object sender, QueryExportBankByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryExportBankByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryExportBankByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_Export_Bank Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_Export_Bank)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryExportBankByObjidCompletedEventHandler(object sender, QueryExportBankByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryExportBankByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryExportBankByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_Export_Bank Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_Export_Bank)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryExportTaskCommCompletedEventHandler(object sender, QueryExportTaskCommCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryExportTaskCommCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryExportTaskCommCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryExportTaskCommByObjidCompletedEventHandler(object sender, QueryExportTaskCommByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryExportTaskCommByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryExportTaskCommByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_Export_Task_Comm Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_Export_Task_Comm)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryExportTaskCommByIdCompletedEventHandler(object sender, QueryExportTaskCommByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryExportTaskCommByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryExportTaskCommByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_Export_Task_Comm Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_Export_Task_Comm)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryExportTaskTmpCompletedEventHandler(object sender, QueryExportTaskTmpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryExportTaskTmpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryExportTaskTmpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryExportTaskTmpByObjidCompletedEventHandler(object sender, QueryExportTaskTmpByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryExportTaskTmpByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryExportTaskTmpByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_Export_Task_Tmp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_Export_Task_Tmp)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryExportTaskTmpByIdCompletedEventHandler(object sender, QueryExportTaskTmpByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryExportTaskTmpByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryExportTaskTmpByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_Export_Task_Tmp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_Export_Task_Tmp)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryExportBankrestCompletedEventHandler(object sender, QueryExportBankrestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryExportBankrestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryExportBankrestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryExportBankrestByIdCompletedEventHandler(object sender, QueryExportBankrestByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryExportBankrestByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryExportBankrestByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_Export_Bankrest Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_Export_Bankrest)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryExportBankrestByObjidCompletedEventHandler(object sender, QueryExportBankrestByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryExportBankrestByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryExportBankrestByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_Export_Bankrest Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_Export_Bankrest)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryGWQAccountInfoCompletedEventHandler(object sender, QueryGWQAccountInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryGWQAccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryGWQAccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryGWQAccountInfoCountCompletedEventHandler(object sender, QueryGWQAccountInfoCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryGWQAccountInfoCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryGWQAccountInfoCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryGWQAccountByIdCompletedEventHandler(object sender, QueryGWQAccountByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryGWQAccountByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryGWQAccountByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_GWQ_Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_GWQ_Account)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryGWQUseInfoCompletedEventHandler(object sender, QueryGWQUseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryGWQUseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryGWQUseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryRecoverGWQAccountCompletedEventHandler(object sender, QueryRecoverGWQAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRecoverGWQAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryRecoverGWQAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryZWDicInfoCompletedEventHandler(object sender, QueryZWDicInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryZWDicInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryZWDicInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryZWDicByIdCompletedEventHandler(object sender, QueryZWDicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryZWDicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryZWDicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_ZWDic_Info Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_ZWDic_Info)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundDispatchListCompletedEventHandler(object sender, GetFundDispatchListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundDispatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundDispatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetpospDispatchListCompletedEventHandler(object sender, GetpospDispatchListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetpospDispatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetpospDispatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryConfigBankTypeInfoCompletedEventHandler(object sender, QueryConfigBankTypeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryConfigBankTypeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryConfigBankTypeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTDICInfoByValueCompletedEventHandler(object sender, QueryTDICInfoByValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTDICInfoByValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTDICInfoByValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_DIC Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_DIC)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTCBANKInfoByValueCompletedEventHandler(object sender, QueryTCBANKInfoByValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTCBANKInfoByValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTCBANKInfoByValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public C2CDB_T_TC_BANK Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((C2CDB_T_TC_BANK)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTSUBJECTInfoByValueCompletedEventHandler(object sender, QueryTSUBJECTInfoByValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTSUBJECTInfoByValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTSUBJECTInfoByValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_SUBJECT Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_SUBJECT)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTPRODUCTInfoByValueCompletedEventHandler(object sender, QueryTPRODUCTInfoByValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTPRODUCTInfoByValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTPRODUCTInfoByValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_PRODUCT Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_PRODUCT)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTBANKInfoByValueCompletedEventHandler(object sender, QueryTBANKInfoByValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTBANKInfoByValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTBANKInfoByValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANK_INFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANK_INFO)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTBANKKEYSByValueCompletedEventHandler(object sender, QueryTBANKKEYSByValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTBANKKEYSByValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTBANKKEYSByValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANK_KEYS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANK_KEYS)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTBANKCODEBytypeCompletedEventHandler(object sender, QueryTBANKCODEBytypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTBANKCODEBytypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTBANKCODEBytypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANK_CODE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANK_CODE)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTBANKCLASSBytypeCompletedEventHandler(object sender, QueryTBANKCLASSBytypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTBANKCLASSBytypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTBANKCLASSBytypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANK_CLASS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANK_CLASS)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTFile_Model_Relation_BytypeCompletedEventHandler(object sender, QueryTFile_Model_Relation_BytypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTFile_Model_Relation_BytypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTFile_Model_Relation_BytypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_FILE_MODEL_RELATION Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_FILE_MODEL_RELATION)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTDICInfoByObjidCompletedEventHandler(object sender, QueryTDICInfoByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTDICInfoByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTDICInfoByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_DIC Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_DIC)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTCBANKInfoByObjidCompletedEventHandler(object sender, QueryTCBANKInfoByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTCBANKInfoByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTCBANKInfoByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public C2CDB_T_TC_BANK Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((C2CDB_T_TC_BANK)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTSUBJECTInfoByObjidCompletedEventHandler(object sender, QueryTSUBJECTInfoByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTSUBJECTInfoByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTSUBJECTInfoByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_SUBJECT Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_SUBJECT)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTPRODUCTInfoByObjidCompletedEventHandler(object sender, QueryTPRODUCTInfoByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTPRODUCTInfoByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTPRODUCTInfoByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_PRODUCT Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_PRODUCT)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTBANKInfoByObjidCompletedEventHandler(object sender, QueryTBANKInfoByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTBANKInfoByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTBANKInfoByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANK_INFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANK_INFO)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTBANKKEYSByObjidCompletedEventHandler(object sender, QueryTBANKKEYSByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTBANKKEYSByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTBANKKEYSByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANK_KEYS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANK_KEYS)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTBANKCLASSByObjidCompletedEventHandler(object sender, QueryTBANKCLASSByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTBANKCLASSByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTBANKCLASSByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANK_CLASS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANK_CLASS)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTbankcodeByObjidCompletedEventHandler(object sender, QueryTbankcodeByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTbankcodeByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTbankcodeByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANK_CODE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANK_CODE)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryFileModelInfoCompletedEventHandler(object sender, QueryFileModelInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryFileModelInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryFileModelInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllFileModelNameCompletedEventHandler(object sender, GetAllFileModelNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllFileModelNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllFileModelNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryTFile_Model_Relation_ByObjidCompletedEventHandler(object sender, QueryTFile_Model_Relation_ByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTFile_Model_Relation_ByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTFile_Model_Relation_ByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_FILE_MODEL_RELATION Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_FILE_MODEL_RELATION)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchpayZCCountCompletedEventHandler(object sender, GetBatchpayZCCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchpayZCCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchpayZCCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBatchpayZCInfoCompletedEventHandler(object sender, QueryBatchpayZCInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBatchpayZCInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBatchpayZCInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchRefundCountCompletedEventHandler(object sender, GetBatchRefundCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchRefundCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchRefundCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchRefundListCompletedEventHandler(object sender, GetBatchRefundListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchRefundListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchRefundListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchRefundTotalCompletedEventHandler(object sender, GetBatchRefundTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchRefundTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchRefundTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DownMediCertByIdCompletedEventHandler(object sender, DownMediCertByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownMediCertByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownMediCertByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatchSynPayStateCompletedEventHandler(object sender, BatchSynPayStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchSynPayStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchSynPayStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetHongBaoPubDataCompletedEventHandler(object sender, GetHongBaoPubDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHongBaoPubDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHongBaoPubDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetHongBaoDetailDataCompletedEventHandler(object sender, GetHongBaoDetailDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHongBaoDetailDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHongBaoDetailDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetHongBaoDataCompletedEventHandler(object sender, GetHongBaoDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHongBaoDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHongBaoDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCreditAllInfoCompletedEventHandler(object sender, QueryCreditAllInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCreditAllInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCreditAllInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCreditAllInfo_countCompletedEventHandler(object sender, QueryCreditAllInfo_countCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCreditAllInfo_countCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCreditAllInfo_countCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCreditSendListCompletedEventHandler(object sender, QueryCreditSendListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCreditSendListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCreditSendListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCreditSendList_countCompletedEventHandler(object sender, QueryCreditSendList_countCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCreditSendList_countCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCreditSendList_countCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPOSBankrollCountCompletedEventHandler(object sender, GetPOSBankrollCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPOSBankrollCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPOSBankrollCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPOSBankrollListCompletedEventHandler(object sender, GetPOSBankrollListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPOSBankrollListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPOSBankrollListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchPOSBankrollInfoCompletedEventHandler(object sender, GetBatchPOSBankrollInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchPOSBankrollInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchPOSBankrollInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPOSCheckResultCountCompletedEventHandler(object sender, GetPOSCheckResultCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPOSCheckResultCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPOSCheckResultCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPOSCheckResultListCompletedEventHandler(object sender, GetPOSCheckResultListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPOSCheckResultListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPOSCheckResultListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPOSCheckResultList2CompletedEventHandler(object sender, GetPOSCheckResultList2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPOSCheckResultList2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPOSCheckResultList2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetPOSResultDoingCompletedEventHandler(object sender, SetPOSResultDoingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPOSResultDoingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPOSResultDoingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPOSResultTotalCompletedEventHandler(object sender, GetPOSResultTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPOSResultTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPOSResultTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public double totalAmt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSysBankBulletinCompletedEventHandler(object sender, GetSysBankBulletinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSysBankBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSysBankBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankBulletinByIdCompletedEventHandler(object sender, QueryBankBulletinByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankBulletinByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankBulletinByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_INFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANKBULLETIN_INFO)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankBulletinInfoByObjidCompletedEventHandler(object sender, QueryBankBulletinInfoByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankBulletinInfoByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankBulletinInfoByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_BANKBULLETIN_INFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_BANKBULLETIN_INFO)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBankByTypeCompletedEventHandler(object sender, GetBankByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FuncUserListCompletedEventHandler(object sender, FuncUserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FuncUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FuncUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FuncUserListCountCompletedEventHandler(object sender, FuncUserListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FuncUserListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FuncUserListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FileModelISExistCompletedEventHandler(object sender, FileModelISExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileModelISExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileModelISExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertFileModelCompletedEventHandler(object sender, InsertFileModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertFileModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertFileModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteFileModelCompletedEventHandler(object sender, DeleteFileModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsQuickPayBankTypeCompletedEventHandler(object sender, IsQuickPayBankTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsQuickPayBankTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsQuickPayBankTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string payInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundWaterListCompletedEventHandler(object sender, GetFundWaterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundWaterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundWaterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundWaterCountCompletedEventHandler(object sender, GetFundWaterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundWaterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundWaterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundWaterErrorCountCompletedEventHandler(object sender, GetFundWaterErrorCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundWaterErrorCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundWaterErrorCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundWaterErrorListCompletedEventHandler(object sender, GetFundWaterErrorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundWaterErrorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundWaterErrorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFundWaterErrorTotalCompletedEventHandler(object sender, GetFundWaterErrorTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundWaterErrorTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundWaterErrorTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public double totalAmt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetFundWaterErrorDoingCompletedEventHandler(object sender, SetFundWaterErrorDoingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetFundWaterErrorDoingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetFundWaterErrorDoingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FundWaterRefundCheckCompletedEventHandler(object sender, FundWaterRefundCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FundWaterRefundCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FundWaterRefundCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDirectSpmRefundListCompletedEventHandler(object sender, GetDirectSpmRefundListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectSpmRefundListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectSpmRefundListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDirectSpmRefundCountCompletedEventHandler(object sender, GetDirectSpmRefundCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectSpmRefundCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectSpmRefundCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchDirectSpmRefundListCompletedEventHandler(object sender, GetBatchDirectSpmRefundListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchDirectSpmRefundListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchDirectSpmRefundListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCepBankInfo_ListCompletedEventHandler(object sender, QueryCepBankInfo_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCepBankInfo_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCepBankInfo_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCepBankInfo_DetailCompletedEventHandler(object sender, QueryCepBankInfo_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCepBankInfo_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCepBankInfo_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_CEP_BANKCHANNEL_CLASS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_CEP_BANKCHANNEL_CLASS)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCepBankInfo_Detail_CheckCompletedEventHandler(object sender, QueryCepBankInfo_Detail_CheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCepBankInfo_Detail_CheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCepBankInfo_Detail_CheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_CEP_BANKCHANNEL_CLASS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_CEP_BANKCHANNEL_CLASS)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayMatch_BankaccListCompletedEventHandler(object sender, GetPayMatch_BankaccListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayMatch_BankaccListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayMatch_BankaccListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayMatch_BankaccBatchListCompletedEventHandler(object sender, GetPayMatch_BankaccBatchListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayMatch_BankaccBatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayMatch_BankaccBatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayMatch_BankDetailListCompletedEventHandler(object sender, GetPayMatch_BankDetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayMatch_BankDetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayMatch_BankDetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayMatch_TaskStateCompletedEventHandler(object sender, GetPayMatch_TaskStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayMatch_TaskStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayMatch_TaskStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayMatch_TaskListCompletedEventHandler(object sender, GetPayMatch_TaskListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayMatch_TaskListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayMatch_TaskListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HasPayMatchDetailCompletedEventHandler(object sender, HasPayMatchDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasPayMatchDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasPayMatchDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HasPayMatchTaskCompletedEventHandler(object sender, HasPayMatchTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasPayMatchTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasPayMatchTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPayMatch_TaskDetailCompletedEventHandler(object sender, GetPayMatch_TaskDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayMatch_TaskDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayMatch_TaskDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PayMatch_Detail2ErrorCompletedEventHandler(object sender, PayMatch_Detail2ErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayMatch_Detail2ErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayMatch_Detail2ErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchRefundForCompensationListCompletedEventHandler(object sender, GetBatchRefundForCompensationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchRefundForCompensationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchRefundForCompensationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchRefundForCompensationTotalCompletedEventHandler(object sender, GetBatchRefundForCompensationTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchRefundForCompensationTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchRefundForCompensationTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBatchRefundForCompensationCountCompletedEventHandler(object sender, GetBatchRefundForCompensationCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchRefundForCompensationCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchRefundForCompensationCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckCompensationRefundCompletedEventHandler(object sender, CheckCompensationRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCompensationRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCompensationRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLogCompletedEventHandler(object sender, GetLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUtility_chargeCompletedEventHandler(object sender, GetUtility_chargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUtility_chargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUtility_chargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryUCBulletinByIdCompletedEventHandler(object sender, QueryUCBulletinByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUCBulletinByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUCBulletinByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_PUCNEWSERVICE_INFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_PUCNEWSERVICE_INFO)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryUCBulletinInfoByObjidCompletedEventHandler(object sender, QueryUCBulletinInfoByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUCBulletinInfoByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUCBulletinInfoByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_PUCNEWSERVICE_INFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_PUCNEWSERVICE_INFO)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckExecuteSqlCompletedEventHandler(object sender, CheckExecuteSqlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckExecuteSqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckExecuteSqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCheckParamInfoCompletedEventHandler(object sender, QueryCheckParamInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCheckParamInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCheckParamInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBalanceCompletedEventHandler(object sender, GetUserBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserBalanceByUIdCompletedEventHandler(object sender, GetUserBalanceByUIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBalanceByUIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBalanceByUIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FeeContractQueryCompletedEventHandler(object sender, FeeContractQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FeeContractQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FeeContractQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInsureAccountCompletedEventHandler(object sender, GetInsureAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInsureAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInsureAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOutPayCBListCompletedEventHandler(object sender, GetOutPayCBListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutPayCBListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutPayCBListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOutPayCBCountCompletedEventHandler(object sender, GetOutPayCBCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutPayCBCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutPayCBCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOutPayCBSumAmountCompletedEventHandler(object sender, GetOutPayCBSumAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutPayCBSumAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutPayCBSumAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetXinHuaBankTransactionListCompletedEventHandler(object sender, GetXinHuaBankTransactionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXinHuaBankTransactionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXinHuaBankTransactionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetXinHuaBankTransactionCountCompletedEventHandler(object sender, GetXinHuaBankTransactionCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXinHuaBankTransactionCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXinHuaBankTransactionCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBauPaySourceByListCompletedEventHandler(object sender, QueryBauPaySourceByListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBauPaySourceByListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBauPaySourceByListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGiveBackResultListCompletedEventHandler(object sender, GetGiveBackResultListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGiveBackResultListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGiveBackResultListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGiveBackResultCountCompletedEventHandler(object sender, GetGiveBackResultCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGiveBackResultCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGiveBackResultCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDirectPayNCInfoCompletedEventHandler(object sender, QueryDirectPayNCInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDirectPayNCInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDirectPayNCInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDirectNCInfoByIdCompletedEventHandler(object sender, QueryDirectNCInfoByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDirectNCInfoByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDirectNCInfoByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_DIRECTPAY_NCINFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_DIRECTPAY_NCINFO)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDirectNCInfoByObjidCompletedEventHandler(object sender, QueryDirectNCInfoByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDirectNCInfoByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDirectNCInfoByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_DIRECTPAY_NCINFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_DIRECTPAY_NCINFO)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCBZWBillListCompletedEventHandler(object sender, GetCBZWBillListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCBZWBillListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCBZWBillListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCBZWBillCountCompletedEventHandler(object sender, GetCBZWBillCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCBZWBillCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCBZWBillCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCBZWBillSumAmtCompletedEventHandler(object sender, GetCBZWBillSumAmtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCBZWBillSumAmtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCBZWBillSumAmtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDirectErrCodeInfoCompletedEventHandler(object sender, QueryDirectErrCodeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDirectErrCodeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDirectErrCodeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDirectErrCodeByIdCompletedEventHandler(object sender, QueryDirectErrCodeByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDirectErrCodeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDirectErrCodeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_DIRECTPAY_ERRCODEINFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_DIRECTPAY_ERRCODEINFO)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDirectErrCodeByObjidCompletedEventHandler(object sender, QueryDirectErrCodeByObjidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDirectErrCodeByObjidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDirectErrCodeByObjidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_DIRECTPAY_ERRCODEINFO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_DIRECTPAY_ERRCODEINFO)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankPayAbilityCompletedEventHandler(object sender, QueryBankPayAbilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankPayAbilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankPayAbilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ListBankPayAbilitiesCompletedEventHandler(object sender, ListBankPayAbilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListBankPayAbilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListBankPayAbilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankRefundAbilityCompletedEventHandler(object sender, QueryBankRefundAbilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankRefundAbilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankRefundAbilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ListBankRefundAbilitiesCompletedEventHandler(object sender, ListBankRefundAbilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListBankRefundAbilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListBankRefundAbilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankPayAbilityFromCheckParamsCompletedEventHandler(object sender, QueryBankPayAbilityFromCheckParamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankPayAbilityFromCheckParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankPayAbilityFromCheckParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PayProcessAbility Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PayProcessAbility)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBankRefundAbilityFromCheckParamsCompletedEventHandler(object sender, QueryBankRefundAbilityFromCheckParamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBankRefundAbilityFromCheckParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBankRefundAbilityFromCheckParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RefundProcessAbility Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefundProcessAbility)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryPaymentReturnStatisticsCompletedEventHandler(object sender, QueryPaymentReturnStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPaymentReturnStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPaymentReturnStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryPaymentReturnDetailsCompletedEventHandler(object sender, QueryPaymentReturnDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPaymentReturnDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPaymentReturnDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryPaymentReturnDetailsSumTotalAmtCompletedEventHandler(object sender, QueryPaymentReturnDetailsSumTotalAmtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPaymentReturnDetailsSumTotalAmtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPaymentReturnDetailsSumTotalAmtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryPaymentReturnDetailsBankTypeCompletedEventHandler(object sender, QueryPaymentReturnDetailsBankTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPaymentReturnDetailsBankTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPaymentReturnDetailsBankTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryRefundSnopShotLogCompletedEventHandler(object sender, QueryRefundSnopShotLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRefundSnopShotLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryRefundSnopShotLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591